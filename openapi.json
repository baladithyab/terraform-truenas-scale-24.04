{
 "openapi": "3.0.0",
 "info": {
  "title": "TrueNAS RESTful API",
  "version": "v2.0"
 },
 "paths": {
  "/core/arp": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_arp"
       }
      }
     }
    }
   }
  },
  "/core/debug": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Setup middlewared for remote debugging.\n\nengine currently used:\n  - REMOTE_PDB: Remote vanilla PDB (over TCP sockets)\n\noptions:\n    - bind_address: local ip address to bind the remote debug session to\n    - bind_port: local port to listen on\n    - threaded: run debugger in a new thread instead of the main event loop",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_debug"
       }
      }
     }
    }
   }
  },
  "/core/debug_mode_enabled": {
   "get": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_core_debug_mode_enabled"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   }
  },
  "/core/download": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Core helper to call a job marked for download.\n\nNon-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay\nblocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's\npipe output will be buffered to ramfs.\n\nReturns the job id and the URL for download.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_download"
       }
      }
     }
    }
   }
  },
  "/core/get_events": {
   "get": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns metadata for every possible event emitted from websocket server."
   }
  },
  "/core/get_jobs": {
   "get": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_core_get_jobs"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get information about long-running jobs.\nIf authenticated session does not have the FULL_ADMIN role, only\njobs owned by the current authenticated session will be returned.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/core/job_abort": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_job_abort"
       }
      }
     }
    }
   }
  },
  "/core/job_download_logs": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Download logs of the job `id`.\n\nPlease see `core.download` method documentation for explanation on `filename` and `buffered` arguments,\nand return value.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_job_download_logs"
       }
      }
     }
    }
   }
  },
  "/core/job_wait": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_job_wait"
       }
      }
     }
    }
   }
  },
  "/core/ping": {
   "get": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Utility method which just returns \"pong\".\nCan be used to keep connection/authtoken alive instead of using\n\"ping\" protocol message."
   }
  },
  "/core/ping_remote": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Method that will send an ICMP echo request to \"hostname\"\nand will wait up to \"timeout\" for a reply.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_ping_remote"
       }
      }
     }
    }
   }
  },
  "/core/resize_shell": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Resize terminal session (/websocket/shell) to cols x rows",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_resize_shell"
       }
      }
     }
    }
   }
  },
  "/core/sessions": {
   "get": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_core_sessions"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get currently open websocket sessions.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/core/set_debug_mode": {
   "post": {
    "tags": [
     "core"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set `debug_mode` for middleware.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/core_set_debug_mode"
       }
      }
     }
    }
   }
  },
  "/acme/dns/authenticator": {
   "get": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a DNS Authenticator\n\nCreate a specific DNS Authenticator containing required authentication details for the said\nprovider to successfully connect with it\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/acme_dns_authenticator_create"
       }
      }
     }
    }
   }
  },
  "/acme/dns/authenticator/id/{id_}": {
   "delete": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete DNS Authenticator of `id`\n\n"
   },
   "get": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update DNS Authenticator of `id`\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/acme_dns_authenticator_update"
       }
      }
     }
    }
   }
  },
  "/acme/dns/authenticator/authenticator_schemas": {
   "get": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_authenticator_schemas"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the schemas for all DNS providers we support for ACME DNS Challenge and the respective attributes\nrequired for connecting to them while validating a DNS Challenge"
   }
  },
  "/acme/dns/authenticator/get_instance": {
   "post": {
    "tags": [
     "acme.dns.authenticator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_acme_dns_authenticator_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/acme_dns_authenticator_get_instance"
       }
      }
     }
    }
   }
  },
  "/activedirectory": {
   "get": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_activedirectory_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_activedirectory_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update active directory configuration.\n`domainname` full DNS domain name of the Active Directory domain.\n\n`bindname` username used to perform the intial domain join.\n\n`bindpw` password used to perform the initial domain join. User-\nprovided credentials are used to obtain a kerberos ticket, which\nis used to perform the actual domain join.\n\n`verbose_logging` increase logging during the domain join process.\n\n`use_default_domain` controls whether domain users and groups have\nthe pre-windows 2000 domain name prepended to the user account. When\nenabled, the user appears as \"administrator\" rather than\n\"EXAMPLE\u0007dministrator\"\n\n`allow_trusted_doms` enable support for trusted domains. If this\nparameter is enabled, then separate idmap backends _must_ be configured\nfor each trusted domain, and the idmap cache should be cleared.\n\n`allow_dns_updates` during the domain join process, automatically\ngenerate DNS entries in the AD domain for the NAS. If this is disabled,\nthen a domain administrator must manually add appropriate DNS entries\nfor the NAS. This parameter is recommended for TrueNAS HA servers.\n\n`disable_freenas_cache` disables active caching of AD users and groups.\nWhen disabled, only users cached in winbind's internal cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\nin environments with a large amount of users.\n\n`site` AD site of which the NAS is a member. This parameter is auto-\ndetected during the domain join process. If no AD site is configured\nfor the subnet in which the NAS is configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection is only performed\nduring the initial domain join.\n\n`kerberos_realm` in which the server is located. This parameter is\nautomatically populated during the initial domain join. If the NAS has\nan AD site configured and that site has multiple kerberos servers, then\nthe kerberos realm is automatically updated with a site-specific\nconfiguration to use those servers. Auto-detection is only performed\nduring initial domain join.\n\n`kerberos_principal` kerberos principal to use for AD-related\noperations outside of Samba. After intial domain join, this field is\nupdated with the kerberos principal associated with the AD machine\naccount for the NAS.\n\n`nss_info` controls how Winbind retrieves Name Service Information to\nconstruct a user's home directory and login shell. This parameter\nis only effective if the Active Directory Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.\n\n`timeout` timeout value for winbind-related operations. This value may\nneed to be increased in  environments with high latencies for\ncommunications with domain controllers or a large number of domain\ncontrollers. Lowering the value may cause status checks to fail.\n\n`dns_timeout` timeout value for DNS queries during the initial domain\njoin. This value is also set as the NETWORK_TIMEOUT in the ldap config\nfile.\n\n`createcomputer` Active Directory Organizational Unit in which new\ncomputer accounts are created.\n\nThe OU string is read from top to bottom without RDNs. Slashes (\"/\")\nare used as delimiters, like `Computers/Servers/NAS`. The backslash\n(\"\\\") is used to escape characters but not as a separator. Backslashes\nare interpreted at multiple levels and might require doubling or even\nquadrupling to take effect.\n\nWhen this field is blank, new computer accounts are created in the\nActive Directory default OU.\n\nThe Active Directory service is started after a configuration\nupdate if the service was initially disabled, and the updated\nconfiguration sets `enable` to `True`. The Active Directory\nservice is stopped if `enable` is changed to `False`. If the\nconfiguration is updated, but the initial `enable` state is `True`, and\nremains unchanged, then the samba server is only restarted.\n\nDuring the domain join, a kerberos keytab for the newly-created AD\nmachine account is generated. It is used for all future\nLDAP / AD interaction and the user-provided credentials are removed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/activedirectory_update"
       }
      }
     }
    }
   }
  },
  "/activedirectory/domain_info": {
   "post": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_activedirectory_domain_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the following information about the currently joined domain:\n\n`LDAP server` IP address of current LDAP server to which TrueNAS is connected.\n\n`LDAP server name` DNS name of LDAP server to which TrueNAS is connected\n\n`Realm` Kerberos realm\n\n`LDAP port`\n\n`Server time` timestamp.\n\n`KDC server` Kerberos KDC to which TrueNAS is connected\n\n`Server time offset` current time offset from DC.\n\n`Last machine account password change`. timestamp",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/activedirectory_domain_info"
       }
      }
     }
    }
   }
  },
  "/activedirectory/get_state": {
   "get": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_activedirectory_get_state"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Wrapper function for 'directoryservices.get_state'. Returns only the state of the\nActive Directory service."
   }
  },
  "/activedirectory/leave": {
   "post": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Leave Active Directory domain. This will remove computer\nobject from AD and clear relevant configuration data from\nthe NAS.\nThis requires credentials for appropriately-privileged user.\nCredentials are used to obtain a kerberos ticket, which is\nused to perform the actual removal from the domain.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/activedirectory_leave"
       }
      }
     }
    }
   }
  },
  "/activedirectory/nss_info_choices": {
   "get": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_activedirectory_nss_info_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns list of available LDAP schema choices."
   }
  },
  "/activedirectory/started": {
   "get": {
    "tags": [
     "activedirectory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_activedirectory_started"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Issue a no-effect command to our DC. This checks if our secure channel connection to our\ndomain controller is still alive. It has much less impact than wbinfo -t.\nDefault winbind request timeout is 60 seconds, and can be adjusted by the smb4.conf parameter\n'winbind request timeout ='"
   }
  },
  "/alert/dismiss": {
   "post": {
    "tags": [
     "alert"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Dismiss `id` alert.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alert_dismiss"
       }
      }
     }
    }
   }
  },
  "/alert/list": {
   "get": {
    "tags": [
     "alert"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alert_list"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List all types of alerts including active/dismissed currently in the system."
   }
  },
  "/alert/list_categories": {
   "get": {
    "tags": [
     "alert"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alert_list_categories"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List all types of alerts which the system can issue."
   }
  },
  "/alert/list_policies": {
   "get": {
    "tags": [
     "alert"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alert_list_policies"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List all alert policies which indicate the frequency of the alerts."
   }
  },
  "/alert/restore": {
   "post": {
    "tags": [
     "alert"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Restore `id` alert which had been dismissed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alert_restore"
       }
      }
     }
    }
   }
  },
  "/alertclasses": {
   "get": {
    "tags": [
     "alertclasses"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertclasses_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "alertclasses"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertclasses_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update default Alert settings.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alertclasses_update"
       }
      }
     }
    }
   }
  },
  "/alertservice": {
   "get": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an Alert Service of specified `type`.\n\nIf `enabled`, it sends alerts to the configured `type` of Alert Service.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alertservice_create"
       }
      }
     }
    }
   }
  },
  "/alertservice/id/{id_}": {
   "delete": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Alert Service of `id`."
   },
   "get": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Alert Service of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alertservice_update"
       }
      }
     }
    }
   }
  },
  "/alertservice/get_instance": {
   "post": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alertservice_get_instance"
       }
      }
     }
    }
   }
  },
  "/alertservice/list_types": {
   "get": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_list_types"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List all types of supported Alert services which can be configured with the system."
   }
  },
  "/alertservice/test": {
   "post": {
    "tags": [
     "alertservice"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_alertservice_test"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Send a test alert using `type` of Alert Service.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/alertservice_test"
       }
      }
     }
    }
   }
  },
  "/api_key": {
   "get": {
    "tags": [
     "api_key"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_api_key_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "api_key"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_api_key_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates API Key.\n\n`name` is a user-readable name for key.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/api_key_create"
       }
      }
     }
    }
   }
  },
  "/api_key/id/{id_}": {
   "delete": {
    "tags": [
     "api_key"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_api_key_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete API Key `id`."
   },
   "get": {
    "tags": [
     "api_key"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_api_key_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "api_key"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_api_key_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update API Key `id`.\n\nSpecify `reset: true` to reset this API Key.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/api_key_update"
       }
      }
     }
    }
   }
  },
  "/api_key/get_instance": {
   "post": {
    "tags": [
     "api_key"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_api_key_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/api_key_get_instance"
       }
      }
     }
    }
   }
  },
  "/app/available": {
   "get": {
    "tags": [
     "app"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_app_available"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Retrieve all available applications from all configured catalogs.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/app/categories": {
   "get": {
    "tags": [
     "app"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_app_categories"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve list of valid categories which have associated applications."
   }
  },
  "/app/latest": {
   "get": {
    "tags": [
     "app"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_app_latest"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Retrieve latest updated apps.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/app/similar": {
   "post": {
    "tags": [
     "app"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_app_similar"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve applications which are similar to `app_name`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/app_similar"
       }
      }
     }
    }
   }
  },
  "/audit": {
   "get": {
    "tags": [
     "audit"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_audit_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "audit"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update default audit settings.\n\nThe following fields may be modified:\n\n`retention` - number of days to retain local audit messages.\n\n`reservation` - size in GiB of refreservation to set on ZFS dataset\nwhere the audit databases are stored. The refreservation specifies the\nminimum amount of space guaranteed to the dataset, and counts against\nthe space available for other datasets in the zpool where the audit\ndataset is located.\n\n`quota` - size in GiB of the maximum amount of space that may be\nconsumed by the dataset where the audit dabases are stored.\n\n`quota_fill_warning` - percentage used of dataset quota at which to\ngenerate a warning alert.\n\n`quota_fill_critical` - percentage used of dataset quota at which to\ngenerate a critical alert.\n\nThe following fields contain read-only data and are returned in calls\nto `audit.config` and `audit.update`:\n\n`space` - ZFS dataset properties relating space used and available for\nthe dataset where the audit databases are written.\n\n`remote_logging_enabled` - Boolean indicating whether logging to a\nremote syslog server is enabled on TrueNAS and if audit logs are\nincluded in what is sent remotely.\n\n`enabled_services` - JSON object with key denoting service, and value\ncontaining a JSON array of what aspects of this service are being\naudited. In the case of the SMB audit, the list contains share names\nof shares for which auditing is enabled.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/audit_update"
       }
      }
     }
    }
   }
  },
  "/audit/download_report": {
   "post": {
    "tags": [
     "audit"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Download the audit report with the specified name from the server.\nNote that users will only be able to download reports that they personally\ngenerated.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/audit_download_report"
       }
      }
     }
    }
   }
  },
  "/audit/export": {
   "post": {
    "tags": [
     "audit"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_audit_export"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Generate an audit report based on the specified `query-filters` and\n`query-options` for the specified `services` in the specified `export_format`.\n\nSupported export_formats are CSV, JSON, and YAML. The endpoint returns a\nlocal filesystem path where the resulting audit report is located.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/audit_export"
       }
      }
     }
    }
   }
  },
  "/audit/query": {
   "post": {
    "tags": [
     "audit"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_audit_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Query contents of audit databases specified by `services`.\n\nIf the query-option `force_sql_filters` is true, then the query will be\nconverted into a more efficient form for better performance. This will\nnot be possible if filters use keys within `svc_data` and `event_data`.\n\nEach audit entry contains the following keys:\n\n`audit_id` - GUID uniquely identifying this specific audit event.\n\n`message_timestamp` - Unix timestamp for when the audit event was\nwritten to the auditing database.\n\n`timestamp` - converted ISO-8601 timestamp from application recording\nwhen event occurred.\n\n`address` - IP address of client performing action that generated the\naudit message.\n\n`username` - Username used by client performing action.\n\n`session` - GUID uniquely identifying the client session.\n\n`services` - Name of the service that generated the message. This will\nbe one of the names specified in `services`.\n\n`service_data` - JSON object containing variable data depending on the\nparticular service. See TrueNAS auditing documentation for the service\nin question.\n\n`event` - Name of the event type that generated the audit record. Each\nservice has its own unique event identifiers.\n\n`event_data` - JSON object containing variable data depending on the\nparticular event type. See TrueNAS auditing documentation for the\nservice in question.\n\n`success` - boolean value indicating whether the action generating the\nevent message succeeded.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/audit_query"
       }
      }
     }
    }
   }
  },
  "/auth/check_password": {
   "post": {
    "tags": [
     "auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_check_password"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Verify username and password",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/auth_check_password"
       }
      }
     }
    }
   }
  },
  "/auth/check_user": {
   "post": {
    "tags": [
     "auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_check_user"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Verify username and password",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/auth_check_user"
       }
      }
     }
    }
   }
  },
  "/auth/generate_token": {
   "post": {
    "tags": [
     "auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_generate_token"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Generate a token to be used for authentication.\n\n`ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection\nhas been inactive for a time greater than this.\n\n`attrs` is a general purpose object/dictionary to hold information about the token.\n\n`match_origin` will only allow using this token from the same IP address or with the same user UID.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/auth_generate_token"
       }
      }
     }
    }
   }
  },
  "/auth/terminate_session": {
   "post": {
    "tags": [
     "auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_terminate_session"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Terminates session `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/auth_terminate_session"
       }
      }
     }
    }
   }
  },
  "/auth/two_factor_auth": {
   "post": {
    "tags": [
     "auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_two_factor_auth"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns true if two-factor authorization is required for authorizing user's login.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/auth_two_factor_auth"
       }
      }
     }
    }
   }
  },
  "/auth/twofactor": {
   "get": {
    "tags": [
     "auth.twofactor"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_twofactor_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "auth.twofactor"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_auth_twofactor_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`window` extends the validity to `window` many counter ticks before and after the current one.\n\nUpdate Two-Factor Authentication Service Configuration.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/auth_twofactor_update"
       }
      }
     }
    }
   }
  },
  "/boot/attach": {
   "post": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Attach a disk to the boot pool, turning a stripe into a mirror.\n\n`expand` option will determine whether the new disk partition will be\n         the maximum available or the same size as the current disk.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/boot_attach"
       }
      }
     }
    }
   }
  },
  "/boot/detach": {
   "post": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Detach given `dev` from boot pool.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/boot_detach"
       }
      }
     }
    }
   }
  },
  "/boot/get_disks": {
   "get": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_boot_get_disks"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns disks of the boot pool."
   }
  },
  "/boot/get_scrub_interval": {
   "get": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_boot_get_scrub_interval"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get Automatic Scrub Interval value in days."
   }
  },
  "/boot/get_state": {
   "get": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_boot_get_state"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the current state of the boot pool, including all vdevs, properties and datasets."
   }
  },
  "/boot/replace": {
   "post": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Replace device `label` on boot pool with `dev`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/boot_replace"
       }
      }
     }
    }
   }
  },
  "/boot/scrub": {
   "get": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Scrub on boot pool."
   }
  },
  "/boot/set_scrub_interval": {
   "post": {
    "tags": [
     "boot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_boot_set_scrub_interval"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set Automatic Scrub Interval value in days.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/boot_set_scrub_interval"
       }
      }
     }
    }
   }
  },
  "/bootenv": {
   "get": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all Boot Environments with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new boot environment using `name`.\n\nIf a new boot environment is desired which is a clone of another boot environment, `source` can be passed.\nThen, a new boot environment of `name` is created using boot environment `source` by cloning it.\n\nEnsure that `name` and `source` are valid boot environment names.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/bootenv_create"
       }
      }
     }
    }
   }
  },
  "/bootenv/id/{id_}": {
   "delete": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Delete `id` boot environment. This removes the clone from the system."
   },
   "get": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all Boot Environments with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Update `id` boot environment name with a new provided valid `name`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/bootenv_update"
       }
      }
     }
    }
   }
  },
  "/bootenv/id/{id_}/activate": {
   "post": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_activate"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Activates boot environment `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/bootenv_activate"
       }
      }
     }
    }
   }
  },
  "/bootenv/get_instance": {
   "post": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/bootenv_get_instance"
       }
      }
     }
    }
   }
  },
  "/bootenv/id/{id_}/set_attribute": {
   "post": {
    "tags": [
     "bootenv"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_bootenv_set_attribute"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Sets attributes boot environment `id`.\n\nCurrently only `keep` attribute is allowed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/bootenv_set_attribute"
       }
      }
     }
    }
   }
  },
  "/catalog": {
   "get": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`catalog_create.preferred_trains` specifies trains which will be displayed in the UI directly for a user.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_create"
       }
      }
     }
    }
   }
  },
  "/catalog/id/{id_}": {
   "delete": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": ""
   },
   "get": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_update"
       }
      }
     }
    }
   }
  },
  "/catalog/get_instance": {
   "post": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_get_instance"
       }
      }
     }
    }
   }
  },
  "/catalog/get_item_details": {
   "post": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_get_item_details"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve information of `item_name` `item_version_details.catalog` catalog item.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_get_item_details"
       }
      }
     }
    }
   }
  },
  "/catalog/items": {
   "post": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_catalog_items"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve item details for `label` catalog.\n\n`options.cache` is a boolean which when set will try to get items details for `label` catalog from cache\nif available.\n\n`options.cache_only` is a boolean which when set will force usage of cache only for retrieving catalog\ninformation. If the content for the catalog in question is not cached, no content would be returned. If\n`options.cache` is unset, this attribute has no effect.\n\n`options.retrieve_all_trains` is a boolean value which when set will retrieve information for all the trains\npresent in the catalog ( it is set by default ).\n\n`options.trains` is a list of train name(s) which will allow selective filtering to retrieve only information\nof desired trains in a catalog. If `options.retrieve_all_trains` is set, it has precedence over `options.train`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_items"
       }
      }
     }
    }
   }
  },
  "/catalog/sync": {
   "post": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sync `label` catalog to retrieve latest changes from upstream.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_sync"
       }
      }
     }
    }
   }
  },
  "/catalog/sync_all": {
   "get": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Refresh all available catalogs from upstream."
   }
  },
  "/catalog/validate": {
   "post": {
    "tags": [
     "catalog"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Validates `label` catalog format which includes validating trains and applications with their versions.\n\nThis does not test if an app version is valid in terms of kubernetes resources but instead ensures it has\nthe correct format and files necessary for TrueNAS to use it.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/catalog_validate"
       }
      }
     }
    }
   }
  },
  "/certificate": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new Certificate\n\nCertificates are classified under following types and the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate\n\n1) Internal Certificate                 -  CERTIFICATE_CREATE_INTERNAL\n\n2) Imported Certificate                 -  CERTIFICATE_CREATE_IMPORTED\n\n3) Certificate Signing Request          -  CERTIFICATE_CREATE_CSR\n\n4) Imported Certificate Signing Request -  CERTIFICATE_CREATE_IMPORTED_CSR\n\n5) ACME Certificate                     -  CERTIFICATE_CREATE_ACME\n\nBy default, created certs use RSA keys. If an Elliptic Curve Key is desired, it can be specified with the\n`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve.\n\nA type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are\nvalidated accordingly and finally a certificate is made based on the selected type.\n\n`cert_extensions` can be specified to set X509v3 extensions.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificate_create"
       }
      }
     }
    }
   }
  },
  "/certificate/id/{id_}": {
   "delete": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete certificate of `id`.\n\nIf the certificate is an ACME based certificate, certificate service will try to\nrevoke the certificate by updating it's status with the ACME server, if it fails an exception is raised\nand the certificate is not deleted from the system. However, if `force` is set to True, certificate is deleted\nfrom the system even if some error occurred while revoking the certificate with the ACME Server\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificate_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update certificate of `id`\n\nOnly name and revoked attribute can be updated.\n\nWhen `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificate_update"
       }
      }
     }
    }
   }
  },
  "/certificate/acme_server_choices": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_acme_server_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Dictionary of popular ACME Servers with their directory URI endpoints which we display automatically\nin UI"
   }
  },
  "/certificate/certificate_signing_requests_profiles": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_certificate_signing_requests_profiles"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a dictionary of predefined options for specific use cases i.e openvpn client/server\nconfigurations which can be used for creating certificate signing requests."
   }
  },
  "/certificate/country_choices": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_country_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns country choices for creating a certificate/csr."
   }
  },
  "/certificate/ec_curve_choices": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_ec_curve_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Dictionary of supported EC curves."
   }
  },
  "/certificate/extended_key_usage_choices": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_extended_key_usage_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Dictionary of choices for `ExtendedKeyUsage` extension which can be passed over to `usages` attribute."
   }
  },
  "/certificate/get_instance": {
   "post": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificate_get_instance"
       }
      }
     }
    }
   }
  },
  "/certificate/key_type_choices": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_key_type_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Dictionary of supported key types for certificates."
   }
  },
  "/certificate/profiles": {
   "get": {
    "tags": [
     "certificate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificate_profiles"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a dictionary of predefined options for specific use cases i.e openvpn client/server\nconfigurations which can be used for creating certificates."
   }
  },
  "/certificateauthority": {
   "get": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new Certificate Authority\n\nCertificate Authorities are classified under following types with the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate authority\n\n1) Internal Certificate Authority       -  CA_CREATE_INTERNAL\n\n2) Imported Certificate Authority       -  CA_CREATE_IMPORTED\n\n3) Intermediate Certificate Authority   -  CA_CREATE_INTERMEDIATE\n\nCreated certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve.\n\nA type is selected by the Certificate Authority Service based on `create_type`. The rest of the values\nare validated accordingly and finally a certificate is made based on the selected type.\n\n`cert_extensions` can be specified to set X509v3 extensions.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificateauthority_create"
       }
      }
     }
    }
   }
  },
  "/certificateauthority/id/{id_}": {
   "delete": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a Certificate Authority of `id`\n\n"
   },
   "get": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Certificate Authority of `id`\n\nOnly `name` and `revoked` attribute can be updated.\n\nIf `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's\ncertificate revocation list.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificateauthority_update"
       }
      }
     }
    }
   }
  },
  "/certificateauthority/ca_sign_csr": {
   "post": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_ca_sign_csr"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sign CSR by Certificate Authority of `ca_id`\n\nSign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing\na CSR of `csr_cert_id` which exists in the system\n\n`cert_extensions` can be specified if specific extensions are to be set in the newly signed certificate.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificateauthority_ca_sign_csr"
       }
      }
     }
    }
   }
  },
  "/certificateauthority/get_instance": {
   "post": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificateauthority_get_instance"
       }
      }
     }
    }
   }
  },
  "/certificateauthority/profiles": {
   "get": {
    "tags": [
     "certificateauthority"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_certificateauthority_profiles"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a dictionary of predefined options for specific use cases i.e OpenVPN certificate authority\nconfigurations which can be used for creating certificate authorities."
   }
  },
  "/chart/release": {
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query available chart releases.\n\n`query-options.extra.retrieve_resources` is a boolean when set will retrieve existing kubernetes resources\nin the chart namespace.\n\n`query-options.extra.history` is a boolean when set will retrieve all chart version upgrades\nfor a chart release.\n\n`query-options.extra.include_chart_schema` is a boolean when set will retrieve the schema being used by\nthe chart release in question.\n\n`query-options.extra.resource_events` is a boolean when set will retrieve individual events of each resource.\nThis only has effect if `query-options.extra.retrieve_resources` is set.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a chart release for a catalog item.\n\n`release_name` is the name which will be used to identify the created chart release.\n\n`catalog` is a valid catalog id where system will look for catalog `item` details.\n\n`train` is which train to look for under `catalog` i.e stable / testing etc.\n\n`version` specifies the catalog `item` version.\n\n`values` is configuration specified for the catalog item version in question which will be used to\ncreate the chart release.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_create"
       }
      }
     }
    }
   }
  },
  "/chart/release/id/{id_}": {
   "delete": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Delete existing chart release.\n\nThis will delete the chart release from the kubernetes cluster and also remove any associated volumes / data.\nTo clarify, host path volumes will not be deleted which live outside the chart release dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query available chart releases.\n\n`query-options.extra.retrieve_resources` is a boolean when set will retrieve existing kubernetes resources\nin the chart namespace.\n\n`query-options.extra.history` is a boolean when set will retrieve all chart version upgrades\nfor a chart release.\n\n`query-options.extra.include_chart_schema` is a boolean when set will retrieve the schema being used by\nthe chart release in question.\n\n`query-options.extra.resource_events` is a boolean when set will retrieve individual events of each resource.\nThis only has effect if `query-options.extra.retrieve_resources` is set.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Update an existing chart release.\n\n`values` is configuration specified for the catalog item version in question which will be used to\ncreate the chart release.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_update"
       }
      }
     }
    }
   }
  },
  "/chart/release/certificate_authority_choices": {
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_certificate_authority_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns certificate authorities which can be used by applications."
   }
  },
  "/chart/release/certificate_choices": {
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_certificate_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns certificates which can be used by applications."
   }
  },
  "/chart/release/events": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_events"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns kubernetes events for `release_name` Chart Release.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_events"
       }
      }
     }
    }
   }
  },
  "/chart/release/get_chart_releases_using_chart_release_images": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_get_chart_releases_using_chart_release_images"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve chart releases which are consuming any images in use by `chart_release_name`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_get_chart_releases_using_chart_release_images"
       }
      }
     }
    }
   }
  },
  "/chart/release/get_instance": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_get_instance"
       }
      }
     }
    }
   }
  },
  "/chart/release/nic_choices": {
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_nic_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for NIC which can be added to a pod in a chart release."
   }
  },
  "/chart/release/pod_console_choices": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_pod_console_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns choices for console access to a chart release.\n\nOutput is a dictionary with names of pods as keys and containing names of containers which the pod\ncomprises of.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_pod_console_choices"
       }
      }
     }
    }
   }
  },
  "/chart/release/pod_logs": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Export logs of `options.container_name` container in `options.pod_name` pod in `release_name` chart release.\n\n`options.tail_lines` is an option to select how many lines of logs to retrieve for the said container. It\ndefaults to 500. If set to `null`, it will retrieve complete logs of the container.\n\n`options.limit_bytes` is an option to select how many bytes to retrieve from the tail lines selected. If set\nto null ( which is the default ), it will not limit the bytes returned. To clarify, `options.tail_lines`\nis applied first and the required number of lines are retrieved and then `options.limit_bytes` is applied.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_pod_logs"
       }
      }
     }
    }
   }
  },
  "/chart/release/pod_logs_choices": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_pod_logs_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns choices for accessing logs of any container in any pod in a chart release.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_pod_logs_choices"
       }
      }
     }
    }
   }
  },
  "/chart/release/pod_status": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_pod_status"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve available/desired pods status for a chart release and it's current state.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_pod_status"
       }
      }
     }
    }
   }
  },
  "/chart/release/pull_container_images": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_pull_container_images"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update container images being used by `release_name` chart release.\n\n`redeploy` when set will redeploy pods which will result in chart release using newer updated versions of\nthe container images.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_pull_container_images"
       }
      }
     }
    }
   }
  },
  "/chart/release/redeploy": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_redeploy"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Redeploy will initiate a new rollout of the Helm chart according to upgrade strategy defined by the chart\nrelease workloads. A good example for redeploying is updating kubernetes pods with an updated container image.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_redeploy"
       }
      }
     }
    }
   }
  },
  "/chart/release/remove_ix_volume": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Remove `volume_name` ix_volume from `release_name` chart release.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_remove_ix_volume"
       }
      }
     }
    }
   }
  },
  "/chart/release/rollback": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_rollback"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Rollback a chart release to a previous chart version.\n\n`item_version` is version which we want to rollback a chart release to.\n\n`rollback_snapshot` is a boolean value which when set will rollback snapshots of any PVC's or ix volumes being\nconsumed by the chart release.\n\n`force_rollback` is a boolean which when set will force rollback operation to move forward even if no\nsnapshots are found. This is only useful when `rollback_snapshot` is set.\n\n`recreate_resources` is a boolean which will delete and then create the kubernetes resources on rollback\nof chart release. This should be used with caution as if chart release is consuming immutable objects like\na PVC, the rollback operation can't be performed and will fail as helm tries to do a 3 way patch for rollback.\n\nRollback is functional for the actual configuration of the release at the `item_version` specified and\nany associated `ix_volumes` with any PVC's which were consuming chart release storage class.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_rollback"
       }
      }
     }
    }
   }
  },
  "/chart/release/scale": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_scale"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Scale a `release_name` chart release to `scale_options.replica_count` specified.\n\nThis will scale deployments/statefulset to replica count specified.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_scale"
       }
      }
     }
    }
   }
  },
  "/chart/release/scale_workloads": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Scale workloads in a chart release to specified `replica_count`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_scale_workloads"
       }
      }
     }
    }
   }
  },
  "/chart/release/scaleable_resources": {
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_scaleable_resources"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns choices for types of workloads which can be scaled up/down."
   }
  },
  "/chart/release/upgrade": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_upgrade"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Upgrade `release_name` chart release.\n\n`upgrade_options.item_version` specifies to which item version chart release should be upgraded to.\n\nSystem will update container images being used by `release_name` chart release as a chart release\nupgrade is not considered complete until the images in use have also been updated to latest versions.\n\nDuring upgrade, `upgrade_options.values` can be specified to apply configuration changes for configuration\nchanges for the chart release in question.\n\nWhen chart version is upgraded, system will automatically take a snapshot of `ix_volumes` in question\nwhich can be used to rollback later on.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_upgrade"
       }
      }
     }
    }
   }
  },
  "/chart/release/upgrade_summary": {
   "post": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_upgrade_summary"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve upgrade summary for `release_name` which will include which container images will be updated\nand changelog for `options.item_version` chart version specified if applicable. If only container images\nneed to be updated, changelog will be `null`.\n\nIf chart release `release_name` does not require an upgrade, an error will be raised.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/chart_release_upgrade_summary"
       }
      }
     }
    }
   }
  },
  "/chart/release/used_ports": {
   "get": {
    "tags": [
     "chart.release"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_chart_release_used_ports"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns ports in use by applications."
   }
  },
  "/cloud_backup": {
   "get": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloud_backup_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloud_backup_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "        ",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloud_backup_create"
       }
      }
     }
    }
   }
  },
  "/cloud_backup/id/{id_}": {
   "delete": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloud_backup_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Deletes cloud backup entry `id`."
   },
   "get": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloud_backup_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloud_backup_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Updates the cloud backup entry `id` with `data`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloud_backup_update"
       }
      }
     }
    }
   }
  },
  "/cloud_backup/id/{id_}/abort": {
   "post": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Aborts cloud backup task.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloud_backup_abort"
       }
      }
     }
    }
   }
  },
  "/cloud_backup/get_instance": {
   "post": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloud_backup_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloud_backup_get_instance"
       }
      }
     }
    }
   }
  },
  "/cloud_backup/id/{id_}/init": {
   "post": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Initializes the repository for the cloud backup job `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloud_backup_init"
       }
      }
     }
    }
   }
  },
  "/cloud_backup/id/{id_}/sync": {
   "post": {
    "tags": [
     "cloud_backup"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Run the cloud backup job `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloud_backup_sync"
       }
      }
     }
    }
   }
  },
  "/cloudsync": {
   "get": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates a new cloud_sync entry.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_create"
       }
      }
     }
    }
   }
  },
  "/cloudsync/id/{id_}": {
   "delete": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Deletes cloud_sync entry `id`."
   },
   "get": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Updates the cloud_sync entry `id` with `data`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_update"
       }
      }
     }
    }
   }
  },
  "/cloudsync/id/{id_}/abort": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Aborts cloud sync task.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_abort"
       }
      }
     }
    }
   }
  },
  "/cloudsync/create_bucket": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates a new bucket `name` using ` credentials_id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_create_bucket"
       }
      }
     }
    }
   }
  },
  "/cloudsync/get_instance": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_get_instance"
       }
      }
     }
    }
   }
  },
  "/cloudsync/list_buckets": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_list_buckets"
       }
      }
     }
    }
   }
  },
  "/cloudsync/list_directory": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List contents of a remote bucket / directory.\n\nIf remote supports buckets, path is constructed by two keys \"bucket\"/\"folder\" in `attributes`.\nIf remote does not support buckets, path is constructed using \"folder\" key only in `attributes`.\n\"folder\" is directory name and \"bucket\" is bucket name for remote.\n\nPath examples:\n\nS3 Service\n`bucketname/directory/name`\n\nDropbox Service\n`directory/name`\n\n`credentials` is a valid id of a Cloud Sync Credential which will be used to connect to the provider.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_list_directory"
       }
      }
     }
    }
   }
  },
  "/cloudsync/providers": {
   "get": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a list of dictionaries of supported providers for Cloud Sync Tasks.\n\n`credentials_schema` is JSON schema for credentials attributes.\n\n`task_schema` is JSON schema for task attributes.\n\n`buckets` is a boolean value which is set to \"true\" if provider supports buckets.\n\nExample of a single provider:\n\n[\n    {\n        \"name\": \"AMAZON_CLOUD_DRIVE\",\n        \"title\": \"Amazon Cloud Drive\",\n        \"credentials_schema\": [\n            {\n                \"property\": \"client_id\",\n                \"schema\": {\n                    \"title\": \"Amazon Application Client ID\",\n                    \"_required_\": true,\n                    \"type\": \"string\"\n                }\n            },\n            {\n                \"property\": \"client_secret\",\n                \"schema\": {\n                    \"title\": \"Application Key\",\n                    \"_required_\": true,\n                    \"type\": \"string\"\n                }\n            }\n        ],\n        \"credentials_oauth\": null,\n        \"buckets\": false,\n        \"bucket_title\": \"Bucket\",\n        \"task_schema\": []\n    }\n]"
   }
  },
  "/cloudsync/id/{id_}/restore": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Create the opposite of cloud sync task `id` (PULL if it was PUSH and vice versa).",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_restore"
       }
      }
     }
    }
   }
  },
  "/cloudsync/id/{id_}/sync": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Run the cloud_sync job `id`, syncing the local data to remote.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_sync"
       }
      }
     }
    }
   }
  },
  "/cloudsync/sync_onetime": {
   "post": {
    "tags": [
     "cloudsync"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Run cloud sync task without creating it.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_sync_onetime"
       }
      }
     }
    }
   }
  },
  "/cloudsync/credentials": {
   "get": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_credentials_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_credentials_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create Cloud Sync Credentials.\n\n`attributes` is a dictionary of valid values which will be used to authorize with the `provider`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_credentials_create"
       }
      }
     }
    }
   }
  },
  "/cloudsync/credentials/id/{id_}": {
   "delete": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_credentials_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Cloud Sync Credentials of `id`."
   },
   "get": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_credentials_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_credentials_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Cloud Sync Credentials of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_credentials_update"
       }
      }
     }
    }
   }
  },
  "/cloudsync/credentials/get_instance": {
   "post": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cloudsync_credentials_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_credentials_get_instance"
       }
      }
     }
    }
   }
  },
  "/cloudsync/credentials/verify": {
   "post": {
    "tags": [
     "cloudsync.credentials"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Verify if `attributes` provided for `provider` are authorized by the `provider`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cloudsync_credentials_verify"
       }
      }
     }
    }
   }
  },
  "/config/reset": {
   "post": {
    "tags": [
     "config"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Reset database to configuration defaults.\n\nIf `reboot` is true this job will reboot the system after its completed with a delay of 10\nseconds.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/config_reset"
       }
      }
     }
    }
   }
  },
  "/config/save": {
   "post": {
    "tags": [
     "config"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a tar file of security-sensitive information. These options select which information\nis included in the tar file:\n\n`secretseed` bool: When true, include password secret seed.\n`pool_keys` bool: IGNORED and DEPRECATED as it does not apply on SCALE systems.\n`root_authorized_keys` bool: When true, include \"/root/.ssh/authorized_keys\" file for the root user.\n\nIf none of these options are set, the tar file is not generated and the database file is returned.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/config_save"
       }
      }
     }
    }
   }
  },
  "/config/upload": {
   "post": {
    "tags": [
     "config"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Accepts a configuration file via job pipe.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file."
   }
  },
  "/container": {
   "get": {
    "tags": [
     "container"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "container"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "When `enable_image_updates` is set, system will check if existing container images need to be updated. System\nwill basically check if we have an updated image hash available for the same tag available and if we do,\nuser is alerted to update the image.\nA use case for unsetting this variable can be rate limits for docker registries, as each time we check if a\nsingle image needs update, we consume the rate limit and eventually it can hinder operations if the number\nof images to be checked is a lot.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/container_update"
       }
      }
     }
    }
   }
  },
  "/container/prune": {
   "post": {
    "tags": [
     "container"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_prune"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Prune unused images/containers. This will by default remove any dangling images.\n\n`prune_options.remove_unused_images` when set will remove any container image which is not being used by any\ncontainer.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/container_prune"
       }
      }
     }
    }
   }
  },
  "/container/image": {
   "get": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_image_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Retrieve container images present in the system.\n\n`query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved\nfor container images.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/container/image/id/{id_}": {
   "delete": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`options.force` should be used to force delete an image even if it's in use by a stopped container."
   },
   "get": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_image_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Retrieve container images present in the system.\n\n`query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved\nfor container images.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/container/image/dockerhub_rate_limit": {
   "get": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_image_dockerhub_rate_limit"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the current rate limit information for Docker Hub registry.\n\nPlease refer to https://docs.docker.com/docker-hub/download-rate-limit/ for more information."
   }
  },
  "/container/image/get_chart_releases_consuming_image": {
   "post": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_image_get_chart_releases_consuming_image"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve chart releases consuming `image_tag` image.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/container_image_get_chart_releases_consuming_image"
       }
      }
     }
    }
   }
  },
  "/container/image/get_instance": {
   "post": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_container_image_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/container_image_get_instance"
       }
      }
     }
    }
   }
  },
  "/container/image/pull": {
   "post": {
    "tags": [
     "container.image"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`from_image` is the name of the image to pull. Format for the name is \"registry/repo/image\" where\nregistry may be omitted and it will default to docker registry in this case.\n\n`tag` specifies tag of the image and defaults to `null`. In case of `null` it will retrieve all the tags\nof the image.\n\n`authentication` should be specified if image to be retrieved is under a private repository.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/container_image_pull"
       }
      }
     }
    }
   }
  },
  "/cronjob": {
   "get": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cronjob_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cronjob_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new cron job.\n\n`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cronjob_create"
       }
      }
     }
    }
   }
  },
  "/cronjob/id/{id_}": {
   "delete": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cronjob_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete cronjob of `id`."
   },
   "get": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cronjob_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cronjob_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update cronjob of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cronjob_update"
       }
      }
     }
    }
   }
  },
  "/cronjob/get_instance": {
   "post": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_cronjob_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cronjob_get_instance"
       }
      }
     }
    }
   }
  },
  "/cronjob/run": {
   "post": {
    "tags": [
     "cronjob"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Job to run cronjob task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cronjob_run"
       }
      }
     }
    }
   }
  },
  "/device/get_info": {
   "post": {
    "tags": [
     "device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_device_get_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get info for SERIAL/DISK/GPU device types.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/device_get_info"
       }
      }
     }
    }
   }
  },
  "/device/gpu_pci_ids_choices": {
   "get": {
    "tags": [
     "device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_device_gpu_pci_ids_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve choices for GPU PCI ids located in the system."
   }
  },
  "/directoryservices/cache_refresh": {
   "get": {
    "tags": [
     "directoryservices"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "This method refreshes the directory services cache for users and groups that is\nused as a backing for `user.query` and `group.query` methods. The first cache fill in\nan Active Directory domain may take a significant amount of time to complete and\nso it is performed as within a job. The most likely situation in which a user may\ndesire to refresh the directory services cache is after new users or groups  to a remote\ndirectory server with the intention to have said users or groups appear in the\nresults of the aforementioned account-related methods.\n\nA cache refresh is not required in order to use newly-added users and groups for in\npermissions and ACL related methods. Likewise, a cache refresh will not resolve issues\nwith users being unable to authenticate to shares."
   }
  },
  "/directoryservices/get_state": {
   "get": {
    "tags": [
     "directoryservices"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_directoryservices_get_state"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`DISABLED` Directory Service is disabled.\n\n`FAULTED` Directory Service is enabled, but not HEALTHY. Review logs and generated alert\nmessages to debug the issue causing the service to be in a FAULTED state.\n\n`LEAVING` Directory Service is in process of stopping.\n\n`JOINING` Directory Service is in process of starting.\n\n`HEALTHY` Directory Service is enabled, and last status check has passed."
   }
  },
  "/disk": {
   "get": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query disks.\n\nThe following extra options are supported:\n\n     include_expired: true - will also include expired disks (default: false)\n     passwords: true - will not hide KMIP password for the disks (default: false)\n     supports_smart: true - will query if disks support S.M.A.R.T. Only supported if resulting disks count is\n                            not larger than one; otherwise, raises an error.\n     pools: true - will join pool name for each disk (default: false)\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/disk/id/{id_}": {
   "get": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query disks.\n\nThe following extra options are supported:\n\n     include_expired: true - will also include expired disks (default: false)\n     passwords: true - will not hide KMIP password for the disks (default: false)\n     supports_smart: true - will query if disks support S.M.A.R.T. Only supported if resulting disks count is\n                            not larger than one; otherwise, raises an error.\n     pools: true - will join pool name for each disk (default: false)\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Update disk of `id`.\n\nIf extra options need to be passed to SMART which we don't already support, they can be passed by\n`smartoptions`.\n\n`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\n\nEmail of log level LOG_CRIT is issued when disk temperature crosses `critical`.\n\nEmail of log level LOG_INFO is issued when disk temperature crosses `informational`.\n\nIf temperature of a disk changes by `difference` degree Celsius since the last report, SMART reports this.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_update"
       }
      }
     }
    }
   }
  },
  "/disk/get_instance": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_get_instance"
       }
      }
     }
    }
   }
  },
  "/disk/get_unused": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return disks that are not in use by any zpool that is currently imported. It will\nalso return disks that are in use by any zpool that is exported.\n\n`join_partitions`: Bool, when True will return all partitions currently written to disk\n    NOTE: this is an expensive operation",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_get_unused"
       }
      }
     }
    }
   }
  },
  "/disk/resize": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Takes a list of disks. Each list entry is a dict that requires a key, value pair.\n`name`: string (the name of the disk (i.e. sda))\n`size`: integer (given in gigabytes)\n`sync`: boolean, when true (default) will synchronize the new size of the disk(s)\n    with the database cache.\n`raise_error`: boolean\n    when true, will raise a `CallError` if any failures occur\n    when false, will will log the errors if any failures occur\n\nNOTE:\n    if `size` is given, the disk with `name` will be resized\n        to `size` (overprovision).\n    if `size` is not given, the disk with `name` will be resized\n        to it's original size (unoverprovision).",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_resize"
       }
      }
     }
    }
   }
  },
  "/disk/retaste": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_retaste"
       }
      }
     }
    }
   }
  },
  "/disk/smart_attributes": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_smart_attributes"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns S.M.A.R.T. attributes values for specified disk name.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_smart_attributes"
       }
      }
     }
    }
   }
  },
  "/disk/temperature": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_temperature"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns temperature for device `name` using specified S.M.A.R.T. `powermode`. If `cache` is not null\nthen the last cached within `cache` seconds value is used.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_temperature"
       }
      }
     }
    }
   }
  },
  "/disk/temperature_agg": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_temperature_agg"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns min/max/avg temperature for `names` disks for the last `days` days",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_temperature_agg"
       }
      }
     }
    }
   }
  },
  "/disk/temperature_alerts": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_temperature_alerts"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns existing temperature alerts for specified disk `names.`",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_temperature_alerts"
       }
      }
     }
    }
   }
  },
  "/disk/temperatures": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_disk_temperatures"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns temperatures for a list of devices (runs in parallel).\nSee `disk.temperature` documentation for more details.\nIf `only_cached` is specified then this method only returns disk temperatures that exist in cache.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_temperatures"
       }
      }
     }
    }
   }
  },
  "/disk/wipe": {
   "post": {
    "tags": [
     "disk"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Performs a wipe of a disk `dev`.\nIt can be of the following modes:\n  - QUICK: clean the first and last 32 megabytes on `dev`\n  - FULL: write whole disk with zero's\n  - FULL_RANDOM: write whole disk with random bytes",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/disk_wipe"
       }
      }
     }
    }
   }
  },
  "/dns/query": {
   "get": {
    "tags": [
     "dns"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_dns_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query Name Servers with `query-filters` and `query-options`.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/enclosure": {
   "get": {
    "tags": [
     "enclosure"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_enclosure_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/enclosure/id/{id_}": {
   "get": {
    "tags": [
     "enclosure"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_enclosure_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "enclosure"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_enclosure_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/enclosure_update"
       }
      }
     }
    }
   }
  },
  "/enclosure/get_instance": {
   "post": {
    "tags": [
     "enclosure"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_enclosure_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/enclosure_get_instance"
       }
      }
     }
    }
   }
  },
  "/enclosure/set_slot_status": {
   "post": {
    "tags": [
     "enclosure"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/enclosure_set_slot_status"
       }
      }
     }
    }
   }
  },
  "/failover": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update failover state.\n\n`disabled` When true indicates that HA will be disabled.\n`master`  Marks the particular node in the chassis as the master node.\n            The standby node will have the opposite value.\n\n`timeout` is the time to WAIT until a failover occurs when a network\n    event occurs on an interface that is marked critical for failover AND\n    HA is enabled and working appropriately.\n\n    The default time to wait is 2 seconds.\n    **NOTE**\n        This setting does NOT effect the `disabled` or `master` parameters.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/failover_update"
       }
      }
     }
    }
   }
  },
  "/failover/become_passive": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "This method is only called manually by the end-user so we fully expect that they\nknow what they're doing. Furthermore, this method will only run if failover has NOT\nbeen administratively disabled. The reason why we only allow this in that scenario\nis because the failover logic (on the other node) will ignore any failover \"event\"\nthat comes in if failover has been administratively disabled. This immediately causes\nthe HA system to go into a \"faulted\" state because the other node will get the VIPs\nbut it will not import the zpool and it will not start fenced. Only way out of that\nsituation is to manually fix things (import zpool, migrate VIPs, start fenced, etc).\n\nNOTE: The only \"safe\" way to \"become passive\" is to use the STCNITH method (similar to STONITH).\n(i.e. Shoot The Current Node In The Head)\n\nThis ensures that the current node gets out of the way _completely_ so there is no chance\nof the zpool being imported at the same time on both nodes (which can ultimately end in data corruption)."
   }
  },
  "/failover/call_remote": {
   "post": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_call_remote"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Call a method on the other node.\n\n`method` name of the method to be called\n`args` list of arguments to be passed to `method`\n`options` dictionary with following keys\n    `timeout`: time to wait for `method` to return\n        NOTE: This parameter _ONLY_ applies if the remote\n            client is connected to the other node.\n    `job`: whether the `method` being called is a job\n    `job_return`: if true, will return immediately and not wait\n        for the job to complete, otherwise will wait for the\n        job to complete\n    `callback`: a function that will be called as a callback\n        on completion/failure of `method`.\n        NOTE: Only applies if `method` is a job\n    `connect_timeout`: Maximum amount of time in seconds to wait\n        for remote connection to become available.\n    `raise_connect_error`: If false, will not raise an exception if a connection error to the other node\n        happens, or connection/call timeout happens, or method does not exist on the remote node.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/failover_call_remote"
       }
      }
     }
    }
   }
  },
  "/failover/control": {
   "post": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/failover_control"
       }
      }
     }
    }
   }
  },
  "/failover/force_master": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_force_master"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Force this controller to become MASTER, if it's not already."
   }
  },
  "/failover/get_ips": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_get_ips"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get a list of IPs for which the webUI can be accessed."
   }
  },
  "/failover/hardware": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_hardware"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the hardware type for an HA system.\n  ECHOSTREAM (z-series)\n  ECHOWARP (m-series)\n  LAJOLLA2 (f-series)\n  SUBLIGHT (h-series)\n  PUMA (x-series)\n  BHYVE (HA VMs for CI)\n  IXKVM (HA VMs (on KVM) for CI)\n  MANUAL (everything else)"
   }
  },
  "/failover/in_progress": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_in_progress"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns True if there is an ongoing failover event."
   }
  },
  "/failover/licensed": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_licensed"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Checks whether this instance is licensed as a HA unit"
   }
  },
  "/failover/node": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_node"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the slot position in the chassis that\nthe controller is located.\n  A - First node\n  B - Seconde Node\n  MANUAL - slot position in chassis could not be determined"
   }
  },
  "/failover/status": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_status"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the current HA status.\n\nReturns:\n    MASTER\n    BACKUP\n    ELECTING\n    IMPORTING\n    ERROR\n    SINGLE"
   }
  },
  "/failover/sync_from_peer": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sync database and files from the other controller."
   }
  },
  "/failover/sync_to_peer": {
   "post": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sync database and files to the other controller.\n\n`reboot` as true will reboot the other controller after syncing.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/failover_sync_to_peer"
       }
      }
     }
    }
   }
  },
  "/failover/unlock": {
   "post": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_unlock"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Unlock datasets in HA, syncing passphrase between controllers and forcing this controller\nto be MASTER importing the pools.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/failover_unlock"
       }
      }
     }
    }
   }
  },
  "/failover/upgrade": {
   "post": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_upgrade"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Upgrades both controllers.\n\nFiles will be downloaded to the Active Controller and then transferred to the Standby\nController.\n\nUpgrade process will start concurrently on both nodes.\n\nOnce both upgrades are applied, the Standby Controller will reboot. This job will wait for\nthat job to complete before finalizing.\n\n`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, you also\nhave to set `resume_manual` to `true` if a previous call to this method was performed using update file upload.\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/failover_upgrade"
       }
      }
     }
    }
   }
  },
  "/failover/upgrade_finish": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_upgrade_finish"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Perform the last stage of an HA upgrade.\n\nThis will activate the new boot environment on the\nStandby Controller and reboot it."
   }
  },
  "/failover/upgrade_pending": {
   "get": {
    "tags": [
     "failover"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_upgrade_pending"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Verify if HA upgrade is pending.\n\n`upgrade_finish` needs to be called to finish\nthe HA upgrade process if this method returns true."
   }
  },
  "/failover/reboot/info": {
   "get": {
    "tags": [
     "failover.reboot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_reboot_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the local and remote nodes boot_ids along with their\nreboot statuses (i.e. does a reboot need to take place)"
   }
  },
  "/failover/reboot/other_node": {
   "get": {
    "tags": [
     "failover.reboot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Reboot the other node and wait for it to come back online.\n\nNOTE: This makes very few checks on HA systems. You need to\n    know what you're doing before calling this."
   }
  },
  "/failover/reboot/required": {
   "get": {
    "tags": [
     "failover.reboot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_failover_reboot_required"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether this node needs to be rebooted for failover/security\nsystem configuration changes to take effect."
   }
  },
  "/filesystem/acl_is_trivial": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acl_is_trivial"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns True if the ACL can be fully expressed as a file mode without losing\nany access rules.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_acl_is_trivial"
       }
      }
     }
    }
   }
  },
  "/filesystem/can_access_as_user": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_can_access_as_user"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Check if `username` is able to access `path` with specific `permissions`. At least one of `read/write/execute`\npermission must be specified for checking with each of these defaulting to `null`. `null` for\n`read/write/execute` represents that the permission should not be checked.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_can_access_as_user"
       }
      }
     }
    }
   }
  },
  "/filesystem/chown": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Change owner or group of file at `path`.\n\n`uid` and `gid` specify new owner of the file. If either\nkey is absent or None, then existing value on the file is not\nchanged.\n\n`recursive` performs action recursively, but does\nnot traverse filesystem mount points.\n\nIf `traverse` and `recursive` are specified, then the chown\noperation will traverse filesystem mount points.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_chown"
       }
      }
     }
    }
   }
  },
  "/filesystem/default_acl_choices": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_default_acl_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`DEPRECATED`\nReturns list of names of ACL templates. Wrapper around\nfilesystem.acltemplate.query.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_default_acl_choices"
       }
      }
     }
    }
   }
  },
  "/filesystem/get": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Job to get contents of `path`.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_get"
       }
      }
     }
    }
   }
  },
  "/filesystem/get_default_acl": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_get_default_acl"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`DEPRECATED`\nReturns a default ACL depending on the usage specified by `acl_type`.\nIf an admin group is defined, then an entry granting it full control will\nbe placed at the top of the ACL. Optionally may pass `share_type` to argument\nto get share-specific template ACL.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_get_default_acl"
       }
      }
     }
    }
   }
  },
  "/filesystem/get_dosmode": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_get_dosmode"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_get_dosmode"
       }
      }
     }
    }
   }
  },
  "/filesystem/getacl": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_getacl"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return ACL of a given path. This may return a POSIX1e ACL or a NFSv4 ACL. The acl type is indicated\nby the `acltype` key.\n\n`simplified` - effect of this depends on ACL type on underlying filesystem. In the case of\nNFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.\nNFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.\n\n`resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to\na user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ\n(POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of\nMASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.\nIn case of failure to resolve the id to a name, `who` will be set to null. This option should\nonly be used if resolving ids to names is required.\n\nErrata about ACLType NFSv4:\n\n`simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions\nhave been simplified, then the `perms` object will contain only a single `BASIC` key with a string\ndescribing the underlying permissions set.\n\n`TRAVERSE` sufficient rights to traverse a directory, but not read contents.\n\n`READ` sufficient rights to traverse a directory, and read file contents.\n\n`MODIFIY` sufficient rights to traverse, read, write, and modify a file.\n\n`FULL_CONTROL` all permissions.\n\nIf the permisssions do not fit within one of the pre-defined simplified permissions types, then\nthe full ACL entry will be returned.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_getacl"
       }
      }
     }
    }
   }
  },
  "/filesystem/is_immutable": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_is_immutable"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieves boolean which is set when immutable flag is set on `path`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_is_immutable"
       }
      }
     }
    }
   }
  },
  "/filesystem/listdir": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_listdir"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the contents of a directory.\n\nEach entry of the list consists of:\n  name(str): name of the file\n  path(str): absolute path of the entry\n  realpath(str): absolute real path of the entry (if SYMLINK)\n  type(str): DIRECTORY | FILE | SYMLINK | OTHER\n  size(int): size of the entry\n  allocation_size(int): on-disk size of entry\n  mode(int): file mode/permission\n  uid(int): user id of entry owner\n  gid(int): group id of entry owner\n  acl(bool): extended ACL is present on file\n  is_mountpoint(bool): path is a mountpoint\n  is_ctldir(bool): path is within special .zfs directory\n  attributes(list): list of statx file attributes that apply to the\n  file. See statx(2) manpage for more details.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_listdir"
       }
      }
     }
    }
   }
  },
  "/filesystem/mkdir": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_mkdir"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a directory at the specified path.\n\nThe following options are supported:\n\n`mode` - specify the permissions to set on the new directory (0o755 is default).\n`raise_chmod_error` - choose whether to raise an exception if the attempt to set\nmode fails. In this case, the newly created directory will be removed to prevent\nuse with unintended permissions.\n\nNOTE: if chmod error is skipped, the resulting `mode` key in mkdir response will\nindicate the current permissions on the directory and not the permissions specified\nin the mkdir payload",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_mkdir"
       }
      }
     }
    }
   }
  },
  "/filesystem/put": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_put"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Job to put contents to `path`.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_put"
       }
      }
     }
    }
   }
  },
  "/filesystem/set_dosmode": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_set_dosmode"
       }
      }
     }
    }
   }
  },
  "/filesystem/set_immutable": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set/Unset immutable flag at `path`.\n\n`set_flag` when set will set immutable flag and when unset will unset immutable flag at `path`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_set_immutable"
       }
      }
     }
    }
   }
  },
  "/filesystem/setacl": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set ACL of a given path. Takes the following parameters:\n`path` full path to directory or file.\n\n`dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires\nNFSv4 entries. POSIX1e requires POSIX1e entries.\n\n`uid` the desired UID of the file user. If set to None (the default), then user is not changed.\n\n`gid` the desired GID of the file group. If set to None (the default), then group is not changed.\n\n`recursive` apply the ACL recursively\n\n`traverse` traverse filestem boundaries (ZFS datasets)\n\n`strip` convert ACL to trivial. ACL is trivial if it can be expressed as a file mode without\nlosing any access rules.\n\n`canonicalize` reorder ACL entries so that they are in concanical form as described\nin the Microsoft documentation MS-DTYP 2.4.5 (ACL). This only applies to NFSv4 ACLs.\n\nFor case of NFSv4 ACLs  USER_OBJ, GROUP_OBJ, and EVERYONE with owner@, group@, everyone@ for\nconsistency with getfacl and setfacl. If one of aforementioned special tags is used, 'id' must\nbe set to None.\n\nAn inheriting empty everyone@ ACE is appended to non-trivial ACLs in order to enforce Windows\nexpectations regarding permissions inheritance. This entry is removed from NT ACL returned\nto SMB clients when 'ixnas' samba VFS module is enabled.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_setacl"
       }
      }
     }
    }
   }
  },
  "/filesystem/setperm": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set unix permissions on given `path`.\n\nIf `mode` is specified then the mode will be applied to the\npath and files and subdirectories depending on which `options` are\nselected. Mode should be formatted as string representation of octal\npermissions bits.\n\n`uid` the desired UID of the file user. If set to None (the default), then user is not changed.\n\n`gid` the desired GID of the file group. If set to None (the default), then group is not changed.\n\n`stripacl` setperm will fail if an extended ACL is present on `path`,\nunless `stripacl` is set to True.\n\n`recursive` remove ACLs recursively, but do not traverse dataset\nboundaries.\n\n`traverse` remove ACLs from child datasets.\n\nIf no `mode` is set, and `stripacl` is True, then non-trivial ACLs\nwill be converted to trivial ACLs. An ACL is trivial if it can be\nexpressed as a file mode without losing any access rules.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_setperm"
       }
      }
     }
    }
   }
  },
  "/filesystem/stat": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_stat"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return filesystem information for a given path.\n\n`realpath(str)`: absolute real path of the entry (if SYMLINK)\n\n`type(str)`: DIRECTORY | FILE | SYMLINK | OTHER\n\n`size(int)`: size of the entry\n\n`allocation_size(int)`: on-disk size of entry\n\n`mode(int)`: file mode/permission\n\n`uid(int)`: user id of file owner\n\n`gid(int)`: group id of file owner\n\n`atime(float)`: timestamp for when file was last accessed.\nNOTE: this timestamp may be changed from userspace.\n\n`mtime(float)`: timestamp for when file data was last modified\nNOTE: this timestamp may be changed from userspace.\n\n`ctime(float)`: timestamp for when file was last changed.\n\n`btime(float)`: timestamp for when file was initially created.\nNOTE: depending on platform this may be changed from userspace.\n\n`dev(int)`: device id of the device containing the file. In the\ncontext of the TrueNAS API, this is sufficient to uniquely identify\na given dataset.\n\n`inode(int)`: inode number of the file. This number uniquely identifies\nthe file on the given device, but once a file is deleted its inode number\nmay be reused.\n\n`nlink(int)`: number of hard lnks to the file.\n\n`acl(bool)`: extended ACL is present on file\n\n`is_mountpoint(bool)`: path is a mountpoint\n\n`is_ctldir(bool)`: path is within special .zfs directory\n\n`attributes(list)`: list of statx file attributes that apply to the\nfile. See statx(2) manpage for more details.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_stat"
       }
      }
     }
    }
   }
  },
  "/filesystem/statfs": {
   "post": {
    "tags": [
     "filesystem"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_statfs"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return stats from the filesystem of a given path.\n\nRaises:\n    CallError(ENOENT) - Path not found",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_statfs"
       }
      }
     }
    }
   }
  },
  "/filesystem/acltemplate": {
   "get": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new filesystem ACL template.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_acltemplate_create"
       }
      }
     }
    }
   }
  },
  "/filesystem/acltemplate/id/{id_}": {
   "delete": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": ""
   },
   "get": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "update filesystem ACL template with `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_acltemplate_update"
       }
      }
     }
    }
   }
  },
  "/filesystem/acltemplate/by_path": {
   "post": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_by_path"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve list of available ACL templates for a given `path`.\n\nSupports `query-filters` and `query-options`.\n`format-options` gives additional options to alter the results of\nthe template query:\n\n`canonicalize` - place ACL entries for NFSv4 ACLs in Microsoft canonical order.\n`ensure_builtins` - ensure all results contain entries for `builtin_users` and `builtin_administrators`\ngroups.\n`resolve_names` - convert ids in ACL entries into names.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_acltemplate_by_path"
       }
      }
     }
    }
   }
  },
  "/filesystem/acltemplate/get_instance": {
   "post": {
    "tags": [
     "filesystem.acltemplate"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_filesystem_acltemplate_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/filesystem_acltemplate_get_instance"
       }
      }
     }
    }
   }
  },
  "/ftp": {
   "get": {
    "tags": [
     "ftp"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ftp_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "ftp"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ftp_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update ftp service configuration.\n\n`clients` is an integer value which sets the maximum number of simultaneous clients allowed. It defaults to 32.\n\n`ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults\nto 0 which equals to unlimited.\n\n`timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving\nany data on either the control or data connection.\n\n`timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after\nauthentication, without issuing a command which results in creating an active or passive data connection\n(i.e. sending/receiving a file, or receiving a directory listing).\n\n`rootlogin` is a boolean value which when configured to true enables login as root. This is generally\ndiscouraged because of the security risks.\n\n`onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`.\n\n`banner` is a message displayed to local login users after they successfully authenticate. It is not displayed\nto anonymous login users.\n\n`filemask` sets the default permissions for newly created files which by default are 077.\n\n`dirmask` sets the default permissions for newly created directories which by default are 077.\n\n`resume` if set allows FTP clients to resume interrupted transfers.\n\n`fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it\nmakes the server vulnerable to FTP bounce attacks.\n\n`defaultroot` when set ensures that for local users, home directory access is only granted if the user\nis a member of group wheel.\n\n`ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd\nis not running on the client, this can result in timeouts.\n\n`masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a\nNAT device.\n\n`localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).\n\n`localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.\nDefault of zero indicates unlimited download bandwidth ( from the FTP server configuration ).\n\n`anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).\n\n`anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous\nuser. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).\n\n`tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a\ncertificate to be configured first with the certificate service and the id of certificate is passed on in\n`ssltls_certificate`.\n\n`tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP\nsession must occur over SSL/TLS.\n\n`tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a\nconnection.\n\n`options` is a string used to add proftpd(8) parameters not covered by ftp service.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ftp_update"
       }
      }
     }
    }
   }
  },
  "/group": {
   "get": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query groups with `query-filters` and `query-options`. As a performance optimization, only local groups\nwill be queried by default.\n\nExpanded information may be requested by specifying the extra option `\"extra\": {\"additional_information\": []}`.\n\nThe following `additional_information` options are supported:\n`SMB` - include Windows SID and NT Name for group. If this option is not specified, then these\n    keys will have `null` value.\n`DS` - include groups from Directory Service (LDAP or Active Directory) in results\n\n`\"extra\": {\"search_dscache\": true}` is a legacy method of querying for directory services groups.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new group.\n\nIf `gid` is not provided it is automatically filled with the next one available.\n\n`allow_duplicate_gid` allows distinct group names to share the same gid.\n\n`users` is a list of user ids (`id` attribute from `user.query`).\n\n`smb` specifies whether the group should be mapped into an NT group.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/group_create"
       }
      }
     }
    }
   }
  },
  "/group/id/{id_}": {
   "delete": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete group `id`.\n\nThe `delete_users` option deletes all users that have this group as their primary group.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/group_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Query groups with `query-filters` and `query-options`. As a performance optimization, only local groups\nwill be queried by default.\n\nExpanded information may be requested by specifying the extra option `\"extra\": {\"additional_information\": []}`.\n\nThe following `additional_information` options are supported:\n`SMB` - include Windows SID and NT Name for group. If this option is not specified, then these\n    keys will have `null` value.\n`DS` - include groups from Directory Service (LDAP or Active Directory) in results\n\n`\"extra\": {\"search_dscache\": true}` is a legacy method of querying for directory services groups.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update attributes of an existing group.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/group_update"
       }
      }
     }
    }
   }
  },
  "/group/get_group_obj": {
   "post": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_get_group_obj"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns dictionary containing information from struct grp for the group specified by either\nthe groupname or gid. Bypasses group cache.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/group_get_group_obj"
       }
      }
     }
    }
   }
  },
  "/group/get_instance": {
   "post": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/group_get_instance"
       }
      }
     }
    }
   }
  },
  "/group/get_next_gid": {
   "get": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_group_get_next_gid"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the next available/free gid."
   }
  },
  "/group/has_password_enabled_user": {
   "post": {
    "tags": [
     "group"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Checks whether at least one local user with a password is a member of any of the `group_ids`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/group_has_password_enabled_user"
       }
      }
     }
    }
   }
  },
  "/hardware/cpu/available_governors": {
   "get": {
    "tags": [
     "hardware.cpu"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_hardware_cpu_available_governors"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return available cpu governors"
   }
  },
  "/hardware/cpu/current_governor": {
   "get": {
    "tags": [
     "hardware.cpu"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_hardware_cpu_current_governor"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns currently set cpu governor"
   }
  },
  "/hardware/cpu/set_governor": {
   "post": {
    "tags": [
     "hardware.cpu"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set the cpu governor to `governor` on all cpus",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/hardware_cpu_set_governor"
       }
      }
     }
    }
   }
  },
  "/hardware/memory/error_info": {
   "get": {
    "tags": [
     "hardware.memory"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_hardware_memory_error_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   }
  },
  "/idmap": {
   "get": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_idmap_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_idmap_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new IDMAP domain. These domains must be unique. This table\nwill be automatically populated after joining an Active Directory domain\nif \"allow trusted domains\" is set to True in the AD service configuration.\nThere are three default system domains: DS_TYPE_ACTIVEDIRECTORY, DS_TYPE_LDAP, DS_TYPE_DEFAULT_DOMAIN.\nThe system domains correspond with the idmap settings under Active Directory, LDAP, and SMB\nrespectively.\n\n`name` the pre-windows 2000 domain name.\n\n`DNS_domain_name` DNS name of the domain.\n\n`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed.\n\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n\n`certificate_id` references the certificate ID of the SSL certificate to use for certificate-based\nauthentication to a remote LDAP server. This parameter is not supported for all idmap backends as some\nbackends will generate SID to ID mappings algorithmically without causing network traffic.\n\n`options` are additional parameters that are backend-dependent:\n\n`AD` idmap backend options:\n`unix_primary_group` If True, the primary group membership is fetched from the LDAP attributes (gidNumber).\nIf False, the primary group membership is calculated via the \"primaryGroupID\" LDAP attribute.\n\n`unix_nss_info` if True winbind will retrieve the login shell and home directory from the LDAP attributes.\nIf False or if the AD LDAP entry lacks the SFU attributes the smb4.conf parameters `template shell` and `template homedir` are used.\n\n`schema_mode` Defines the schema that idmap_ad should use when querying Active Directory regarding user and group information.\nThis can be either the RFC2307 schema support included in Windows 2003 R2 or the Service for Unix (SFU) schema.\nFor SFU 3.0 or 3.5 please choose \"SFU\", for SFU 2.0 please choose \"SFU20\". The behavior of primary group membership is\ncontrolled by the unix_primary_group option.\n\n`AUTORID` idmap backend options:\n`readonly` sets the module to read-only mode. No new ranges will be allocated and new mappings\nwill not be created in the idmap pool.\n\n`ignore_builtin` ignores mapping requests for the BUILTIN domain.\n\n`LDAP` idmap backend options:\n`ldap_base_dn` defines the directory base suffix to use for SID/uid/gid mapping entries.\n\n`ldap_user_dn` defines the user DN to be used for authentication.\n\n`ldap_url` specifies the LDAP server to use for SID/uid/gid map entries.\n\n`ssl` specifies whether to encrypt the LDAP transport for the idmap backend.\n\n`NSS` idmap backend options:\n`linked_service` specifies the auxiliary directory service ID provider.\n\n`RFC2307` idmap backend options:\n`domain` specifies the domain for which the idmap backend is being created. Numeric id, short-form\ndomain name, or long-form DNS domain name of the domain may be specified. Entry must be entered as\nit appears in `idmap.domain`.\n\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n\n`ldap_server` defines the type of LDAP server to use. This can either be an LDAP server provided\nby the Active Directory Domain (ad) or a stand-alone LDAP server.\n\n`bind_path_user` specfies the search base where user objects can be found in the LDAP server.\n\n`bind_path_group` specifies the search base where group objects can be found in the LDAP server.\n\n`user_cn` query cn attribute instead of uid attribute for the user name in LDAP.\n\n`realm` append @realm to cn for groups (and users if user_cn is set) in LDAP queries.\n\n`ldmap_domain` when using the LDAP server in the Active Directory server, this allows one to\nspecify the domain where to access the Active Directory server. This allows using trust relationships\nwhile keeping all RFC 2307 records in one place. This parameter is optional, the default is to access\nthe AD server in the current domain to query LDAP records.\n\n`ldap_url` when using a stand-alone LDAP server, this parameter specifies the LDAP URL for accessing the LDAP server.\n\n`ldap_user_dn` defines the user DN to be used for authentication.\n\n`ldap_user_dn_password` is the password to be used for LDAP authentication.\n\n`realm` defines the realm to use in the user and group names. This is only required when using cn_realm together with\n a stand-alone ldap server.\n\n`RID` backend options:\n`sssd_compat` generate idmap low range based on same algorithm that SSSD uses by default.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/idmap_create"
       }
      }
     }
    }
   }
  },
  "/idmap/id/{id_}": {
   "delete": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_idmap_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a domain by id. Deletion of default system domains is not permitted."
   },
   "get": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_idmap_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_idmap_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update a domain by id.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/idmap_update"
       }
      }
     }
    }
   }
  },
  "/idmap/backend_choices": {
   "get": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns array of valid idmap backend choices per directory service."
   }
  },
  "/idmap/backend_options": {
   "get": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "This returns full information about idmap backend options. Not all\n`options` are valid for every backend."
   }
  },
  "/idmap/clear_idmap_cache": {
   "get": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Stop samba, remove the winbindd_cache.tdb file, start samba, flush samba's cache.\nThis should be performed after finalizing idmap changes."
   }
  },
  "/idmap/get_instance": {
   "post": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_idmap_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/idmap_get_instance"
       }
      }
     }
    }
   }
  },
  "/idmap/options_choices": {
   "post": {
    "tags": [
     "idmap"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a list of supported keys for the specified idmap backend.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/idmap_options_choices"
       }
      }
     }
    }
   }
  },
  "/initshutdownscript": {
   "get": {
    "tags": [
     "initshutdownscript"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_initshutdownscript_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "initshutdownscript"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_initshutdownscript_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an initshutdown script task.\n\n`type` indicates if a command or script should be executed at `when`.\n\nThere are three choices for `when`:\n\n1) PREINIT - This is early in the boot process before all the services have started\n2) POSTINIT - This is late in the boot process when most of the services have started\n3) SHUTDOWN - This is on shutdown\n\n`timeout` is an integer value which indicates time in seconds which the system should wait for the execution\nof script/command. It should be noted that a hard limit for a timeout is configured by the base OS, so when\na script/command is set to execute on SHUTDOWN, the hard limit configured by the base OS is changed adding\nthe timeout specified by script/command so it can be ensured that it executes as desired and is not interrupted\nby the base OS's limit.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/initshutdownscript_create"
       }
      }
     }
    }
   }
  },
  "/initshutdownscript/id/{id_}": {
   "delete": {
    "tags": [
     "initshutdownscript"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_initshutdownscript_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete init/shutdown task of `id`."
   },
   "get": {
    "tags": [
     "initshutdownscript"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_initshutdownscript_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "initshutdownscript"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_initshutdownscript_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update initshutdown script task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/initshutdownscript_update"
       }
      }
     }
    }
   }
  },
  "/initshutdownscript/get_instance": {
   "post": {
    "tags": [
     "initshutdownscript"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_initshutdownscript_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/initshutdownscript_get_instance"
       }
      }
     }
    }
   }
  },
  "/interface": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query Interfaces with `query-filters` and `query-options`\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create virtual interfaces (Link Aggregation, VLAN)\n\nFor BRIDGE `type` the following attribute is required: bridge_members.\n\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\n\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_create"
       }
      }
     }
    }
   }
  },
  "/interface/id/{id_}": {
   "delete": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Delete Interface of `id`."
   },
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query Interfaces with `query-filters` and `query-options`\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Update Interface of `id`.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_update"
       }
      }
     }
    }
   }
  },
  "/interface/bridge_members_choices": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_bridge_members_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return available interface choices that can be added to a `br` (bridge) interface.\n\n`id` is name of existing bridge interface on the system that will have its member\n        interfaces included.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_bridge_members_choices"
       }
      }
     }
    }
   }
  },
  "/interface/cancel_rollback": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "If this method is called after interface changes have been committed and within the checkin timeout,\nthen the task that automatically rollsback any interface changes is cancelled and the in-memory snapshot\nof database tables for the various interface tables will NOT be cleared."
   }
  },
  "/interface/checkin": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "If this method is called after interface changes have been committed and within the checkin timeout,\nthen the task that automatically rollsback any interface changes is cancelled and the in-memory snapshot\nof database tables for the various interface tables will be cleared. The idea is that the end-user has\nverified the changes work as intended and need to be committed permanently."
   }
  },
  "/interface/checkin_waiting": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_checkin_waiting"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether or not we are waiting user to checkin the applied network changes\nbefore they are rolled back.\nValue is in number of seconds or null."
   }
  },
  "/interface/choices": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Choices of available network interfaces.\n\n`bridge_members` will include BRIDGE members.\n`lag_ports` will include LINK_AGGREGATION ports.\n`vlan_parent` will include VLAN parent interface.\n`exclude` is a list of interfaces prefix to remove.\n`include` is a list of interfaces that should not be removed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_choices"
       }
      }
     }
    }
   }
  },
  "/interface/commit": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Commit/apply pending interfaces changes.\n\n`rollback` as true (default) will rollback changes in case they fail to apply.\n`checkin_timeout` is the time in seconds it will wait for the checkin call to acknowledge\nthe interfaces changes happened as planned from the user. If checkin does not happen\nwithin this period of time the changes will get reverted.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_commit"
       }
      }
     }
    }
   }
  },
  "/interface/default_route_will_be_removed": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_default_route_will_be_removed"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "On a fresh install of SCALE, dhclient is started for every interface so IP\naddresses/routes could be installed via that program. However, when the\nend-user goes to configure the first interface we tear down all other interfaces\nconfigs AND delete the default route. We also remove the default route if the\nconfigured gateway doesn't match the one currently installed in kernel."
   }
  },
  "/interface/get_instance": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_get_instance"
       }
      }
     }
    }
   }
  },
  "/interface/has_pending_changes": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_has_pending_changes"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether there are pending interfaces changes to be applied or not."
   }
  },
  "/interface/ip_in_use": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_ip_in_use"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get all IPv4 / Ipv6 from all valid interfaces, excluding tap and epair.\n\n`loopback` will return loopback interface addresses.\n\n`any` will return wildcard addresses (0.0.0.0 and ::).\n\n`static` when enabled will ensure we only return static ip's configured.\n\nReturns a list of dicts - eg -\n\n[\n    {\n        \"type\": \"INET6\",\n        \"address\": \"fe80::5054:ff:fe16:4aac\",\n        \"netmask\": 64\n    },\n    {\n        \"type\": \"INET\",\n        \"address\": \"192.168.122.148\",\n        \"netmask\": 24,\n        \"broadcast\": \"192.168.122.255\"\n    },\n]",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_ip_in_use"
       }
      }
     }
    }
   }
  },
  "/interface/lacpdu_rate_choices": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_lacpdu_rate_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available lacpdu rate policies for the LACP lagg type interfaces."
   }
  },
  "/interface/lag_ports_choices": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_lag_ports_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return available interface choices that can be added to a `bond` (lag) interface.\n\n`id` is name of existing bond interface on the system that will have its member\n        interfaces included.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_lag_ports_choices"
       }
      }
     }
    }
   }
  },
  "/interface/rollback": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Rollback pending interfaces changes."
   }
  },
  "/interface/save_default_route": {
   "post": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "This method exists _solely_ to provide a \"warning\" and therefore\na path for remediation for when an end-user modifies an interface\nand we rip the default gateway out from underneath them without\nany type of warning.\n\nNOTE: This makes 2 assumptions\n1. interface.create/update/delete must have been called before\n    calling this method\n2. this method must be called before `interface.sync` is called\n\nThis method exists for the predominant scenario for new users...\n1. fresh install SCALE\n2. all interfaces start DHCPv4 (v6 is ignored for now)\n3. 1 of the interfaces receives an IP address\n4. along with the IP, the kernel receives a default route\n    (by design, of course)\n5. user goes to configure this interface as having a static\n    IP address\n6. as we go through and \"sync\" the changes, we remove the default\n    route because it exists in the kernel FIB but doesn't exist\n    in the database.\n7. IF the user is connecting via layer3, then they will lose all\n    access to the TrueNAS and never be able to finalize the changes\n    to the network because we ripped out the default route which\n    is how they were communicating to begin with.\n\nIn the above scenario, we're going to try and prevent this by doing\nthe following:\n1. fresh install SCALE\n2. all interfaces start DHCPv4\n3. default route is received\n4. user configures an interface\n5. When user pushes \"Test Changes\" (interface.sync), webUI will call\n    network.configuration.default_route_will_be_removed BEFORE interface.sync\n6. if network.configuration.default_route_will_be_removed returns True,\n    then webUI will open a new modal dialog that gives the end-user\n    ample warning/verbiage describing the situation. Furthermore, the\n    modal will allow the user to input a default gateway\n7. if user gives gateway, webUI will call this method providing the info\n    and we'll validate accordingly\n8. OR if user doesn't give gateway, they will need to \"confirm\" this is\n    desired\n9. the default gateway provided to us (if given by end-user) will be stored\n    in the same in-memory cache that we use for storing the interface changes\n    and will be rolledback accordingly in this plugin just like everything else\n\nThere are a few other scenarios where this is beneficial, but the one listed above\nis seen most often by end-users/support team.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_save_default_route"
       }
      }
     }
    }
   }
  },
  "/interface/services_restarted_on_sync": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_services_restarted_on_sync"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns which services will be set to listen on 0.0.0.0 (and, thus, restarted) on sync.\n\nExample result:\n[\n    // Samba service will be set ot listen on 0.0.0.0 and restarted because it was set up to listen on\n    // 192.168.0.1 which is being removed.\n    {\"type\": \"SYSTEM_SERVICE\", \"service\": \"cifs\", \"ips\": [\"192.168.0.1\"]},\n]"
   }
  },
  "/interface/vlan_parent_interface_choices": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_vlan_parent_interface_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return available interface choices for `vlan_parent_interface` attribute."
   }
  },
  "/interface/xmit_hash_policy_choices": {
   "get": {
    "tags": [
     "interface"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_xmit_hash_policy_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available transmit hash policies for the LACP or LOADBALANCE\nlagg type interfaces."
   }
  },
  "/interface/capabilities/get": {
   "post": {
    "tags": [
     "interface.capabilities"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_capabilities_get"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return enabled, disabled and supported capabilities (also known as features)\non a given interface.\n\n`name` String representing name of the interface",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_capabilities_get"
       }
      }
     }
    }
   }
  },
  "/interface/capabilities/set": {
   "post": {
    "tags": [
     "interface.capabilities"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_interface_capabilities_set"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Enable or Disable capabilties (also known as features) on a given interface.\n\n`name` String representing name of the interface\n`capabilities` List representing capabilities to be acted upon\n`action` String when set to 'ENABLE' will enable `capabilities` else if set\n            to `DISABLE` will disable `capabilities`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/interface_capabilities_set"
       }
      }
     }
    }
   }
  },
  "/ipmi/is_loaded": {
   "get": {
    "tags": [
     "ipmi"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_is_loaded"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a boolean value indicating if /dev/ipmi0 is loaded."
   }
  },
  "/ipmi/chassis/identify": {
   "post": {
    "tags": [
     "ipmi.chassis"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Toggle the chassis identify light.\n\n`verb`: str if 'ON' turn identify light on. if 'OFF' turn identify light off.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ipmi_chassis_identify"
       }
      }
     }
    }
   }
  },
  "/ipmi/chassis/info": {
   "get": {
    "tags": [
     "ipmi.chassis"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_chassis_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return looks like:\n{\n    \"system_power\": \"on\",\n    \"power_overload\": \"false\",\n    \"interlock\": \"inactive\",\n    \"power_fault\": \"false\",\n    \"power_control_fault\": \"false\",\n    \"power_restore_policy\": \"Always off\",\n    \"last_power_event\": \"unknown\",\n    \"chassis_intrusion\": \"inactive\",\n    \"front_panel_lockout\": \"inactive\",\n    \"drive_fault\": \"false\",\n    \"cooling/fan_fault\": \"false\",\n    \"chassis_identify_state\": \"off\"\n}"
   }
  },
  "/ipmi/lan": {
   "get": {
    "tags": [
     "ipmi.lan"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_lan_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Query available IPMI Channels with `query-filters` and `query-options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ipmi_lan_query"
       }
      }
     }
    }
   }
  },
  "/ipmi/lan/id/{id_}": {
   "get": {
    "tags": [
     "ipmi.lan"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_lan_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Query available IPMI Channels with `query-filters` and `query-options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ipmi_lan_query"
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "ipmi.lan"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_lan_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update IPMI configuration on channel number `id`.\n\n`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`password` is a password to be assigned to channel number `id`\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set.\n`vlan` is an integer representing the vlan tag number.\n`apply_remote` is a boolean. If True and this is an HA licensed system, will apply\n    the configuration to the remote controller.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ipmi_lan_update"
       }
      }
     }
    }
   }
  },
  "/ipmi/lan/channels": {
   "get": {
    "tags": [
     "ipmi.lan"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_lan_channels"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return a list of available IPMI channels."
   }
  },
  "/ipmi/lan/get_instance": {
   "post": {
    "tags": [
     "ipmi.lan"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_lan_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ipmi_lan_get_instance"
       }
      }
     }
    }
   }
  },
  "/ipmi/mc/info": {
   "get": {
    "tags": [
     "ipmi.mc"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_mc_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return looks like:\n{\n    'auxiliary_firmware_revision_information': '00000006h',\n    'bridge': 'unsupported',\n    'chassis_device': 'supported',\n    'device_available': 'yes (normal operation)',\n    'device_id': '32',\n    'device_revision': '1',\n    'device_sdrs': 'unsupported',\n    'firmware_revision': '6.71',\n    'fru_inventory_device': 'supported',\n    'ipmb_event_generator': 'supported',\n    'ipmb_event_receiver': 'supported',\n    'ipmi_version': '2.0',\n    'manufacturer_id': 'Super Micro Computer Inc. (10876)',\n    'product_id': '2327',\n    'sdr_repository_device': 'supported',\n    'sel_device': 'supported',\n    'sensor_device': 'supported'\n}"
   }
  },
  "/ipmi/sel/clear": {
   "get": {
    "tags": [
     "ipmi.sel"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   }
  },
  "/ipmi/sel/elist": {
   "get": {
    "tags": [
     "ipmi.sel"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_sel_elist"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query IPMI System Event Log (SEL) extended list\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/ipmi/sel/info": {
   "get": {
    "tags": [
     "ipmi.sel"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_sel_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Query General information about the IPMI System Event Log"
   }
  },
  "/ipmi/sensors/query": {
   "get": {
    "tags": [
     "ipmi.sensors"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ipmi_sensors_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/iscsi/auth": {
   "get": {
    "tags": [
     "iscsi.auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_auth_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_auth_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an iSCSI Authorized Access.\n\n`tag` should be unique among all configured iSCSI Authorized Accesses.\n\n`secret` and `peersecret` should have length between 12-16 letters inclusive.\n\n`peeruser` and `peersecret` are provided only when configuring mutual CHAP. `peersecret` should not be\nsimilar to `secret`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_auth_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/auth/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_auth_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete iSCSI Authorized Access of `id`."
   },
   "get": {
    "tags": [
     "iscsi.auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_auth_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_auth_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI Authorized Access of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_auth_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/auth/get_instance": {
   "post": {
    "tags": [
     "iscsi.auth"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_auth_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_auth_get_instance"
       }
      }
     }
    }
   }
  },
  "/iscsi/extent": {
   "get": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_extent_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_extent_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an iSCSI Extent.\n\nWhen `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.\n\nWith `type` being set to DISK, a valid ZFS volume is required.\n\n`insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable\ntarget. This allows xcopy operations otherwise blocked by access control.\n\n`xen` is a boolean value which is set to true if Xen is being used as the iSCSI initiator.\n\n`ro` when set to true prevents the initiator from writing to this LUN.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_extent_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/extent/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_extent_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete iSCSI Extent of `id`.\n\nIf `id` iSCSI Extent's `type` was configured to FILE, `remove` can be set to remove the configured file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_extent_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_extent_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_extent_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI Extent of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_extent_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/extent/disk_choices": {
   "get": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return a dict of available zvols that can be used\nwhen creating an extent."
   }
  },
  "/iscsi/extent/get_instance": {
   "post": {
    "tags": [
     "iscsi.extent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_extent_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_extent_get_instance"
       }
      }
     }
    }
   }
  },
  "/iscsi/global": {
   "get": {
    "tags": [
     "iscsi.global"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_global_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "iscsi.global"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_global_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`alua` is a no-op for FreeNAS.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_global_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/global/alua_enabled": {
   "get": {
    "tags": [
     "iscsi.global"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether iSCSI ALUA is enabled or not."
   }
  },
  "/iscsi/global/client_count": {
   "get": {
    "tags": [
     "iscsi.global"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return currently connected clients count."
   }
  },
  "/iscsi/global/sessions": {
   "get": {
    "tags": [
     "iscsi.global"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_global_sessions"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get a list of currently running iSCSI sessions. This includes initiator and target names\nand the unique connection IDs.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/iscsi/host": {
   "get": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_host_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_host_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates iSCSI host.\n\n`ip` indicates an IP address of the host.\n`description` is a human-readable name for the host.\n`iqns` is a list of initiator iSCSI Qualified Names.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/host/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_host_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI host `id`."
   },
   "get": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_host_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_host_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI host `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/host/get_initiators": {
   "post": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns initiator groups associated with host `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_get_initiators"
       }
      }
     }
    }
   }
  },
  "/iscsi/host/get_instance": {
   "post": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_host_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_get_instance"
       }
      }
     }
    }
   }
  },
  "/iscsi/host/get_targets": {
   "post": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns targets associated with host `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_get_targets"
       }
      }
     }
    }
   }
  },
  "/iscsi/host/set_initiators": {
   "post": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Associates initiator groups `ids` with host `id`.\nUse `force` if you want to allow adding first or removing last initiator from initiator groups.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_set_initiators"
       }
      }
     }
    }
   }
  },
  "/iscsi/host/set_targets": {
   "post": {
    "tags": [
     "iscsi.host"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Associates targets `ids` with host `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_host_set_targets"
       }
      }
     }
    }
   }
  },
  "/iscsi/initiator": {
   "get": {
    "tags": [
     "iscsi.initiator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_initiator_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.initiator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_initiator_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an iSCSI Initiator.\n\n`initiators` is a list of initiator hostnames which are authorized to access an iSCSI Target. To allow all\npossible initiators, `initiators` can be left empty.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_initiator_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/initiator/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.initiator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_initiator_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete iSCSI initiator of `id`."
   },
   "get": {
    "tags": [
     "iscsi.initiator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_initiator_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.initiator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_initiator_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI initiator of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_initiator_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/initiator/get_instance": {
   "post": {
    "tags": [
     "iscsi.initiator"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_initiator_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_initiator_get_instance"
       }
      }
     }
    }
   }
  },
  "/iscsi/portal": {
   "get": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_portal_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_portal_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new iSCSI Portal.\n\n`discovery_authgroup` is required for CHAP and CHAP_MUTUAL.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_portal_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/portal/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_portal_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete iSCSI Portal `id`."
   },
   "get": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_portal_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_portal_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI Portal `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_portal_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/portal/get_instance": {
   "post": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_portal_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_portal_get_instance"
       }
      }
     }
    }
   }
  },
  "/iscsi/portal/listen_ip_choices": {
   "get": {
    "tags": [
     "iscsi.portal"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns possible choices for `listen.ip` attribute of portal create and update."
   }
  },
  "/iscsi/target": {
   "get": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_target_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_target_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an iSCSI Target.\n\n`groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,\n`authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to\nnull.\n\n`auth_networks` is a list of IP/CIDR addresses which are allowed to use this initiator. If all networks are\nto be allowed, this field should be left empty.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_target_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/target/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_target_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete iSCSI Target of `id`.\n\nDeleting an iSCSI Target makes sure we delete all Associated Targets which use `id` iSCSI Target.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_target_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_target_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_target_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update iSCSI Target of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_target_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/target/get_instance": {
   "post": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_target_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_target_get_instance"
       }
      }
     }
    }
   }
  },
  "/iscsi/target/validate_name": {
   "post": {
    "tags": [
     "iscsi.target"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns validation error for iSCSI target name\n:param name: name to be validated\n:param existing_id: id of an existing iSCSI target that will receive this name (or `None` if a new target\n                    is being created)\n:return: error message (or `None` if there is no error)",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_target_validate_name"
       }
      }
     }
    }
   }
  },
  "/iscsi/targetextent": {
   "get": {
    "tags": [
     "iscsi.targetextent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_targetextent_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "iscsi.targetextent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_targetextent_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create an Associated Target.\n\n`lunid` will be automatically assigned if it is not provided based on the `target`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_targetextent_create"
       }
      }
     }
    }
   }
  },
  "/iscsi/targetextent/id/{id_}": {
   "delete": {
    "tags": [
     "iscsi.targetextent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_targetextent_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Associated Target of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_targetextent_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "iscsi.targetextent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_targetextent_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "iscsi.targetextent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_targetextent_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Associated Target of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_targetextent_update"
       }
      }
     }
    }
   }
  },
  "/iscsi/targetextent/get_instance": {
   "post": {
    "tags": [
     "iscsi.targetextent"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_iscsi_targetextent_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/iscsi_targetextent_get_instance"
       }
      }
     }
    }
   }
  },
  "/jbof": {
   "get": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new JBOF.\n\nThis will use the supplied Redfish credentials to configure the data plane on\nthe expansion shelf for direct connection to ROCE capable network cards on\nthe TrueNAS head unit.\n\n`description` Optional description of the JBOF.\n\n`mgmt_ip1` IP of 1st Redfish management interface.\n\n`mgmt_ip2` Optional IP of 2nd Redfish management interface.\n\n`mgmt_username` Redfish administrative username.\n\n`mgmt_password` Redfish administrative password.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/jbof_create"
       }
      }
     }
    }
   }
  },
  "/jbof/id/{id_}": {
   "delete": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a JBOF by ID.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/jbof_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update JBOF of `id`",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/jbof_update"
       }
      }
     }
    }
   }
  },
  "/jbof/get_instance": {
   "post": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/jbof_get_instance"
       }
      }
     }
    }
   }
  },
  "/jbof/licensed": {
   "get": {
    "tags": [
     "jbof"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_jbof_licensed"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return a count of the number of JBOF units licensed."
   }
  },
  "/kerberos": {
   "get": {
    "tags": [
     "kerberos"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "kerberos"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`appdefaults_aux` add parameters to \"appdefaults\" section of the krb5.conf file.\n\n`libdefaults_aux` add parameters to \"libdefaults\" section of the krb5.conf file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_update"
       }
      }
     }
    }
   }
  },
  "/kerberos/keytab": {
   "get": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a kerberos keytab. Uploaded keytab files will be merged with the system\nkeytab under /etc/krb5.keytab.\n\n`file` b64encoded kerberos keytab\n`name` name for kerberos keytab",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_keytab_create"
       }
      }
     }
    }
   }
  },
  "/kerberos/keytab/id/{id_}": {
   "delete": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete kerberos keytab by id, and force regeneration of\nsystem keytab."
   },
   "get": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update kerberos keytab by id.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_keytab_update"
       }
      }
     }
    }
   }
  },
  "/kerberos/keytab/get_instance": {
   "post": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_keytab_get_instance"
       }
      }
     }
    }
   }
  },
  "/kerberos/keytab/system_keytab_list": {
   "get": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_system_keytab_list"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns content of system keytab (/etc/krb5.keytab)."
   }
  },
  "/kerberos/keytab/upload_keytab": {
   "post": {
    "tags": [
     "kerberos.keytab"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_keytab_upload_keytab"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Upload a keytab file. This method expects the keytab file to be uploaded using\nthe /_upload/ endpoint.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_keytab_upload_keytab"
       }
      }
     }
    }
   }
  },
  "/kerberos/realm": {
   "get": {
    "tags": [
     "kerberos.realm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_realm_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "kerberos.realm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_realm_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new kerberos realm. This will be automatically populated during the\ndomain join process in an Active Directory environment. Kerberos realm names\nare case-sensitive, but convention is to only use upper-case.\n\nEntries for kdc, admin_server, and kpasswd_server are not required.\nIf they are unpopulated, then kerberos will use DNS srv records to\ndiscover the correct servers. The option to hard-code them is provided\ndue to AD site discovery. Kerberos has no concept of Active Directory\nsites. This means that middleware performs the site discovery and\nsets the kerberos configuration based on the AD site.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_realm_create"
       }
      }
     }
    }
   }
  },
  "/kerberos/realm/id/{id_}": {
   "delete": {
    "tags": [
     "kerberos.realm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_realm_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a kerberos realm by ID."
   },
   "get": {
    "tags": [
     "kerberos.realm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_realm_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "kerberos.realm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_realm_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update a kerberos realm by id. This will be automatically populated during the\ndomain join process in an Active Directory environment. Kerberos realm names\nare case-sensitive, but convention is to only use upper-case.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_realm_update"
       }
      }
     }
    }
   }
  },
  "/kerberos/realm/get_instance": {
   "post": {
    "tags": [
     "kerberos.realm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kerberos_realm_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kerberos_realm_get_instance"
       }
      }
     }
    }
   }
  },
  "/keychaincredential": {
   "get": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a Keychain Credential\n\nCreate a Keychain Credential of any type.\nEvery Keychain Credential has a `name` which is used to distinguish it from others.\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required.\n\n * `SSH_CREDENTIALS`\n   Which `attributes` are:\n   * `host`\n   * `port` (default 22)\n   * `username` (default root)\n   * `private_key` (Keychain Credential ID)\n   * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)\n   * `connect_timeout` (default 10)\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_create"
       }
      }
     }
    }
   }
  },
  "/keychaincredential/id/{id_}": {
   "delete": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Keychain Credential with specific `id`\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update a Keychain Credential with specific `id`\n\nPlease note that you can't change `type`\n\nAlso you must specify full `attributes` value\n\nSee the documentation for `create` method for information on payload contents\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_update"
       }
      }
     }
    }
   }
  },
  "/keychaincredential/generate_ssh_key_pair": {
   "get": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_generate_ssh_key_pair"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Generate a public/private key pair\n\nGenerate a public/private key pair (useful for `SSH_KEY_PAIR` type)\n\n"
   }
  },
  "/keychaincredential/get_instance": {
   "post": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_get_instance"
       }
      }
     }
    }
   }
  },
  "/keychaincredential/remote_ssh_host_key_scan": {
   "post": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_remote_ssh_host_key_scan"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Discover a remote host key\n\nDiscover a remote host key (useful for `SSH_CREDENTIALS`)\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_remote_ssh_host_key_scan"
       }
      }
     }
    }
   }
  },
  "/keychaincredential/remote_ssh_semiautomatic_setup": {
   "post": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_remote_ssh_semiautomatic_setup"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine\n\nPerform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other\n`SSH_CREDENTIALS` attributes such as `connect_timeout` can be specified as well.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_remote_ssh_semiautomatic_setup"
       }
      }
     }
    }
   }
  },
  "/keychaincredential/setup_ssh_connection": {
   "post": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_setup_ssh_connection"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates a SSH Connection performing the following steps:\n\n1) Generating SSH Key Pair if required\n2) Setting up SSH Credentials based on `setup_type`\n\nIn case (2) fails, it will be ensured that SSH Key Pair generated ( if applicable ) in the process is\nremoved.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_setup_ssh_connection"
       }
      }
     }
    }
   }
  },
  "/keychaincredential/used_by": {
   "post": {
    "tags": [
     "keychaincredential"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_keychaincredential_used_by"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns list of objects that use this credential.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/keychaincredential_used_by"
       }
      }
     }
    }
   }
  },
  "/kmip": {
   "get": {
    "tags": [
     "kmip"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kmip_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "kmip"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kmip_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update KMIP Server Configuration.\n\nSystem currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and\n`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.\n\n`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable.\n\n`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database.\n\n`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`.\n\n`ssl_version` can be specified to match the ssl configuration being used by KMIP server.\n\n`change_server` is a boolean field which allows users to migrate data between two KMIP servers. System\nwill first migrate keys from old KMIP server to local database and then migrate the keys from local database\nto new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass\nthis by enabling `force_clear`.\n\n`force_clear` is a boolean option which when enabled will in this case remove all\npending keys to be synced from database. It should be used with extreme caution as users may end up with\nnot having ZFS dataset or SED disks keys leaving them locked forever. It is disabled by default.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kmip_update"
       }
      }
     }
    }
   }
  },
  "/kmip/clear_sync_pending_keys": {
   "get": {
    "tags": [
     "kmip"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Clear all keys which are pending to be synced between KMIP server and TN database.\n\nFor ZFS/SED keys, we remove the UID from local database with which we are able to retrieve ZFS/SED keys.\nIt should be used with caution."
   }
  },
  "/kmip/kmip_sync_pending": {
   "get": {
    "tags": [
     "kmip"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kmip_kmip_sync_pending"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns true or false based on if there are keys which are to be synced from local database to remote KMIP\nserver or vice versa."
   }
  },
  "/kmip/ssl_version_choices": {
   "get": {
    "tags": [
     "kmip"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kmip_ssl_version_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve valid SSL version choices to be used when configuring kmip service."
   }
  },
  "/kmip/sync_keys": {
   "get": {
    "tags": [
     "kmip"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sync ZFS/SED keys between KMIP Server and TN database."
   }
  },
  "/kubernetes": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`pool` must be a valid ZFS pool configured in the system. Kubernetes service will initialise the pool by\ncreating datasets under `pool_name/ix-applications`.\n\n`configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support\ninto kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support.\n\n`servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called \"Klipper\".\nThis can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all.\n\n`cluster_cidr` is the CIDR to be used for default NAT network between workloads.\n\n`service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a\nlogically set of kubernetes pods.\n\n`cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range\nof `service_cidr`.\n\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change.\n\n`node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to\n0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic\nfor default NAT network.\n\nBy default kubernetes pods will be using default gateway of the system for outward traffic. This might\nnot be desirable for certain users who want to separate NAT traffic over a specific interface / route. System\nwill create a L3 network which will be routing the traffic towards default gateway for NAT.\n\nIf users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.\n\nIn case user is switching pools and the new desired pool has not been configured for kubernetes before, it\nis possible to replicate data from old pool to new pool with setting `migrate_applications` attribute. This\nwill replicate contents of old pool's ix-applications dataset to the new pool.\n\n`force` is a boolean which can be set to bypass validation which does not allow users to select a pool which\nis potentially corrupt by having a partially initialized ix-applications dataset. In that case the cluster\nwould be re-initialized and user would still be able to select such a pool.\n\n`metrics_server` is a boolean to enable or disable the integrated k3s Metrics Server. This can be set\nto enabled to enable the user to use of Kubernetes Horizontal/Vertical Pod Autoscalers.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kubernetes_update"
       }
      }
     }
    }
   }
  },
  "/kubernetes/backup_chart_releases": {
   "post": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_backup_chart_releases"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a backup of existing chart releases.\n\nThe backup will save helm configuration with history for each chart release and then take a\nsnapshot of `ix-applications` dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kubernetes_backup_chart_releases"
       }
      }
     }
    }
   }
  },
  "/kubernetes/bindip_choices": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_bindip_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns ip choices for Kubernetes service to use."
   }
  },
  "/kubernetes/delete_backup": {
   "post": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Delete `backup_name` chart releases backup.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kubernetes_delete_backup"
       }
      }
     }
    }
   }
  },
  "/kubernetes/events": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_events"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns events for kubernetes node."
   }
  },
  "/kubernetes/list_backups": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_list_backups"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List existing chart releases backups."
   }
  },
  "/kubernetes/node_ip": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_node_ip"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns IP used by kubernetes which kubernetes uses to allow incoming connections."
   }
  },
  "/kubernetes/restore_backup": {
   "post": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Restore `backup_name` chart releases backup.\n\nIt should be noted that a rollback will be initiated which will destroy any newer snapshots/clones\nof `ix-applications` dataset then the snapshot in question of `backup_name`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/kubernetes_restore_backup"
       }
      }
     }
    }
   }
  },
  "/kubernetes/route_interface_choices": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_route_interface_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns Interface choices for Kubernetes service to use for ipv4 connections."
   }
  },
  "/kubernetes/status": {
   "get": {
    "tags": [
     "kubernetes"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_kubernetes_status"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the status of the Kubernetes service."
   }
  },
  "/ldap": {
   "get": {
    "tags": [
     "ldap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ldap_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "ldap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ldap_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`hostname` list of ip addresses or hostnames of LDAP servers with\nwhich to communicate in order of preference. Failover only occurs\nif the current LDAP server is unresponsive.\n\n`basedn` specifies the default base DN to use when performing ldap\noperations. The base must be specified as a Distinguished Name in LDAP\nformat.\n\n`binddn` specifies the default bind DN to use when performing ldap\noperations. The bind DN must be specified as a Distinguished Name in\nLDAP format.\n\n`anonbind` use anonymous authentication.\n\n`ssl` establish SSL/TLS-protected connections to the LDAP server(s).\nGSSAPI signing is disabled on SSL/TLS-protected connections if\nkerberos authentication is used.\n\n`certificate` LDAPs client certificate to be used for certificate-\nbased authentication.\n\n`validate_certificates` specifies whether to perform checks on server\ncertificates in a TLS session. If enabled, TLS_REQCERT demand is set.\nThe server certificate is requested. If no certificate is provided or\nif a bad certificate is provided, the session is immediately terminated.\nIf disabled, TLS_REQCERT allow is set. The server certificate is\nrequested, but all errors are ignored.\n\n`kerberos_realm` in which the server is located. This parameter is\nonly required for SASL GSSAPI authentication to the remote LDAP server.\n\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication.\n\n`timeout` specifies  a  timeout  (in  seconds) after which calls to\nsynchronous LDAP APIs will abort if no response is received.\n\n`dns_timeout` specifies the timeout (in seconds) after which the\npoll(2)/select(2) following a connect(2) returns in case of no activity\nfor openldap. For nslcd this specifies the time limit (in seconds) to\nuse when connecting to the directory server. This directly impacts the\nlength of time that the LDAP service tries before failing over to\na secondary LDAP URI.\n\n`has_samba_schema` determines whether to configure samba to use the\nldapsam passdb backend to provide SMB access to LDAP users. This feature\nrequires the presence of Samba LDAP schema extensions on the remote\nLDAP server.\n\nThe following are advanced settings are configuration parameters for\nhandling LDAP servers that do not fully comply with RFC-2307. In most\nsituations all of the following parameters should be set to null,\nwhich indicates to backend to use default for the specified NSS info\nschema.\n\n`search_bases` - these parameters allow specifying a non-standard\nsearch base for users (`base_user`), groups (`base_group`), and\nnetgroups (`base_netgroup`). Must be a valid LDAP DN. No remote\nvalidation is performed that the search base exists or contains\nexpected objects.\n\n`attribute_maps` - allow specifying alternate non-RFC-compliant\nattribute names for `passwd`, `shadow`, `group`, and `netgroup` object\nclasses as specified in RFC 2307. Setting key to `null` has special\nmeaning that RFC defaults for the configure `nss_info_schema` will\nbe used.\n\n`server_type` is a readonly key indicating the server_type detected\ninternally by TrueNAS. Value will be set to one of the following:\n`ACTIVE_DIRECTORY`, `FREEIPA`, `GENERIC`, and `OPENLDAP`. Generic\nis default if TrueNAS is unable to determine LDAP server type via\ninformation in the LDAP root DSE.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ldap_update"
       }
      }
     }
    }
   }
  },
  "/ldap/get_state": {
   "get": {
    "tags": [
     "ldap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ldap_get_state"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Wrapper function for 'directoryservices.get_state'. Returns only the state of the\nLDAP service."
   }
  },
  "/ldap/schema_choices": {
   "get": {
    "tags": [
     "ldap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ldap_schema_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns list of available LDAP schema choices."
   }
  },
  "/ldap/ssl_choices": {
   "get": {
    "tags": [
     "ldap"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ldap_ssl_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns list of SSL choices."
   }
  },
  "/mail": {
   "get": {
    "tags": [
     "mail"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_mail_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "mail"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_mail_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update Mail Service Configuration.\n\n`fromemail` is used as a sending address which the mail server will use for sending emails.\n\n`outgoingserver` is the hostname or IP address of SMTP server used for sending an email.\n\n`security` is type of encryption desired.\n\n`smtp` is a boolean value which when set indicates that SMTP authentication has been enabled and `user`/`pass`\nare required attributes now.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/mail_update"
       }
      }
     }
    }
   }
  },
  "/mail/send": {
   "post": {
    "tags": [
     "mail"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_mail_send"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sends mail using configured mail settings.\n\n`text` will be formatted to HTML using Markdown and rendered using default E-Mail template.\nYou can put your own HTML using `html`. If `html` is null, no HTML MIME part will be added to E-Mail.\n\nIf `attachments` is true, a list compromised of the following dict is required\nvia HTTP upload:\n  - headers(list)\n    - name(str)\n    - value(str)\n    - params(dict)\n  - content (str)\n\n[\n {\n  \"headers\": [\n   {\n    \"name\": \"Content-Transfer-Encoding\",\n    \"value\": \"base64\"\n   },\n   {\n    \"name\": \"Content-Type\",\n    \"value\": \"application/octet-stream\",\n    \"params\": {\n     \"name\": \"test.txt\"\n    }\n   }\n  ],\n  \"content\": \"dGVzdAo=\"\n }\n]\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/mail_send"
       }
      }
     }
    }
   }
  },
  "/network/configuration": {
   "get": {
    "tags": [
     "network.configuration"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_network_configuration_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "network.configuration"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_network_configuration_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update Network Configuration Service configuration.\n\n`ipv4gateway` if set is used instead of the default gateway provided by DHCP.\n\n`nameserver1` is primary DNS server.\n\n`nameserver2` is secondary DNS server.\n\n`nameserver3` is tertiary DNS server.\n\n`httpproxy` attribute must be provided if a proxy is to be used for network operations.\n\n`service_announcement` determines the broadcast protocols that will be used to advertise the server.\n`netbios` enables the NetBIOS name server (NBNS), which starts concurrently with the SMB service. SMB clients\nwill only perform NBNS lookups if SMB1 is enabled. NBNS may be required for legacy SMB clients.\n`mdns` enables multicast DNS service announcements for enabled services. `wsd` enables Web Service\nDiscovery support.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/network_configuration_update"
       }
      }
     }
    }
   }
  },
  "/network/configuration/activity_choices": {
   "get": {
    "tags": [
     "network.configuration"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_network_configuration_activity_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns allowed/forbidden network activity choices."
   }
  },
  "/network/general/summary": {
   "get": {
    "tags": [
     "network.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_network_general_summary"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve general information for current Network.\n\nReturns a dictionary. For example:\n\n"
   }
  },
  "/nfs": {
   "get": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_nfs_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_nfs_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update NFS Service Configuration.\n\n`servers` - Represents number of servers to create.\n            By default, the number of nfsd is determined by the capabilities of the system.\n            To specify the number of nfsd, set a value between 1 and 256.\n            'Unset' the field to return to default.\n            This field will always report the number of nfsd to start.\n\n            INPUT: 1 .. 256 or 'unset'\n                where unset will enable the automatic determination\n                and 1 ..256 will set the number of nfsd\n            Default: Number of nfsd is automatically determined and will be no less\n                than 1 and no more than 32\n\n            The number of mountd will be 1/4 the number of reported nfsd.\n\n`allow_nonroot` - If 'enabled' it allows non-root mount requests to be served.\n\n                INPUT: enable/disable (True/False)\n                Default: disabled\n\n`bindip` -  Limit the server IP addresses available for NFS\n            By default, NFS will listen on all IP addresses that are active on the server.\n            To specify the server interface or a set of interfaces provide a list of IP's.\n            If the field is unset/empty, NFS listens on all available server addresses.\n\n            INPUT: list of IP addresses available configured on the server\n            Default: Use all available addresses (empty list)\n\n`protocols` - enable/disable NFSv3, NFSv4\n            Both can be enabled or NFSv4 or NFSv4 by themselves.  At least one must be enabled.\n            Note:  The 'showmount' command is available only if NFSv3 is enabled.\n\n            INPUT: Select NFSv3 or NFSv4 or NFSv3,NFSv4\n            Default: NFSv3,NFSv4\n\n`v4_v3owner` - when set means that system will use NFSv3 ownership model for NFSv4.\n            (Deprecated)\n\n`v4_krb` -  Force Kerberos authentication on NFS shares\n            If enabled, NFS shares will fail if the Kerberos ticket is unavilable\n\n            INPUT: enable/disable\n            Default: disabled\n\n`v4_domain` -   Specify a DNS domain (NFSv4 only)\n            If set, the value will be used to override the default DNS domain name for NFSv4.\n            Specifies the 'Domain' idmapd.conf setting.\n\n            INPUT: a string\n            Default: unset, i.e. an empty string.\n\n`mountd_port` - mountd port binding\n            The value set specifies the port mountd(8) binds to.\n\n            INPUT: unset or an integer between 1 .. 65535\n            Default: unset\n\n`rpcstatd_port` - statd port binding\n            The value set specifies the port rpc.statd(8) binds to.\n\n            INPUT: unset or an integer between 1 .. 65535\n            Default: unset\n\n`rpclockd_port` - lockd port binding\n            The value set specifies the port rpclockd_port(8) binds to.\n\n            INPUT: unset or an integer between 1 .. 65535\n            Default: unset\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/nfs_update"
       }
      }
     }
    }
   }
  },
  "/nfs/add_principal": {
   "post": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_nfs_add_principal"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Use user-provided admin credentials to kinit, add NFS SPN\nentries to the remote kerberos server, and then append the new entries\nto our system keytab.\n\nCurrently this is only supported in AD environments.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/nfs_add_principal"
       }
      }
     }
    }
   }
  },
  "/nfs/bindip_choices": {
   "get": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_nfs_bindip_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns ip choices for NFS service to use"
   }
  },
  "/nfs/client_count": {
   "get": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_nfs_client_count"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return currently connected clients count.\nCount may not be accurate if NFSv3 protocol is in use\ndue to potentially stale rmtab entries."
   }
  },
  "/nfs/get_nfs3_clients": {
   "get": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Read contents of rmtab. This information may not\nbe accurate due to stale entries. This is ultimately\na limitation of the NFSv3 protocol.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/nfs/get_nfs4_clients": {
   "get": {
    "tags": [
     "nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_nfs_get_nfs4_clients"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Read information about NFSv4 clients from /proc/fs/nfsd/clients\nSample output:\n[{\n    \"id\": \"4\",\n    \"info\": {\n        \"clientid\": 6273260596088110000,\n        \"address\": \"192.168.40.247:790\",\n        \"status\": \"confirmed\",\n        \"seconds from last renew\": 45,\n        \"name\": \"Linux NFSv4.2 debian12-hv\",\n        \"minor version\": 2,\n        \"Implementation domain\": \"kernel.org\",\n        \"Implementation name\": \"Linux 6.1.0-12-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.52-1 (2023-09-07) x86_64\",\n        \"Implementation time\": [0, 0],\n        \"callback state\": \"UP\",\n        \"callback address\": \"192.168.40.247:0\"\n    },\n    \"states\": [\n        {\n            \"94850248556250062041657638912\": {\n                \"type\": \"deleg\",\n                \"access\": \"r\",\n                \"superblock\": \"00:39:5\",\n                \"filename\": \"/debian12-hv\"\n            }\n        },\n        {\n            \"94850248556250062041741524992\": {\n                \"type\": \"open\",\n                \"access\": \"rw\",\n                \"deny\": \"--\",\n                \"superblock\": \"00:39:137\",\n                \"filename\": \"/.debian12-hv.swp\",\n                \"owner\": \"open id:\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u00fe\u00c0\u00b23\"\n            }\n        }\n    ]\n}]\n---- Description of the fields (all per NFS client) ----\n'clientid': Hash generated for this client connection\n'address':  The client IP and port. e.g. 10.20.30.40:768\n\n'status':   The current client status:\n    'confirmed' An active connection.\n                The status will convert to 'courtesy' in 90 seconds if not 'confirmed' by the client.\n    'courtesy'  A stalled connection from an inactive client.\n                The status will convert to 'expirable' in 24hr.\n    'expirable' Waiting to be cleaned up.\n\n'seconds from last renew':  The session timeout counter.  See 'status' field.\n                            Gets reset by confirmation update from the client\n\n'name': Supplied by the client.\n        Linux clients might offer something like 'Linux NFS4.2 clnt_name'.\n        FreeBSD clients might supply a UUID like name\n\n'minor version':    The NFS4.x minor version.  E.G. '2' for NFSv4.2\n\n'Implementation domain': NFSv4.1 info - e.g. 'kernel.org' or 'freebsd.org'.\n'Implementation name':   NFSv4.1 info - e.g. equivalent to 'uname -a' on the client\n'Implementation time':   NFSv4.1 info - Timestamp (time nfstime4) of client version (maybe unused?)\n\n'callback state':   Current callback 'service' status for this client: 'UP', 'DOWN', 'FAULT' or 'UNKNOWN'\n                    Linux clients usually indicate 'UP'\n                    FreeBSD clients may indicate 'DOWN' but are still functional\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/pool": {
   "get": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new ZFS Pool.\n\n`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\n\n`deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When\nVERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that\nthe blocks are identical. This should be used in special circumstances as it carries a significant overhead.\n\n`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption.\n\nIt should be noted that keys are stored by the system for automatic locking/unlocking\non import/export of encrypted datasets. If that is not desired, dataset should be created\nwith a passphrase as a key.\n\nExample of `topology`:\n\n    {\n        \"data\": [\n            {\"type\": \"RAIDZ1\", \"disks\": [\"da1\", \"da2\", \"da3\"]}\n        ],\n        \"cache\": [\n            {\"type\": \"STRIPE\", \"disks\": [\"da4\"]}\n        ],\n        \"log\": [\n            {\"type\": \"STRIPE\", \"disks\": [\"da5\"]}\n        ],\n        \"spares\": [\"da6\"]\n    }\n\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_create"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}": {
   "get": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update pool of `id`, adding the new topology.\n\nThe `type` of `data` must be the same of existing vdevs.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_update"
       }
      }
     }
    }
   }
  },
  "/pool/attach": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`target_vdev` is the GUID of the vdev where the disk needs to be attached. In case of STRIPED vdev, this\nis the STRIPED disk GUID which will be converted to mirror. If `target_vdev` is mirror, it will be converted\ninto a n-way mirror.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_attach"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/attachments": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_attachments"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Return a list of services dependent of this pool.\n\nResponsible for telling the user whether there is a related\nshare, asking for confirmation.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_attachments"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/detach": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_detach"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Detach a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_detach"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/expand": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Expand pool to fit all available disk space.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_expand"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/export": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Export pool of `id`.\n\n`cascade` will delete all attachments of the given pool (`pool.attachments`).\n`restart_services` will restart services that have open files on given pool.\n`destroy` will also PERMANENTLY destroy the pool/data.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_export"
       }
      }
     }
    }
   }
  },
  "/pool/filesystem_choices": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_filesystem_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns all available datasets, except the following:\n    1. system datasets\n    2. application(s) internal datasets\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_filesystem_choices"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/get_disks": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_get_disks"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Get all disks in use by pools.\nIf `id` is provided only the disks from the given pool `id` will be returned.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_get_disks"
       }
      }
     }
    }
   }
  },
  "/pool/get_instance": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_get_instance"
       }
      }
     }
    }
   }
  },
  "/pool/get_instance_by_name": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_get_instance_by_name"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns pool with name `name`. If `name` is not found, Validation error is raised.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_get_instance_by_name"
       }
      }
     }
    }
   }
  },
  "/pool/import_find": {
   "get": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_import_find"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a job id which can be used to retrieve a list of pools available for\nimport with the following details as a result of the job:\nname, guid, status, hostname."
   }
  },
  "/pool/import_pool": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_import_pool"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Import a pool found with `pool.import_find`.\n\nIf a `name` is specified the pool will be imported using that new name.\n\nIf `enable_attachments` is set to true, attachments that were disabled during pool export will be\nre-enabled.\n\nErrors:\n    ENOENT - Pool not found\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_import_pool"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/is_upgraded": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_is_upgraded"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Returns whether or not the pool of `id` is on the latest version and with all feature\nflags enabled.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_is_upgraded"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/offline": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_offline"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Offline a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_offline"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/online": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_online"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Online a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_online"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/processes": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_processes"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Returns a list of running processes using this pool.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_processes"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/remove": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Remove a disk from pool of id `id`.\n\n`label` is the vdev guid or device name.\n\nError codes:\n\n    EZFS_NOSPC(2032): out of space to remove a device\n    EZFS_NODEVICE(2017): no such device in pool\n    EZFS_NOREPLICAS(2019): no valid replicas\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_remove"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/replace": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_replace"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Replace a disk on a pool.\n\n`label` is the ZFS guid or a device name\n`disk` is the identifier of a disk\nIf `preserve_settings` is true, then settings (power management, S.M.A.R.T., etc.) of a disk being replaced\nwill be applied to a new disk.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_replace"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/scrub": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Performs a scrub action to pool of `id`.\n\n`action` can be either of \"START\", \"STOP\" or \"PAUSE\".\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_scrub"
       }
      }
     }
    }
   }
  },
  "/pool/id/{id_}/upgrade": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_upgrade"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Upgrade pool of `id` to latest version with all feature flags.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_upgrade"
       }
      }
     }
    }
   }
  },
  "/pool/validate_name": {
   "post": {
    "tags": [
     "pool"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Validates `pool_name` is a valid name for a pool.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_validate_name"
       }
      }
     }
    }
   }
  },
  "/pool/dataset": {
   "get": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query Pool Datasets with `query-filters` and `query-options`.\n\nWe provide two ways to retrieve datasets. The first is a flat structure (default), where\nall datasets in the system are returned as separate objects which contain all data\nthere is for their children. This retrieval type is slightly slower because of duplicates in each object.\nThe second type is hierarchical, where only top level datasets are returned in the list. They contain all the\nchildren in the `children` key. This retrieval type is slightly faster.\nThese options are controlled by the `query-options.extra.flat` attribute (default true).\n\nIn some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this\ncase `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will\nresult in children not being retrieved.\n\nIn case only some properties are desired to be retrieved for datasets, consumer should specify\n`query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties\nand otherwise a list can be specified like `[\"type\", \"used\", \"available\"]` to retrieve selective properties.\nIf no properties are desired, in that case an empty list should be sent.\n\n`query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.\n\n`query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.\nIf `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be\nretrieved recursively.\n\n`query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved\nfor snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however\nif `null` is specified all properties of the snapshot would be retrieved in this case.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates a dataset/zvol.\n\n`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.\n`sparse` and `volblocksize` are only used for type=VOLUME.\n\n`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption.\n\nIt should be noted that keys are stored by the system for automatic locking/unlocking\non import/export of encrypted datasets. If that is not desired, dataset should be created\nwith a passphrase as a key.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_create"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}": {
   "delete": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Delete dataset/zvol `id`.\n\n`recursive` will also delete/destroy all children datasets.\n`force` will force delete busy datasets.\n\nWhen root dataset is specified as `id` with `recursive`, it will destroy all the children of the\nroot dataset present leaving root dataset intact.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query Pool Datasets with `query-filters` and `query-options`.\n\nWe provide two ways to retrieve datasets. The first is a flat structure (default), where\nall datasets in the system are returned as separate objects which contain all data\nthere is for their children. This retrieval type is slightly slower because of duplicates in each object.\nThe second type is hierarchical, where only top level datasets are returned in the list. They contain all the\nchildren in the `children` key. This retrieval type is slightly faster.\nThese options are controlled by the `query-options.extra.flat` attribute (default true).\n\nIn some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this\ncase `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will\nresult in children not being retrieved.\n\nIn case only some properties are desired to be retrieved for datasets, consumer should specify\n`query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties\nand otherwise a list can be specified like `[\"type\", \"used\", \"available\"]` to retrieve selective properties.\nIf no properties are desired, in that case an empty list should be sent.\n\n`query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.\n\n`query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.\nIf `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be\nretrieved recursively.\n\n`query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved\nfor snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however\nif `null` is specified all properties of the snapshot would be retrieved in this case.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Updates a dataset/zvol `id`.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_update"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}/attachments": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_attachments"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Return a list of services dependent of this dataset.\n\nResponsible for telling the user whether there is a related\nshare, asking for confirmation.\n\nExample return value:\n[\n  {\n    \"type\": \"NFS Share\",\n    \"service\": \"nfs\",\n    \"attachments\": [\"/mnt/tank/work\"]\n  }\n]",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_attachments"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/change_key": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Change encryption properties for `id` encrypted dataset.\n\nChanging dataset encryption to use passphrase instead of a key is not allowed if:\n\n1) It has encrypted roots as children which are encrypted with a key\n2) If it is a root dataset where the system dataset is located\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_change_key"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/checksum_choices": {
   "get": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_checksum_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve checksums supported for ZFS dataset."
   }
  },
  "/pool/dataset/compression_choices": {
   "get": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_compression_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve compression algorithm supported by ZFS."
   }
  },
  "/pool/dataset/destroy_snapshots": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_destroy_snapshots"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Destroy specified snapshots of a given dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_destroy_snapshots"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/details": {
   "get": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_details"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve all dataset(s) details outlining any services/tasks which might be consuming the dataset(s)."
   }
  },
  "/pool/dataset/encryption_algorithm_choices": {
   "get": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_encryption_algorithm_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve encryption algorithms supported for ZFS dataset encryption."
   }
  },
  "/pool/dataset/encryption_summary": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_encryption_summary"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve summary of all encrypted roots under `id`.\n\nKeys/passphrase can be supplied to check if the keys are valid.\n\nIt should be noted that there are 2 keys which show if a recursive unlock operation is\ndone for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys\nnamely are \"unlock_successful\" and \"unlock_error\". The former is a boolean value showing if unlock\nwould succeed/fail. The latter is description why it failed if it failed.\n\nIn some cases it's possible that the provided key/passphrase is valid but the path where the dataset is\nsupposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation\nwould fail and `unlock_error` will reflect this error appropriately. This can be overridden by setting\n`encryption_root_summary_options.datasets.X.force` boolean flag or by setting\n`encryption_root_summary_options.force` flag. In practice, when the dataset is going to be unlocked\nand these flags have been provided to `pool.dataset.unlock`, system will rename the directory/file path\nwhere the dataset should be mounted resulting in successful unlock of the dataset.\n\nIf a dataset is already unlocked, it will show up as true for \"unlock_successful\" regardless of what\nkey user provided as the unlock keys in the output are to reflect what a real unlock operation would\nbehave. If user is interested in seeing if a provided key is valid or not, then the key to look out for\nin the output is \"valid_key\" which based on what system has in database or if a user provided one, validates\nthe key and sets a boolean value for the dataset.\n\nExample output:\n[\n    {\n        \"name\": \"vol\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": true,\n        \"locked\": true,\n        \"unlock_error\": null,\n        \"unlock_successful\": true\n    },\n    {\n        \"name\": \"vol/c1/d1\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\": \"Provided key is invalid\",\n        \"unlock_successful\": false\n    },\n    {\n        \"name\": \"vol/c\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\": \"Key not provided\",\n        \"unlock_successful\": false\n    },\n    {\n        \"name\": \"vol/c/d2\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\": \"Child cannot be unlocked when parent \"vol/c\" is locked and provided key is invalid\",\n        \"unlock_successful\": false\n    }\n]\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_encryption_summary"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/export_key": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_export_key"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file\nwhere the same file can be used to unlock the dataset, otherwise it will be returned as string.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file might be downloaded from this endpoint. Please specify `?download=0` to fetch a method call result instead.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_export_key"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/export_keys": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Export keys for `id` and its children which are stored in the system. The exported file is a JSON file\nwhich has a dictionary containing dataset names as keys and their keys as the value.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_export_keys"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/export_keys_for_replication": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Export keys for replication task `id` for source dataset(s) which are stored in the system. The exported file\nis a JSON file which has a dictionary containing dataset names as keys and their keys as the value.\n\nPlease refer to websocket documentation for downloading the file.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_export_keys_for_replication"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/get_instance": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_get_instance"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}/get_quota": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Return a list of the specified `quota_type` of quotas on the ZFS dataset `ds`.\nSupport `query-filters` and `query-options`. used_bytes may not instantly\nupdate as space is used.\n\nWhen quota_type is not DATASET, each quota entry has these fields:\n\n`id` - the uid or gid to which the quota applies.\n\n`name` - the user or group name to which the quota applies. Value is\nnull if the id in the quota cannot be resolved to a user or group. This\nindicates that the user or group does not exist on the server.\n\n`quota` - the quota size in bytes.  Absent if no quota is set.\n\n`used_bytes` - the amount of bytes the user has written to the dataset.\nA value of zero means unlimited.\n\n`obj_quota` - the number of objects that may be owned by `id`.\nA value of zero means unlimited.  Absent if no objquota is set.\n\n`obj_used` - the number of objects currently owned by `id`.\n\nNote: SMB client requests to set a quota granting no space will result\nin an on-disk quota of 1 KiB.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_get_quota"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/inherit_parent_encryption_properties": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Allows inheriting parent's encryption root discarding its current encryption settings. This\ncan only be done where `id` has an encrypted parent and `id` itself is an encryption root.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_inherit_parent_encryption_properties"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/lock": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_lock"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Locks `id` dataset. It will unmount the dataset and its children before locking.\n\nAfter the dataset has been unmounted, system will set immutable flag on the dataset's mountpoint where\nthe dataset was mounted before it was locked making sure that the path cannot be modified. Once the dataset\nis unlocked, it will not be affected by this change and consumers can continue consuming it.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_lock"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/mountpoint": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_mountpoint"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns mountpoint for specific mounted dataset. If it is not mounted and `raise` is `true` (default), an\nerror is raised. `null` is returned otherwise.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_mountpoint"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}/permission": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_permission"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Set permissions for a dataset `id`. Permissions may be specified as\neither a posix `mode` or an `acl`. This method is a wrapper around\n`filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`\n\n`filesystem.setperm` is called if `mode` is specified.\n`filesystem.setacl` is called if `acl` is specified or if the\noption `set_default_acl` is selected.\n`filesystem.chown` is called if neither `mode` nor `acl` is\nspecified.\n\nThe following `options` are supported:\n\n`set_default_acl` - apply a default ACL appropriate for specified\ndataset. Default ACL is `NFS4_RESTRICTED` or `POSIX_RESTRICTED`\nACL template builtin with additional entries builtin_users group\nand builtin_administrators group. See documentation for\n`filesystem.acltemplate` for more details.\n\n`stripacl` - this option must be set in order to apply a POSIX\nmode to a dataset that has a non-trivial ACL. The effect will\nbe to remove existing ACL and replace with specified mode.\n\n`recursive` - apply permissions recursively to dataset (all files\nand directories will be impacted.\n\n`traverse` - permit recursive job to traverse filesystem boundaries\n(child datasets).\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_permission"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}/processes": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_processes"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Return a list of processes using this dataset.\n\nExample return value:\n\n[\n  {\n    \"pid\": 2520,\n    \"name\": \"smbd\",\n    \"service\": \"cifs\"\n  },\n  {\n    \"pid\": 97778,\n    \"name\": \"minio\",\n    \"cmdline\": \"/usr/local/bin/minio -C /usr/local/etc/minio server --address=0.0.0.0:9000 --quiet /mnt/tank/wk\"\n  }\n]",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_processes"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}/promote": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Promote the cloned dataset `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_promote"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/recommended_zvol_blocksize": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_recommended_zvol_blocksize"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Helper method to get recommended size for a new zvol (dataset of type VOLUME).\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_recommended_zvol_blocksize"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/recordsize_choices": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_recordsize_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve recordsize choices for datasets.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_recordsize_choices"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/id/{id_}/set_quota": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "There are three over-arching types of quotas for ZFS datasets.\n1) dataset quotas and refquotas. If a DATASET quota type is specified in\nthis API call, then the API acts as a wrapper for `pool.dataset.update`.\n\n2) User and group quotas. These limit the amount of disk space consumed\nby files that are owned by the specified users or groups. If the respective\n\"object quota\" type is specfied, then the quota limits the number of objects\nthat may be owned by the specified user or group.\n\n3) Project quotas. These limit the amount of disk space consumed by files\nthat are owned by the specified project. Project quotas are not yet implemended.\n\nThis API allows users to set multiple quotas simultaneously by submitting a\nlist of quotas. The list may contain all supported quota types.\n\n`ds` the name of the target ZFS dataset.\n\n`quotas` specifies a list of `quota_entry` entries to apply to dataset.\n\n`quota_entry` entries have these required parameters:\n\n`quota_type`: specifies the type of quota to apply to the dataset. Possible\nvalues are USER, USEROBJ, GROUP, GROUPOBJ, and DATASET. USEROBJ and GROUPOBJ\nquotas limit the number of objects consumed by the specified user or group.\n\n`id`: the uid, gid, or name to which the quota applies. If quota_type is\n'DATASET', then `id` must be either `QUOTA` or `REFQUOTA`.\n\n`quota_value`: the quota size in bytes. Setting a value of `0` removes\nthe user or group quota.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_set_quota"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/snapshot_count": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_snapshot_count"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns snapshot count for specified `dataset`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_snapshot_count"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/unlock": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_unlock"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).\n\nIf `id` dataset is not encrypted an exception will be raised. There is one exception:\nwhen `id` is a root dataset and `unlock_options.recursive` is specified, encryption\nvalidation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`.\n\nThere are two ways to supply the key(s)/passphrase(s) for unlocking a dataset:\n\n1. Upload a json file which contains encrypted dataset keys (it will be read from the input pipe if\n`unlock_options.key_file` is `true`). The format is the one that is used for exporting encrypted dataset keys\n(`pool.export_keys`).\n\n2. Specify a key or a passphrase for each unlocked dataset using `unlock_options.datasets`.\n\nIf `unlock_options.datasets.{i}.recursive` is `true`, a key or a passphrase is applied to all the encrypted\nchildren of a dataset.\n\n`unlock_options.toggle_attachments` controls whether attachments  should be put in action after unlocking\ndataset(s). Toggling attachments can theoretically lead to service interruption when daemons configurations are\nreloaded (this should not happen,  and if this happens it should be considered a bug). As TrueNAS does not have\na state for resources that should be unlocked but are still locked, disabling this option will put the system\ninto an inconsistent state so it should really never be disabled.\n\nIn some cases it's possible that the provided key/passphrase is valid but the path where the dataset is\nsupposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation\nwould fail. This can be overridden by setting `unlock_options.datasets.X.force` boolean flag or by setting\n`unlock_options.force` flag. When any of these flags are set, system will rename the existing\ndirectory/file path where the dataset should be mounted resulting in successful unlock of the dataset.\n\nA file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_unlock"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/unlock_services_restart_choices": {
   "post": {
    "tags": [
     "pool.dataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_unlock_services_restart_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get a mapping of services identifiers and labels that can be restart on dataset unlock.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_unlock_services_restart_choices"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/userprop": {
   "get": {
    "tags": [
     "pool.dataset.userprop"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_userprop_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all user properties for ZFS datasets.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "pool.dataset.userprop"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_userprop_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a user property for a given `id` dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_userprop_create"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/userprop/id/{id_}": {
   "delete": {
    "tags": [
     "pool.dataset.userprop"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_userprop_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Delete user property `dataset_user_prop_delete.name` for `id` dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_userprop_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "pool.dataset.userprop"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_userprop_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all user properties for ZFS datasets.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "pool.dataset.userprop"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_userprop_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Update `dataset_user_prop_update.name` user property for `id` dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_userprop_update"
       }
      }
     }
    }
   }
  },
  "/pool/dataset/userprop/get_instance": {
   "post": {
    "tags": [
     "pool.dataset.userprop"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_dataset_userprop_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_dataset_userprop_get_instance"
       }
      }
     }
    }
   }
  },
  "/pool/resilver": {
   "get": {
    "tags": [
     "pool.resilver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_resilver_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "pool.resilver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_resilver_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Configure Pool Resilver Priority.\n\nIf `begin` time is greater than `end` time it means it will rollover the day, e.g.\nbegin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day\nuntil 05:00 of the next day.\n\n`weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_resilver_update"
       }
      }
     }
    }
   }
  },
  "/pool/scrub": {
   "get": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_scrub_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_scrub_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a scrub task for a pool.\n\n`threshold` refers to the minimum amount of time in days has to be passed before\na scrub can run again.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_scrub_create"
       }
      }
     }
    }
   }
  },
  "/pool/scrub/id/{id_}": {
   "delete": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_scrub_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete scrub task of `id`."
   },
   "get": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_scrub_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_scrub_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update scrub task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_scrub_update"
       }
      }
     }
    }
   }
  },
  "/pool/scrub/get_instance": {
   "post": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_scrub_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_scrub_get_instance"
       }
      }
     }
    }
   }
  },
  "/pool/scrub/run": {
   "post": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Initiate a scrub of a pool `name` if last scrub was performed more than `threshold` days before.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_scrub_run"
       }
      }
     }
    }
   }
  },
  "/pool/scrub/scrub": {
   "post": {
    "tags": [
     "pool.scrub"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Start/Stop/Pause a scrub on pool `name`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_scrub_scrub"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask": {
   "get": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a Periodic Snapshot Task\n\nCreate a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`.\nRecursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets\nor zvols from the snapshot.\nSnapshots will be automatically destroyed after a certain amount of time, specified by\n`lifetime_value` and `lifetime_unit`.\nIf multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot\nwill be kept until the last of these tasks reaches its expiry time.\nSnapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name\nand must contain `%Y`, `%m`, `%d`, `%H` and `%M`.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_create"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask/id/{id_}": {
   "delete": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a Periodic Snapshot Task with specific `id`\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update a Periodic Snapshot Task with specific `id`\n\nSee the documentation for `create` method for information on payload contents\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_update"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask/id/{id_}/delete_will_change_retention_for": {
   "post": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_delete_will_change_retention_for"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Returns a list of snapshots which will change the retention if periodic snapshot task `id` is deleted.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_delete_will_change_retention_for"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask/foreseen_count": {
   "post": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_foreseen_count"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a number of snapshots (per-dataset) being retained if a periodic snapshot task with specific parameters\nis created.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_foreseen_count"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask/get_instance": {
   "post": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_get_instance"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask/max_count": {
   "get": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_max_count"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a maximum amount of snapshots (per-dataset) the system can sustain."
   }
  },
  "/pool/snapshottask/max_total_count": {
   "get": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_max_total_count"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a maximum amount of snapshots (total) the system can sustain."
   }
  },
  "/pool/snapshottask/id/{id_}/run": {
   "post": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Execute a Periodic Snapshot Task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_run"
       }
      }
     }
    }
   }
  },
  "/pool/snapshottask/id/{id_}/update_will_change_retention_for": {
   "post": {
    "tags": [
     "pool.snapshottask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_pool_snapshottask_update_will_change_retention_for"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Returns a list of snapshots which will change the retention if periodic snapshot task `id` is updated\nwith `data`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/pool_snapshottask_update_will_change_retention_for"
       }
      }
     }
    }
   }
  },
  "/privilege": {
   "get": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates a privilege.\n\n`name` is a name for privilege (must be unique).\n\n`local_groups` is a list of local user account group GIDs that gain this privilege.\n\n`ds_groups` is list of Directory Service group GIDs that will gain this privilege.\n\n`allowlist` is a list of API endpoints allowed for this privilege.\n\n`web_shell` controls whether users with this privilege are allowed to log in to the Web UI.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/privilege_create"
       }
      }
     }
    }
   }
  },
  "/privilege/id/{id_}": {
   "delete": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete the privilege `id`."
   },
   "get": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update the privilege `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/privilege_update"
       }
      }
     }
    }
   }
  },
  "/privilege/get_instance": {
   "post": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/privilege_get_instance"
       }
      }
     }
    }
   }
  },
  "/privilege/roles": {
   "get": {
    "tags": [
     "privilege"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_privilege_roles"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get all available roles.\n\nEach entry contains the following keys:\n\n`name` - the internal name of the role\n\n`includes` - list of other roles that this role includes. When user is\ngranted this role, they will also receive permissions granted by all\nthe included roles.\n\n`builtin` - role exists for internal backend purposes for access\ncontrol.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/replication": {
   "get": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a Replication Task\n\nCreate a Replication Task that will push or pull ZFS snapshots to or from remote host..\n\n* `name` specifies a name for replication task\n* `direction` specifies whether task will `PUSH` or `PULL` snapshots\n* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.\n* `source_datasets` is a non-empty list of datasets to replicate snapshots from\n* `target_dataset` is a dataset to put snapshots into. It must exist on target side\n* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task\n* `properties` control whether we should send dataset properties along with snapshots\n* `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this\n  replication task. Only push replication tasks can be bound to periodic snapshot tasks.\n* `naming_schema` is a list of naming schemas for pull replication\n* `also_include_naming_schema` is a list of naming schemas for push replication\n* `name_regex` will replicate all snapshots which names match specified regular expression\n* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule\n* `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,\n  you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`\n* `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none\n  of the snapshots on target side matches source snapshots\n* `readonly` controls destination datasets readonly property:\n  * `SET` will set all destination datasets to readonly=on after finishing the replication\n  * `REQUIRE` will require all existing destination datasets to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior\n* `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails\n  for some reason\n* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots\n* `compression` compresses SSH stream. Available only for SSH transport\n* `speed_limit` limits speed of SSH stream. Available only for SSH transport\n* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`\n* `retries` specifies number of retries before considering replication failed\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_create"
       }
      }
     }
    }
   }
  },
  "/replication/id/{id_}": {
   "delete": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a Replication Task with specific `id`\n\n"
   },
   "get": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update a Replication Task with specific `id`\n\nSee the documentation for `create` method for information on payload contents\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_update"
       }
      }
     }
    }
   }
  },
  "/replication/count_eligible_manual_snapshots": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_count_eligible_manual_snapshots"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Count how many existing snapshots of `dataset` match `naming_schema`.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_count_eligible_manual_snapshots"
       }
      }
     }
    }
   }
  },
  "/replication/create_dataset": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates dataset on remote side\n\nAccepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_create_dataset"
       }
      }
     }
    }
   }
  },
  "/replication/get_instance": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_get_instance"
       }
      }
     }
    }
   }
  },
  "/replication/list_datasets": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_list_datasets"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List datasets on remote side\n\nAccepts `transport` and SSH credentials ID (for non-local transport)\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_list_datasets"
       }
      }
     }
    }
   }
  },
  "/replication/list_naming_schemas": {
   "get": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_list_naming_schemas"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List all naming schemas used in periodic snapshot and replication tasks."
   }
  },
  "/replication/id/{id_}/restore": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Create the opposite of replication task `id` (PULL if it was PUSH and vice versa).",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_restore"
       }
      }
     }
    }
   }
  },
  "/replication/id/{id_}/run": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Run Replication Task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_run"
       }
      }
     }
    }
   }
  },
  "/replication/run_onetime": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Run replication task without creating it.\n\nIf `only_from_scratch` is `true` then replication will fail if target dataset already exists.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_run_onetime"
       }
      }
     }
    }
   }
  },
  "/replication/target_unmatched_snapshots": {
   "post": {
    "tags": [
     "replication"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_target_unmatched_snapshots"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Check if target has any snapshots that do not exist on source. Returns these snapshots grouped by dataset.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_target_unmatched_snapshots"
       }
      }
     }
    }
   }
  },
  "/replication/config": {
   "get": {
    "tags": [
     "replication.config"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_config_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "replication.config"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_replication_config_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`max_parallel_replication_tasks` represents a maximum number of parallel replication tasks running.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/replication_config_update"
       }
      }
     }
    }
   }
  },
  "/reporting": {
   "get": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`tier1_days` can be set to specify for how many days we want to store reporting history which in netdata\nterms specifies the number of days netdata should be storing data in tier1 storage.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_update"
       }
      }
     }
    }
   }
  },
  "/reporting/get_data": {
   "post": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_get_data"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get reporting data for given graphs.\n\nList of possible graphs can be retrieved using `reporting.graphs` call.\n\nFor the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both.\n\n`aggregate` will return aggregate available data for each graph (e.g. min, max, mean).\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_get_data"
       }
      }
     }
    }
   }
  },
  "/reporting/graph": {
   "post": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_graph"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get reporting data for `name` graph.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_graph"
       }
      }
     }
    }
   }
  },
  "/reporting/graphs": {
   "get": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_graphs"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/reporting/netdata_get_data": {
   "post": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_netdata_get_data"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get reporting data for given graphs.\n\nList of possible graphs can be retrieved using `reporting.netdata_graphs` call.\n\nFor the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both.\n\n`aggregate` will return aggregate available data for each graph (e.g. min, max, mean).\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_netdata_get_data"
       }
      }
     }
    }
   }
  },
  "/reporting/netdata_graph": {
   "post": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_netdata_graph"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get reporting data for `name` graph.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_netdata_graph"
       }
      }
     }
    }
   }
  },
  "/reporting/netdata_graphs": {
   "get": {
    "tags": [
     "reporting"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_netdata_graphs"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get reporting netdata graphs.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/reporting/exporters": {
   "get": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a specific reporting exporter configuration containing required details for exporting reporting metrics.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_exporters_create"
       }
      }
     }
    }
   }
  },
  "/reporting/exporters/id/{id_}": {
   "delete": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Reporting Exporter of `id`."
   },
   "get": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Reporting Exporter of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_exporters_update"
       }
      }
     }
    }
   }
  },
  "/reporting/exporters/exporter_schemas": {
   "get": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_exporter_schemas"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the schemas for all the reporting export types we support with their respective attributes\nrequired for successfully exporting reporting metrics to them."
   }
  },
  "/reporting/exporters/get_instance": {
   "post": {
    "tags": [
     "reporting.exporters"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_reporting_exporters_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/reporting_exporters_get_instance"
       }
      }
     }
    }
   }
  },
  "/route/ipv4gw_reachable": {
   "post": {
    "tags": [
     "route"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_route_ipv4gw_reachable"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the IPv4 gateway and verify if it is reachable by any interface.\n\nReturns:\n    bool: True if the gateway is reachable or otherwise False.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/route_ipv4gw_reachable"
       }
      }
     }
    }
   }
  },
  "/route/system_routes": {
   "get": {
    "tags": [
     "route"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_route_system_routes"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get current/applied network routes.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/rsynctask": {
   "get": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_rsynctask_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_rsynctask_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a Rsync Task.\n\nSee the comment in Rsyncmod about `path` length limits.\n\n`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n\n`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n\nIn SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.\n`remotehost` and `remoteport` are not used in this case.\n\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.\n\n`remotepath` specifies the path on the remote system.\n\n`validate_rpath` is a boolean which when sets validates the existence of the remote path.\n\n`ssh_keyscan` will automatically add remote host key to user's known_hosts file.\n\n`direction` specifies if data should be PULLED or PUSHED from the remote system.\n\n`compress` when set reduces the size of the data which is to be transmitted.\n\n`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files.\n\n`delete` when set deletes files in the destination directory which do not exist in the source directory.\n\n`preserveperm` when set preserves original file permissions.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/rsynctask_create"
       }
      }
     }
    }
   }
  },
  "/rsynctask/id/{id_}": {
   "delete": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_rsynctask_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Rsync Task of `id`."
   },
   "get": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_rsynctask_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_rsynctask_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Rsync Task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/rsynctask_update"
       }
      }
     }
    }
   }
  },
  "/rsynctask/get_instance": {
   "post": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_rsynctask_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/rsynctask_get_instance"
       }
      }
     }
    }
   }
  },
  "/rsynctask/id/{id_}/run": {
   "post": {
    "tags": [
     "rsynctask"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Job to run rsync task of `id`.\n\nOutput is saved to job log excerpt (not syslog).",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/rsynctask_run"
       }
      }
     }
    }
   }
  },
  "/service": {
   "get": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all system services with `query-filters` and `query-options`.\n\nSupports the following extra options:\n`include_state` - performance optimization to avoid getting service state.\ndefaults to True.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/service/id/{id_}": {
   "get": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Query all system services with `query-filters` and `query-options`.\n\nSupports the following extra options:\n`include_state` - performance optimization to avoid getting service state.\ndefaults to True.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update service entry of `id_or_name`.\n\nCurrently, it only accepts `enable` option which means whether the service should start on boot.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_update"
       }
      }
     }
    }
   }
  },
  "/service/get_instance": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_get_instance"
       }
      }
     }
    }
   }
  },
  "/service/reload": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_reload"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Reload the service specified by `service`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_reload"
       }
      }
     }
    }
   }
  },
  "/service/restart": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_restart"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Restart the service specified by `service`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_restart"
       }
      }
     }
    }
   }
  },
  "/service/start": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_start"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Start the service specified by `service`.\n\nIf `silent` is `true` then in case of service startup failure, `false` will be returned. If `silent` is `false`\nthen in case of service startup failure, an exception will be raised.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_start"
       }
      }
     }
    }
   }
  },
  "/service/started": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_started"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Test if service specified by `service` has been started.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_started"
       }
      }
     }
    }
   }
  },
  "/service/started_or_enabled": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_started_or_enabled"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Test if service specified by `service` is started or enabled to start automatically.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_started_or_enabled"
       }
      }
     }
    }
   }
  },
  "/service/stop": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_stop"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Stop the service specified by `service`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_stop"
       }
      }
     }
    }
   }
  },
  "/service/terminate_process": {
   "post": {
    "tags": [
     "service"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_service_terminate_process"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Terminate process by `pid`.\n\nFirst send `TERM` signal, then, if was not terminated in `timeout` seconds, send `KILL` signal.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/service_terminate_process"
       }
      }
     }
    }
   }
  },
  "/sharing/nfs": {
   "get": {
    "tags": [
     "sharing.nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_nfs_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "sharing.nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_nfs_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a NFS Share.\n\n`path` local path to be exported.\n\n`aliases` IGNORED, for now.\n\n`networks` is a list of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. If empty, all networks are allowed.\n\n`hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are\nallowed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_nfs_create"
       }
      }
     }
    }
   }
  },
  "/sharing/nfs/id/{id_}": {
   "delete": {
    "tags": [
     "sharing.nfs"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete NFS Share of `id`."
   },
   "get": {
    "tags": [
     "sharing.nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_nfs_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "sharing.nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_nfs_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update NFS Share of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_nfs_update"
       }
      }
     }
    }
   }
  },
  "/sharing/nfs/get_instance": {
   "post": {
    "tags": [
     "sharing.nfs"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_nfs_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_nfs_get_instance"
       }
      }
     }
    }
   }
  },
  "/sharing/smb": {
   "get": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a SMB Share.\n\n`purpose` applies common configuration presets depending on intended purpose.\n\n`path` path to export over the SMB protocol.\n\n`timemachine` when set, enables Time Machine backups for this share.\n\n`ro` when enabled, prohibits write access to the share.\n\n`guestok` when enabled, allows access to this share without a password.\n\n`hostsallow` is a list of hostnames / IP addresses which have access to this share.\n\n`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`.\n\n`acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.\n\n`streams` enables support for storing alternate datastreams as filesystem extended attributes.\n\n`fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\nZFS snapshots through RPC.\n\n`shadowcopy` enables support for the volume shadow copy service.\n\n`audit` object contains configuration parameters related to SMB share auditing. It contains the\nfollowing keys: `enable`, `watch_list` and `ignore_list`. Enable is boolean and controls whether\naudit messages will be generated for the share. `watch_list` is a list of groups for which to\ngenerate audit messages (defaults to all groups). `ignore_list` is a list of groups to ignore\nwhen auditing. If conflict arises between watch_list and ignore_list (based on user group\nmembershipt), then watch_list will take precedence and ops will be audited.\nNOTE: auditing may not be enabled if SMB1 support is enabled for the server.\n\n`auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_smb_create"
       }
      }
     }
    }
   }
  },
  "/sharing/smb/id/{id_}": {
   "delete": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete SMB Share of `id`. This will forcibly disconnect SMB clients\nthat are accessing the share."
   },
   "get": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update SMB Share of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_smb_update"
       }
      }
     }
    }
   }
  },
  "/sharing/smb/get_instance": {
   "post": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_smb_get_instance"
       }
      }
     }
    }
   }
  },
  "/sharing/smb/getacl": {
   "post": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_getacl"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_smb_getacl"
       }
      }
     }
    }
   }
  },
  "/sharing/smb/presets": {
   "get": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve pre-defined configuration sets for specific use-cases. These parameter\ncombinations are often non-obvious, but beneficial in these scenarios."
   }
  },
  "/sharing/smb/setacl": {
   "post": {
    "tags": [
     "sharing.smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_sharing_smb_setacl"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set an ACL on `share_name`. This only impacts access through the SMB protocol.\nEither ae_who_sid, ae_who_id must, ae_who_str be specified for each ACL entry in the\nshare_acl. If multiple are specified, preference is in the following order: SID,\nunix id, name.\n\n`share_name` the name of the share\n\n`share_acl` a list of ACL entries (dictionaries) with the following keys:\n\n`ae_who_sid` who the ACL entry applies to expressed as a Windows SID\n\n`ae_who_id` Unix ID information for user or group to which the ACL entry applies.\n\n`ae_perm` string representation of the permissions granted to the user or group.\nFULL - grants read, write, execute, delete, write acl, and change owner.\nCHANGE - grants read, write, execute, and delete.\nREAD - grants read and execute.\n\n`ae_type` can be ALLOWED or DENIED.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sharing_smb_setacl"
       }
      }
     }
    }
   }
  },
  "/smart": {
   "get": {
    "tags": [
     "smart"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "smart"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update SMART Service Configuration.\n\n`interval` is an integer value in minutes which defines how often smartd activates to check if any tests\nare configured to run.\n\n`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured if\nthe disks temperature crosses the assigned threshold for each respective attribute. They default to 0 which\nindicates they are disabled.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_update"
       }
      }
     }
    }
   }
  },
  "/smart/test": {
   "get": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a SMART Test Task.\n\n`disks` is a list of valid disks which should be monitored in this task.\n\n`type` is specified to represent the type of SMART test to be executed.\n\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_test_create"
       }
      }
     }
    }
   }
  },
  "/smart/test/id/{id_}": {
   "delete": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete SMART Test Task of `id`."
   },
   "get": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update SMART Test Task of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_test_update"
       }
      }
     }
    }
   }
  },
  "/smart/test/disk_choices": {
   "post": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns disk choices for S.M.A.R.T. test.\n\n`full_disk` will return full disk objects instead of just names.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_test_disk_choices"
       }
      }
     }
    }
   }
  },
  "/smart/test/get_instance": {
   "post": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_test_get_instance"
       }
      }
     }
    }
   }
  },
  "/smart/test/manual_test": {
   "post": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_manual_test"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Run manual SMART tests for `disks`.\n\n`type` indicates what type of SMART test will be ran and must be specified.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_test_manual_test"
       }
      }
     }
    }
   }
  },
  "/smart/test/query_for_disk": {
   "post": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Query S.M.A.R.T. tests for the specified disk.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smart_test_query_for_disk"
       }
      }
     }
    }
   }
  },
  "/smart/test/results": {
   "get": {
    "tags": [
     "smart.test"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smart_test_results"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Get disk(s) S.M.A.R.T. test(s) results.\n\n`options.extra.tests_filter` is an optional filter for tests results.\n\n\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   }
  },
  "/smb": {
   "get": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smb_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_smb_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update SMB Service Configuration.\n\n`netbiosname` defaults to the original hostname of the system.\n\n`netbiosalias` a list of netbios aliases. If Server is joined to an AD domain, additional Kerberos\nService Principal Names will be generated for these aliases.\n\n`workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be\nautomatically set to the correct value during the process of joining an AD domain.\nNOTE: `workgroup` and `netbiosname` should have different values.\n\n`enable_smb1` allows legacy SMB clients to connect to the server when enabled.\n\n`aapl_extensions` enables support for SMB2 protocol extensions for MacOS clients. This is not a\nrequirement for MacOS support, but is currently a requirement for time machine support.\n\n`localmaster` when set, determines if the system participates in a browser election.\n\n`guest` attribute is specified to select the account to be used for guest access. It defaults to \"nobody\".\n\nThe group specified as the SMB `admin_group` will be automatically added as a foreign group member\nof S-1-5-32-544 (builtin\\admins). This will afford the group all privileges granted to a local admin.\nAny SMB group may be selected (including AD groups).\n\n`ntlmv1_auth` enables a legacy and insecure authentication method, which may be required for legacy or\npoorly-implemented SMB clients.\n\n`smb_options` smb.conf parameters that are not covered by the above supported configuration options may be\nadded as an smb_option. Not all options are tested or supported, and behavior of smb_options may change\nbetween releases. Stability of smb.conf options is not guaranteed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smb_update"
       }
      }
     }
    }
   }
  },
  "/smb/bindip_choices": {
   "get": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List of valid choices for IP addresses to which to bind the SMB service.\nAddresses assigned by DHCP are excluded from the results."
   }
  },
  "/smb/client_count": {
   "get": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return currently connected clients count."
   }
  },
  "/smb/domain_choices": {
   "get": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "List of domains visible to winbindd. Returns empty list if winbindd is\nstopped."
   }
  },
  "/smb/get_remote_acl": {
   "post": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieves an ACL from a remote SMB server.\n\n`server` IP Address or hostname of the remote server\n\n`share` Share name\n\n`path` path on the remote SMB server. Use \"\" to separate path components\n\n`username` username to use for authentication\n\n`password` password to use for authentication\n\n`use_kerberos` use credentials to get a kerberos ticket for authentication.\nAD only.\n\n`output_format` format for resulting ACL data. Choices are either 'SMB',\nwhich will present the information as a Windows SD or 'LOCAL', which formats\nthe ACL information according local filesystem of the TrueNAS server.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smb_get_remote_acl"
       }
      }
     }
    }
   }
  },
  "/smb/status": {
   "post": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns SMB server status (sessions, open files, locks, notifications).\n\n`info_level` type of information requests. Defaults to ALL.\n\n`status_options` additional options to filter query results. Supported\nvalues are as follows: `verbose` gives more verbose status output\n`fast` causes smbstatus to not check if the status data is valid by\nchecking if the processes that the status data refer to all still\nexist. This speeds up execution on busy systems and clusters but\nmight display stale data of processes that died without cleaning up\nproperly. `restrict_user` specifies the limits results to the specified\nuser.\n\nThis API endpoint also supports a legacy `info_level` AUTH_LOG that\nprovides AUTHENTICATION events from the SMB audit log. Support for\nthis information level will be removed in a future version.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/smb_status"
       }
      }
     }
    }
   }
  },
  "/smb/unixcharset_choices": {
   "get": {
    "tags": [
     "smb"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   }
  },
  "/snmp": {
   "get": {
    "tags": [
     "snmp"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_snmp_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "snmp"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_snmp_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update SNMP Service Configuration.\n\n`v3` when set enables SNMP version 3.\n\n`v3_username`, `v3_authtype`, `v3_password`, `v3_privproto` and `v3_privpassphrase` are only used when `v3`\nis enabled.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/snmp_update"
       }
      }
     }
    }
   }
  },
  "/ssh": {
   "get": {
    "tags": [
     "ssh"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ssh_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "ssh"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ssh_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update settings of SSH daemon service.\n\nIf `bindiface` is empty it will listen for all available addresses.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ssh_update"
       }
      }
     }
    }
   }
  },
  "/ssh/bindiface_choices": {
   "get": {
    "tags": [
     "ssh"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ssh_bindiface_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for the bindiface attribute of SSH service."
   }
  },
  "/staticroute": {
   "get": {
    "tags": [
     "staticroute"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_staticroute_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "staticroute"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_staticroute_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a Static Route.\n\nAddress families of `gateway` and `destination` should match when creating a static route.\n\n`description` is an optional attribute for any notes regarding the static route.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/staticroute_create"
       }
      }
     }
    }
   }
  },
  "/staticroute/id/{id_}": {
   "delete": {
    "tags": [
     "staticroute"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_staticroute_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Static Route of `id`."
   },
   "get": {
    "tags": [
     "staticroute"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_staticroute_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "staticroute"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_staticroute_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Static Route of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/staticroute_update"
       }
      }
     }
    }
   }
  },
  "/staticroute/get_instance": {
   "post": {
    "tags": [
     "staticroute"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_staticroute_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/staticroute_get_instance"
       }
      }
     }
    }
   }
  },
  "/support": {
   "get": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update Proactive Support settings.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/support_update"
       }
      }
     }
    }
   }
  },
  "/support/attach_ticket": {
   "post": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Method to attach a file to a existing ticket.\n\nA file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/support_attach_ticket"
       }
      }
     }
    }
   }
  },
  "/support/attach_ticket_max_size": {
   "get": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_attach_ticket_max_size"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns maximum uploaded file size for `support.attach_ticket`"
   }
  },
  "/support/fetch_categories": {
   "post": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_fetch_categories"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Fetch issue categories using access token `token`.\nReturns a dict with the category name as a key and id as value.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/support_fetch_categories"
       }
      }
     }
    }
   }
  },
  "/support/fields": {
   "get": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_fields"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns list of pairs of field names and field titles for Proactive Support."
   }
  },
  "/support/is_available": {
   "get": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_is_available"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether Proactive Support is available for this product type and current license."
   }
  },
  "/support/is_available_and_enabled": {
   "get": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_is_available_and_enabled"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether Proactive Support is available and enabled."
   }
  },
  "/support/new_ticket": {
   "post": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_new_ticket"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Creates a new ticket for support.\nThis is done using the support proxy API.\nFor TrueNAS SCALE it will be created on JIRA and for TrueNAS SCALE Enterprise on Salesforce.\n\nFor SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required.\nFor SCALE Enterprise `token` and `type` attributes are not required.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/support_new_ticket"
       }
      }
     }
    }
   }
  },
  "/support/similar_issues": {
   "post": {
    "tags": [
     "support"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_support_similar_issues"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/support_similar_issues"
       }
      }
     }
    }
   }
  },
  "/system/boot_id": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_boot_id"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns an unique boot identifier.\n\nIt is supposed to be unique every system boot."
   }
  },
  "/system/debug": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Download a debug file.\n\nA file will be downloaded from this endpoint."
   }
  },
  "/system/environment": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_environment"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return environment in which product is running. Possible values:\n- DEFAULT\n- EC2"
   }
  },
  "/system/feature_enabled": {
   "post": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_feature_enabled"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether the `feature` is enabled or not",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_feature_enabled"
       }
      }
     }
    }
   }
  },
  "/system/host_id": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_host_id"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve a hex string that is generated based\non the contents of the `/etc/hostid` file. This\nis a permanent value that persists across\nreboots/upgrades and can be used as a unique\nidentifier for the machine."
   }
  },
  "/system/hostname": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_hostname"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   }
  },
  "/system/info": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns basic system information."
   }
  },
  "/system/is_freenas": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_is_freenas"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "FreeNAS is now TrueNAS CORE.\n\nDEPRECATED: Use `system.product_type`"
   }
  },
  "/system/is_stable": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_is_stable"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether software version of the system is stable."
   }
  },
  "/system/license_update": {
   "post": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update license file",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_license_update"
       }
      }
     }
    }
   }
  },
  "/system/product_name": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_product_name"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns name of the product we are using."
   }
  },
  "/system/product_type": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_product_type"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the type of the product.\n\nSCALE - TrueNAS SCALE, community version\nSCALE_ENTERPRISE - TrueNAS SCALE Enterprise, appliance version"
   }
  },
  "/system/ready": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ready"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether the system completed boot and is ready to use"
   }
  },
  "/system/reboot": {
   "post": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Reboots the operating system.\n\nEmits an \"added\" event of name \"system\" and id \"reboot\".",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_reboot"
       }
      }
     }
    }
   }
  },
  "/system/release_notes_url": {
   "post": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_release_notes_url"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the release notes URL for a version of SCALE.\n\n`version_str` str: represents a version to check against\n\nIf `version` is not provided, then the release notes URL will return\n    a link for the currently installed version of SCALE.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_release_notes_url"
       }
      }
     }
    }
   }
  },
  "/system/shutdown": {
   "post": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Shuts down the operating system.\n\nAn \"added\" event of name \"system\" and id \"shutdown\" is emitted when shutdown is initiated.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_shutdown"
       }
      }
     }
    }
   }
  },
  "/system/state": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_state"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns system state:\n\"BOOTING\" - System is booting\n\"READY\" - System completed boot and is ready to use\n\"SHUTTING_DOWN\" - System is shutting down"
   }
  },
  "/system/version": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_version"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the full name of the software version of the system."
   }
  },
  "/system/version_short": {
   "get": {
    "tags": [
     "system"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_version_short"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the short name of the software version of the system."
   }
  },
  "/system/advanced": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update System Advanced Service Configuration.\n\n`consolemenu` should be disabled if the menu at console is not desired. It will default to standard login\nin the console if disabled.\n\n`autotune` when enabled executes autotune script which attempts to optimize the system based on the installed\nhardware.\n\nWhen `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages.\n\n`consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`\nattribute in the `system.general` plugin.\n\n`isolated_gpu_pci_ids` is a list of PCI ids which are isolated from host system.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_advanced_update"
       }
      }
     }
    }
   }
  },
  "/system/advanced/get_gpu_pci_choices": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_get_gpu_pci_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "This endpoint gives all the gpu pci ids/slots that can be isolated."
   }
  },
  "/system/advanced/sed_global_password": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_sed_global_password"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns configured global SED password in clear-text if one\nis configured, otherwise an empty string"
   }
  },
  "/system/advanced/sed_global_password_is_set": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_sed_global_password_is_set"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a boolean identifying whether or not a global\nSED password has been set"
   }
  },
  "/system/advanced/serial_port_choices": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_serial_port_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get available choices for `serialport`."
   }
  },
  "/system/advanced/syslog_certificate_authority_choices": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_syslog_certificate_authority_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return choices of certificate authorities which can be used for `syslog_tls_certificate_authority`."
   }
  },
  "/system/advanced/syslog_certificate_choices": {
   "get": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_advanced_syslog_certificate_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return choices of certificates which can be used for `syslog_tls_certificate`."
   }
  },
  "/system/advanced/update_gpu_pci_ids": {
   "post": {
    "tags": [
     "system.advanced"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "`isolated_gpu_pci_ids` is a list of PCI ids which are isolated from host system.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_advanced_update_gpu_pci_ids"
       }
      }
     }
    }
   }
  },
  "/system/general": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update System General Service Configuration.\n\n`ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,\nit is automatically created by the system.\n\n`ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better\nenhance security.\n\n`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on.\n\n`ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,\nthen all IP addresses are allowed to use API and UI.\n\n`ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to\nlog in to the Web UI or use TrueNAS API.\n\nUI configuration is not applied automatically. Call `system.general.ui_restart` to apply new UI settings (all\nHTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after\nsome small amount of time necessary you might need to receive the response for your settings update request.\n\nIf incorrect UI configuration is applied, you might loss API connectivity and won't be able to fix the settings.\nTo avoid that, specify `rollback_timeout` (in seconds). It will automatically roll back UI configuration to the\npreviously working settings after `rollback_timeout` passes unless you call `system.general.checkin` in case\nthe new settings were correct and no rollback is necessary.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_general_update"
       }
      }
     }
    }
   }
  },
  "/system/general/checkin": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "After UI settings are saved with `rollback_timeout` this method needs to be called within that timeout limit\nto prevent reverting the changes.\n\nThis is to ensure user verifies the changes went as planned and its working."
   }
  },
  "/system/general/checkin_waiting": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_checkin_waiting"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Determines whether or not we are waiting user to check-in the applied UI settings changes before they are rolled\nback. Returns a number of seconds before the automatic rollback or null if there are no changes pending."
   }
  },
  "/system/general/country_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_country_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns country choices."
   }
  },
  "/system/general/kbdmap_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_kbdmap_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns kbdmap choices."
   }
  },
  "/system/general/language_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_language_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns language choices."
   }
  },
  "/system/general/local_url": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_local_url"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns configured local url in the format of protocol://host:port"
   }
  },
  "/system/general/timezone_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_timezone_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns available timezones"
   }
  },
  "/system/general/ui_address_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_ui_address_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns UI ipv4 address choices."
   }
  },
  "/system/general/ui_certificate_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_ui_certificate_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return choices of certificates which can be used for `ui_certificate`."
   }
  },
  "/system/general/ui_httpsprotocols_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_ui_httpsprotocols_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns available HTTPS protocols."
   }
  },
  "/system/general/ui_restart": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Restart HTTP server to use latest UI settings.\n\nHTTP server will be restarted after `delay` seconds.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_general_ui_restart"
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Restart HTTP server to use latest UI settings.\n\nHTTP server will be restarted after `delay` seconds.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_general_ui_restart"
       }
      }
     }
    }
   }
  },
  "/system/general/ui_v6address_choices": {
   "get": {
    "tags": [
     "system.general"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_general_ui_v6address_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns UI ipv6 address choices."
   }
  },
  "/system/ntpserver": {
   "get": {
    "tags": [
     "system.ntpserver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ntpserver_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "system.ntpserver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ntpserver_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Add an NTP Server.\n\n`address` specifies the hostname/IP address of the NTP server.\n\n`burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.\nThis is designed to improve timekeeping quality with the server command.\n\n`iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes.\n\n`prefer` marks the specified server as preferred. When all other things are equal, this host is chosen\nfor synchronization acquisition with the server command. It is recommended that they be used for servers with\ntime monitoring hardware.\n\n`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.\n\n`force` when enabled forces the addition of NTP server even if it is currently unreachable.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_ntpserver_create"
       }
      }
     }
    }
   }
  },
  "/system/ntpserver/id/{id_}": {
   "delete": {
    "tags": [
     "system.ntpserver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ntpserver_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete NTP server of `id`."
   },
   "get": {
    "tags": [
     "system.ntpserver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ntpserver_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "system.ntpserver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ntpserver_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update NTP server of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_ntpserver_update"
       }
      }
     }
    }
   }
  },
  "/system/ntpserver/get_instance": {
   "post": {
    "tags": [
     "system.ntpserver"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_ntpserver_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_ntpserver_get_instance"
       }
      }
     }
    }
   }
  },
  "/system/security": {
   "get": {
    "tags": [
     "system.security"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_security_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "system.security"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_security_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update System Security Service Configuration.\n\n`enable_fips` when set, enables FIPS mode.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/system_security_update"
       }
      }
     }
    }
   }
  },
  "/system/security/info/fips_available": {
   "get": {
    "tags": [
     "system.security.info"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_security_info_fips_available"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a boolean identifying whether or not FIPS\nmode may be toggled on this system"
   }
  },
  "/system/security/info/fips_enabled": {
   "get": {
    "tags": [
     "system.security.info"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_system_security_info_fips_enabled"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a boolean identifying whether or not FIPS\nmode has been enabled on this system"
   }
  },
  "/systemdataset": {
   "get": {
    "tags": [
     "systemdataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_systemdataset_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "systemdataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_systemdataset_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update System Dataset Service Configuration.\n\n`pool` is the name of a valid pool configured in the system which will be used to host the system dataset.\n\n`pool_exclude` can be specified to make sure that we don't place the system dataset on that pool if `pool`\nis not provided.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/systemdataset_update"
       }
      }
     }
    }
   }
  },
  "/systemdataset/pool_choices": {
   "post": {
    "tags": [
     "systemdataset"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_systemdataset_pool_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve pool choices which can be used for configuring system dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/systemdataset_pool_choices"
       }
      }
     }
    }
   }
  },
  "/truecommand": {
   "get": {
    "tags": [
     "truecommand"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truecommand_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "truecommand"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truecommand_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update Truecommand service settings.\n\n`api_key` is a valid API key generated by iX Portal.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/truecommand_update"
       }
      }
     }
    }
   }
  },
  "/truenas/accept_eula": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Accept TrueNAS EULA."
   }
  },
  "/truenas/get_chassis_hardware": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truenas_get_chassis_hardware"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns what type of hardware this is, detected from dmidecode."
   }
  },
  "/truenas/get_customer_information": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns stored customer information."
   }
  },
  "/truenas/get_eula": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truenas_get_eula"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the TrueNAS End-User License Agreement (EULA)."
   }
  },
  "/truenas/is_eula_accepted": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truenas_is_eula_accepted"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns whether the EULA is accepted or not."
   }
  },
  "/truenas/is_ix_hardware": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truenas_is_ix_hardware"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return a boolean value on whether or not this is hardware\nthat iXsystems sells."
   }
  },
  "/truenas/is_production": {
   "get": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truenas_is_production"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns if system is marked as production."
   }
  },
  "/truenas/set_production": {
   "post": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_truenas_set_production"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sets system production state and optionally sends initial debug.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/truenas_set_production"
       }
      }
     }
    }
   }
  },
  "/truenas/update_customer_information": {
   "post": {
    "tags": [
     "truenas"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Updates customer information.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/truenas_update_customer_information"
       }
      }
     }
    }
   }
  },
  "/tunable": {
   "get": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a tunable.\n\nIf `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\n\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\n\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`).\n\nIf `update_initramfs` is `false` then initramfs will not be updated after creating a ZFS tunable and you will\nneed to run `system boot update_initramfs` manually.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/tunable_create"
       }
      }
     }
    }
   }
  },
  "/tunable/id/{id_}": {
   "delete": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete Tunable of `id`."
   },
   "get": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update Tunable of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/tunable_update"
       }
      }
     }
    }
   }
  },
  "/tunable/get_instance": {
   "post": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/tunable_get_instance"
       }
      }
     }
    }
   }
  },
  "/tunable/tunable_type_choices": {
   "get": {
    "tags": [
     "tunable"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_tunable_tunable_type_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve the supported tunable types that can be changed."
   }
  },
  "/update/check_available": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Checks if there is an update available from update server.\n\nstatus:\n  - REBOOT_REQUIRED: an update has already been applied\n  - AVAILABLE: an update is available\n  - UNAVAILABLE: no update available\n  - HA_UNAVAILABLE: HA is non-functional\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_check_available"
       }
      }
     }
    }
   }
  },
  "/update/download": {
   "get": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Download updates using selected train."
   }
  },
  "/update/file": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Updates the system using the uploaded .tar file.\n\n`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, re-uploading\nthe file is not necessary.\n\nUse null `destination` to create a temporary location.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_file"
       }
      }
     }
    }
   }
  },
  "/update/get_auto_download": {
   "get": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns if update auto-download is enabled."
   }
  },
  "/update/get_pending": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Gets a list of packages already downloaded and ready to be applied.\nEach entry of the lists consists of type of operation and name of it, e.g.\n\n  {\n    \"operation\": \"upgrade\",\n    \"name\": \"baseos-11.0 -> baseos-11.1\"\n  }",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_get_pending"
       }
      }
     }
    }
   }
  },
  "/update/get_trains": {
   "get": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns available trains dict and the currently configured train as well as the\ntrain of currently booted environment."
   }
  },
  "/update/manual": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update the system using a manual update file.\n\n`path` must be the absolute path to the update file.\n\n`options.resume` should be set to `true` if a previous call to this method returned a `CallError` with\n`errno=EAGAIN` meaning that an upgrade can be performed with a warning and that warning is accepted.\n\nIf `options.cleanup` is set to `false` then the manual update file won't be removed on update success and\nnewly created BE won't be removed on update failure (useful for debugging purposes).",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_manual"
       }
      }
     }
    }
   }
  },
  "/update/set_auto_download": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Sets if update auto-download is enabled.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_set_auto_download"
       }
      }
     }
    }
   }
  },
  "/update/set_train": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Set an update train to be used by default in updates.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_set_train"
       }
      }
     }
    }
   }
  },
  "/update/update": {
   "post": {
    "tags": [
     "update"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Downloads (if not already in cache) and apply an update.\n\n`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, update\nprocess will be continued using an already downloaded file without performing any extra checks.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/update_update"
       }
      }
     }
    }
   }
  },
  "/ups": {
   "get": {
    "tags": [
     "ups"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ups_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   },
   "put": {
    "tags": [
     "ups"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ups_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Update UPS Service Configuration.\n\n`powerdown` when enabled, sets UPS to power off after shutting down the system.\n\n`nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that\nthe Service cannot reach configured UPS.\n\n`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\".\n\n`shutdowncmd` is the command which is executed to initiate a shutdown. It defaults to \"poweroff\".",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ups_update"
       }
      }
     }
    }
   }
  },
  "/ups/driver_choices": {
   "get": {
    "tags": [
     "ups"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ups_driver_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns choices of UPS drivers supported by the system."
   }
  },
  "/ups/port_choices": {
   "get": {
    "tags": [
     "ups"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_ups_port_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": ""
   }
  },
  "/user": {
   "get": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query users with `query-filters` and `query-options`. As a performance optimization, only local users\nwill be queried by default.\n\nExpanded information may be requested by specifying the extra option\n`\"extra\": {\"additional_information\": []}`.\n\nThe following `additional_information` options are supported:\n`SMB` - include Windows SID and NT Name for user. If this option is not specified, then these\n    keys will have `null` value.\n`DS` - include users from Directory Service (LDAP or Active Directory) in results\n\n`\"extra\": {\"search_dscache\": true}` is a legacy method of querying for directory services users.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new user.\n\nIf `uid` is not provided it is automatically filled with the next one available.\n\n`group` is required if `group_create` is false.\n\n`password` is required if `password_disabled` is false.\n\nAvailable choices for `shell` can be retrieved with `user.shell_choices`.\n\n`smb` specifies whether the user should be allowed access to SMB shares. User\nwill also automatically be added to the `builtin_users` group.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_create"
       }
      }
     }
    }
   }
  },
  "/user/id/{id_}": {
   "delete": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete user `id`.\n\nThe `delete_group` option deletes the user primary group if it is not being used by\nany other user.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Query users with `query-filters` and `query-options`. As a performance optimization, only local users\nwill be queried by default.\n\nExpanded information may be requested by specifying the extra option\n`\"extra\": {\"additional_information\": []}`.\n\nThe following `additional_information` options are supported:\n`SMB` - include Windows SID and NT Name for user. If this option is not specified, then these\n    keys will have `null` value.\n`DS` - include users from Directory Service (LDAP or Active Directory) in results\n\n`\"extra\": {\"search_dscache\": true}` is a legacy method of querying for directory services users.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update attributes of an existing user.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_update"
       }
      }
     }
    }
   }
  },
  "/user/get_instance": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_get_instance"
       }
      }
     }
    }
   }
  },
  "/user/get_next_uid": {
   "get": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_get_next_uid"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the next available/free uid."
   }
  },
  "/user/get_user_obj": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_get_user_obj"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns dictionary containing information from struct passwd for the user specified by either\nthe username or uid. Bypasses user cache.\n\nSupports the following additional parameters:\n`get_groups` - retrieve group list for the specified user.\n\nNOTE: results will not include nested groups for Active Directory users\n\n`sid_info` - retrieve SID and domain information for the user\n\nNOTE: in some pathological scenarios this may make the operation hang until\nthe winbindd request timeout has been reached if the winbindd connection manager\nhas not yet marked the domain as offline. The TrueNAS middleware is more aggressive\nabout marking AD domains as FAULTED and so it may be advisable to first check the\nActive Directory service state prior to batch operations using this option.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_get_user_obj"
       }
      }
     }
    }
   }
  },
  "/user/has_local_administrator_set_up": {
   "get": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_has_local_administrator_set_up"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return whether a local administrator with a valid password exists.\n\nThis is used when the system is installed without a password and must be set on\nfirst use/login."
   }
  },
  "/user/has_root_password": {
   "get": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_has_root_password"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Deprecated method. Use `user.has_local_administrator_set_up`"
   }
  },
  "/user/provisioning_uri": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_provisioning_uri"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns the provisioning URI for the OTP for `username`. This can then be encoded in a QR code and used\nto provision an OTP app like Google Authenticator.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_provisioning_uri"
       }
      }
     }
    }
   }
  },
  "/user/shell_choices": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_shell_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Return the available shell choices to be used in `user.create` and `user.update`.\n\n`group_ids` is a list of local group IDs for the user.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_shell_choices"
       }
      }
     }
    }
   }
  },
  "/user/twofactor_config": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_twofactor_config"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns two-factor authentication configuration settings for specified `username`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_twofactor_config"
       }
      }
     }
    }
   }
  },
  "/user/unset_2fa_secret": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Unset two-factor authentication secret for `username`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_unset_2fa_secret"
       }
      }
     }
    }
   }
  },
  "/user/verify_twofactor_token": {
   "post": {
    "tags": [
     "user"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_user_verify_twofactor_token"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns boolean true if provided `token` is successfully authenticated for `username`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/user_verify_twofactor_token"
       }
      }
     }
    }
   }
  },
  "/vm": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a Virtual Machine (VM).\n\nMaximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core.\n\n`ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.\nFor headless installations like ubuntu server this is required for the guest to operate properly. However\nfor cases where consumer would like to use GPU passthrough and does not want a display device added should set\nthis to `false`.\n\n`arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and\nsystem in this case will choose a reasonable default based on host.\n\n`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.\n\n`shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system\nshutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within\n`shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.\n\n`hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and\nis useful to enable when doing GPU passthrough.\n\n`hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.\nThese enlightenments improve performance and enable otherwise missing features.\n\n`suspend_on_snapshot` is a boolean attribute which when enabled will automatically pause/suspend VMs when\na snapshot is being taken for periodic snapshot tasks. For manual snapshots, if user has specified vms to\nbe paused, they will be in that case.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_create"
       }
      }
     }
    }
   }
  },
  "/vm/id/{id_}": {
   "delete": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a VM.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update all information of a specific VM.\n\n`devices` is a list of virtualized hardware to attach to the virtual machine. If `devices` is not present,\nno change is made to devices. If either the device list order or data stored by the device changes when the\nattribute is passed, these actions are taken:\n\n1) If there is no device in the `devices` list which was previously attached to the VM, that device is\n   removed from the virtual machine.\n2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to\n   an existing device.\n3) Devices that do not have an `id` attribute are created and attached to `id` VM.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_update"
       }
      }
     }
    }
   }
  },
  "/vm/bootloader_options": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_bootloader_options"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Supported motherboard firmware options."
   }
  },
  "/vm/bootloader_ovmf_choices": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_bootloader_ovmf_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve bootloader ovmf choices"
   }
  },
  "/vm/id/{id_}/clone": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_clone"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Clone the VM `id`.\n\n`name` is an optional parameter for the cloned VM.\nIf not provided it will append the next number available to the VM name.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_clone"
       }
      }
     }
    }
   }
  },
  "/vm/cpu_model_choices": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_cpu_model_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve CPU Model choices which can be used with a VM guest to emulate the CPU in the guest."
   }
  },
  "/vm/flags": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_flags"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a dictionary with CPU flags for the hypervisor."
   }
  },
  "/vm/get_available_memory": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_available_memory"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the current maximum amount of available memory to be allocated for VMs.\n\nIn case of `overcommit` being `true`, calculations are done in the following manner:\n1. If a VM has requested 10G but is only consuming 5G, only 5G will be counted\n2. System will consider shrinkable ZFS ARC as free memory ( shrinkable ZFS ARC is current ZFS ARC\n   minus ZFS ARC minimum )\n\nIn case of `overcommit` being `false`, calculations are done in the following manner:\n1. Complete VM requested memory will be taken into account regardless of how much actual physical\n   memory the VM is consuming\n2. System will not consider shrinkable ZFS ARC as free memory\n\nMemory is of course a very \"volatile\" resource, values may change abruptly between a\nsecond but I deem it good enough to give the user a clue about how much memory is\navailable at the current moment and if a VM should be allowed to be launched.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_get_available_memory"
       }
      }
     }
    }
   }
  },
  "/vm/get_console": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_console"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the console device from a given guest.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_get_console"
       }
      }
     }
    }
   }
  },
  "/vm/get_display_devices": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_display_devices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get the display devices from a given guest. If a display device has password configured,\n`attributes.password_configured` will be set to `true`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_get_display_devices"
       }
      }
     }
    }
   }
  },
  "/vm/get_instance": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_get_instance"
       }
      }
     }
    }
   }
  },
  "/vm/get_memory_usage": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_memory_usage"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_get_memory_usage"
       }
      }
     }
    }
   }
  },
  "/vm/get_vm_memory_info": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_vm_memory_info"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns memory information for `vm_id` VM if it is going to be started.\n\nAll memory attributes are expressed in bytes.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_get_vm_memory_info"
       }
      }
     }
    }
   }
  },
  "/vm/get_vmemory_in_use": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_get_vmemory_in_use"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "The total amount of virtual memory in MB used by guests\n\n    Returns a dict with the following information:\n        RNP - Running but not provisioned\n        PRD - Provisioned but not running\n        RPRD - Running and provisioned"
   }
  },
  "/vm/guest_architecture_and_machine_choices": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_guest_architecture_and_machine_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve choices for supported guest architecture types and machine choices.\n\nKeys in the response would be supported guest architecture(s) on the host and their respective values would\nbe supported machine type(s) for the specific architecture on the host."
   }
  },
  "/vm/log_file_download": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve log file contents of `id` VM.\n\nIt will download empty file if log file does not exist.\n\nA file will be downloaded from this endpoint.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_log_file_download"
       }
      }
     }
    }
   }
  },
  "/vm/log_file_path": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_log_file_path"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve log file path of `id` VM.\n\nIt will return path of the log file if it exists and `null` otherwise.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_log_file_path"
       }
      }
     }
    }
   }
  },
  "/vm/maximum_supported_vcpus": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_maximum_supported_vcpus"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns maximum supported VCPU's"
   }
  },
  "/vm/port_wizard": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_port_wizard"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "It returns the next available Display Server Port and Web Port.\n\nReturns a dict with two keys `port` and `web`."
   }
  },
  "/vm/id/{id_}/poweroff": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Poweroff a VM.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_poweroff"
       }
      }
     }
    }
   }
  },
  "/vm/profiles": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_profiles"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns a dictionary of defaults for different VM guest types."
   }
  },
  "/vm/random_mac": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_random_mac"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a random mac address.\n\nReturns:\n    str: with six groups of two hexadecimal digits"
   }
  },
  "/vm/resolution_choices": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_resolution_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve supported resolution choices for VM Display devices."
   }
  },
  "/vm/id/{id_}/restart": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Restart a VM.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_restart"
       }
      }
     }
    }
   }
  },
  "/vm/id/{id_}/resume": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Resume suspended `id` VM.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_resume"
       }
      }
     }
    }
   }
  },
  "/vm/id/{id_}/start": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Start a VM.\n\noptions.overcommit defaults to false, meaning VMs are not allowed to\nstart if there is not enough available memory to hold all configured VMs.\nIf true, VM starts even if there is not enough memory for all configured VMs.\n\nError codes:\n\n    ENOMEM(12): not enough free memory to run the VM without overcommit",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_start"
       }
      }
     }
    }
   }
  },
  "/vm/id/{id_}/status": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_status"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Get the status of `id` VM.\n\nReturns a dict:\n    - state, RUNNING / STOPPED / SUSPENDED\n    - pid, process id if RUNNING",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_status"
       }
      }
     }
    }
   }
  },
  "/vm/id/{id_}/stop": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Stops a VM.\n\nFor unresponsive guests who have exceeded the `shutdown_timeout` defined by the user and have become\nunresponsive, they required to be powered down using `vm.poweroff`. `vm.stop` is only going to send a\nshutdown signal to the guest and wait the desired `shutdown_timeout` value before tearing down guest vmemory.\n\n`force_after_timeout` when supplied, it will initiate poweroff for the VM forcing it to exit if it has\nnot already stopped within the specified `shutdown_timeout`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_stop"
       }
      }
     }
    }
   }
  },
  "/vm/supports_virtualization": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_supports_virtualization"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns \"true\" if system supports virtualization, \"false\" otherwise"
   }
  },
  "/vm/id/{id_}/suspend": {
   "post": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Suspend `id` VM.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_suspend"
       }
      }
     }
    }
   }
  },
  "/vm/virtualization_details": {
   "get": {
    "tags": [
     "vm"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_virtualization_details"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve details if virtualization is supported on the system and in case why it's not supported if it isn't."
   }
  },
  "/vm/device": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create a new device for the VM of id `vm`.\n\nIf `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.\nThis means the API handles creating the raw file and raises the appropriate exception if file creation fails.\n\nIf `dtype` is of `DISK` type and a new Zvol is to be created, `attributes.create_zvol` will be passed as\ntrue with valid `attributes.zvol_name` and `attributes.zvol_volsize` values.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_create"
       }
      }
     }
    }
   }
  },
  "/vm/device/id/{id_}": {
   "delete": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete a VM device of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update a VM device of `id`.\n\nPass `attributes.size` to resize a `dtype` `RAW` device. The raw file will be resized.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_update"
       }
      }
     }
    }
   }
  },
  "/vm/device/bind_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_bind_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for Bind attribute."
   }
  },
  "/vm/device/disk_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_disk_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns disk choices for device type \"DISK\"."
   }
  },
  "/vm/device/get_instance": {
   "post": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_get_instance"
       }
      }
     }
    }
   }
  },
  "/vm/device/get_pci_ids_for_gpu_isolation": {
   "post": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_get_pci_ids_for_gpu_isolation"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get PCI IDs of devices which are required to be isolated for `gpu_pci_id` GPU isolation.\n\nBasically when a GPU passthrough is desired for a VM, we need to isolate all the devices which are in the same\nIOMMU group as the GPU. This is required because if we don't do this, the VM will not be able to start because\nthe devices in the same IOMMU group as the GPU will be in use by the host and will not be available for the VM\nto use.\n\nThis endpoints retrieves all the PCI devices which are in the same IOMMU group as the GPU and returns their PCI\nIDs so UI can use those and create PCI devices for them and isolate them.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_get_pci_ids_for_gpu_isolation"
       }
      }
     }
    }
   }
  },
  "/vm/device/iommu_enabled": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_iommu_enabled"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns \"true\" if iommu is enabled, \"false\" otherwise"
   }
  },
  "/vm/device/iotype_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_iotype_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "IO-type choices for storage devices."
   }
  },
  "/vm/device/nic_attach_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_nic_attach_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for NIC Attach attribute."
   }
  },
  "/vm/device/passthrough_device": {
   "post": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_passthrough_device"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve details about `device` PCI device",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_passthrough_device"
       }
      }
     }
    }
   }
  },
  "/vm/device/passthrough_device_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_passthrough_device_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for PCI passthru devices"
   }
  },
  "/vm/device/pptdev_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_pptdev_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for PCI passthru device"
   }
  },
  "/vm/device/usb_controller_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_usb_controller_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve USB controller type choices"
   }
  },
  "/vm/device/usb_passthrough_choices": {
   "get": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_usb_passthrough_choices"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Available choices for USB passthrough devices."
   }
  },
  "/vm/device/usb_passthrough_device": {
   "post": {
    "tags": [
     "vm.device"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vm_device_usb_passthrough_device"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Retrieve details about `device` USB device.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vm_device_usb_passthrough_device"
       }
      }
     }
    }
   }
  },
  "/vmware": {
   "get": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vmware_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vmware_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Create VMWare snapshot.\n\n`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster.\n\n`username` and `password` are the credentials used to authorize access to the VMWare host.\n\n`datastore` is a valid datastore name which exists on the VMWare host.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_create"
       }
      }
     }
    }
   }
  },
  "/vmware/id/{id_}": {
   "delete": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vmware_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Delete VMWare snapshot of `id`."
   },
   "get": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vmware_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vmware_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "integer"
      }
     }
    ],
    "description": "Update VMWare snapshot of `id`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_update"
       }
      }
     }
    }
   }
  },
  "/vmware/dataset_has_vms": {
   "post": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns \"true\" if `dataset` is configured with a VMWare snapshot",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_dataset_has_vms"
       }
      }
     }
    }
   }
  },
  "/vmware/get_datastores": {
   "post": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Get datastores from VMWare.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_get_datastores"
       }
      }
     }
    }
   }
  },
  "/vmware/get_instance": {
   "post": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_vmware_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_get_instance"
       }
      }
     }
    }
   }
  },
  "/vmware/get_virtual_machines": {
   "post": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns Virtual Machines on the VMWare host identified by `pk`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_get_virtual_machines"
       }
      }
     }
    }
   }
  },
  "/vmware/match_datastores_with_datasets": {
   "post": {
    "tags": [
     "vmware"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Requests datastores from vCenter server and tries to match them with local filesystems.\n\nReturns a list of datastores, a list of local filesystems and guessed relationship between them.\n\n",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vmware_match_datastores_with_datasets"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot": {
   "get": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_zfs_snapshot_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "limit",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "offset",
      "in": "query",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "count",
      "in": "query",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "sort",
      "in": "query",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all ZFS Snapshots with `query-filters` and `query-options`.\n\n`query-options.extra.holds` specifies whether hold tags for snapshots should be retrieved (false by default)\n\n`query-options.extra.min_txg` can be specified to limit snapshot retrieval based on minimum transaction group.\n\n`query-options.extra.max_txg` can be specified to limit snapshot retrieval based on maximum transaction group.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_zfs_snapshot_create"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Take a snapshot from a given dataset.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_create"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/id/{id_}": {
   "delete": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_zfs_snapshot_delete"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Delete snapshot of name `id`.\n\n`options.defer` will defer the deletion of snapshot.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_delete"
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_zfs_snapshot_query"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "Query all ZFS Snapshots with `query-filters` and `query-options`.\n\n`query-options.extra.holds` specifies whether hold tags for snapshots should be retrieved (false by default)\n\n`query-options.extra.min_txg` can be specified to limit snapshot retrieval based on minimum transaction group.\n\n`query-options.extra.max_txg` can be specified to limit snapshot retrieval based on maximum transaction group.\n\n`query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
   },
   "put": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_zfs_snapshot_update"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [
     {
      "name": "id_",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "description": "",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_update"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/clone": {
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Clone a given snapshot to a new dataset.\n\nReturns:\n    bool: True if succeed otherwise False.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_clone"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/get_instance": {
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "description": "Response schema:",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#components/schemas/return_schema_of_zfs_snapshot_get_instance"
        }
       }
      }
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised.\n\nPlease see `query` method documentation for `options`.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_get_instance"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/hold": {
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Holds snapshot `id`.\n\n`truenas` tag will be added to the snapshot's tag namespace.\n\n`options.recursive` will hold snapshots recursively.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_hold"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/release": {
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Release held snapshot `id`.\n\nWill remove all hold tags from the specified snapshot.\n\n`options.recursive` will release snapshots recursively. Please note that only the tags that are present on the\nparent snapshot will be removed.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_release"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/remove": {
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Remove a snapshot from a given dataset.\n\nReturns:\n    bool: True if succeed otherwise False.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_remove"
       }
      }
     }
    }
   }
  },
  "/zfs/snapshot/rollback": {
   "post": {
    "tags": [
     "zfs.snapshot"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/Success"
     },
     "401": {
      "$ref": "#/components/responses/Unauthorized"
     }
    },
    "parameters": [],
    "description": "Rollback to a given snapshot `id`.\n\n`options.recursive` will destroy any snapshots and bookmarks more recent than the one\nspecified.\n\n`options.recursive_clones` is just like `recursive` but will also destroy any clones.\n\n`options.force` will force unmount of any clones.\n\n`options.recursive_rollback` will do a complete recursive rollback of each child snapshots for `id`. If\nany child does not have specified snapshot, this operation will fail.",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/zfs_snapshot_rollback"
       }
      }
     }
    }
   }
  }
 },
 "servers": [
  {
   "url": "http://10.0.0.83:81/api/v2.0"
  }
 ],
 "components": {
  "schemas": {
   "core_arp": {
    "type": "object",
    "properties": {
     "ip": {
      "_name_": "ip",
      "title": "ip",
      "default": null,
      "type": "string"
     },
     "interface": {
      "_name_": "interface",
      "title": "interface",
      "default": null,
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "ip",
     "interface"
    ]
   },
   "core_debug": {
    "type": "object",
    "properties": {
     "bind_address": {
      "_name_": "bind_address",
      "title": "bind_address",
      "default": "0.0.0.0",
      "type": "string"
     },
     "bind_port": {
      "type": "integer",
      "_name_": "bind_port",
      "title": "bind_port",
      "default": 3000
     },
     "threaded": {
      "type": "boolean",
      "_name_": "threaded",
      "title": "threaded",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "bind_address",
     "bind_port",
     "threaded"
    ]
   },
   "return_schema_of_core_debug_mode_enabled": {
    "type": "boolean",
    "_name_": "debug_mode_enabled",
    "title": "debug_mode_enabled"
   },
   "core_download_0": {
    "_name_": "method",
    "title": "method",
    "type": "string"
   },
   "core_download_1": {
    "_name_": "args",
    "title": "args",
    "default": [],
    "type": "array",
    "items": {}
   },
   "core_download_2": {
    "_name_": "filename",
    "title": "filename",
    "type": "string"
   },
   "core_download_3": {
    "type": "boolean",
    "_name_": "buffered",
    "title": "buffered",
    "default": false,
    "description": "Non-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay\nblocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's\npipe output will be buffered to ramfs."
   },
   "core_download": {
    "type": "object",
    "properties": {
     "method": {
      "$ref": "#/components/schemas/core_download_0"
     },
     "args": {
      "$ref": "#/components/schemas/core_download_1"
     },
     "filename": {
      "$ref": "#/components/schemas/core_download_2"
     },
     "buffered": {
      "$ref": "#/components/schemas/core_download_3"
     }
    }
   },
   "return_schema_of_core_get_jobs": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "method": {
        "_name_": "method",
        "title": "method",
        "_required_": false,
        "type": "string"
       },
       "arguments": {
        "_name_": "arguments",
        "title": "arguments",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "transient": {
        "type": "boolean",
        "_name_": "transient",
        "title": "transient",
        "_required_": false
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "abortable": {
        "type": "boolean",
        "_name_": "abortable",
        "title": "abortable",
        "_required_": false
       },
       "logs_path": {
        "_name_": "logs_path",
        "title": "logs_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "logs_excerpt": {
        "_name_": "logs_excerpt",
        "title": "logs_excerpt",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "progress": {
        "type": "object",
        "properties": {
         "percent": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "percent",
          "title": "percent",
          "_required_": false
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "extra": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "extra",
          "title": "extra",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "progress",
        "title": "progress",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "percent",
         "description",
         "extra"
        ]
       },
       "result": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "result",
        "title": "result",
        "_required_": false
       },
       "error": {
        "_name_": "error",
        "title": "error",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "exception": {
        "_name_": "exception",
        "title": "exception",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "exc_info": {
        "type": "object",
        "properties": {
         "repr": {
          "_name_": "repr",
          "title": "repr",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "extra": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "extra",
          "title": "extra",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "exc_info",
        "title": "exc_info",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "repr",
         "type",
         "extra"
        ]
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": "string"
       },
       "time_started": {
        "_name_": "time_started",
        "title": "time_started",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "time_finished": {
        "_name_": "time_finished",
        "title": "time_finished",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "credentials": {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": false,
          "type": "string"
         },
         "data": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "data",
          "title": "data",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "credentials",
        "title": "credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "data"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "method",
       "arguments",
       "transient",
       "description",
       "abortable",
       "logs_path",
       "logs_excerpt",
       "progress",
       "result",
       "error",
       "exception",
       "exc_info",
       "state",
       "time_started",
       "time_finished",
       "credentials"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "method": {
          "_name_": "method",
          "title": "method",
          "_required_": false,
          "type": "string"
         },
         "arguments": {
          "_name_": "arguments",
          "title": "arguments",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "transient": {
          "type": "boolean",
          "_name_": "transient",
          "title": "transient",
          "_required_": false
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "abortable": {
          "type": "boolean",
          "_name_": "abortable",
          "title": "abortable",
          "_required_": false
         },
         "logs_path": {
          "_name_": "logs_path",
          "title": "logs_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "logs_excerpt": {
          "_name_": "logs_excerpt",
          "title": "logs_excerpt",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "progress": {
          "type": "object",
          "properties": {
           "percent": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "percent",
            "title": "percent",
            "_required_": false
           },
           "description": {
            "_name_": "description",
            "title": "description",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "extra": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "extra",
            "title": "extra",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "progress",
          "title": "progress",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "percent",
           "description",
           "extra"
          ]
         },
         "result": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "result",
          "title": "result",
          "_required_": false
         },
         "error": {
          "_name_": "error",
          "title": "error",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "exception": {
          "_name_": "exception",
          "title": "exception",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "exc_info": {
          "type": "object",
          "properties": {
           "repr": {
            "_name_": "repr",
            "title": "repr",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "extra": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "extra",
            "title": "extra",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "exc_info",
          "title": "exc_info",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "repr",
           "type",
           "extra"
          ]
         },
         "state": {
          "_name_": "state",
          "title": "state",
          "_required_": false,
          "type": "string"
         },
         "time_started": {
          "_name_": "time_started",
          "title": "time_started",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "time_finished": {
          "_name_": "time_finished",
          "title": "time_finished",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "credentials": {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string"
           },
           "data": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "_name_": "data",
            "title": "data",
            "default": {},
            "_required_": false,
            "_attrs_order_": []
           }
          },
          "additionalProperties": false,
          "_name_": "credentials",
          "title": "credentials",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "data"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "method",
         "arguments",
         "transient",
         "description",
         "abortable",
         "logs_path",
         "logs_excerpt",
         "progress",
         "result",
         "error",
         "exception",
         "exc_info",
         "state",
         "time_started",
         "time_finished",
         "credentials"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "core_job_abort": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "core_job_download_logs_0": {
    "type": "integer",
    "_name_": "id",
    "title": "id",
    "description": "Download logs of the job `id`."
   },
   "core_job_download_logs_1": {
    "_name_": "filename",
    "title": "filename",
    "type": "string"
   },
   "core_job_download_logs_2": {
    "type": "boolean",
    "_name_": "buffered",
    "title": "buffered",
    "default": false
   },
   "core_job_download_logs": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/core_job_download_logs_0"
     },
     "filename": {
      "$ref": "#/components/schemas/core_job_download_logs_1"
     },
     "buffered": {
      "$ref": "#/components/schemas/core_job_download_logs_2"
     }
    }
   },
   "core_job_wait": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "core_ping_remote": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "ICMP",
      "type": "string",
      "enum": [
       "ICMP",
       "ICMPV4",
       "ICMPV6"
      ]
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 4
     },
     "count": {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "default": null
     },
     "interface": {
      "_name_": "interface",
      "title": "interface",
      "default": null,
      "type": "string"
     },
     "interval": {
      "_name_": "interval",
      "title": "interval",
      "default": null,
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "type",
     "hostname",
     "timeout",
     "count",
     "interface",
     "interval"
    ]
   },
   "core_resize_shell_0": {
    "_name_": "id",
    "title": "id",
    "type": "string"
   },
   "core_resize_shell_1": {
    "type": "integer",
    "_name_": "cols",
    "title": "cols"
   },
   "core_resize_shell_2": {
    "type": "integer",
    "_name_": "rows",
    "title": "rows"
   },
   "core_resize_shell": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/core_resize_shell_0"
     },
     "cols": {
      "$ref": "#/components/schemas/core_resize_shell_1"
     },
     "rows": {
      "$ref": "#/components/schemas/core_resize_shell_2"
     }
    }
   },
   "return_schema_of_core_sessions": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": false,
        "type": "string"
       },
       "socket_family": {
        "_name_": "socket_family",
        "title": "socket_family",
        "_required_": false,
        "type": "string"
       },
       "address": {
        "_name_": "address",
        "title": "address",
        "_required_": false,
        "type": "string"
       },
       "authenticated": {
        "type": "boolean",
        "_name_": "authenticated",
        "title": "authenticated",
        "_required_": false
       },
       "call_count": {
        "type": "integer",
        "_name_": "call_count",
        "title": "call_count",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "session",
      "title": "session",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "socket_family",
       "address",
       "authenticated",
       "call_count"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": false,
          "type": "string"
         },
         "socket_family": {
          "_name_": "socket_family",
          "title": "socket_family",
          "_required_": false,
          "type": "string"
         },
         "address": {
          "_name_": "address",
          "title": "address",
          "_required_": false,
          "type": "string"
         },
         "authenticated": {
          "type": "boolean",
          "_name_": "authenticated",
          "title": "authenticated",
          "_required_": false
         },
         "call_count": {
          "type": "integer",
          "_name_": "call_count",
          "title": "call_count",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "session",
        "title": "session",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "socket_family",
         "address",
         "authenticated",
         "call_count"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "core_set_debug_mode": {
    "type": "boolean",
    "_name_": "debug_mode",
    "title": "debug_mode"
   },
   "return_schema_of_acme_dns_authenticator_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         },
         "authenticator": {
          "_name_": "authenticator",
          "title": "authenticator",
          "_required_": true,
          "type": "string",
          "enum": [
           "cloudflare",
           "route53",
           "OVH",
           "shell"
          ]
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "description": "Specific attributes of each `authenticator`",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "description": "User defined name of authenticator",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "acme_dns_authenticator_entry",
        "title": "acme_dns_authenticator_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "authenticator",
         "attributes",
         "name"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "authenticator": {
        "_name_": "authenticator",
        "title": "authenticator",
        "_required_": true,
        "type": "string",
        "enum": [
         "cloudflare",
         "route53",
         "OVH",
         "shell"
        ]
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "description": "Specific attributes of each `authenticator`",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "User defined name of authenticator",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "acme_dns_authenticator_entry",
      "title": "acme_dns_authenticator_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "authenticator",
       "attributes",
       "name"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "authenticator": {
        "_name_": "authenticator",
        "title": "authenticator",
        "_required_": true,
        "type": "string",
        "enum": [
         "cloudflare",
         "route53",
         "OVH",
         "shell"
        ]
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "description": "Specific attributes of each `authenticator`",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "User defined name of authenticator",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "acme_dns_authenticator_entry",
      "title": "acme_dns_authenticator_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "authenticator",
       "attributes",
       "name"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "acme_dns_authenticator_create": {
    "type": "object",
    "properties": {
     "authenticator": {
      "_name_": "authenticator",
      "title": "authenticator",
      "type": "string",
      "enum": [
       "cloudflare",
       "route53",
       "OVH",
       "shell"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `authenticator`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of authenticator",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "acme_dns_authenticator_create",
    "title": "acme_dns_authenticator_create",
    "default": {},
    "_attrs_order_": [
     "authenticator",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_acme_dns_authenticator_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "authenticator": {
      "_name_": "authenticator",
      "title": "authenticator",
      "type": "string",
      "enum": [
       "cloudflare",
       "route53",
       "OVH",
       "shell"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `authenticator`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of authenticator",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "acme_dns_authenticator_create_returns",
    "title": "acme_dns_authenticator_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "authenticator",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_acme_dns_authenticator_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "acme_dns_authenticator_update": {
    "type": "object",
    "properties": {
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `authenticator`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of authenticator",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "dns_authenticator_update",
    "title": "dns_authenticator_update",
    "default": {},
    "_attrs_order_": [
     "attributes",
     "name"
    ]
   },
   "return_schema_of_acme_dns_authenticator_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update DNS Authenticator of `id`"
     },
     "authenticator": {
      "_name_": "authenticator",
      "title": "authenticator",
      "type": "string",
      "enum": [
       "cloudflare",
       "route53",
       "OVH",
       "shell"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `authenticator`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of authenticator",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "acme_dns_authenticator_update_returns",
    "title": "acme_dns_authenticator_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "authenticator",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_acme_dns_authenticator_authenticator_schemas": {
    "_name_": "authenticator_schemas",
    "title": "Authenticator Schemas",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "key": {
       "_name_": "key",
       "title": "key",
       "_required_": true,
       "type": "string"
      },
      "schema": {
       "_name_": "schema",
       "title": "schema",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "type": "object",
         "properties": {
          "_name_": {
           "_name_": "_name_",
           "title": "_name_",
           "_required_": true,
           "type": "string"
          },
          "title": {
           "_name_": "title",
           "title": "title",
           "_required_": true,
           "type": "string"
          },
          "_required_": {
           "type": "boolean",
           "_name_": "_required_",
           "title": "_required_",
           "_required_": true
          }
         },
         "additionalProperties": true,
         "_name_": "attribute_schema",
         "title": "Attribute Schema",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "_name_",
          "title",
          "_required_"
         ]
        }
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "schema_entry",
     "title": "Authenticator Schema",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "key",
      "schema"
     ]
    }
   },
   "acme_dns_authenticator_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "acme_dns_authenticator_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "acme_dns_authenticator_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/acme_dns_authenticator_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/acme_dns_authenticator_get_instance_1"
     }
    }
   },
   "return_schema_of_acme_dns_authenticator_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "authenticator": {
      "_name_": "authenticator",
      "title": "authenticator",
      "type": "string",
      "enum": [
       "cloudflare",
       "route53",
       "OVH",
       "shell"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `authenticator`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of authenticator",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "acme_dns_authenticator_entry",
    "title": "acme_dns_authenticator_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "authenticator",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_activedirectory_config": {
    "type": "object",
    "properties": {
     "domainname": {
      "_name_": "domainname",
      "title": "domainname",
      "type": "string"
     },
     "bindname": {
      "_name_": "bindname",
      "title": "bindname",
      "type": "string"
     },
     "bindpw": {
      "_name_": "bindpw",
      "title": "bindpw",
      "type": "string"
     },
     "verbose_logging": {
      "type": "boolean",
      "_name_": "verbose_logging",
      "title": "verbose_logging"
     },
     "use_default_domain": {
      "type": "boolean",
      "_name_": "use_default_domain",
      "title": "use_default_domain"
     },
     "allow_trusted_doms": {
      "type": "boolean",
      "_name_": "allow_trusted_doms",
      "title": "allow_trusted_doms"
     },
     "allow_dns_updates": {
      "type": "boolean",
      "_name_": "allow_dns_updates",
      "title": "allow_dns_updates"
     },
     "disable_freenas_cache": {
      "type": "boolean",
      "_name_": "disable_freenas_cache",
      "title": "disable_freenas_cache"
     },
     "restrict_pam": {
      "type": "boolean",
      "_name_": "restrict_pam",
      "title": "restrict_pam",
      "default": false
     },
     "site": {
      "_name_": "site",
      "title": "site",
      "type": "string",
      "nullable": true
     },
     "kerberos_realm": {
      "type": "integer",
      "_name_": "kerberos_realm",
      "title": "kerberos_realm",
      "nullable": true
     },
     "kerberos_principal": {
      "_name_": "kerberos_principal",
      "title": "kerberos_principal",
      "type": "string",
      "nullable": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 60
     },
     "dns_timeout": {
      "type": "integer",
      "_name_": "dns_timeout",
      "title": "dns_timeout",
      "default": 10
     },
     "nss_info": {
      "_name_": "nss_info",
      "title": "nss_info",
      "type": "string",
      "enum": [
       "TEMPLATE",
       "SFU",
       "SFU20",
       "RFC2307"
      ],
      "nullable": true
     },
     "createcomputer": {
      "_name_": "createcomputer",
      "title": "createcomputer",
      "type": "string"
     },
     "netbiosname": {
      "_name_": "netbiosname",
      "title": "netbiosname",
      "type": "string"
     },
     "netbiosname_b": {
      "_name_": "netbiosname_b",
      "title": "netbiosname_b",
      "type": "string"
     },
     "netbiosalias": {
      "_name_": "netbiosalias",
      "title": "netbiosalias",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "alias",
       "title": "alias",
       "_required_": false,
       "type": "string"
      }
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable"
     }
    },
    "additionalProperties": false,
    "_name_": "activedirectory_update",
    "title": "activedirectory_update",
    "default": {},
    "_attrs_order_": [
     "domainname",
     "bindname",
     "bindpw",
     "verbose_logging",
     "use_default_domain",
     "allow_trusted_doms",
     "allow_dns_updates",
     "disable_freenas_cache",
     "restrict_pam",
     "site",
     "kerberos_realm",
     "kerberos_principal",
     "timeout",
     "dns_timeout",
     "nss_info",
     "createcomputer",
     "netbiosname",
     "netbiosname_b",
     "netbiosalias",
     "enable"
    ]
   },
   "activedirectory_update": {
    "type": "object",
    "properties": {
     "domainname": {
      "_name_": "domainname",
      "title": "domainname",
      "type": "string",
      "description": "`domainname` full DNS domain name of the Active Directory domain."
     },
     "bindname": {
      "_name_": "bindname",
      "title": "bindname",
      "type": "string",
      "description": "`bindname` username used to perform the intial domain join."
     },
     "bindpw": {
      "_name_": "bindpw",
      "title": "bindpw",
      "type": "string",
      "description": "`bindpw` password used to perform the initial domain join. User-\nprovided credentials are used to obtain a kerberos ticket, which\nis used to perform the actual domain join."
     },
     "verbose_logging": {
      "type": "boolean",
      "_name_": "verbose_logging",
      "title": "verbose_logging",
      "description": "`verbose_logging` increase logging during the domain join process."
     },
     "use_default_domain": {
      "type": "boolean",
      "_name_": "use_default_domain",
      "title": "use_default_domain",
      "description": "`use_default_domain` controls whether domain users and groups have\nthe pre-windows 2000 domain name prepended to the user account. When\nenabled, the user appears as \"administrator\" rather than\n\"EXAMPLE\u0007dministrator\""
     },
     "allow_trusted_doms": {
      "type": "boolean",
      "_name_": "allow_trusted_doms",
      "title": "allow_trusted_doms",
      "description": "`allow_trusted_doms` enable support for trusted domains. If this\nparameter is enabled, then separate idmap backends _must_ be configured\nfor each trusted domain, and the idmap cache should be cleared."
     },
     "allow_dns_updates": {
      "type": "boolean",
      "_name_": "allow_dns_updates",
      "title": "allow_dns_updates",
      "description": "`allow_dns_updates` during the domain join process, automatically\ngenerate DNS entries in the AD domain for the NAS. If this is disabled,\nthen a domain administrator must manually add appropriate DNS entries\nfor the NAS. This parameter is recommended for TrueNAS HA servers."
     },
     "disable_freenas_cache": {
      "type": "boolean",
      "_name_": "disable_freenas_cache",
      "title": "disable_freenas_cache",
      "description": "`disable_freenas_cache` disables active caching of AD users and groups.\nWhen disabled, only users cached in winbind's internal cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\nin environments with a large amount of users."
     },
     "restrict_pam": {
      "type": "boolean",
      "_name_": "restrict_pam",
      "title": "restrict_pam",
      "default": false
     },
     "site": {
      "_name_": "site",
      "title": "site",
      "type": "string",
      "description": "`site` AD site of which the NAS is a member. This parameter is auto-\ndetected during the domain join process. If no AD site is configured\nfor the subnet in which the NAS is configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection is only performed\nduring the initial domain join.",
      "nullable": true
     },
     "kerberos_realm": {
      "type": "integer",
      "_name_": "kerberos_realm",
      "title": "kerberos_realm",
      "description": "`kerberos_realm` in which the server is located. This parameter is\nautomatically populated during the initial domain join. If the NAS has\nan AD site configured and that site has multiple kerberos servers, then\nthe kerberos realm is automatically updated with a site-specific\nconfiguration to use those servers. Auto-detection is only performed\nduring initial domain join.",
      "nullable": true
     },
     "kerberos_principal": {
      "_name_": "kerberos_principal",
      "title": "kerberos_principal",
      "type": "string",
      "description": "`kerberos_principal` kerberos principal to use for AD-related\noperations outside of Samba. After intial domain join, this field is\nupdated with the kerberos principal associated with the AD machine\naccount for the NAS.",
      "nullable": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 60,
      "description": "`timeout` timeout value for winbind-related operations. This value may\nneed to be increased in  environments with high latencies for\ncommunications with domain controllers or a large number of domain\ncontrollers. Lowering the value may cause status checks to fail."
     },
     "dns_timeout": {
      "type": "integer",
      "_name_": "dns_timeout",
      "title": "dns_timeout",
      "default": 10,
      "description": "`dns_timeout` timeout value for DNS queries during the initial domain\njoin. This value is also set as the NETWORK_TIMEOUT in the ldap config\nfile."
     },
     "nss_info": {
      "_name_": "nss_info",
      "title": "nss_info",
      "type": "string",
      "enum": [
       "TEMPLATE",
       "SFU",
       "SFU20",
       "RFC2307"
      ],
      "description": "`nss_info` controls how Winbind retrieves Name Service Information to\nconstruct a user's home directory and login shell. This parameter\nis only effective if the Active Directory Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.",
      "nullable": true
     },
     "createcomputer": {
      "_name_": "createcomputer",
      "title": "createcomputer",
      "type": "string",
      "description": "`createcomputer` Active Directory Organizational Unit in which new\ncomputer accounts are created."
     },
     "netbiosname": {
      "_name_": "netbiosname",
      "title": "netbiosname",
      "type": "string"
     },
     "netbiosname_b": {
      "_name_": "netbiosname_b",
      "title": "netbiosname_b",
      "type": "string"
     },
     "netbiosalias": {
      "_name_": "netbiosalias",
      "title": "netbiosalias",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "alias",
       "title": "alias",
       "_required_": false,
       "type": "string"
      }
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable",
      "description": "The Active Directory service is started after a configuration\nupdate if the service was initially disabled, and the updated\nconfiguration sets `enable` to `True`. The Active Directory\nservice is stopped if `enable` is changed to `False`. If the\nconfiguration is updated, but the initial `enable` state is `True`, and\nremains unchanged, then the samba server is only restarted."
     }
    },
    "additionalProperties": false,
    "_name_": "activedirectory_update",
    "title": "activedirectory_update",
    "default": {},
    "_attrs_order_": [
     "domainname",
     "bindname",
     "bindpw",
     "verbose_logging",
     "use_default_domain",
     "allow_trusted_doms",
     "allow_dns_updates",
     "disable_freenas_cache",
     "restrict_pam",
     "site",
     "kerberos_realm",
     "kerberos_principal",
     "timeout",
     "dns_timeout",
     "nss_info",
     "createcomputer",
     "netbiosname",
     "netbiosname_b",
     "netbiosalias",
     "enable"
    ]
   },
   "return_schema_of_activedirectory_update": {
    "type": "object",
    "properties": {
     "domainname": {
      "_name_": "domainname",
      "title": "domainname",
      "type": "string",
      "description": "`domainname` full DNS domain name of the Active Directory domain."
     },
     "bindname": {
      "_name_": "bindname",
      "title": "bindname",
      "type": "string",
      "description": "`bindname` username used to perform the intial domain join."
     },
     "bindpw": {
      "_name_": "bindpw",
      "title": "bindpw",
      "type": "string",
      "description": "`bindpw` password used to perform the initial domain join. User-\nprovided credentials are used to obtain a kerberos ticket, which\nis used to perform the actual domain join."
     },
     "verbose_logging": {
      "type": "boolean",
      "_name_": "verbose_logging",
      "title": "verbose_logging",
      "description": "`verbose_logging` increase logging during the domain join process."
     },
     "use_default_domain": {
      "type": "boolean",
      "_name_": "use_default_domain",
      "title": "use_default_domain",
      "description": "`use_default_domain` controls whether domain users and groups have\nthe pre-windows 2000 domain name prepended to the user account. When\nenabled, the user appears as \"administrator\" rather than\n\"EXAMPLE\u0007dministrator\""
     },
     "allow_trusted_doms": {
      "type": "boolean",
      "_name_": "allow_trusted_doms",
      "title": "allow_trusted_doms",
      "description": "`allow_trusted_doms` enable support for trusted domains. If this\nparameter is enabled, then separate idmap backends _must_ be configured\nfor each trusted domain, and the idmap cache should be cleared."
     },
     "allow_dns_updates": {
      "type": "boolean",
      "_name_": "allow_dns_updates",
      "title": "allow_dns_updates",
      "description": "`allow_dns_updates` during the domain join process, automatically\ngenerate DNS entries in the AD domain for the NAS. If this is disabled,\nthen a domain administrator must manually add appropriate DNS entries\nfor the NAS. This parameter is recommended for TrueNAS HA servers."
     },
     "disable_freenas_cache": {
      "type": "boolean",
      "_name_": "disable_freenas_cache",
      "title": "disable_freenas_cache",
      "description": "`disable_freenas_cache` disables active caching of AD users and groups.\nWhen disabled, only users cached in winbind's internal cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\nin environments with a large amount of users."
     },
     "restrict_pam": {
      "type": "boolean",
      "_name_": "restrict_pam",
      "title": "restrict_pam",
      "default": false
     },
     "site": {
      "_name_": "site",
      "title": "site",
      "type": "string",
      "description": "`site` AD site of which the NAS is a member. This parameter is auto-\ndetected during the domain join process. If no AD site is configured\nfor the subnet in which the NAS is configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection is only performed\nduring the initial domain join.",
      "nullable": true
     },
     "kerberos_realm": {
      "type": "integer",
      "_name_": "kerberos_realm",
      "title": "kerberos_realm",
      "description": "`kerberos_realm` in which the server is located. This parameter is\nautomatically populated during the initial domain join. If the NAS has\nan AD site configured and that site has multiple kerberos servers, then\nthe kerberos realm is automatically updated with a site-specific\nconfiguration to use those servers. Auto-detection is only performed\nduring initial domain join.",
      "nullable": true
     },
     "kerberos_principal": {
      "_name_": "kerberos_principal",
      "title": "kerberos_principal",
      "type": "string",
      "description": "`kerberos_principal` kerberos principal to use for AD-related\noperations outside of Samba. After intial domain join, this field is\nupdated with the kerberos principal associated with the AD machine\naccount for the NAS.",
      "nullable": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 60,
      "description": "`timeout` timeout value for winbind-related operations. This value may\nneed to be increased in  environments with high latencies for\ncommunications with domain controllers or a large number of domain\ncontrollers. Lowering the value may cause status checks to fail."
     },
     "dns_timeout": {
      "type": "integer",
      "_name_": "dns_timeout",
      "title": "dns_timeout",
      "default": 10,
      "description": "`dns_timeout` timeout value for DNS queries during the initial domain\njoin. This value is also set as the NETWORK_TIMEOUT in the ldap config\nfile."
     },
     "nss_info": {
      "_name_": "nss_info",
      "title": "nss_info",
      "type": "string",
      "enum": [
       "TEMPLATE",
       "SFU",
       "SFU20",
       "RFC2307"
      ],
      "description": "`nss_info` controls how Winbind retrieves Name Service Information to\nconstruct a user's home directory and login shell. This parameter\nis only effective if the Active Directory Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.",
      "nullable": true
     },
     "createcomputer": {
      "_name_": "createcomputer",
      "title": "createcomputer",
      "type": "string",
      "description": "`createcomputer` Active Directory Organizational Unit in which new\ncomputer accounts are created."
     },
     "netbiosname": {
      "_name_": "netbiosname",
      "title": "netbiosname",
      "type": "string"
     },
     "netbiosname_b": {
      "_name_": "netbiosname_b",
      "title": "netbiosname_b",
      "type": "string"
     },
     "netbiosalias": {
      "_name_": "netbiosalias",
      "title": "netbiosalias",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "alias",
       "title": "alias",
       "_required_": false,
       "type": "string"
      }
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable",
      "description": "The Active Directory service is started after a configuration\nupdate if the service was initially disabled, and the updated\nconfiguration sets `enable` to `True`. The Active Directory\nservice is stopped if `enable` is changed to `False`. If the\nconfiguration is updated, but the initial `enable` state is `True`, and\nremains unchanged, then the samba server is only restarted."
     },
     "job_id": {
      "type": "integer",
      "_name_": "job_id",
      "title": "job_id"
     }
    },
    "additionalProperties": false,
    "_name_": "activedirectory_returns",
    "title": "activedirectory_returns",
    "default": {},
    "_attrs_order_": [
     "domainname",
     "bindname",
     "bindpw",
     "verbose_logging",
     "use_default_domain",
     "allow_trusted_doms",
     "allow_dns_updates",
     "disable_freenas_cache",
     "restrict_pam",
     "site",
     "kerberos_realm",
     "kerberos_principal",
     "timeout",
     "dns_timeout",
     "nss_info",
     "createcomputer",
     "netbiosname",
     "netbiosname_b",
     "netbiosalias",
     "enable",
     "job_id"
    ]
   },
   "activedirectory_domain_info": {
    "_name_": "domain",
    "title": "domain",
    "default": "",
    "type": "string"
   },
   "return_schema_of_activedirectory_domain_info": {
    "type": "object",
    "properties": {
     "LDAP server": {
      "_name_": "LDAP server",
      "title": "LDAP server",
      "type": "string"
     },
     "LDAP server name": {
      "_name_": "LDAP server name",
      "title": "LDAP server name",
      "type": "string"
     },
     "Realm": {
      "_name_": "Realm",
      "title": "Realm",
      "type": "string",
      "description": "`Realm` Kerberos realm"
     },
     "Bind Path": {
      "_name_": "Bind Path",
      "title": "Bind Path",
      "type": "string"
     },
     "LDAP port": {
      "type": "integer",
      "_name_": "LDAP port",
      "title": "LDAP port"
     },
     "Server time": {
      "type": "integer",
      "_name_": "Server time",
      "title": "Server time"
     },
     "KDC server": {
      "_name_": "KDC server",
      "title": "KDC server",
      "type": "string"
     },
     "Server time offset": {
      "type": "integer",
      "_name_": "Server time offset",
      "title": "Server time offset"
     },
     "Last machine account password change": {
      "type": "integer",
      "_name_": "Last machine account password change",
      "title": "Last machine account password change"
     }
    },
    "additionalProperties": false,
    "_name_": "domain_info",
    "title": "domain_info",
    "default": {},
    "_attrs_order_": [
     "LDAP server",
     "LDAP server name",
     "Realm",
     "Bind Path",
     "LDAP port",
     "Server time",
     "KDC server",
     "Server time offset",
     "Last machine account password change"
    ]
   },
   "return_schema_of_activedirectory_get_state": {
    "_name_": "directoryservice_state",
    "title": "directoryservice_state",
    "type": "string",
    "enum": [
     "DISABLED",
     "FAULTED",
     "LEAVING",
     "JOINING",
     "HEALTHY"
    ]
   },
   "activedirectory_leave": {
    "type": "object",
    "properties": {
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_username_password",
    "title": "kerberos_username_password",
    "default": {},
    "_attrs_order_": [
     "username",
     "password"
    ]
   },
   "return_schema_of_activedirectory_nss_info_choices": {
    "_name_": "nss_info_ad",
    "title": "nss_info_ad",
    "default": "SFU",
    "type": "string",
    "enum": [
     "SFU",
     "SFU20",
     "RFC2307",
     "TEMPLATE"
    ]
   },
   "return_schema_of_activedirectory_started": {
    "type": "boolean",
    "_name_": "started",
    "title": "started"
   },
   "alert_dismiss": {
    "_name_": "uuid",
    "title": "uuid",
    "type": "string"
   },
   "return_schema_of_alert_list": {
    "_name_": "alerts",
    "title": "alerts",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "uuid": {
       "_name_": "uuid",
       "title": "uuid",
       "_required_": false,
       "type": "string"
      },
      "source": {
       "_name_": "source",
       "title": "source",
       "_required_": false,
       "type": "string"
      },
      "klass": {
       "_name_": "klass",
       "title": "klass",
       "_required_": false,
       "type": "string"
      },
      "args": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": false,
       "_name_": "args",
       "title": "args",
       "_required_": false
      },
      "node": {
       "_name_": "node",
       "title": "node",
       "_required_": false,
       "type": "string"
      },
      "key": {
       "_name_": "key",
       "title": "key",
       "_required_": false,
       "type": "string"
      },
      "datetime": {
       "_name_": "datetime",
       "title": "datetime",
       "_required_": false,
       "type": "string"
      },
      "last_occurrence": {
       "_name_": "last_occurrence",
       "title": "last_occurrence",
       "_required_": false,
       "type": "string"
      },
      "dismissed": {
       "type": "boolean",
       "_name_": "dismissed",
       "title": "dismissed",
       "_required_": false
      },
      "mail": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        },
        {
         "type": "boolean"
        },
        {
         "type": "object"
        },
        {
         "type": "array"
        }
       ],
       "nullable": true,
       "_name_": "mail",
       "title": "mail",
       "_required_": false
      },
      "text": {
       "_name_": "text",
       "title": "text",
       "_required_": false,
       "type": "string"
      },
      "id": {
       "_name_": "id",
       "title": "id",
       "_required_": false,
       "type": "string"
      },
      "level": {
       "_name_": "level",
       "title": "level",
       "_required_": false,
       "type": "string"
      },
      "formatted": {
       "_name_": "formatted",
       "title": "formatted",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "one_shot": {
       "type": "boolean",
       "_name_": "one_shot",
       "title": "one_shot",
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "alert",
     "title": "alert",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "uuid",
      "source",
      "klass",
      "args",
      "node",
      "key",
      "datetime",
      "last_occurrence",
      "dismissed",
      "mail",
      "text",
      "id",
      "level",
      "formatted",
      "one_shot"
     ]
    }
   },
   "return_schema_of_alert_list_categories": {
    "_name_": "categories",
    "title": "categories",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "id": {
       "_name_": "id",
       "title": "id",
       "_required_": false,
       "type": "string"
      },
      "title": {
       "_name_": "title",
       "title": "title",
       "_required_": false,
       "type": "string"
      },
      "classes": {
       "_name_": "classes",
       "title": "classes",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "type": "object",
         "properties": {
          "id": {
           "_name_": "id",
           "title": "id",
           "_required_": false,
           "type": "string"
          },
          "title": {
           "_name_": "title",
           "title": "title",
           "_required_": false,
           "type": "string"
          },
          "level": {
           "_name_": "level",
           "title": "level",
           "_required_": false,
           "type": "string"
          },
          "proactive_support": {
           "type": "boolean",
           "_name_": "proactive_support",
           "title": "proactive_support",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "category_class",
         "title": "category_class",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id",
          "title",
          "level",
          "proactive_support"
         ]
        }
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "category",
     "title": "category",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "id",
      "title",
      "classes"
     ]
    }
   },
   "return_schema_of_alert_list_policies": {
    "_name_": "alert_policies",
    "title": "alert_policies",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "policy",
     "title": "policy",
     "_required_": false,
     "type": "string",
     "enum": [
      "IMMEDIATELY",
      "HOURLY",
      "DAILY",
      "NEVER"
     ]
    }
   },
   "alert_restore": {
    "_name_": "uuid",
    "title": "uuid",
    "type": "string"
   },
   "return_schema_of_alertclasses_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "classes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "classes",
      "title": "classes",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "alertclasses_entry",
    "title": "alertclasses_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "classes"
    ]
   },
   "alertclasses_update": {
    "type": "object",
    "properties": {
     "classes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "classes",
      "title": "classes",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "alertclasses_update",
    "title": "alertclasses_update",
    "default": {},
    "_attrs_order_": [
     "classes"
    ]
   },
   "return_schema_of_alertclasses_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "classes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "classes",
      "title": "classes",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "alertclasses_update_returns",
    "title": "alertclasses_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "classes"
    ]
   },
   "return_schema_of_alertservice_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "level": {
          "_name_": "level",
          "title": "level",
          "_required_": true,
          "type": "string",
          "enum": [
           "INFO",
           "NOTICE",
           "WARNING",
           "ERROR",
           "CRITICAL",
           "ALERT",
           "EMERGENCY"
          ]
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "type__title": {
          "_name_": "type__title",
          "title": "type__title",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "alertservice_entry",
        "title": "alertservice_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "type",
         "attributes",
         "level",
         "enabled",
         "id",
         "type__title"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "level": {
        "_name_": "level",
        "title": "level",
        "_required_": true,
        "type": "string",
        "enum": [
         "INFO",
         "NOTICE",
         "WARNING",
         "ERROR",
         "CRITICAL",
         "ALERT",
         "EMERGENCY"
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "type__title": {
        "_name_": "type__title",
        "title": "type__title",
        "_required_": false,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "alertservice_entry",
      "title": "alertservice_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "type",
       "attributes",
       "level",
       "enabled",
       "id",
       "type__title"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "level": {
        "_name_": "level",
        "title": "level",
        "_required_": true,
        "type": "string",
        "enum": [
         "INFO",
         "NOTICE",
         "WARNING",
         "ERROR",
         "CRITICAL",
         "ALERT",
         "EMERGENCY"
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "type__title": {
        "_name_": "type__title",
        "title": "type__title",
        "_required_": false,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "alertservice_entry",
      "title": "alertservice_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "type",
       "attributes",
       "level",
       "enabled",
       "id",
       "type__title"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "alertservice_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "Create an Alert Service of specified `type`.\nIf `enabled`, it sends alerts to the configured `type` of Alert Service."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string",
      "enum": [
       "INFO",
       "NOTICE",
       "WARNING",
       "ERROR",
       "CRITICAL",
       "ALERT",
       "EMERGENCY"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true,
      "description": "If `enabled`, it sends alerts to the configured `type` of Alert Service."
     }
    },
    "additionalProperties": false,
    "_name_": "alert_service_create",
    "title": "alert_service_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "level",
     "enabled"
    ]
   },
   "return_schema_of_alertservice_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "Create an Alert Service of specified `type`.\nIf `enabled`, it sends alerts to the configured `type` of Alert Service."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string",
      "enum": [
       "INFO",
       "NOTICE",
       "WARNING",
       "ERROR",
       "CRITICAL",
       "ALERT",
       "EMERGENCY"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true,
      "description": "If `enabled`, it sends alerts to the configured `type` of Alert Service."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "type__title": {
      "_name_": "type__title",
      "title": "type__title",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "alertservice_create_returns",
    "title": "alertservice_create_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "level",
     "enabled",
     "id",
     "type__title"
    ]
   },
   "return_schema_of_alertservice_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "alertservice_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "Create an Alert Service of specified `type`.\nIf `enabled`, it sends alerts to the configured `type` of Alert Service.\n  Create an Alert Service of Mail `type`"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string",
      "enum": [
       "INFO",
       "NOTICE",
       "WARNING",
       "ERROR",
       "CRITICAL",
       "ALERT",
       "EMERGENCY"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true,
      "description": "If `enabled`, it sends alerts to the configured `type` of Alert Service."
     }
    },
    "additionalProperties": false,
    "_name_": "alert_service_update",
    "title": "alert_service_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "level",
     "enabled"
    ]
   },
   "return_schema_of_alertservice_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "Create an Alert Service of specified `type`.\nIf `enabled`, it sends alerts to the configured `type` of Alert Service.\n  Create an Alert Service of Mail `type`"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string",
      "enum": [
       "INFO",
       "NOTICE",
       "WARNING",
       "ERROR",
       "CRITICAL",
       "ALERT",
       "EMERGENCY"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true,
      "description": "If `enabled`, it sends alerts to the configured `type` of Alert Service."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update Alert Service of `id`."
     },
     "type__title": {
      "_name_": "type__title",
      "title": "type__title",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "alertservice_update_returns",
    "title": "alertservice_update_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "level",
     "enabled",
     "id",
     "type__title"
    ]
   },
   "alertservice_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "alertservice_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "alertservice_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/alertservice_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/alertservice_get_instance_1"
     }
    }
   },
   "return_schema_of_alertservice_get_instance": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string",
      "enum": [
       "INFO",
       "NOTICE",
       "WARNING",
       "ERROR",
       "CRITICAL",
       "ALERT",
       "EMERGENCY"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "type__title": {
      "_name_": "type__title",
      "title": "type__title",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "alertservice_entry",
    "title": "alertservice_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "level",
     "enabled",
     "id",
     "type__title"
    ]
   },
   "return_schema_of_alertservice_list_types": {
    "_name_": "alert_service_types",
    "title": "alert_service_types",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "title": {
       "_name_": "title",
       "title": "title",
       "_required_": true,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "alert_service_type",
     "title": "alert_service_type",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "title"
     ]
    }
   },
   "alertservice_test": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "Send a test alert using `type` of Alert Service."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string",
      "enum": [
       "INFO",
       "NOTICE",
       "WARNING",
       "ERROR",
       "CRITICAL",
       "ALERT",
       "EMERGENCY"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "alert_service_create",
    "title": "alert_service_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "level",
     "enabled"
    ]
   },
   "return_schema_of_alertservice_test": {
    "type": "boolean",
    "_name_": "successful_test",
    "title": "successful_test",
    "description": "Is `true` if test is successful"
   },
   "return_schema_of_api_key_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "api_key_entry",
        "title": "api_key_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "api_key_entry",
      "title": "api_key_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "api_key_entry",
      "title": "api_key_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "api_key_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "api_key_create",
    "title": "api_key_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "allowlist"
    ]
   },
   "return_schema_of_api_key_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "api_key_create_returns",
    "title": "api_key_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_api_key_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "api_key_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      }
     },
     "reset": {
      "type": "boolean",
      "_name_": "reset",
      "title": "reset"
     }
    },
    "additionalProperties": false,
    "_name_": "api_key_update",
    "title": "api_key_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "allowlist",
     "reset"
    ]
   },
   "return_schema_of_api_key_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "api_key_update_returns",
    "title": "api_key_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "api_key_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "api_key_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "api_key_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/api_key_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/api_key_get_instance_1"
     }
    }
   },
   "return_schema_of_api_key_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "api_key_entry",
    "title": "api_key_entry",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_app_available": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "healthy": {
        "type": "boolean",
        "_name_": "healthy",
        "title": "healthy",
        "_required_": true
       },
       "installed": {
        "type": "boolean",
        "_name_": "installed",
        "title": "installed",
        "_required_": true
       },
       "recommended": {
        "type": "boolean",
        "_name_": "recommended",
        "title": "recommended",
        "_required_": true
       },
       "last_update": {
        "_name_": "last_update",
        "title": "last_update",
        "_required_": true,
        "type": "string"
       },
       "categories": {
        "_name_": "categories",
        "title": "categories",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "maintainers": {
        "_name_": "maintainers",
        "title": "maintainers",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "tags": {
        "_name_": "tags",
        "title": "tags",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "screenshots": {
        "_name_": "screenshots",
        "title": "screenshots",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "_name_": "screenshot",
          "title": "screenshot",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sources": {
        "_name_": "sources",
        "title": "sources",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "app_readme": {
        "_name_": "app_readme",
        "title": "app_readme",
        "_required_": true,
        "type": "string"
       },
       "location": {
        "_name_": "location",
        "title": "location",
        "_required_": true,
        "type": "string"
       },
       "healthy_error": {
        "_name_": "healthy_error",
        "title": "healthy_error",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "home": {
        "_name_": "home",
        "title": "home",
        "_required_": true,
        "type": "string"
       },
       "latest_version": {
        "_name_": "latest_version",
        "title": "latest_version",
        "_required_": true,
        "type": "string"
       },
       "latest_app_version": {
        "_name_": "latest_app_version",
        "title": "latest_app_version",
        "_required_": true,
        "type": "string"
       },
       "latest_human_version": {
        "_name_": "latest_human_version",
        "title": "latest_human_version",
        "_required_": true,
        "type": "string"
       },
       "icon_url": {
        "_name_": "icon_url",
        "title": "icon_url",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "train": {
        "_name_": "train",
        "title": "train",
        "_required_": true,
        "type": "string"
       },
       "catalog": {
        "_name_": "catalog",
        "title": "catalog",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "available_apps",
      "title": "available_apps",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "healthy",
       "installed",
       "recommended",
       "last_update",
       "categories",
       "maintainers",
       "tags",
       "screenshots",
       "sources",
       "name",
       "title",
       "description",
       "app_readme",
       "location",
       "healthy_error",
       "home",
       "latest_version",
       "latest_app_version",
       "latest_human_version",
       "icon_url",
       "train",
       "catalog"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "healthy": {
          "type": "boolean",
          "_name_": "healthy",
          "title": "healthy",
          "_required_": true
         },
         "installed": {
          "type": "boolean",
          "_name_": "installed",
          "title": "installed",
          "_required_": true
         },
         "recommended": {
          "type": "boolean",
          "_name_": "recommended",
          "title": "recommended",
          "_required_": true
         },
         "last_update": {
          "_name_": "last_update",
          "title": "last_update",
          "_required_": true,
          "type": "string"
         },
         "categories": {
          "_name_": "categories",
          "title": "categories",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "maintainers": {
          "_name_": "maintainers",
          "title": "maintainers",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "tags": {
          "_name_": "tags",
          "title": "tags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "screenshots": {
          "_name_": "screenshots",
          "title": "screenshots",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "screenshot",
            "title": "screenshot",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "sources": {
          "_name_": "sources",
          "title": "sources",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "title": {
          "_name_": "title",
          "title": "title",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "app_readme": {
          "_name_": "app_readme",
          "title": "app_readme",
          "_required_": true,
          "type": "string"
         },
         "location": {
          "_name_": "location",
          "title": "location",
          "_required_": true,
          "type": "string"
         },
         "healthy_error": {
          "_name_": "healthy_error",
          "title": "healthy_error",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "home": {
          "_name_": "home",
          "title": "home",
          "_required_": true,
          "type": "string"
         },
         "latest_version": {
          "_name_": "latest_version",
          "title": "latest_version",
          "_required_": true,
          "type": "string"
         },
         "latest_app_version": {
          "_name_": "latest_app_version",
          "title": "latest_app_version",
          "_required_": true,
          "type": "string"
         },
         "latest_human_version": {
          "_name_": "latest_human_version",
          "title": "latest_human_version",
          "_required_": true,
          "type": "string"
         },
         "icon_url": {
          "_name_": "icon_url",
          "title": "icon_url",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "train": {
          "_name_": "train",
          "title": "train",
          "_required_": true,
          "type": "string"
         },
         "catalog": {
          "_name_": "catalog",
          "title": "catalog",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "available_apps",
        "title": "available_apps",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "healthy",
         "installed",
         "recommended",
         "last_update",
         "categories",
         "maintainers",
         "tags",
         "screenshots",
         "sources",
         "name",
         "title",
         "description",
         "app_readme",
         "location",
         "healthy_error",
         "home",
         "latest_version",
         "latest_app_version",
         "latest_human_version",
         "icon_url",
         "train",
         "catalog"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_app_categories": {
    "_name_": "categories",
    "title": "categories",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "category",
     "title": "category",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_app_latest": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "healthy": {
        "type": "boolean",
        "_name_": "healthy",
        "title": "healthy",
        "_required_": true
       },
       "installed": {
        "type": "boolean",
        "_name_": "installed",
        "title": "installed",
        "_required_": true
       },
       "recommended": {
        "type": "boolean",
        "_name_": "recommended",
        "title": "recommended",
        "_required_": true
       },
       "last_update": {
        "_name_": "last_update",
        "title": "last_update",
        "_required_": true,
        "type": "string"
       },
       "categories": {
        "_name_": "categories",
        "title": "categories",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "maintainers": {
        "_name_": "maintainers",
        "title": "maintainers",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "tags": {
        "_name_": "tags",
        "title": "tags",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "screenshots": {
        "_name_": "screenshots",
        "title": "screenshots",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "_name_": "screenshot",
          "title": "screenshot",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sources": {
        "_name_": "sources",
        "title": "sources",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "app_readme": {
        "_name_": "app_readme",
        "title": "app_readme",
        "_required_": true,
        "type": "string"
       },
       "location": {
        "_name_": "location",
        "title": "location",
        "_required_": true,
        "type": "string"
       },
       "healthy_error": {
        "_name_": "healthy_error",
        "title": "healthy_error",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "home": {
        "_name_": "home",
        "title": "home",
        "_required_": true,
        "type": "string"
       },
       "latest_version": {
        "_name_": "latest_version",
        "title": "latest_version",
        "_required_": true,
        "type": "string"
       },
       "latest_app_version": {
        "_name_": "latest_app_version",
        "title": "latest_app_version",
        "_required_": true,
        "type": "string"
       },
       "latest_human_version": {
        "_name_": "latest_human_version",
        "title": "latest_human_version",
        "_required_": true,
        "type": "string"
       },
       "icon_url": {
        "_name_": "icon_url",
        "title": "icon_url",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "train": {
        "_name_": "train",
        "title": "train",
        "_required_": true,
        "type": "string"
       },
       "catalog": {
        "_name_": "catalog",
        "title": "catalog",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "available_apps",
      "title": "available_apps",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "healthy",
       "installed",
       "recommended",
       "last_update",
       "categories",
       "maintainers",
       "tags",
       "screenshots",
       "sources",
       "name",
       "title",
       "description",
       "app_readme",
       "location",
       "healthy_error",
       "home",
       "latest_version",
       "latest_app_version",
       "latest_human_version",
       "icon_url",
       "train",
       "catalog"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "healthy": {
          "type": "boolean",
          "_name_": "healthy",
          "title": "healthy",
          "_required_": true
         },
         "installed": {
          "type": "boolean",
          "_name_": "installed",
          "title": "installed",
          "_required_": true
         },
         "recommended": {
          "type": "boolean",
          "_name_": "recommended",
          "title": "recommended",
          "_required_": true
         },
         "last_update": {
          "_name_": "last_update",
          "title": "last_update",
          "_required_": true,
          "type": "string"
         },
         "categories": {
          "_name_": "categories",
          "title": "categories",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "maintainers": {
          "_name_": "maintainers",
          "title": "maintainers",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "tags": {
          "_name_": "tags",
          "title": "tags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "screenshots": {
          "_name_": "screenshots",
          "title": "screenshots",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "screenshot",
            "title": "screenshot",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "sources": {
          "_name_": "sources",
          "title": "sources",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "title": {
          "_name_": "title",
          "title": "title",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "app_readme": {
          "_name_": "app_readme",
          "title": "app_readme",
          "_required_": true,
          "type": "string"
         },
         "location": {
          "_name_": "location",
          "title": "location",
          "_required_": true,
          "type": "string"
         },
         "healthy_error": {
          "_name_": "healthy_error",
          "title": "healthy_error",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "home": {
          "_name_": "home",
          "title": "home",
          "_required_": true,
          "type": "string"
         },
         "latest_version": {
          "_name_": "latest_version",
          "title": "latest_version",
          "_required_": true,
          "type": "string"
         },
         "latest_app_version": {
          "_name_": "latest_app_version",
          "title": "latest_app_version",
          "_required_": true,
          "type": "string"
         },
         "latest_human_version": {
          "_name_": "latest_human_version",
          "title": "latest_human_version",
          "_required_": true,
          "type": "string"
         },
         "icon_url": {
          "_name_": "icon_url",
          "title": "icon_url",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "train": {
          "_name_": "train",
          "title": "train",
          "_required_": true,
          "type": "string"
         },
         "catalog": {
          "_name_": "catalog",
          "title": "catalog",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "available_apps",
        "title": "available_apps",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "healthy",
         "installed",
         "recommended",
         "last_update",
         "categories",
         "maintainers",
         "tags",
         "screenshots",
         "sources",
         "name",
         "title",
         "description",
         "app_readme",
         "location",
         "healthy_error",
         "home",
         "latest_version",
         "latest_app_version",
         "latest_human_version",
         "icon_url",
         "train",
         "catalog"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "app_similar_0": {
    "_name_": "app_name",
    "title": "app_name",
    "type": "string"
   },
   "app_similar_1": {
    "_name_": "catalog",
    "title": "catalog",
    "type": "string"
   },
   "app_similar_2": {
    "_name_": "train",
    "title": "train",
    "type": "string"
   },
   "app_similar": {
    "type": "object",
    "properties": {
     "app_name": {
      "$ref": "#/components/schemas/app_similar_0"
     },
     "catalog": {
      "$ref": "#/components/schemas/app_similar_1"
     },
     "train": {
      "$ref": "#/components/schemas/app_similar_2"
     }
    }
   },
   "return_schema_of_app_similar": {
    "_name_": "similar",
    "title": "similar",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "healthy": {
       "type": "boolean",
       "_name_": "healthy",
       "title": "healthy",
       "_required_": true
      },
      "installed": {
       "type": "boolean",
       "_name_": "installed",
       "title": "installed",
       "_required_": true
      },
      "recommended": {
       "type": "boolean",
       "_name_": "recommended",
       "title": "recommended",
       "_required_": true
      },
      "last_update": {
       "_name_": "last_update",
       "title": "last_update",
       "_required_": true,
       "type": "string"
      },
      "categories": {
       "_name_": "categories",
       "title": "categories",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": []
      },
      "maintainers": {
       "_name_": "maintainers",
       "title": "maintainers",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": []
      },
      "tags": {
       "_name_": "tags",
       "title": "tags",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": []
      },
      "screenshots": {
       "_name_": "screenshots",
       "title": "screenshots",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": [
        {
         "_name_": "screenshot",
         "title": "screenshot",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "sources": {
       "_name_": "sources",
       "title": "sources",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": [
        {
         "_name_": "source",
         "title": "source",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "title": {
       "_name_": "title",
       "title": "title",
       "_required_": true,
       "type": "string"
      },
      "description": {
       "_name_": "description",
       "title": "description",
       "_required_": true,
       "type": "string"
      },
      "app_readme": {
       "_name_": "app_readme",
       "title": "app_readme",
       "_required_": true,
       "type": "string"
      },
      "location": {
       "_name_": "location",
       "title": "location",
       "_required_": true,
       "type": "string"
      },
      "healthy_error": {
       "_name_": "healthy_error",
       "title": "healthy_error",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "home": {
       "_name_": "home",
       "title": "home",
       "_required_": true,
       "type": "string"
      },
      "latest_version": {
       "_name_": "latest_version",
       "title": "latest_version",
       "_required_": true,
       "type": "string"
      },
      "latest_app_version": {
       "_name_": "latest_app_version",
       "title": "latest_app_version",
       "_required_": true,
       "type": "string"
      },
      "latest_human_version": {
       "_name_": "latest_human_version",
       "title": "latest_human_version",
       "_required_": true,
       "type": "string"
      },
      "icon_url": {
       "_name_": "icon_url",
       "title": "icon_url",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "train": {
       "_name_": "train",
       "title": "train",
       "_required_": true,
       "type": "string"
      },
      "catalog": {
       "_name_": "catalog",
       "title": "catalog",
       "_required_": true,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "available_apps",
     "title": "available_apps",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "healthy",
      "installed",
      "recommended",
      "last_update",
      "categories",
      "maintainers",
      "tags",
      "screenshots",
      "sources",
      "name",
      "title",
      "description",
      "app_readme",
      "location",
      "healthy_error",
      "home",
      "latest_version",
      "latest_app_version",
      "latest_human_version",
      "icon_url",
      "train",
      "catalog"
     ]
    }
   },
   "return_schema_of_audit_config": {
    "type": "object",
    "properties": {
     "retention": {
      "type": "integer",
      "_name_": "retention",
      "title": "retention"
     },
     "reservation": {
      "type": "integer",
      "_name_": "reservation",
      "title": "reservation"
     },
     "quota": {
      "type": "integer",
      "_name_": "quota",
      "title": "quota"
     },
     "quota_fill_warning": {
      "type": "integer",
      "_name_": "quota_fill_warning",
      "title": "quota_fill_warning"
     },
     "quota_fill_critical": {
      "type": "integer",
      "_name_": "quota_fill_critical",
      "title": "quota_fill_critical"
     },
     "available": {
      "type": "integer",
      "_name_": "available",
      "title": "available"
     },
     "space": {
      "type": "object",
      "properties": {
       "used": {
        "type": "integer",
        "_name_": "used",
        "title": "used"
       },
       "used_by_snapshots": {
        "type": "integer",
        "_name_": "used_by_snapshots",
        "title": "used_by_snapshots"
       },
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       }
      },
      "additionalProperties": false,
      "_name_": "space",
      "title": "space",
      "default": {},
      "_attrs_order_": [
       "used",
       "used_by_snapshots",
       "available"
      ]
     },
     "remote_logging_enabled": {
      "type": "boolean",
      "_name_": "remote_logging_enabled",
      "title": "remote_logging_enabled"
     },
     "enabled_services": {
      "_name_": "enabled_services",
      "title": "enabled_services",
      "default": [],
      "type": "array",
      "items": {}
     }
    },
    "additionalProperties": false,
    "_name_": "system_audit_config",
    "title": "system_audit_config",
    "default": {},
    "_attrs_order_": [
     "retention",
     "reservation",
     "quota",
     "quota_fill_warning",
     "quota_fill_critical",
     "available",
     "space",
     "remote_logging_enabled",
     "enabled_services"
    ]
   },
   "audit_update": {
    "type": "object",
    "properties": {
     "retention": {
      "type": "integer",
      "_name_": "retention",
      "title": "retention",
      "description": "`retention` - number of days to retain local audit messages."
     },
     "reservation": {
      "type": "integer",
      "_name_": "reservation",
      "title": "reservation",
      "description": "`reservation` - size in GiB of refreservation to set on ZFS dataset\nwhere the audit databases are stored. The refreservation specifies the\nminimum amount of space guaranteed to the dataset, and counts against\nthe space available for other datasets in the zpool where the audit\ndataset is located."
     },
     "quota": {
      "type": "integer",
      "_name_": "quota",
      "title": "quota",
      "description": "`quota` - size in GiB of the maximum amount of space that may be\nconsumed by the dataset where the audit dabases are stored."
     },
     "quota_fill_warning": {
      "type": "integer",
      "_name_": "quota_fill_warning",
      "title": "quota_fill_warning",
      "description": "`quota_fill_warning` - percentage used of dataset quota at which to\ngenerate a warning alert."
     },
     "quota_fill_critical": {
      "type": "integer",
      "_name_": "quota_fill_critical",
      "title": "quota_fill_critical",
      "description": "`quota_fill_critical` - percentage used of dataset quota at which to\ngenerate a critical alert."
     }
    },
    "additionalProperties": false,
    "_name_": "system_audit_update",
    "title": "system_audit_update",
    "default": {},
    "_attrs_order_": [
     "retention",
     "reservation",
     "quota",
     "quota_fill_warning",
     "quota_fill_critical"
    ]
   },
   "audit_download_report": {
    "type": "object",
    "properties": {
     "report_name": {
      "_name_": "report_name",
      "title": "report_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "audit_download",
    "title": "audit_download",
    "default": {},
    "_attrs_order_": [
     "report_name"
    ]
   },
   "audit_export": {
    "type": "object",
    "properties": {
     "services": {
      "_name_": "services",
      "title": "services",
      "default": [
       "MIDDLEWARE",
       "SMB"
      ],
      "type": "array",
      "items": {
       "_name_": "db_name",
       "title": "db_name",
       "_required_": false,
       "type": "string",
       "enum": [
        "MIDDLEWARE",
        "SMB"
       ]
      },
      "description": "`query-options` for the specified `services` in the specified `export_format`."
     },
     "query-filters": {
      "_name_": "query-filters",
      "title": "query-filters",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "query-filter",
       "title": "query-filter",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      }
     },
     "query-options": {
      "type": "object",
      "properties": {
       "relationships": {
        "type": "boolean",
        "_name_": "relationships",
        "title": "relationships",
        "default": true
       },
       "extend": {
        "_name_": "extend",
        "title": "extend",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extend_context": {
        "_name_": "extend_context",
        "title": "extend_context",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "prefix": {
        "_name_": "prefix",
        "title": "prefix",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extra": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extra",
        "title": "extra",
        "default": {},
        "_attrs_order_": []
       },
       "order_by": {
        "_name_": "order_by",
        "title": "order_by",
        "default": [],
        "type": "array",
        "items": {}
       },
       "select": {
        "_name_": "select",
        "title": "select",
        "default": [],
        "type": "array",
        "items": {}
       },
       "count": {
        "type": "boolean",
        "_name_": "count",
        "title": "count",
        "default": false
       },
       "get": {
        "type": "boolean",
        "_name_": "get",
        "title": "get",
        "default": false
       },
       "offset": {
        "type": "integer",
        "_name_": "offset",
        "title": "offset",
        "default": 0
       },
       "limit": {
        "type": "integer",
        "_name_": "limit",
        "title": "limit",
        "default": 0
       },
       "force_sql_filters": {
        "type": "boolean",
        "_name_": "force_sql_filters",
        "title": "force_sql_filters",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "query-options",
      "title": "query-options",
      "default": {},
      "_attrs_order_": [
       "relationships",
       "extend",
       "extend_context",
       "prefix",
       "extra",
       "order_by",
       "select",
       "count",
       "get",
       "offset",
       "limit",
       "force_sql_filters"
      ]
     },
     "export_format": {
      "_name_": "export_format",
      "title": "export_format",
      "default": "JSON",
      "type": "string",
      "enum": [
       "CSV",
       "JSON",
       "YAML"
      ],
      "description": "`query-options` for the specified `services` in the specified `export_format`."
     }
    },
    "additionalProperties": false,
    "_name_": "audit_export",
    "title": "audit_export",
    "default": {},
    "_attrs_order_": [
     "services",
     "query-filters",
     "query-options",
     "export_format"
    ]
   },
   "return_schema_of_audit_export": {
    "_name_": "audit_file_path",
    "title": "audit_file_path",
    "type": "string"
   },
   "audit_query": {
    "type": "object",
    "properties": {
     "services": {
      "_name_": "services",
      "title": "services",
      "default": [
       "MIDDLEWARE",
       "SMB"
      ],
      "type": "array",
      "items": {
       "_name_": "db_name",
       "title": "db_name",
       "_required_": false,
       "type": "string",
       "enum": [
        "MIDDLEWARE",
        "SMB"
       ]
      },
      "description": "Query contents of audit databases specified by `services`.\n`services` - Name of the service that generated the message. This will\nbe one of the names specified in `services`."
     },
     "query-filters": {
      "_name_": "query-filters",
      "title": "query-filters",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "query-filter",
       "title": "query-filter",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      }
     },
     "query-options": {
      "type": "object",
      "properties": {
       "relationships": {
        "type": "boolean",
        "_name_": "relationships",
        "title": "relationships",
        "default": true
       },
       "extend": {
        "_name_": "extend",
        "title": "extend",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extend_context": {
        "_name_": "extend_context",
        "title": "extend_context",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "prefix": {
        "_name_": "prefix",
        "title": "prefix",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extra": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extra",
        "title": "extra",
        "default": {},
        "_attrs_order_": []
       },
       "order_by": {
        "_name_": "order_by",
        "title": "order_by",
        "default": [],
        "type": "array",
        "items": {}
       },
       "select": {
        "_name_": "select",
        "title": "select",
        "default": [],
        "type": "array",
        "items": {}
       },
       "count": {
        "type": "boolean",
        "_name_": "count",
        "title": "count",
        "default": false
       },
       "get": {
        "type": "boolean",
        "_name_": "get",
        "title": "get",
        "default": false
       },
       "offset": {
        "type": "integer",
        "_name_": "offset",
        "title": "offset",
        "default": 0
       },
       "limit": {
        "type": "integer",
        "_name_": "limit",
        "title": "limit",
        "default": 0
       },
       "force_sql_filters": {
        "type": "boolean",
        "_name_": "force_sql_filters",
        "title": "force_sql_filters",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "query-options",
      "title": "query-options",
      "default": {},
      "_attrs_order_": [
       "relationships",
       "extend",
       "extend_context",
       "prefix",
       "extra",
       "order_by",
       "select",
       "count",
       "get",
       "offset",
       "limit",
       "force_sql_filters"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "audit_query",
    "title": "audit_query",
    "default": {},
    "_attrs_order_": [
     "services",
     "query-filters",
     "query-options"
    ]
   },
   "return_schema_of_audit_query": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "audit_id": {
        "_name_": "audit_id",
        "title": "audit_id",
        "_required_": false,
        "type": "string"
       },
       "message_timestamp": {
        "type": "integer",
        "_name_": "message_timestamp",
        "title": "message_timestamp",
        "_required_": false
       },
       "timestamp": {
        "_name_": "timestamp",
        "title": "timestamp",
        "_required_": false,
        "type": "string"
       },
       "address": {
        "_name_": "address",
        "title": "address",
        "_required_": false,
        "type": "string"
       },
       "username": {
        "_name_": "username",
        "title": "username",
        "_required_": false,
        "type": "string"
       },
       "session": {
        "_name_": "session",
        "title": "session",
        "_required_": false,
        "type": "string"
       },
       "service": {
        "_name_": "service",
        "title": "service",
        "_required_": false,
        "type": "string",
        "enum": [
         "MIDDLEWARE",
         "SMB"
        ]
       },
       "service_data": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "service_data",
        "title": "service_data",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "event": {
        "_name_": "event",
        "title": "event",
        "_required_": false,
        "type": "string"
       },
       "event_data": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "event_data",
        "title": "event_data",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "success": {
        "type": "boolean",
        "_name_": "success",
        "title": "success",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "audit_entry",
      "title": "audit_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "audit_id",
       "message_timestamp",
       "timestamp",
       "address",
       "username",
       "session",
       "service",
       "service_data",
       "event",
       "event_data",
       "success"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "audit_id": {
          "_name_": "audit_id",
          "title": "audit_id",
          "_required_": false,
          "type": "string"
         },
         "message_timestamp": {
          "type": "integer",
          "_name_": "message_timestamp",
          "title": "message_timestamp",
          "_required_": false
         },
         "timestamp": {
          "_name_": "timestamp",
          "title": "timestamp",
          "_required_": false,
          "type": "string"
         },
         "address": {
          "_name_": "address",
          "title": "address",
          "_required_": false,
          "type": "string"
         },
         "username": {
          "_name_": "username",
          "title": "username",
          "_required_": false,
          "type": "string"
         },
         "session": {
          "_name_": "session",
          "title": "session",
          "_required_": false,
          "type": "string"
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": false,
          "type": "string",
          "enum": [
           "MIDDLEWARE",
           "SMB"
          ]
         },
         "service_data": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "service_data",
          "title": "service_data",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "event": {
          "_name_": "event",
          "title": "event",
          "_required_": false,
          "type": "string"
         },
         "event_data": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "event_data",
          "title": "event_data",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "success": {
          "type": "boolean",
          "_name_": "success",
          "title": "success",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "audit_entry",
        "title": "audit_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "audit_id",
         "message_timestamp",
         "timestamp",
         "address",
         "username",
         "session",
         "service",
         "service_data",
         "event",
         "event_data",
         "success"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "auth_check_password_0": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "auth_check_password_1": {
    "_name_": "password",
    "title": "password",
    "type": "string"
   },
   "auth_check_password": {
    "type": "object",
    "properties": {
     "username": {
      "$ref": "#/components/schemas/auth_check_password_0"
     },
     "password": {
      "$ref": "#/components/schemas/auth_check_password_1"
     }
    }
   },
   "return_schema_of_auth_check_password": {
    "type": "boolean",
    "_name_": "check_password",
    "title": "check_password",
    "description": "Is `true` if `username` was successfully validated with provided `password`"
   },
   "auth_check_user_0": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "auth_check_user_1": {
    "_name_": "password",
    "title": "password",
    "type": "string"
   },
   "auth_check_user": {
    "type": "object",
    "properties": {
     "username": {
      "$ref": "#/components/schemas/auth_check_user_0"
     },
     "password": {
      "$ref": "#/components/schemas/auth_check_user_1"
     }
    }
   },
   "return_schema_of_auth_check_user": {
    "type": "boolean",
    "_name_": "check_user",
    "title": "check_user",
    "description": "Is `true` if `username` was successfully validated with provided `password`"
   },
   "auth_generate_token_0": {
    "type": "integer",
    "_name_": "ttl",
    "title": "ttl",
    "default": 600,
    "description": "`ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection\nhas been inactive for a time greater than this.",
    "nullable": true
   },
   "auth_generate_token_1": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "attrs",
    "title": "attrs",
    "default": {},
    "_attrs_order_": [],
    "description": "`attrs` is a general purpose object/dictionary to hold information about the token."
   },
   "auth_generate_token_2": {
    "type": "boolean",
    "_name_": "match_origin",
    "title": "match_origin",
    "default": false
   },
   "auth_generate_token": {
    "type": "object",
    "properties": {
     "ttl": {
      "$ref": "#/components/schemas/auth_generate_token_0"
     },
     "attrs": {
      "$ref": "#/components/schemas/auth_generate_token_1"
     },
     "match_origin": {
      "$ref": "#/components/schemas/auth_generate_token_2"
     }
    }
   },
   "return_schema_of_auth_generate_token": {
    "_name_": "token",
    "title": "token",
    "type": "string"
   },
   "auth_terminate_session": {
    "_name_": "id",
    "title": "id",
    "type": "string"
   },
   "return_schema_of_auth_terminate_session": {
    "type": "boolean",
    "_name_": "terminate_session",
    "title": "terminate_session",
    "description": "Is `true` if session was terminated successfully"
   },
   "auth_two_factor_auth_0": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "auth_two_factor_auth_1": {
    "_name_": "password",
    "title": "password",
    "type": "string"
   },
   "auth_two_factor_auth": {
    "type": "object",
    "properties": {
     "username": {
      "$ref": "#/components/schemas/auth_two_factor_auth_0"
     },
     "password": {
      "$ref": "#/components/schemas/auth_two_factor_auth_1"
     }
    }
   },
   "return_schema_of_auth_two_factor_auth": {
    "type": "boolean",
    "_name_": "two_factor_auth_enabled",
    "title": "two_factor_auth_enabled",
    "description": "Is `true` if 2FA is enabled"
   },
   "return_schema_of_auth_twofactor_config": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "services": {
      "type": "object",
      "properties": {
       "ssh": {
        "type": "boolean",
        "_name_": "ssh",
        "title": "ssh",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "services",
      "title": "services",
      "default": {},
      "_attrs_order_": [
       "ssh"
      ]
     },
     "window": {
      "type": "integer",
      "_name_": "window",
      "title": "window"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "auth_twofactor_entry",
    "title": "auth_twofactor_entry",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "services",
     "window",
     "id"
    ]
   },
   "auth_twofactor_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "services": {
      "type": "object",
      "properties": {
       "ssh": {
        "type": "boolean",
        "_name_": "ssh",
        "title": "ssh",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "services",
      "title": "services",
      "default": {},
      "_attrs_order_": [
       "ssh"
      ]
     },
     "window": {
      "type": "integer",
      "_name_": "window",
      "title": "window",
      "description": "`window` extends the validity to `window` many counter ticks before and after the current one."
     }
    },
    "additionalProperties": false,
    "_name_": "auth_twofactor_update",
    "title": "auth_twofactor_update",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "services",
     "window"
    ]
   },
   "return_schema_of_auth_twofactor_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "services": {
      "type": "object",
      "properties": {
       "ssh": {
        "type": "boolean",
        "_name_": "ssh",
        "title": "ssh",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "services",
      "title": "services",
      "default": {},
      "_attrs_order_": [
       "ssh"
      ]
     },
     "window": {
      "type": "integer",
      "_name_": "window",
      "title": "window",
      "description": "`window` extends the validity to `window` many counter ticks before and after the current one."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "auth_twofactor_update_returns",
    "title": "auth_twofactor_update_returns",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "services",
     "window",
     "id"
    ]
   },
   "boot_attach_0": {
    "_name_": "dev",
    "title": "dev",
    "type": "string"
   },
   "boot_attach_1": {
    "type": "object",
    "properties": {
     "expand": {
      "type": "boolean",
      "_name_": "expand",
      "title": "expand",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "expand"
    ]
   },
   "boot_attach": {
    "type": "object",
    "properties": {
     "dev": {
      "$ref": "#/components/schemas/boot_attach_0"
     },
     "options": {
      "$ref": "#/components/schemas/boot_attach_1"
     }
    }
   },
   "boot_detach": {
    "_name_": "dev",
    "title": "dev",
    "type": "string"
   },
   "return_schema_of_boot_get_disks": {
    "_name_": "disks",
    "title": "disks",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "disk",
     "title": "disk",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_boot_get_scrub_interval": {
    "type": "integer",
    "_name_": "interval",
    "title": "interval"
   },
   "return_schema_of_boot_get_state": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "scan": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "scan",
      "title": "scan",
      "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "is_upgraded": {
      "type": "boolean",
      "_name_": "is_upgraded",
      "title": "is_upgraded"
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "warning": {
      "type": "boolean",
      "_name_": "warning",
      "title": "warning"
     },
     "status_code": {
      "_name_": "status_code",
      "title": "status_code",
      "type": "string",
      "nullable": true
     },
     "status_detail": {
      "_name_": "status_detail",
      "title": "status_detail",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size",
      "nullable": true
     },
     "allocated": {
      "type": "integer",
      "_name_": "allocated",
      "title": "allocated",
      "nullable": true
     },
     "free": {
      "type": "integer",
      "_name_": "free",
      "title": "free",
      "nullable": true
     },
     "freeing": {
      "type": "integer",
      "_name_": "freeing",
      "title": "freeing",
      "nullable": true
     },
     "fragmentation": {
      "_name_": "fragmentation",
      "title": "fragmentation",
      "type": "string",
      "nullable": true
     },
     "size_str": {
      "_name_": "size_str",
      "title": "size_str",
      "type": "string",
      "nullable": true
     },
     "allocated_str": {
      "_name_": "allocated_str",
      "title": "allocated_str",
      "type": "string",
      "nullable": true
     },
     "free_str": {
      "_name_": "free_str",
      "title": "free_str",
      "type": "string",
      "nullable": true
     },
     "freeing_str": {
      "_name_": "freeing_str",
      "title": "freeing_str",
      "type": "string",
      "nullable": true
     },
     "autotrim": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "autotrim",
      "title": "autotrim",
      "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {}
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {}
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {}
       },
       "spare": {
        "_name_": "spare",
        "title": "spare",
        "default": [],
        "type": "array",
        "items": {}
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {}
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "log",
       "cache",
       "spare",
       "special",
       "dedup"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "get_state",
    "title": "get_state",
    "default": {},
    "_attrs_order_": [
     "name",
     "status",
     "path",
     "scan",
     "is_upgraded",
     "healthy",
     "warning",
     "status_code",
     "status_detail",
     "size",
     "allocated",
     "free",
     "freeing",
     "fragmentation",
     "size_str",
     "allocated_str",
     "free_str",
     "freeing_str",
     "autotrim",
     "topology"
    ]
   },
   "boot_replace_0": {
    "_name_": "label",
    "title": "label",
    "type": "string"
   },
   "boot_replace_1": {
    "_name_": "dev",
    "title": "dev",
    "type": "string"
   },
   "boot_replace": {
    "type": "object",
    "properties": {
     "label": {
      "$ref": "#/components/schemas/boot_replace_0"
     },
     "dev": {
      "$ref": "#/components/schemas/boot_replace_1"
     }
    }
   },
   "boot_set_scrub_interval": {
    "type": "integer",
    "_name_": "interval",
    "title": "interval"
   },
   "return_schema_of_boot_set_scrub_interval": {
    "type": "integer",
    "_name_": "interval",
    "title": "interval"
   },
   "return_schema_of_bootenv_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": false,
          "type": "string"
         },
         "realname": {
          "_name_": "realname",
          "title": "realname",
          "_required_": false,
          "type": "string"
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "active": {
          "_name_": "active",
          "title": "active",
          "_required_": false,
          "type": "string"
         },
         "activated": {
          "type": "boolean",
          "_name_": "activated",
          "title": "activated",
          "_required_": false
         },
         "can_activate": {
          "type": "boolean",
          "_name_": "can_activate",
          "title": "can_activate",
          "_required_": false
         },
         "mountpoint": {
          "_name_": "mountpoint",
          "title": "mountpoint",
          "_required_": false,
          "type": "string"
         },
         "space": {
          "_name_": "space",
          "title": "space",
          "_required_": false,
          "type": "string"
         },
         "created": {
          "_name_": "created",
          "title": "created",
          "_required_": false,
          "type": "string"
         },
         "keep": {
          "type": "boolean",
          "_name_": "keep",
          "title": "keep",
          "_required_": false
         },
         "rawspace": {
          "type": "integer",
          "_name_": "rawspace",
          "title": "rawspace",
          "_required_": false
         }
        },
        "additionalProperties": true,
        "_name_": "bootenv_entry",
        "title": "bootenv_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "realname",
         "name",
         "active",
         "activated",
         "can_activate",
         "mountpoint",
         "space",
         "created",
         "keep",
         "rawspace"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": false,
        "type": "string"
       },
       "realname": {
        "_name_": "realname",
        "title": "realname",
        "_required_": false,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "active": {
        "_name_": "active",
        "title": "active",
        "_required_": false,
        "type": "string"
       },
       "activated": {
        "type": "boolean",
        "_name_": "activated",
        "title": "activated",
        "_required_": false
       },
       "can_activate": {
        "type": "boolean",
        "_name_": "can_activate",
        "title": "can_activate",
        "_required_": false
       },
       "mountpoint": {
        "_name_": "mountpoint",
        "title": "mountpoint",
        "_required_": false,
        "type": "string"
       },
       "space": {
        "_name_": "space",
        "title": "space",
        "_required_": false,
        "type": "string"
       },
       "created": {
        "_name_": "created",
        "title": "created",
        "_required_": false,
        "type": "string"
       },
       "keep": {
        "type": "boolean",
        "_name_": "keep",
        "title": "keep",
        "_required_": false
       },
       "rawspace": {
        "type": "integer",
        "_name_": "rawspace",
        "title": "rawspace",
        "_required_": false
       }
      },
      "additionalProperties": true,
      "_name_": "bootenv_entry",
      "title": "bootenv_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "realname",
       "name",
       "active",
       "activated",
       "can_activate",
       "mountpoint",
       "space",
       "created",
       "keep",
       "rawspace"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": false,
        "type": "string"
       },
       "realname": {
        "_name_": "realname",
        "title": "realname",
        "_required_": false,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "active": {
        "_name_": "active",
        "title": "active",
        "_required_": false,
        "type": "string"
       },
       "activated": {
        "type": "boolean",
        "_name_": "activated",
        "title": "activated",
        "_required_": false
       },
       "can_activate": {
        "type": "boolean",
        "_name_": "can_activate",
        "title": "can_activate",
        "_required_": false
       },
       "mountpoint": {
        "_name_": "mountpoint",
        "title": "mountpoint",
        "_required_": false,
        "type": "string"
       },
       "space": {
        "_name_": "space",
        "title": "space",
        "_required_": false,
        "type": "string"
       },
       "created": {
        "_name_": "created",
        "title": "created",
        "_required_": false,
        "type": "string"
       },
       "keep": {
        "type": "boolean",
        "_name_": "keep",
        "title": "keep",
        "_required_": false
       },
       "rawspace": {
        "type": "integer",
        "_name_": "rawspace",
        "title": "rawspace",
        "_required_": false
       }
      },
      "additionalProperties": true,
      "_name_": "bootenv_entry",
      "title": "bootenv_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "realname",
       "name",
       "active",
       "activated",
       "can_activate",
       "mountpoint",
       "space",
       "created",
       "keep",
       "rawspace"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "bootenv_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Create a new boot environment using `name`.\nIf a new boot environment is desired which is a clone of another boot environment, `source` can be passed.\nThen, a new boot environment of `name` is created using boot environment `source` by cloning it."
     },
     "source": {
      "_name_": "source",
      "title": "source",
      "type": "string",
      "description": "If a new boot environment is desired which is a clone of another boot environment, `source` can be passed.\nThen, a new boot environment of `name` is created using boot environment `source` by cloning it."
     }
    },
    "additionalProperties": false,
    "_name_": "bootenv_create",
    "title": "bootenv_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "source"
    ]
   },
   "return_schema_of_bootenv_create": {
    "_name_": "bootenv_name",
    "title": "bootenv_name",
    "type": "string"
   },
   "return_schema_of_bootenv_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "bootenv_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Update `id` boot environment name with a new provided valid `name`.\nCreate a new boot environment using `name`.\nThen, a new boot environment of `name` is created using boot environment `source` by cloning it."
     }
    },
    "additionalProperties": false,
    "_name_": "bootenv_update",
    "title": "bootenv_update",
    "default": {},
    "_attrs_order_": [
     "name"
    ]
   },
   "return_schema_of_bootenv_update": {
    "_name_": "bootenv_name",
    "title": "bootenv_name",
    "type": "string"
   },
   "bootenv_activate": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_bootenv_activate": {
    "type": "boolean",
    "_name_": "successfully_activated",
    "title": "successfully_activated"
   },
   "bootenv_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "bootenv_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "bootenv_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/bootenv_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/bootenv_get_instance_1"
     }
    }
   },
   "return_schema_of_bootenv_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "realname": {
      "_name_": "realname",
      "title": "realname",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "active": {
      "_name_": "active",
      "title": "active",
      "type": "string"
     },
     "activated": {
      "type": "boolean",
      "_name_": "activated",
      "title": "activated"
     },
     "can_activate": {
      "type": "boolean",
      "_name_": "can_activate",
      "title": "can_activate"
     },
     "mountpoint": {
      "_name_": "mountpoint",
      "title": "mountpoint",
      "type": "string"
     },
     "space": {
      "_name_": "space",
      "title": "space",
      "type": "string"
     },
     "created": {
      "_name_": "created",
      "title": "created",
      "type": "string"
     },
     "keep": {
      "type": "boolean",
      "_name_": "keep",
      "title": "keep"
     },
     "rawspace": {
      "type": "integer",
      "_name_": "rawspace",
      "title": "rawspace"
     }
    },
    "additionalProperties": true,
    "_name_": "bootenv_entry",
    "title": "bootenv_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "realname",
     "name",
     "active",
     "activated",
     "can_activate",
     "mountpoint",
     "space",
     "created",
     "keep",
     "rawspace"
    ]
   },
   "bootenv_set_attribute": {
    "type": "object",
    "properties": {
     "keep": {
      "type": "boolean",
      "_name_": "keep",
      "title": "keep",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "attributes",
    "title": "attributes",
    "default": {},
    "_attrs_order_": [
     "keep"
    ]
   },
   "return_schema_of_bootenv_set_attribute": {
    "type": "boolean",
    "_name_": "successfully_set_attribute",
    "title": "successfully_set_attribute"
   },
   "return_schema_of_catalog_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "label": {
          "_name_": "label",
          "title": "label",
          "_required_": true,
          "type": "string"
         },
         "repository": {
          "_name_": "repository",
          "title": "repository",
          "_required_": true,
          "type": "string"
         },
         "branch": {
          "_name_": "branch",
          "title": "branch",
          "_required_": true,
          "type": "string"
         },
         "location": {
          "_name_": "location",
          "title": "location",
          "_required_": true,
          "type": "string"
         },
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": true,
          "type": "string"
         },
         "preferred_trains": {
          "_name_": "preferred_trains",
          "title": "preferred_trains",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "trains": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "trains",
          "title": "trains",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "healthy": {
          "type": "boolean",
          "_name_": "healthy",
          "title": "healthy",
          "_required_": false
         },
         "error": {
          "type": "boolean",
          "_name_": "error",
          "title": "error",
          "_required_": false
         },
         "builtin": {
          "type": "boolean",
          "_name_": "builtin",
          "title": "builtin",
          "_required_": false
         },
         "cached": {
          "type": "boolean",
          "_name_": "cached",
          "title": "cached",
          "_required_": false
         },
         "caching_progress": {
          "type": "object",
          "properties": {
           "description": {
            "_name_": "description",
            "title": "description",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "extra": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "extra",
            "title": "extra",
            "_required_": false
           },
           "percent": {
            "type": [
             "float",
             "null"
            ],
            "_name_": "percent",
            "title": "percent",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "caching_progress",
          "title": "caching_progress",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "description",
           "extra",
           "percent"
          ]
         },
         "caching_job": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "caching_job",
          "title": "caching_job",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "catalog_entry",
        "title": "catalog_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "label",
         "repository",
         "branch",
         "location",
         "id",
         "preferred_trains",
         "trains",
         "healthy",
         "error",
         "builtin",
         "cached",
         "caching_progress",
         "caching_job"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "label": {
        "_name_": "label",
        "title": "label",
        "_required_": true,
        "type": "string"
       },
       "repository": {
        "_name_": "repository",
        "title": "repository",
        "_required_": true,
        "type": "string"
       },
       "branch": {
        "_name_": "branch",
        "title": "branch",
        "_required_": true,
        "type": "string"
       },
       "location": {
        "_name_": "location",
        "title": "location",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "preferred_trains": {
        "_name_": "preferred_trains",
        "title": "preferred_trains",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "trains": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "trains",
        "title": "trains",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "healthy": {
        "type": "boolean",
        "_name_": "healthy",
        "title": "healthy",
        "_required_": false
       },
       "error": {
        "type": "boolean",
        "_name_": "error",
        "title": "error",
        "_required_": false
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       },
       "cached": {
        "type": "boolean",
        "_name_": "cached",
        "title": "cached",
        "_required_": false
       },
       "caching_progress": {
        "type": "object",
        "properties": {
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "extra": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "extra",
          "title": "extra",
          "_required_": false
         },
         "percent": {
          "type": [
           "float",
           "null"
          ],
          "_name_": "percent",
          "title": "percent",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "caching_progress",
        "title": "caching_progress",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "description",
         "extra",
         "percent"
        ]
       },
       "caching_job": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "caching_job",
        "title": "caching_job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "catalog_entry",
      "title": "catalog_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "label",
       "repository",
       "branch",
       "location",
       "id",
       "preferred_trains",
       "trains",
       "healthy",
       "error",
       "builtin",
       "cached",
       "caching_progress",
       "caching_job"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "label": {
        "_name_": "label",
        "title": "label",
        "_required_": true,
        "type": "string"
       },
       "repository": {
        "_name_": "repository",
        "title": "repository",
        "_required_": true,
        "type": "string"
       },
       "branch": {
        "_name_": "branch",
        "title": "branch",
        "_required_": true,
        "type": "string"
       },
       "location": {
        "_name_": "location",
        "title": "location",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "preferred_trains": {
        "_name_": "preferred_trains",
        "title": "preferred_trains",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "trains": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "trains",
        "title": "trains",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "healthy": {
        "type": "boolean",
        "_name_": "healthy",
        "title": "healthy",
        "_required_": false
       },
       "error": {
        "type": "boolean",
        "_name_": "error",
        "title": "error",
        "_required_": false
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       },
       "cached": {
        "type": "boolean",
        "_name_": "cached",
        "title": "cached",
        "_required_": false
       },
       "caching_progress": {
        "type": "object",
        "properties": {
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "extra": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "extra",
          "title": "extra",
          "_required_": false
         },
         "percent": {
          "type": [
           "float",
           "null"
          ],
          "_name_": "percent",
          "title": "percent",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "caching_progress",
        "title": "caching_progress",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "description",
         "extra",
         "percent"
        ]
       },
       "caching_job": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "caching_job",
        "title": "caching_job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "catalog_entry",
      "title": "catalog_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "label",
       "repository",
       "branch",
       "location",
       "id",
       "preferred_trains",
       "trains",
       "healthy",
       "error",
       "builtin",
       "cached",
       "caching_progress",
       "caching_job"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "catalog_create": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string"
     },
     "repository": {
      "_name_": "repository",
      "title": "repository",
      "type": "string"
     },
     "branch": {
      "_name_": "branch",
      "title": "branch",
      "type": "string"
     },
     "preferred_trains": {
      "_name_": "preferred_trains",
      "title": "preferred_trains",
      "default": [],
      "type": "array",
      "items": {}
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "catalog_create",
    "title": "catalog_create",
    "default": {},
    "_attrs_order_": [
     "label",
     "repository",
     "branch",
     "preferred_trains",
     "force"
    ]
   },
   "return_schema_of_catalog_create": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string"
     },
     "repository": {
      "_name_": "repository",
      "title": "repository",
      "type": "string"
     },
     "branch": {
      "_name_": "branch",
      "title": "branch",
      "type": "string"
     },
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "preferred_trains": {
      "_name_": "preferred_trains",
      "title": "preferred_trains",
      "default": [],
      "type": "array",
      "items": {}
     },
     "trains": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "trains",
      "title": "trains",
      "default": {},
      "_attrs_order_": []
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "error": {
      "type": "boolean",
      "_name_": "error",
      "title": "error"
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     },
     "cached": {
      "type": "boolean",
      "_name_": "cached",
      "title": "cached"
     },
     "caching_progress": {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "type": "string",
        "nullable": true
       },
       "extra": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "extra",
        "title": "extra"
       },
       "percent": {
        "type": "float",
        "_name_": "percent",
        "title": "percent",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "caching_progress",
      "title": "caching_progress",
      "default": {},
      "_attrs_order_": [
       "description",
       "extra",
       "percent"
      ]
     },
     "caching_job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "caching_job",
      "title": "caching_job",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "catalog_create_returns",
    "title": "catalog_create_returns",
    "default": {},
    "_attrs_order_": [
     "label",
     "repository",
     "branch",
     "location",
     "id",
     "preferred_trains",
     "trains",
     "healthy",
     "error",
     "builtin",
     "cached",
     "caching_progress",
     "caching_job"
    ]
   },
   "return_schema_of_catalog_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "catalog_update": {
    "type": "object",
    "properties": {
     "preferred_trains": {
      "_name_": "preferred_trains",
      "title": "preferred_trains",
      "default": [],
      "type": "array",
      "items": {}
     }
    },
    "additionalProperties": false,
    "_name_": "catalog_update",
    "title": "catalog_update",
    "default": {},
    "_attrs_order_": [
     "preferred_trains"
    ]
   },
   "return_schema_of_catalog_update": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string"
     },
     "repository": {
      "_name_": "repository",
      "title": "repository",
      "type": "string"
     },
     "branch": {
      "_name_": "branch",
      "title": "branch",
      "type": "string"
     },
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "preferred_trains": {
      "_name_": "preferred_trains",
      "title": "preferred_trains",
      "default": [],
      "type": "array",
      "items": {}
     },
     "trains": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "trains",
      "title": "trains",
      "default": {},
      "_attrs_order_": []
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "error": {
      "type": "boolean",
      "_name_": "error",
      "title": "error"
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     },
     "cached": {
      "type": "boolean",
      "_name_": "cached",
      "title": "cached"
     },
     "caching_progress": {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "type": "string",
        "nullable": true
       },
       "extra": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "extra",
        "title": "extra"
       },
       "percent": {
        "type": "float",
        "_name_": "percent",
        "title": "percent",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "caching_progress",
      "title": "caching_progress",
      "default": {},
      "_attrs_order_": [
       "description",
       "extra",
       "percent"
      ]
     },
     "caching_job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "caching_job",
      "title": "caching_job",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "catalog_update_returns",
    "title": "catalog_update_returns",
    "default": {},
    "_attrs_order_": [
     "label",
     "repository",
     "branch",
     "location",
     "id",
     "preferred_trains",
     "trains",
     "healthy",
     "error",
     "builtin",
     "cached",
     "caching_progress",
     "caching_job"
    ]
   },
   "catalog_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "catalog_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "catalog_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/catalog_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/catalog_get_instance_1"
     }
    }
   },
   "return_schema_of_catalog_get_instance": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string"
     },
     "repository": {
      "_name_": "repository",
      "title": "repository",
      "type": "string"
     },
     "branch": {
      "_name_": "branch",
      "title": "branch",
      "type": "string"
     },
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "preferred_trains": {
      "_name_": "preferred_trains",
      "title": "preferred_trains",
      "default": [],
      "type": "array",
      "items": {}
     },
     "trains": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "trains",
      "title": "trains",
      "default": {},
      "_attrs_order_": []
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "error": {
      "type": "boolean",
      "_name_": "error",
      "title": "error"
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     },
     "cached": {
      "type": "boolean",
      "_name_": "cached",
      "title": "cached"
     },
     "caching_progress": {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "type": "string",
        "nullable": true
       },
       "extra": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "extra",
        "title": "extra"
       },
       "percent": {
        "type": "float",
        "_name_": "percent",
        "title": "percent",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "caching_progress",
      "title": "caching_progress",
      "default": {},
      "_attrs_order_": [
       "description",
       "extra",
       "percent"
      ]
     },
     "caching_job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "caching_job",
      "title": "caching_job",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "catalog_entry",
    "title": "catalog_entry",
    "default": {},
    "_attrs_order_": [
     "label",
     "repository",
     "branch",
     "location",
     "id",
     "preferred_trains",
     "trains",
     "healthy",
     "error",
     "builtin",
     "cached",
     "caching_progress",
     "caching_job"
    ]
   },
   "catalog_get_item_details_0": {
    "_name_": "item_name",
    "title": "item_name",
    "type": "string"
   },
   "catalog_get_item_details_1": {
    "type": "object",
    "properties": {
     "cache": {
      "type": "boolean",
      "_name_": "cache",
      "title": "cache"
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string"
     },
     "train": {
      "_name_": "train",
      "title": "train",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "item_version_details",
    "title": "item_version_details",
    "default": {},
    "_attrs_order_": [
     "cache",
     "catalog",
     "train"
    ]
   },
   "catalog_get_item_details": {
    "type": "object",
    "properties": {
     "item_name": {
      "$ref": "#/components/schemas/catalog_get_item_details_0"
     },
     "item_version_details": {
      "$ref": "#/components/schemas/catalog_get_item_details_1"
     }
    }
   },
   "return_schema_of_catalog_get_item_details": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "categories": {
      "_name_": "categories",
      "title": "categories",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "category",
       "title": "category",
       "_required_": false,
       "type": "string"
      }
     },
     "maintainers": {
      "_name_": "maintainers",
      "title": "maintainers",
      "default": [],
      "type": "array",
      "items": {}
     },
     "tags": {
      "_name_": "tags",
      "title": "tags",
      "default": [],
      "type": "array",
      "items": {}
     },
     "screenshots": {
      "_name_": "screenshots",
      "title": "screenshots",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "screenshot",
       "title": "screenshot",
       "_required_": false,
       "type": "string"
      }
     },
     "sources": {
      "_name_": "sources",
      "title": "sources",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "source",
       "title": "source",
       "_required_": false,
       "type": "string"
      }
     },
     "app_readme": {
      "_name_": "app_readme",
      "title": "app_readme",
      "type": "string",
      "nullable": true
     },
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "recommended": {
      "type": "boolean",
      "_name_": "recommended",
      "title": "recommended"
     },
     "healthy_error": {
      "_name_": "healthy_error",
      "title": "healthy_error",
      "type": "string",
      "nullable": true
     },
     "versions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "versions",
      "title": "versions",
      "default": {},
      "_attrs_order_": []
     },
     "latest_version": {
      "_name_": "latest_version",
      "title": "latest_version",
      "type": "string",
      "nullable": true
     },
     "latest_app_version": {
      "_name_": "latest_app_version",
      "title": "latest_app_version",
      "type": "string",
      "nullable": true
     },
     "latest_human_version": {
      "_name_": "latest_human_version",
      "title": "latest_human_version",
      "type": "string",
      "nullable": true
     },
     "last_update": {
      "_name_": "last_update",
      "title": "last_update",
      "type": "string",
      "nullable": true
     },
     "icon_url": {
      "_name_": "icon_url",
      "title": "icon_url",
      "type": "string",
      "nullable": true
     },
     "home": {
      "_name_": "home",
      "title": "home",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "item_details",
    "title": "item_details",
    "default": {},
    "_attrs_order_": [
     "name",
     "categories",
     "maintainers",
     "tags",
     "screenshots",
     "sources",
     "app_readme",
     "location",
     "healthy",
     "recommended",
     "healthy_error",
     "versions",
     "latest_version",
     "latest_app_version",
     "latest_human_version",
     "last_update",
     "icon_url",
     "home"
    ]
   },
   "catalog_items_0": {
    "_name_": "label",
    "title": "label",
    "type": "string",
    "description": "Retrieve item details for `label` catalog.\n`options.cache` is a boolean which when set will try to get items details for `label` catalog from cache\nif available."
   },
   "catalog_items_1": {
    "type": "object",
    "properties": {
     "cache": {
      "type": "boolean",
      "_name_": "cache",
      "title": "cache",
      "default": true
     },
     "cache_only": {
      "type": "boolean",
      "_name_": "cache_only",
      "title": "cache_only",
      "default": false
     },
     "retrieve_all_trains": {
      "type": "boolean",
      "_name_": "retrieve_all_trains",
      "title": "retrieve_all_trains",
      "default": true
     },
     "trains": {
      "_name_": "trains",
      "title": "trains",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "train_name",
       "title": "train_name",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "cache",
     "cache_only",
     "retrieve_all_trains",
     "trains"
    ]
   },
   "catalog_items": {
    "type": "object",
    "properties": {
     "label": {
      "$ref": "#/components/schemas/catalog_items_0"
     },
     "options": {
      "$ref": "#/components/schemas/catalog_items_1"
     }
    }
   },
   "return_schema_of_catalog_items": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "trains",
    "title": "trains",
    "description": "\n\nExample(s):\n```\n{\n    \"charts\": {\n        \"chia\": {\n            \"name\": \"chia\",\n            \"categories\": [\n                \"storage\",\n                \"crypto\"\n            ],\n            \"app_readme\": \"app readme here\",\n            \"location\": \"/mnt/evo/ix-applications/catalogs/github_com_truenas_charts_git_master/charts/chia\",\n            \"healthy\": true,\n            \"healthy_error\": null,\n            \"latest_version\": \"1.2.0\",\n            \"latest_app_version\": \"1.1.6\",\n            \"last_update\": \"2023-02-01 22:55:31\",\n            \"icon_url\": \"https://www.chia.net/img/chia_logo.svg\",\n            \"recommended\": false,\n            \"title\": \"Chia\",\n            \"description\": \"App description here\",\n            \"maintainers\": [],\n            \"tags\": [\n                \"finance\",\n                \"crypto\",\n                \"blockchain\"\n            ],\n            \"home\": \"https://www.chia.net/\",\n            \"screenshots\": [],\n            \"sources\": []\n        }\n    }\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "catalog_sync": {
    "_name_": "label",
    "title": "label",
    "type": "string"
   },
   "catalog_validate": {
    "_name_": "label",
    "title": "label",
    "type": "string",
    "description": "Validates `label` catalog format which includes validating trains and applications with their versions."
   },
   "return_schema_of_certificate_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "type": {
          "type": "integer",
          "_name_": "type",
          "title": "type",
          "_required_": false
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "certificate": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "privatekey": {
          "_name_": "privatekey",
          "title": "privatekey",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "CSR": {
          "_name_": "CSR",
          "title": "CSR",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "acme_uri": {
          "_name_": "acme_uri",
          "title": "acme_uri",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "domains_authenticators": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "domains_authenticators",
          "title": "domains_authenticators",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "renew_days": {
          "type": "integer",
          "_name_": "renew_days",
          "title": "renew_days",
          "_required_": false
         },
         "revoked_date": {
          "_name_": "revoked_date",
          "title": "revoked_date",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "signedby": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "signedby",
          "title": "signedby",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "root_path": {
          "_name_": "root_path",
          "title": "root_path",
          "_required_": false,
          "type": "string"
         },
         "acme": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "acme",
          "title": "acme",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "certificate_path": {
          "_name_": "certificate_path",
          "title": "certificate_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "privatekey_path": {
          "_name_": "privatekey_path",
          "title": "privatekey_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "csr_path": {
          "_name_": "csr_path",
          "title": "csr_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "cert_type": {
          "_name_": "cert_type",
          "title": "cert_type",
          "_required_": false,
          "type": "string"
         },
         "revoked": {
          "type": "boolean",
          "_name_": "revoked",
          "title": "revoked",
          "_required_": false
         },
         "expired": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "expired",
          "title": "expired",
          "_required_": false
         },
         "issuer": {
          "anyOf": [
           {
            "_name_": "issuer",
            "title": "issuer",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "_name_": "issuer",
            "title": "issuer",
            "default": {},
            "_required_": false,
            "_attrs_order_": []
           }
          ],
          "nullable": false,
          "_name_": "issuer",
          "description": null,
          "_required_": false
         },
         "chain_list": {
          "_name_": "chain_list",
          "title": "chain_list",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "certificate",
            "title": "certificate",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "country": {
          "_name_": "country",
          "title": "country",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "state": {
          "_name_": "state",
          "title": "state",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "city": {
          "_name_": "city",
          "title": "city",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "organization": {
          "_name_": "organization",
          "title": "organization",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "organizational_unit": {
          "_name_": "organizational_unit",
          "title": "organizational_unit",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "san": {
          "_name_": "san",
          "title": "san",
          "default": [],
          "_required_": false,
          "type": [
           "array",
           "null"
          ],
          "items": [
           {
            "_name_": "san_entry",
            "title": "san_entry",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "email": {
          "_name_": "email",
          "title": "email",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "DN": {
          "_name_": "DN",
          "title": "DN",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "subject_name_hash": {
          "_name_": "subject_name_hash",
          "title": "subject_name_hash",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "digest_algorithm": {
          "_name_": "digest_algorithm",
          "title": "digest_algorithm",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "from": {
          "_name_": "from",
          "title": "from",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "common": {
          "_name_": "common",
          "title": "common",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "until": {
          "_name_": "until",
          "title": "until",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "fingerprint": {
          "_name_": "fingerprint",
          "title": "fingerprint",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "key_type": {
          "_name_": "key_type",
          "title": "key_type",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "internal": {
          "_name_": "internal",
          "title": "internal",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "lifetime": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "lifetime",
          "title": "lifetime",
          "_required_": false
         },
         "serial": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "serial",
          "title": "serial",
          "_required_": false
         },
         "key_length": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "key_length",
          "title": "key_length",
          "_required_": false
         },
         "chain": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "chain",
          "title": "chain",
          "_required_": false
         },
         "CA_type_existing": {
          "type": "boolean",
          "_name_": "CA_type_existing",
          "title": "CA_type_existing",
          "_required_": false
         },
         "CA_type_internal": {
          "type": "boolean",
          "_name_": "CA_type_internal",
          "title": "CA_type_internal",
          "_required_": false
         },
         "CA_type_intermediate": {
          "type": "boolean",
          "_name_": "CA_type_intermediate",
          "title": "CA_type_intermediate",
          "_required_": false
         },
         "cert_type_existing": {
          "type": "boolean",
          "_name_": "cert_type_existing",
          "title": "cert_type_existing",
          "_required_": false
         },
         "cert_type_internal": {
          "type": "boolean",
          "_name_": "cert_type_internal",
          "title": "cert_type_internal",
          "_required_": false
         },
         "cert_type_CSR": {
          "type": "boolean",
          "_name_": "cert_type_CSR",
          "title": "cert_type_CSR",
          "_required_": false
         },
         "parsed": {
          "type": "boolean",
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "can_be_revoked": {
          "type": "boolean",
          "_name_": "can_be_revoked",
          "title": "can_be_revoked",
          "_required_": false
         },
         "extensions": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "extensions",
          "title": "extensions",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "revoked_certs": {
          "_name_": "revoked_certs",
          "title": "revoked_certs",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "crl_path": {
          "_name_": "crl_path",
          "title": "crl_path",
          "_required_": false,
          "type": "string"
         },
         "signed_certificates": {
          "type": "integer",
          "_name_": "signed_certificates",
          "title": "signed_certificates",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "certificate_entry",
        "title": "certificate_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "type",
         "name",
         "certificate",
         "privatekey",
         "CSR",
         "acme_uri",
         "domains_authenticators",
         "renew_days",
         "revoked_date",
         "signedby",
         "root_path",
         "acme",
         "certificate_path",
         "privatekey_path",
         "csr_path",
         "cert_type",
         "revoked",
         "expired",
         "issuer",
         "chain_list",
         "country",
         "state",
         "city",
         "organization",
         "organizational_unit",
         "san",
         "email",
         "DN",
         "subject_name_hash",
         "digest_algorithm",
         "from",
         "common",
         "until",
         "fingerprint",
         "key_type",
         "internal",
         "lifetime",
         "serial",
         "key_length",
         "chain",
         "CA_type_existing",
         "CA_type_internal",
         "CA_type_intermediate",
         "cert_type_existing",
         "cert_type_internal",
         "cert_type_CSR",
         "parsed",
         "can_be_revoked",
         "extensions",
         "revoked_certs",
         "crl_path",
         "signed_certificates"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "type": {
        "type": "integer",
        "_name_": "type",
        "title": "type",
        "_required_": false
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "certificate": {
        "_name_": "certificate",
        "title": "certificate",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey": {
        "_name_": "privatekey",
        "title": "privatekey",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "CSR": {
        "_name_": "CSR",
        "title": "CSR",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "acme_uri": {
        "_name_": "acme_uri",
        "title": "acme_uri",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "domains_authenticators": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "domains_authenticators",
        "title": "domains_authenticators",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "renew_days": {
        "type": "integer",
        "_name_": "renew_days",
        "title": "renew_days",
        "_required_": false
       },
       "revoked_date": {
        "_name_": "revoked_date",
        "title": "revoked_date",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "signedby": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "signedby",
        "title": "signedby",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "root_path": {
        "_name_": "root_path",
        "title": "root_path",
        "_required_": false,
        "type": "string"
       },
       "acme": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "acme",
        "title": "acme",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "certificate_path": {
        "_name_": "certificate_path",
        "title": "certificate_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey_path": {
        "_name_": "privatekey_path",
        "title": "privatekey_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "csr_path": {
        "_name_": "csr_path",
        "title": "csr_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "cert_type": {
        "_name_": "cert_type",
        "title": "cert_type",
        "_required_": false,
        "type": "string"
       },
       "revoked": {
        "type": "boolean",
        "_name_": "revoked",
        "title": "revoked",
        "_required_": false
       },
       "expired": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "expired",
        "title": "expired",
        "_required_": false
       },
       "issuer": {
        "anyOf": [
         {
          "_name_": "issuer",
          "title": "issuer",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "issuer",
          "title": "issuer",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "issuer",
        "description": null,
        "_required_": false
       },
       "chain_list": {
        "_name_": "chain_list",
        "title": "chain_list",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organization": {
        "_name_": "organization",
        "title": "organization",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organizational_unit": {
        "_name_": "organizational_unit",
        "title": "organizational_unit",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "san": {
        "_name_": "san",
        "title": "san",
        "default": [],
        "_required_": false,
        "type": [
         "array",
         "null"
        ],
        "items": [
         {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "DN": {
        "_name_": "DN",
        "title": "DN",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "subject_name_hash": {
        "_name_": "subject_name_hash",
        "title": "subject_name_hash",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "digest_algorithm": {
        "_name_": "digest_algorithm",
        "title": "digest_algorithm",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "from": {
        "_name_": "from",
        "title": "from",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "common": {
        "_name_": "common",
        "title": "common",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "until": {
        "_name_": "until",
        "title": "until",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "fingerprint": {
        "_name_": "fingerprint",
        "title": "fingerprint",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "key_type": {
        "_name_": "key_type",
        "title": "key_type",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "internal": {
        "_name_": "internal",
        "title": "internal",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "lifetime": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "lifetime",
        "title": "lifetime",
        "_required_": false
       },
       "serial": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "serial",
        "title": "serial",
        "_required_": false
       },
       "key_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "key_length",
        "title": "key_length",
        "_required_": false
       },
       "chain": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "chain",
        "title": "chain",
        "_required_": false
       },
       "CA_type_existing": {
        "type": "boolean",
        "_name_": "CA_type_existing",
        "title": "CA_type_existing",
        "_required_": false
       },
       "CA_type_internal": {
        "type": "boolean",
        "_name_": "CA_type_internal",
        "title": "CA_type_internal",
        "_required_": false
       },
       "CA_type_intermediate": {
        "type": "boolean",
        "_name_": "CA_type_intermediate",
        "title": "CA_type_intermediate",
        "_required_": false
       },
       "cert_type_existing": {
        "type": "boolean",
        "_name_": "cert_type_existing",
        "title": "cert_type_existing",
        "_required_": false
       },
       "cert_type_internal": {
        "type": "boolean",
        "_name_": "cert_type_internal",
        "title": "cert_type_internal",
        "_required_": false
       },
       "cert_type_CSR": {
        "type": "boolean",
        "_name_": "cert_type_CSR",
        "title": "cert_type_CSR",
        "_required_": false
       },
       "parsed": {
        "type": "boolean",
        "_name_": "parsed",
        "title": "parsed",
        "_required_": false
       },
       "can_be_revoked": {
        "type": "boolean",
        "_name_": "can_be_revoked",
        "title": "can_be_revoked",
        "_required_": false
       },
       "extensions": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extensions",
        "title": "extensions",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "revoked_certs": {
        "_name_": "revoked_certs",
        "title": "revoked_certs",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "crl_path": {
        "_name_": "crl_path",
        "title": "crl_path",
        "_required_": false,
        "type": "string"
       },
       "signed_certificates": {
        "type": "integer",
        "_name_": "signed_certificates",
        "title": "signed_certificates",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "certificate_entry",
      "title": "certificate_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "certificate",
       "privatekey",
       "CSR",
       "acme_uri",
       "domains_authenticators",
       "renew_days",
       "revoked_date",
       "signedby",
       "root_path",
       "acme",
       "certificate_path",
       "privatekey_path",
       "csr_path",
       "cert_type",
       "revoked",
       "expired",
       "issuer",
       "chain_list",
       "country",
       "state",
       "city",
       "organization",
       "organizational_unit",
       "san",
       "email",
       "DN",
       "subject_name_hash",
       "digest_algorithm",
       "from",
       "common",
       "until",
       "fingerprint",
       "key_type",
       "internal",
       "lifetime",
       "serial",
       "key_length",
       "chain",
       "CA_type_existing",
       "CA_type_internal",
       "CA_type_intermediate",
       "cert_type_existing",
       "cert_type_internal",
       "cert_type_CSR",
       "parsed",
       "can_be_revoked",
       "extensions",
       "revoked_certs",
       "crl_path",
       "signed_certificates"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "type": {
        "type": "integer",
        "_name_": "type",
        "title": "type",
        "_required_": false
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "certificate": {
        "_name_": "certificate",
        "title": "certificate",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey": {
        "_name_": "privatekey",
        "title": "privatekey",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "CSR": {
        "_name_": "CSR",
        "title": "CSR",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "acme_uri": {
        "_name_": "acme_uri",
        "title": "acme_uri",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "domains_authenticators": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "domains_authenticators",
        "title": "domains_authenticators",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "renew_days": {
        "type": "integer",
        "_name_": "renew_days",
        "title": "renew_days",
        "_required_": false
       },
       "revoked_date": {
        "_name_": "revoked_date",
        "title": "revoked_date",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "signedby": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "signedby",
        "title": "signedby",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "root_path": {
        "_name_": "root_path",
        "title": "root_path",
        "_required_": false,
        "type": "string"
       },
       "acme": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "acme",
        "title": "acme",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "certificate_path": {
        "_name_": "certificate_path",
        "title": "certificate_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey_path": {
        "_name_": "privatekey_path",
        "title": "privatekey_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "csr_path": {
        "_name_": "csr_path",
        "title": "csr_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "cert_type": {
        "_name_": "cert_type",
        "title": "cert_type",
        "_required_": false,
        "type": "string"
       },
       "revoked": {
        "type": "boolean",
        "_name_": "revoked",
        "title": "revoked",
        "_required_": false
       },
       "expired": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "expired",
        "title": "expired",
        "_required_": false
       },
       "issuer": {
        "anyOf": [
         {
          "_name_": "issuer",
          "title": "issuer",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "issuer",
          "title": "issuer",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "issuer",
        "description": null,
        "_required_": false
       },
       "chain_list": {
        "_name_": "chain_list",
        "title": "chain_list",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organization": {
        "_name_": "organization",
        "title": "organization",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organizational_unit": {
        "_name_": "organizational_unit",
        "title": "organizational_unit",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "san": {
        "_name_": "san",
        "title": "san",
        "default": [],
        "_required_": false,
        "type": [
         "array",
         "null"
        ],
        "items": [
         {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "DN": {
        "_name_": "DN",
        "title": "DN",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "subject_name_hash": {
        "_name_": "subject_name_hash",
        "title": "subject_name_hash",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "digest_algorithm": {
        "_name_": "digest_algorithm",
        "title": "digest_algorithm",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "from": {
        "_name_": "from",
        "title": "from",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "common": {
        "_name_": "common",
        "title": "common",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "until": {
        "_name_": "until",
        "title": "until",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "fingerprint": {
        "_name_": "fingerprint",
        "title": "fingerprint",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "key_type": {
        "_name_": "key_type",
        "title": "key_type",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "internal": {
        "_name_": "internal",
        "title": "internal",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "lifetime": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "lifetime",
        "title": "lifetime",
        "_required_": false
       },
       "serial": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "serial",
        "title": "serial",
        "_required_": false
       },
       "key_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "key_length",
        "title": "key_length",
        "_required_": false
       },
       "chain": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "chain",
        "title": "chain",
        "_required_": false
       },
       "CA_type_existing": {
        "type": "boolean",
        "_name_": "CA_type_existing",
        "title": "CA_type_existing",
        "_required_": false
       },
       "CA_type_internal": {
        "type": "boolean",
        "_name_": "CA_type_internal",
        "title": "CA_type_internal",
        "_required_": false
       },
       "CA_type_intermediate": {
        "type": "boolean",
        "_name_": "CA_type_intermediate",
        "title": "CA_type_intermediate",
        "_required_": false
       },
       "cert_type_existing": {
        "type": "boolean",
        "_name_": "cert_type_existing",
        "title": "cert_type_existing",
        "_required_": false
       },
       "cert_type_internal": {
        "type": "boolean",
        "_name_": "cert_type_internal",
        "title": "cert_type_internal",
        "_required_": false
       },
       "cert_type_CSR": {
        "type": "boolean",
        "_name_": "cert_type_CSR",
        "title": "cert_type_CSR",
        "_required_": false
       },
       "parsed": {
        "type": "boolean",
        "_name_": "parsed",
        "title": "parsed",
        "_required_": false
       },
       "can_be_revoked": {
        "type": "boolean",
        "_name_": "can_be_revoked",
        "title": "can_be_revoked",
        "_required_": false
       },
       "extensions": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extensions",
        "title": "extensions",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "revoked_certs": {
        "_name_": "revoked_certs",
        "title": "revoked_certs",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "crl_path": {
        "_name_": "crl_path",
        "title": "crl_path",
        "_required_": false,
        "type": "string"
       },
       "signed_certificates": {
        "type": "integer",
        "_name_": "signed_certificates",
        "title": "signed_certificates",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "certificate_entry",
      "title": "certificate_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "certificate",
       "privatekey",
       "CSR",
       "acme_uri",
       "domains_authenticators",
       "renew_days",
       "revoked_date",
       "signedby",
       "root_path",
       "acme",
       "certificate_path",
       "privatekey_path",
       "csr_path",
       "cert_type",
       "revoked",
       "expired",
       "issuer",
       "chain_list",
       "country",
       "state",
       "city",
       "organization",
       "organizational_unit",
       "san",
       "email",
       "DN",
       "subject_name_hash",
       "digest_algorithm",
       "from",
       "common",
       "until",
       "fingerprint",
       "key_type",
       "internal",
       "lifetime",
       "serial",
       "key_length",
       "chain",
       "CA_type_existing",
       "CA_type_internal",
       "CA_type_intermediate",
       "cert_type_existing",
       "cert_type_internal",
       "cert_type_CSR",
       "parsed",
       "can_be_revoked",
       "extensions",
       "revoked_certs",
       "crl_path",
       "signed_certificates"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "certificate_create": {
    "type": "object",
    "properties": {
     "tos": {
      "type": "boolean",
      "_name_": "tos",
      "title": "tos"
     },
     "dns_mapping": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "dns_mapping",
      "title": "dns_mapping",
      "default": {},
      "_attrs_order_": []
     },
     "csr_id": {
      "type": "integer",
      "_name_": "csr_id",
      "title": "csr_id"
     },
     "signedby": {
      "type": "integer",
      "_name_": "signedby",
      "title": "signedby"
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length"
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime"
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial"
     },
     "acme_directory_uri": {
      "_name_": "acme_directory_uri",
      "title": "acme_directory_uri",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string"
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string"
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string"
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string"
     },
     "ec_curve": {
      "_name_": "ec_curve",
      "title": "ec_curve",
      "default": "SECP384R1",
      "type": "string",
      "enum": [
       "SECP256R1",
       "SECP384R1",
       "SECP521R1",
       "ed25519"
      ],
      "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve."
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string"
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "default": "RSA",
      "type": "string",
      "enum": [
       "RSA",
       "EC"
      ],
      "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string"
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string"
     },
     "passphrase": {
      "_name_": "passphrase",
      "title": "passphrase",
      "type": "string"
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string"
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string"
     },
     "create_type": {
      "_name_": "create_type",
      "title": "create_type",
      "type": "string",
      "enum": [
       "CERTIFICATE_CREATE_INTERNAL",
       "CERTIFICATE_CREATE_IMPORTED",
       "CERTIFICATE_CREATE_CSR",
       "CERTIFICATE_CREATE_IMPORTED_CSR",
       "CERTIFICATE_CREATE_ACME"
      ],
      "description": "Certificates are classified under following types and the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate\nA type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are\nvalidated accordingly and finally a certificate is made based on the selected type."
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "enum": [
       "SHA224",
       "SHA256",
       "SHA384",
       "SHA512"
      ]
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san",
       "title": "san",
       "_required_": false,
       "type": "string"
      }
     },
     "cert_extensions": {
      "type": "object",
      "properties": {
       "BasicConstraints": {
        "type": "object",
        "properties": {
         "ca": {
          "type": "boolean",
          "_name_": "ca",
          "title": "ca",
          "default": false
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "path_length": {
          "type": "integer",
          "_name_": "path_length",
          "title": "path_length",
          "default": null,
          "nullable": true
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "BasicConstraints",
        "title": "BasicConstraints",
        "default": {},
        "_attrs_order_": [
         "ca",
         "enabled",
         "path_length",
         "extension_critical"
        ]
       },
       "AuthorityKeyIdentifier": {
        "type": "object",
        "properties": {
         "authority_cert_issuer": {
          "type": "boolean",
          "_name_": "authority_cert_issuer",
          "title": "authority_cert_issuer",
          "default": false
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "AuthorityKeyIdentifier",
        "title": "AuthorityKeyIdentifier",
        "default": {},
        "_attrs_order_": [
         "authority_cert_issuer",
         "enabled",
         "extension_critical"
        ]
       },
       "ExtendedKeyUsage": {
        "type": "object",
        "properties": {
         "usages": {
          "_name_": "usages",
          "title": "usages",
          "default": [],
          "type": "array",
          "items": {
           "_name_": "usage",
           "title": "usage",
           "_required_": false,
           "type": "string",
           "enum": [
            "ANY_EXTENDED_KEY_USAGE",
            "CERTIFICATE_TRANSPARENCY",
            "CLIENT_AUTH",
            "CODE_SIGNING",
            "EMAIL_PROTECTION",
            "IPSEC_IKE",
            "KERBEROS_PKINIT_KDC",
            "OCSP_SIGNING",
            "SERVER_AUTH",
            "SMARTCARD_LOGON",
            "TIME_STAMPING"
           ]
          }
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "ExtendedKeyUsage",
        "title": "ExtendedKeyUsage",
        "default": {},
        "_attrs_order_": [
         "usages",
         "enabled",
         "extension_critical"
        ]
       },
       "KeyUsage": {
        "type": "object",
        "properties": {
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "digital_signature": {
          "type": "boolean",
          "_name_": "digital_signature",
          "title": "digital_signature",
          "default": false
         },
         "content_commitment": {
          "type": "boolean",
          "_name_": "content_commitment",
          "title": "content_commitment",
          "default": false
         },
         "key_encipherment": {
          "type": "boolean",
          "_name_": "key_encipherment",
          "title": "key_encipherment",
          "default": false
         },
         "data_encipherment": {
          "type": "boolean",
          "_name_": "data_encipherment",
          "title": "data_encipherment",
          "default": false
         },
         "key_agreement": {
          "type": "boolean",
          "_name_": "key_agreement",
          "title": "key_agreement",
          "default": false
         },
         "key_cert_sign": {
          "type": "boolean",
          "_name_": "key_cert_sign",
          "title": "key_cert_sign",
          "default": false
         },
         "crl_sign": {
          "type": "boolean",
          "_name_": "crl_sign",
          "title": "crl_sign",
          "default": false
         },
         "encipher_only": {
          "type": "boolean",
          "_name_": "encipher_only",
          "title": "encipher_only",
          "default": false
         },
         "decipher_only": {
          "type": "boolean",
          "_name_": "decipher_only",
          "title": "decipher_only",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "KeyUsage",
        "title": "KeyUsage",
        "default": {},
        "_attrs_order_": [
         "enabled",
         "digital_signature",
         "content_commitment",
         "key_encipherment",
         "data_encipherment",
         "key_agreement",
         "key_cert_sign",
         "crl_sign",
         "encipher_only",
         "decipher_only",
         "extension_critical"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "cert_extensions",
      "title": "cert_extensions",
      "default": {},
      "_attrs_order_": [
       "BasicConstraints",
       "AuthorityKeyIdentifier",
       "ExtendedKeyUsage",
       "KeyUsage"
      ],
      "description": "`cert_extensions` can be specified to set X509v3 extensions."
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_create",
    "title": "certificate_create",
    "default": {},
    "_attrs_order_": [
     "tos",
     "dns_mapping",
     "csr_id",
     "signedby",
     "key_length",
     "renew_days",
     "type",
     "lifetime",
     "serial",
     "acme_directory_uri",
     "certificate",
     "city",
     "common",
     "country",
     "CSR",
     "ec_curve",
     "email",
     "key_type",
     "name",
     "organization",
     "organizational_unit",
     "passphrase",
     "privatekey",
     "state",
     "create_type",
     "digest_algorithm",
     "san",
     "cert_extensions"
    ]
   },
   "return_schema_of_certificate_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked"
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve.",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_create_returns",
    "title": "certificate_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates"
    ]
   },
   "certificate_delete": {
    "type": "boolean",
    "_name_": "force",
    "title": "force",
    "default": false,
    "description": "If the certificate is an ACME based certificate, certificate service will try to\nrevoke the certificate by updating it's status with the ACME server, if it fails an exception is raised\nand the certificate is not deleted from the system. However, if `force` is set to True, certificate is deleted\nfrom the system even if some error occurred while revoking the certificate with the ACME Server"
   },
   "return_schema_of_certificate_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "certificate_update": {
    "type": "object",
    "properties": {
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked",
      "description": "When `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list."
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_update",
    "title": "certificate_update",
    "default": {},
    "_attrs_order_": [
     "revoked",
     "renew_days",
     "name"
    ]
   },
   "return_schema_of_certificate_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update certificate of `id`\nWhen `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list."
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked",
      "description": "When `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which\nexists on this system, its serial number is added to the CA's certificate revocation list."
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "description": "`key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to\nusing \"SECP384R1\" curve.",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_update_returns",
    "title": "certificate_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates"
    ]
   },
   "return_schema_of_certificate_acme_server_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "acme_server_choices",
    "title": "acme_server_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_certificate_certificate_signing_requests_profiles": {
    "type": "object",
    "properties": {
     "HTTPS RSA Certificate": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "HTTPS RSA Certificate",
      "title": "HTTPS RSA Certificate",
      "default": {},
      "_attrs_order_": []
     },
     "HTTPS ECC Certificate": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "HTTPS ECC Certificate",
      "title": "HTTPS ECC Certificate",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_signing_requests_profiles",
    "title": "certificate_signing_requests_profiles",
    "description": "\n\nExample(s):\n```\n{\n    \"HTTPS RSA Certificate\": {\n        \"cert_extensions\": {\n            \"BasicConstraints\": {\n                \"enabled\": true,\n                \"ca\": false,\n                \"extension_critical\": true\n            },\n            \"ExtendedKeyUsage\": {\n                \"enabled\": true,\n                \"extension_critical\": true,\n                \"usages\": [\n                    \"SERVER_AUTH\",\n                    \"CLIENT_AUTH\"\n                ]\n            },\n            \"KeyUsage\": {\n                \"enabled\": true,\n                \"extension_critical\": true,\n                \"digital_signature\": true,\n                \"key_encipherment\": true,\n                \"key_agreement\": true\n            }\n        },\n        \"key_length\": 2048,\n        \"key_type\": \"RSA\",\n        \"lifetime\": 397,\n        \"digest_algorithm\": \"SHA256\"\n    },\n    \"HTTPS ECC Certificate\": {\n        \"cert_extensions\": {\n            \"BasicConstraints\": {\n                \"enabled\": true,\n                \"ca\": false,\n                \"extension_critical\": true\n            },\n            \"ExtendedKeyUsage\": {\n                \"enabled\": true,\n                \"extension_critical\": true,\n                \"usages\": [\n                    \"SERVER_AUTH\",\n                    \"CLIENT_AUTH\"\n                ]\n            },\n            \"KeyUsage\": {\n                \"enabled\": true,\n                \"extension_critical\": true,\n                \"digital_signature\": true\n            }\n        },\n        \"ec_curve\": \"SECP384R1\",\n        \"key_type\": \"EC\",\n        \"lifetime\": 397,\n        \"digest_algorithm\": \"SHA256\"\n    }\n}\n```\n",
    "default": {},
    "_attrs_order_": [
     "HTTPS RSA Certificate",
     "HTTPS ECC Certificate"
    ]
   },
   "return_schema_of_certificate_country_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "country_choices",
    "title": "country_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_certificate_ec_curve_choices": {
    "type": "object",
    "properties": {
     "SECP256R1": {
      "_name_": "SECP256R1",
      "title": "SECP256R1",
      "type": "string",
      "enum": [
       "SECP256R1"
      ]
     },
     "SECP384R1": {
      "_name_": "SECP384R1",
      "title": "SECP384R1",
      "type": "string",
      "enum": [
       "SECP384R1"
      ]
     },
     "SECP521R1": {
      "_name_": "SECP521R1",
      "title": "SECP521R1",
      "type": "string",
      "enum": [
       "SECP521R1"
      ]
     },
     "ed25519": {
      "_name_": "ed25519",
      "title": "ed25519",
      "type": "string",
      "enum": [
       "ed25519"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "ec_curve_choices",
    "title": "ec_curve_choices",
    "default": {},
    "_attrs_order_": [
     "SECP256R1",
     "SECP384R1",
     "SECP521R1",
     "ed25519"
    ]
   },
   "return_schema_of_certificate_extended_key_usage_choices": {
    "type": "object",
    "properties": {
     "ANY_EXTENDED_KEY_USAGE": {
      "_name_": "ANY_EXTENDED_KEY_USAGE",
      "title": "ANY_EXTENDED_KEY_USAGE",
      "type": "string",
      "enum": [
       "ANY_EXTENDED_KEY_USAGE"
      ]
     },
     "CERTIFICATE_TRANSPARENCY": {
      "_name_": "CERTIFICATE_TRANSPARENCY",
      "title": "CERTIFICATE_TRANSPARENCY",
      "type": "string",
      "enum": [
       "CERTIFICATE_TRANSPARENCY"
      ]
     },
     "CLIENT_AUTH": {
      "_name_": "CLIENT_AUTH",
      "title": "CLIENT_AUTH",
      "type": "string",
      "enum": [
       "CLIENT_AUTH"
      ]
     },
     "CODE_SIGNING": {
      "_name_": "CODE_SIGNING",
      "title": "CODE_SIGNING",
      "type": "string",
      "enum": [
       "CODE_SIGNING"
      ]
     },
     "EMAIL_PROTECTION": {
      "_name_": "EMAIL_PROTECTION",
      "title": "EMAIL_PROTECTION",
      "type": "string",
      "enum": [
       "EMAIL_PROTECTION"
      ]
     },
     "IPSEC_IKE": {
      "_name_": "IPSEC_IKE",
      "title": "IPSEC_IKE",
      "type": "string",
      "enum": [
       "IPSEC_IKE"
      ]
     },
     "KERBEROS_PKINIT_KDC": {
      "_name_": "KERBEROS_PKINIT_KDC",
      "title": "KERBEROS_PKINIT_KDC",
      "type": "string",
      "enum": [
       "KERBEROS_PKINIT_KDC"
      ]
     },
     "OCSP_SIGNING": {
      "_name_": "OCSP_SIGNING",
      "title": "OCSP_SIGNING",
      "type": "string",
      "enum": [
       "OCSP_SIGNING"
      ]
     },
     "SERVER_AUTH": {
      "_name_": "SERVER_AUTH",
      "title": "SERVER_AUTH",
      "type": "string",
      "enum": [
       "SERVER_AUTH"
      ]
     },
     "SMARTCARD_LOGON": {
      "_name_": "SMARTCARD_LOGON",
      "title": "SMARTCARD_LOGON",
      "type": "string",
      "enum": [
       "SMARTCARD_LOGON"
      ]
     },
     "TIME_STAMPING": {
      "_name_": "TIME_STAMPING",
      "title": "TIME_STAMPING",
      "type": "string",
      "enum": [
       "TIME_STAMPING"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "extended_key_usage_choices",
    "title": "extended_key_usage_choices",
    "default": {},
    "_attrs_order_": [
     "ANY_EXTENDED_KEY_USAGE",
     "CERTIFICATE_TRANSPARENCY",
     "CLIENT_AUTH",
     "CODE_SIGNING",
     "EMAIL_PROTECTION",
     "IPSEC_IKE",
     "KERBEROS_PKINIT_KDC",
     "OCSP_SIGNING",
     "SERVER_AUTH",
     "SMARTCARD_LOGON",
     "TIME_STAMPING"
    ]
   },
   "certificate_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "certificate_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "certificate_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/certificate_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/certificate_get_instance_1"
     }
    }
   },
   "return_schema_of_certificate_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked"
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_entry",
    "title": "certificate_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates"
    ]
   },
   "return_schema_of_certificate_key_type_choices": {
    "type": "object",
    "properties": {
     "RSA": {
      "_name_": "RSA",
      "title": "RSA",
      "type": "string",
      "enum": [
       "RSA"
      ]
     },
     "EC": {
      "_name_": "EC",
      "title": "EC",
      "type": "string",
      "enum": [
       "EC"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "private_key_type_choices",
    "title": "private_key_type_choices",
    "default": {},
    "_attrs_order_": [
     "RSA",
     "EC"
    ]
   },
   "return_schema_of_certificate_profiles": {
    "type": "object",
    "properties": {
     "HTTPS RSA Certificate": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "HTTPS RSA Certificate",
      "title": "HTTPS RSA Certificate",
      "default": {},
      "_attrs_order_": []
     },
     "HTTPS ECC Certificate": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "HTTPS ECC Certificate",
      "title": "HTTPS ECC Certificate",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_profiles",
    "title": "certificate_profiles",
    "default": {},
    "_attrs_order_": [
     "HTTPS RSA Certificate",
     "HTTPS ECC Certificate"
    ]
   },
   "return_schema_of_certificateauthority_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "type": {
          "type": "integer",
          "_name_": "type",
          "title": "type",
          "_required_": false
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "certificate": {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "privatekey": {
          "_name_": "privatekey",
          "title": "privatekey",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "CSR": {
          "_name_": "CSR",
          "title": "CSR",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "acme_uri": {
          "_name_": "acme_uri",
          "title": "acme_uri",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "domains_authenticators": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "domains_authenticators",
          "title": "domains_authenticators",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "renew_days": {
          "type": "integer",
          "_name_": "renew_days",
          "title": "renew_days",
          "_required_": false
         },
         "revoked_date": {
          "_name_": "revoked_date",
          "title": "revoked_date",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "signedby": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "signedby",
          "title": "signedby",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "root_path": {
          "_name_": "root_path",
          "title": "root_path",
          "_required_": false,
          "type": "string"
         },
         "acme": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "acme",
          "title": "acme",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "certificate_path": {
          "_name_": "certificate_path",
          "title": "certificate_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "privatekey_path": {
          "_name_": "privatekey_path",
          "title": "privatekey_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "csr_path": {
          "_name_": "csr_path",
          "title": "csr_path",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "cert_type": {
          "_name_": "cert_type",
          "title": "cert_type",
          "_required_": false,
          "type": "string"
         },
         "revoked": {
          "type": "boolean",
          "_name_": "revoked",
          "title": "revoked",
          "_required_": false
         },
         "expired": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "expired",
          "title": "expired",
          "_required_": false
         },
         "issuer": {
          "anyOf": [
           {
            "_name_": "issuer",
            "title": "issuer",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "_name_": "issuer",
            "title": "issuer",
            "default": {},
            "_required_": false,
            "_attrs_order_": []
           }
          ],
          "nullable": false,
          "_name_": "issuer",
          "description": null,
          "_required_": false
         },
         "chain_list": {
          "_name_": "chain_list",
          "title": "chain_list",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "certificate",
            "title": "certificate",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "country": {
          "_name_": "country",
          "title": "country",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "state": {
          "_name_": "state",
          "title": "state",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "city": {
          "_name_": "city",
          "title": "city",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "organization": {
          "_name_": "organization",
          "title": "organization",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "organizational_unit": {
          "_name_": "organizational_unit",
          "title": "organizational_unit",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "san": {
          "_name_": "san",
          "title": "san",
          "default": [],
          "_required_": false,
          "type": [
           "array",
           "null"
          ],
          "items": [
           {
            "_name_": "san_entry",
            "title": "san_entry",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "email": {
          "_name_": "email",
          "title": "email",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "DN": {
          "_name_": "DN",
          "title": "DN",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "subject_name_hash": {
          "_name_": "subject_name_hash",
          "title": "subject_name_hash",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "digest_algorithm": {
          "_name_": "digest_algorithm",
          "title": "digest_algorithm",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "from": {
          "_name_": "from",
          "title": "from",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "common": {
          "_name_": "common",
          "title": "common",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "until": {
          "_name_": "until",
          "title": "until",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "fingerprint": {
          "_name_": "fingerprint",
          "title": "fingerprint",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "key_type": {
          "_name_": "key_type",
          "title": "key_type",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "internal": {
          "_name_": "internal",
          "title": "internal",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "lifetime": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "lifetime",
          "title": "lifetime",
          "_required_": false
         },
         "serial": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "serial",
          "title": "serial",
          "_required_": false
         },
         "key_length": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "key_length",
          "title": "key_length",
          "_required_": false
         },
         "chain": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "chain",
          "title": "chain",
          "_required_": false
         },
         "CA_type_existing": {
          "type": "boolean",
          "_name_": "CA_type_existing",
          "title": "CA_type_existing",
          "_required_": false
         },
         "CA_type_internal": {
          "type": "boolean",
          "_name_": "CA_type_internal",
          "title": "CA_type_internal",
          "_required_": false
         },
         "CA_type_intermediate": {
          "type": "boolean",
          "_name_": "CA_type_intermediate",
          "title": "CA_type_intermediate",
          "_required_": false
         },
         "cert_type_existing": {
          "type": "boolean",
          "_name_": "cert_type_existing",
          "title": "cert_type_existing",
          "_required_": false
         },
         "cert_type_internal": {
          "type": "boolean",
          "_name_": "cert_type_internal",
          "title": "cert_type_internal",
          "_required_": false
         },
         "cert_type_CSR": {
          "type": "boolean",
          "_name_": "cert_type_CSR",
          "title": "cert_type_CSR",
          "_required_": false
         },
         "parsed": {
          "type": "boolean",
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "can_be_revoked": {
          "type": "boolean",
          "_name_": "can_be_revoked",
          "title": "can_be_revoked",
          "_required_": false
         },
         "extensions": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "extensions",
          "title": "extensions",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "revoked_certs": {
          "_name_": "revoked_certs",
          "title": "revoked_certs",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "crl_path": {
          "_name_": "crl_path",
          "title": "crl_path",
          "_required_": false,
          "type": "string"
         },
         "signed_certificates": {
          "type": "integer",
          "_name_": "signed_certificates",
          "title": "signed_certificates",
          "_required_": false
         },
         "add_to_trusted_store": {
          "type": "boolean",
          "_name_": "add_to_trusted_store",
          "title": "add_to_trusted_store",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "certificateauthority_entry",
        "title": "certificate_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "type",
         "name",
         "certificate",
         "privatekey",
         "CSR",
         "acme_uri",
         "domains_authenticators",
         "renew_days",
         "revoked_date",
         "signedby",
         "root_path",
         "acme",
         "certificate_path",
         "privatekey_path",
         "csr_path",
         "cert_type",
         "revoked",
         "expired",
         "issuer",
         "chain_list",
         "country",
         "state",
         "city",
         "organization",
         "organizational_unit",
         "san",
         "email",
         "DN",
         "subject_name_hash",
         "digest_algorithm",
         "from",
         "common",
         "until",
         "fingerprint",
         "key_type",
         "internal",
         "lifetime",
         "serial",
         "key_length",
         "chain",
         "CA_type_existing",
         "CA_type_internal",
         "CA_type_intermediate",
         "cert_type_existing",
         "cert_type_internal",
         "cert_type_CSR",
         "parsed",
         "can_be_revoked",
         "extensions",
         "revoked_certs",
         "crl_path",
         "signed_certificates",
         "add_to_trusted_store"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "type": {
        "type": "integer",
        "_name_": "type",
        "title": "type",
        "_required_": false
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "certificate": {
        "_name_": "certificate",
        "title": "certificate",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey": {
        "_name_": "privatekey",
        "title": "privatekey",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "CSR": {
        "_name_": "CSR",
        "title": "CSR",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "acme_uri": {
        "_name_": "acme_uri",
        "title": "acme_uri",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "domains_authenticators": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "domains_authenticators",
        "title": "domains_authenticators",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "renew_days": {
        "type": "integer",
        "_name_": "renew_days",
        "title": "renew_days",
        "_required_": false
       },
       "revoked_date": {
        "_name_": "revoked_date",
        "title": "revoked_date",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "signedby": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "signedby",
        "title": "signedby",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "root_path": {
        "_name_": "root_path",
        "title": "root_path",
        "_required_": false,
        "type": "string"
       },
       "acme": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "acme",
        "title": "acme",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "certificate_path": {
        "_name_": "certificate_path",
        "title": "certificate_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey_path": {
        "_name_": "privatekey_path",
        "title": "privatekey_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "csr_path": {
        "_name_": "csr_path",
        "title": "csr_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "cert_type": {
        "_name_": "cert_type",
        "title": "cert_type",
        "_required_": false,
        "type": "string"
       },
       "revoked": {
        "type": "boolean",
        "_name_": "revoked",
        "title": "revoked",
        "_required_": false
       },
       "expired": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "expired",
        "title": "expired",
        "_required_": false
       },
       "issuer": {
        "anyOf": [
         {
          "_name_": "issuer",
          "title": "issuer",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "issuer",
          "title": "issuer",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "issuer",
        "description": null,
        "_required_": false
       },
       "chain_list": {
        "_name_": "chain_list",
        "title": "chain_list",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organization": {
        "_name_": "organization",
        "title": "organization",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organizational_unit": {
        "_name_": "organizational_unit",
        "title": "organizational_unit",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "san": {
        "_name_": "san",
        "title": "san",
        "default": [],
        "_required_": false,
        "type": [
         "array",
         "null"
        ],
        "items": [
         {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "DN": {
        "_name_": "DN",
        "title": "DN",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "subject_name_hash": {
        "_name_": "subject_name_hash",
        "title": "subject_name_hash",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "digest_algorithm": {
        "_name_": "digest_algorithm",
        "title": "digest_algorithm",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "from": {
        "_name_": "from",
        "title": "from",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "common": {
        "_name_": "common",
        "title": "common",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "until": {
        "_name_": "until",
        "title": "until",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "fingerprint": {
        "_name_": "fingerprint",
        "title": "fingerprint",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "key_type": {
        "_name_": "key_type",
        "title": "key_type",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "internal": {
        "_name_": "internal",
        "title": "internal",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "lifetime": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "lifetime",
        "title": "lifetime",
        "_required_": false
       },
       "serial": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "serial",
        "title": "serial",
        "_required_": false
       },
       "key_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "key_length",
        "title": "key_length",
        "_required_": false
       },
       "chain": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "chain",
        "title": "chain",
        "_required_": false
       },
       "CA_type_existing": {
        "type": "boolean",
        "_name_": "CA_type_existing",
        "title": "CA_type_existing",
        "_required_": false
       },
       "CA_type_internal": {
        "type": "boolean",
        "_name_": "CA_type_internal",
        "title": "CA_type_internal",
        "_required_": false
       },
       "CA_type_intermediate": {
        "type": "boolean",
        "_name_": "CA_type_intermediate",
        "title": "CA_type_intermediate",
        "_required_": false
       },
       "cert_type_existing": {
        "type": "boolean",
        "_name_": "cert_type_existing",
        "title": "cert_type_existing",
        "_required_": false
       },
       "cert_type_internal": {
        "type": "boolean",
        "_name_": "cert_type_internal",
        "title": "cert_type_internal",
        "_required_": false
       },
       "cert_type_CSR": {
        "type": "boolean",
        "_name_": "cert_type_CSR",
        "title": "cert_type_CSR",
        "_required_": false
       },
       "parsed": {
        "type": "boolean",
        "_name_": "parsed",
        "title": "parsed",
        "_required_": false
       },
       "can_be_revoked": {
        "type": "boolean",
        "_name_": "can_be_revoked",
        "title": "can_be_revoked",
        "_required_": false
       },
       "extensions": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extensions",
        "title": "extensions",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "revoked_certs": {
        "_name_": "revoked_certs",
        "title": "revoked_certs",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "crl_path": {
        "_name_": "crl_path",
        "title": "crl_path",
        "_required_": false,
        "type": "string"
       },
       "signed_certificates": {
        "type": "integer",
        "_name_": "signed_certificates",
        "title": "signed_certificates",
        "_required_": false
       },
       "add_to_trusted_store": {
        "type": "boolean",
        "_name_": "add_to_trusted_store",
        "title": "add_to_trusted_store",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "certificateauthority_entry",
      "title": "certificate_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "certificate",
       "privatekey",
       "CSR",
       "acme_uri",
       "domains_authenticators",
       "renew_days",
       "revoked_date",
       "signedby",
       "root_path",
       "acme",
       "certificate_path",
       "privatekey_path",
       "csr_path",
       "cert_type",
       "revoked",
       "expired",
       "issuer",
       "chain_list",
       "country",
       "state",
       "city",
       "organization",
       "organizational_unit",
       "san",
       "email",
       "DN",
       "subject_name_hash",
       "digest_algorithm",
       "from",
       "common",
       "until",
       "fingerprint",
       "key_type",
       "internal",
       "lifetime",
       "serial",
       "key_length",
       "chain",
       "CA_type_existing",
       "CA_type_internal",
       "CA_type_intermediate",
       "cert_type_existing",
       "cert_type_internal",
       "cert_type_CSR",
       "parsed",
       "can_be_revoked",
       "extensions",
       "revoked_certs",
       "crl_path",
       "signed_certificates",
       "add_to_trusted_store"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "type": {
        "type": "integer",
        "_name_": "type",
        "title": "type",
        "_required_": false
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "certificate": {
        "_name_": "certificate",
        "title": "certificate",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey": {
        "_name_": "privatekey",
        "title": "privatekey",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "CSR": {
        "_name_": "CSR",
        "title": "CSR",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "acme_uri": {
        "_name_": "acme_uri",
        "title": "acme_uri",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "domains_authenticators": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "domains_authenticators",
        "title": "domains_authenticators",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "renew_days": {
        "type": "integer",
        "_name_": "renew_days",
        "title": "renew_days",
        "_required_": false
       },
       "revoked_date": {
        "_name_": "revoked_date",
        "title": "revoked_date",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "signedby": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "signedby",
        "title": "signedby",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "root_path": {
        "_name_": "root_path",
        "title": "root_path",
        "_required_": false,
        "type": "string"
       },
       "acme": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "acme",
        "title": "acme",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "certificate_path": {
        "_name_": "certificate_path",
        "title": "certificate_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "privatekey_path": {
        "_name_": "privatekey_path",
        "title": "privatekey_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "csr_path": {
        "_name_": "csr_path",
        "title": "csr_path",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "cert_type": {
        "_name_": "cert_type",
        "title": "cert_type",
        "_required_": false,
        "type": "string"
       },
       "revoked": {
        "type": "boolean",
        "_name_": "revoked",
        "title": "revoked",
        "_required_": false
       },
       "expired": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "expired",
        "title": "expired",
        "_required_": false
       },
       "issuer": {
        "anyOf": [
         {
          "_name_": "issuer",
          "title": "issuer",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "issuer",
          "title": "issuer",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "issuer",
        "description": null,
        "_required_": false
       },
       "chain_list": {
        "_name_": "chain_list",
        "title": "chain_list",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organization": {
        "_name_": "organization",
        "title": "organization",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "organizational_unit": {
        "_name_": "organizational_unit",
        "title": "organizational_unit",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "san": {
        "_name_": "san",
        "title": "san",
        "default": [],
        "_required_": false,
        "type": [
         "array",
         "null"
        ],
        "items": [
         {
          "_name_": "san_entry",
          "title": "san_entry",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "DN": {
        "_name_": "DN",
        "title": "DN",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "subject_name_hash": {
        "_name_": "subject_name_hash",
        "title": "subject_name_hash",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "digest_algorithm": {
        "_name_": "digest_algorithm",
        "title": "digest_algorithm",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "from": {
        "_name_": "from",
        "title": "from",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "common": {
        "_name_": "common",
        "title": "common",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "until": {
        "_name_": "until",
        "title": "until",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "fingerprint": {
        "_name_": "fingerprint",
        "title": "fingerprint",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "key_type": {
        "_name_": "key_type",
        "title": "key_type",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "internal": {
        "_name_": "internal",
        "title": "internal",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "lifetime": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "lifetime",
        "title": "lifetime",
        "_required_": false
       },
       "serial": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "serial",
        "title": "serial",
        "_required_": false
       },
       "key_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "key_length",
        "title": "key_length",
        "_required_": false
       },
       "chain": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "chain",
        "title": "chain",
        "_required_": false
       },
       "CA_type_existing": {
        "type": "boolean",
        "_name_": "CA_type_existing",
        "title": "CA_type_existing",
        "_required_": false
       },
       "CA_type_internal": {
        "type": "boolean",
        "_name_": "CA_type_internal",
        "title": "CA_type_internal",
        "_required_": false
       },
       "CA_type_intermediate": {
        "type": "boolean",
        "_name_": "CA_type_intermediate",
        "title": "CA_type_intermediate",
        "_required_": false
       },
       "cert_type_existing": {
        "type": "boolean",
        "_name_": "cert_type_existing",
        "title": "cert_type_existing",
        "_required_": false
       },
       "cert_type_internal": {
        "type": "boolean",
        "_name_": "cert_type_internal",
        "title": "cert_type_internal",
        "_required_": false
       },
       "cert_type_CSR": {
        "type": "boolean",
        "_name_": "cert_type_CSR",
        "title": "cert_type_CSR",
        "_required_": false
       },
       "parsed": {
        "type": "boolean",
        "_name_": "parsed",
        "title": "parsed",
        "_required_": false
       },
       "can_be_revoked": {
        "type": "boolean",
        "_name_": "can_be_revoked",
        "title": "can_be_revoked",
        "_required_": false
       },
       "extensions": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extensions",
        "title": "extensions",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "revoked_certs": {
        "_name_": "revoked_certs",
        "title": "revoked_certs",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "crl_path": {
        "_name_": "crl_path",
        "title": "crl_path",
        "_required_": false,
        "type": "string"
       },
       "signed_certificates": {
        "type": "integer",
        "_name_": "signed_certificates",
        "title": "signed_certificates",
        "_required_": false
       },
       "add_to_trusted_store": {
        "type": "boolean",
        "_name_": "add_to_trusted_store",
        "title": "add_to_trusted_store",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "certificateauthority_entry",
      "title": "certificate_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "certificate",
       "privatekey",
       "CSR",
       "acme_uri",
       "domains_authenticators",
       "renew_days",
       "revoked_date",
       "signedby",
       "root_path",
       "acme",
       "certificate_path",
       "privatekey_path",
       "csr_path",
       "cert_type",
       "revoked",
       "expired",
       "issuer",
       "chain_list",
       "country",
       "state",
       "city",
       "organization",
       "organizational_unit",
       "san",
       "email",
       "DN",
       "subject_name_hash",
       "digest_algorithm",
       "from",
       "common",
       "until",
       "fingerprint",
       "key_type",
       "internal",
       "lifetime",
       "serial",
       "key_length",
       "chain",
       "CA_type_existing",
       "CA_type_internal",
       "CA_type_intermediate",
       "cert_type_existing",
       "cert_type_internal",
       "cert_type_CSR",
       "parsed",
       "can_be_revoked",
       "extensions",
       "revoked_certs",
       "crl_path",
       "signed_certificates",
       "add_to_trusted_store"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "certificateauthority_create": {
    "type": "object",
    "properties": {
     "tos": {
      "type": "boolean",
      "_name_": "tos",
      "title": "tos"
     },
     "csr_id": {
      "type": "integer",
      "_name_": "csr_id",
      "title": "csr_id"
     },
     "signedby": {
      "type": "integer",
      "_name_": "signedby",
      "title": "signedby"
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length"
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime"
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial"
     },
     "acme_directory_uri": {
      "_name_": "acme_directory_uri",
      "title": "acme_directory_uri",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string"
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string"
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string"
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string"
     },
     "ec_curve": {
      "_name_": "ec_curve",
      "title": "ec_curve",
      "default": "SECP384R1",
      "type": "string",
      "enum": [
       "SECP256R1",
       "SECP384R1",
       "SECP521R1",
       "ed25519"
      ],
      "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve."
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string"
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "default": "RSA",
      "type": "string",
      "enum": [
       "RSA",
       "EC"
      ],
      "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string"
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string"
     },
     "passphrase": {
      "_name_": "passphrase",
      "title": "passphrase",
      "type": "string"
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string"
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string"
     },
     "create_type": {
      "_name_": "create_type",
      "title": "create_type",
      "type": "string",
      "enum": [
       "CA_CREATE_INTERNAL",
       "CA_CREATE_IMPORTED",
       "CA_CREATE_INTERMEDIATE"
      ],
      "description": "Certificate Authorities are classified under following types with the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate authority\nA type is selected by the Certificate Authority Service based on `create_type`. The rest of the values\nare validated accordingly and finally a certificate is made based on the selected type."
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "enum": [
       "SHA224",
       "SHA256",
       "SHA384",
       "SHA512"
      ]
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san",
       "title": "san",
       "_required_": false,
       "type": "string"
      }
     },
     "cert_extensions": {
      "type": "object",
      "properties": {
       "BasicConstraints": {
        "type": "object",
        "properties": {
         "ca": {
          "type": "boolean",
          "_name_": "ca",
          "title": "ca",
          "default": true
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true
         },
         "path_length": {
          "type": "integer",
          "_name_": "path_length",
          "title": "path_length",
          "default": null,
          "nullable": true
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": true
         }
        },
        "additionalProperties": false,
        "_name_": "BasicConstraints",
        "title": "BasicConstraints",
        "default": {},
        "_attrs_order_": [
         "ca",
         "enabled",
         "path_length",
         "extension_critical"
        ]
       },
       "AuthorityKeyIdentifier": {
        "type": "object",
        "properties": {
         "authority_cert_issuer": {
          "type": "boolean",
          "_name_": "authority_cert_issuer",
          "title": "authority_cert_issuer",
          "default": false
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "AuthorityKeyIdentifier",
        "title": "AuthorityKeyIdentifier",
        "default": {},
        "_attrs_order_": [
         "authority_cert_issuer",
         "enabled",
         "extension_critical"
        ]
       },
       "ExtendedKeyUsage": {
        "type": "object",
        "properties": {
         "usages": {
          "_name_": "usages",
          "title": "usages",
          "default": [
           "SERVER_AUTH"
          ],
          "type": "array",
          "items": {
           "_name_": "usage",
           "title": "usage",
           "_required_": false,
           "type": "string",
           "enum": [
            "ANY_EXTENDED_KEY_USAGE",
            "CERTIFICATE_TRANSPARENCY",
            "CLIENT_AUTH",
            "CODE_SIGNING",
            "EMAIL_PROTECTION",
            "IPSEC_IKE",
            "KERBEROS_PKINIT_KDC",
            "OCSP_SIGNING",
            "SERVER_AUTH",
            "SMARTCARD_LOGON",
            "TIME_STAMPING"
           ]
          }
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "ExtendedKeyUsage",
        "title": "ExtendedKeyUsage",
        "default": {},
        "_attrs_order_": [
         "usages",
         "enabled",
         "extension_critical"
        ]
       },
       "KeyUsage": {
        "type": "object",
        "properties": {
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true
         },
         "digital_signature": {
          "type": "boolean",
          "_name_": "digital_signature",
          "title": "digital_signature",
          "default": false
         },
         "content_commitment": {
          "type": "boolean",
          "_name_": "content_commitment",
          "title": "content_commitment",
          "default": false
         },
         "key_encipherment": {
          "type": "boolean",
          "_name_": "key_encipherment",
          "title": "key_encipherment",
          "default": false
         },
         "data_encipherment": {
          "type": "boolean",
          "_name_": "data_encipherment",
          "title": "data_encipherment",
          "default": false
         },
         "key_agreement": {
          "type": "boolean",
          "_name_": "key_agreement",
          "title": "key_agreement",
          "default": false
         },
         "key_cert_sign": {
          "type": "boolean",
          "_name_": "key_cert_sign",
          "title": "key_cert_sign",
          "default": true
         },
         "crl_sign": {
          "type": "boolean",
          "_name_": "crl_sign",
          "title": "crl_sign",
          "default": true
         },
         "encipher_only": {
          "type": "boolean",
          "_name_": "encipher_only",
          "title": "encipher_only",
          "default": false
         },
         "decipher_only": {
          "type": "boolean",
          "_name_": "decipher_only",
          "title": "decipher_only",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": true
         }
        },
        "additionalProperties": false,
        "_name_": "KeyUsage",
        "title": "KeyUsage",
        "default": {},
        "_attrs_order_": [
         "enabled",
         "digital_signature",
         "content_commitment",
         "key_encipherment",
         "data_encipherment",
         "key_agreement",
         "key_cert_sign",
         "crl_sign",
         "encipher_only",
         "decipher_only",
         "extension_critical"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "cert_extensions",
      "title": "cert_extensions",
      "default": {},
      "_attrs_order_": [
       "BasicConstraints",
       "AuthorityKeyIdentifier",
       "ExtendedKeyUsage",
       "KeyUsage"
      ],
      "description": "`cert_extensions` can be specified to set X509v3 extensions."
     },
     "add_to_trusted_store": {
      "type": "boolean",
      "_name_": "add_to_trusted_store",
      "title": "add_to_trusted_store",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "ca_create",
    "title": "ca_create",
    "default": {},
    "_attrs_order_": [
     "tos",
     "csr_id",
     "signedby",
     "key_length",
     "renew_days",
     "type",
     "lifetime",
     "serial",
     "acme_directory_uri",
     "certificate",
     "city",
     "common",
     "country",
     "CSR",
     "ec_curve",
     "email",
     "key_type",
     "name",
     "organization",
     "organizational_unit",
     "passphrase",
     "privatekey",
     "state",
     "create_type",
     "digest_algorithm",
     "san",
     "cert_extensions",
     "add_to_trusted_store"
    ]
   },
   "return_schema_of_certificateauthority_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked"
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve.",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     },
     "add_to_trusted_store": {
      "type": "boolean",
      "_name_": "add_to_trusted_store",
      "title": "add_to_trusted_store"
     }
    },
    "additionalProperties": false,
    "_name_": "certificateauthority_create_returns",
    "title": "certificateauthority_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates",
     "add_to_trusted_store"
    ]
   },
   "return_schema_of_certificateauthority_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "certificateauthority_update": {
    "type": "object",
    "properties": {
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked",
      "description": "Only `name` and `revoked` attribute can be updated.\nIf `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's\ncertificate revocation list."
     },
     "add_to_trusted_store": {
      "type": "boolean",
      "_name_": "add_to_trusted_store",
      "title": "add_to_trusted_store"
     },
     "ca_id": {
      "type": "integer",
      "_name_": "ca_id",
      "title": "ca_id"
     },
     "csr_cert_id": {
      "type": "integer",
      "_name_": "csr_cert_id",
      "title": "csr_cert_id"
     },
     "create_type": {
      "_name_": "create_type",
      "title": "create_type",
      "type": "string",
      "enum": [
       "CA_SIGN_CSR"
      ],
      "description": "Certificate Authorities are classified under following types with the necessary keywords to be passed\nfor `create_type` attribute to create the respective type of certificate authority\nA type is selected by the Certificate Authority Service based on `create_type`. The rest of the values\nare validated accordingly and finally a certificate is made based on the selected type."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Only `name` and `revoked` attribute can be updated."
     }
    },
    "additionalProperties": false,
    "_name_": "ca_update",
    "title": "ca_update",
    "default": {},
    "_attrs_order_": [
     "revoked",
     "add_to_trusted_store",
     "ca_id",
     "csr_cert_id",
     "create_type",
     "name"
    ]
   },
   "return_schema_of_certificateauthority_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update Certificate Authority of `id`"
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Only `name` and `revoked` attribute can be updated."
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked",
      "description": "Only `name` and `revoked` attribute can be updated.\nIf `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's\ncertificate revocation list."
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "description": "Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be\nspecified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic\nCurve Key, default to using \"SECP384R1\" curve.",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     },
     "add_to_trusted_store": {
      "type": "boolean",
      "_name_": "add_to_trusted_store",
      "title": "add_to_trusted_store"
     }
    },
    "additionalProperties": false,
    "_name_": "certificateauthority_update_returns",
    "title": "certificateauthority_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates",
     "add_to_trusted_store"
    ]
   },
   "certificateauthority_ca_sign_csr": {
    "type": "object",
    "properties": {
     "ca_id": {
      "type": "integer",
      "_name_": "ca_id",
      "title": "ca_id",
      "description": "Sign CSR by Certificate Authority of `ca_id`\nSign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing\na CSR of `csr_cert_id` which exists in the system"
     },
     "csr_cert_id": {
      "type": "integer",
      "_name_": "csr_cert_id",
      "title": "csr_cert_id",
      "description": "Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing\na CSR of `csr_cert_id` which exists in the system"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "cert_extensions": {
      "type": "object",
      "properties": {
       "BasicConstraints": {
        "type": "object",
        "properties": {
         "ca": {
          "type": "boolean",
          "_name_": "ca",
          "title": "ca",
          "default": false
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "path_length": {
          "type": "integer",
          "_name_": "path_length",
          "title": "path_length",
          "default": null,
          "nullable": true
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "BasicConstraints",
        "title": "BasicConstraints",
        "default": {},
        "_attrs_order_": [
         "ca",
         "enabled",
         "path_length",
         "extension_critical"
        ]
       },
       "AuthorityKeyIdentifier": {
        "type": "object",
        "properties": {
         "authority_cert_issuer": {
          "type": "boolean",
          "_name_": "authority_cert_issuer",
          "title": "authority_cert_issuer",
          "default": false
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "AuthorityKeyIdentifier",
        "title": "AuthorityKeyIdentifier",
        "default": {},
        "_attrs_order_": [
         "authority_cert_issuer",
         "enabled",
         "extension_critical"
        ]
       },
       "ExtendedKeyUsage": {
        "type": "object",
        "properties": {
         "usages": {
          "_name_": "usages",
          "title": "usages",
          "default": [],
          "type": "array",
          "items": {
           "_name_": "usage",
           "title": "usage",
           "_required_": false,
           "type": "string",
           "enum": [
            "ANY_EXTENDED_KEY_USAGE",
            "CERTIFICATE_TRANSPARENCY",
            "CLIENT_AUTH",
            "CODE_SIGNING",
            "EMAIL_PROTECTION",
            "IPSEC_IKE",
            "KERBEROS_PKINIT_KDC",
            "OCSP_SIGNING",
            "SERVER_AUTH",
            "SMARTCARD_LOGON",
            "TIME_STAMPING"
           ]
          }
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "ExtendedKeyUsage",
        "title": "ExtendedKeyUsage",
        "default": {},
        "_attrs_order_": [
         "usages",
         "enabled",
         "extension_critical"
        ]
       },
       "KeyUsage": {
        "type": "object",
        "properties": {
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": false
         },
         "digital_signature": {
          "type": "boolean",
          "_name_": "digital_signature",
          "title": "digital_signature",
          "default": false
         },
         "content_commitment": {
          "type": "boolean",
          "_name_": "content_commitment",
          "title": "content_commitment",
          "default": false
         },
         "key_encipherment": {
          "type": "boolean",
          "_name_": "key_encipherment",
          "title": "key_encipherment",
          "default": false
         },
         "data_encipherment": {
          "type": "boolean",
          "_name_": "data_encipherment",
          "title": "data_encipherment",
          "default": false
         },
         "key_agreement": {
          "type": "boolean",
          "_name_": "key_agreement",
          "title": "key_agreement",
          "default": false
         },
         "key_cert_sign": {
          "type": "boolean",
          "_name_": "key_cert_sign",
          "title": "key_cert_sign",
          "default": false
         },
         "crl_sign": {
          "type": "boolean",
          "_name_": "crl_sign",
          "title": "crl_sign",
          "default": false
         },
         "encipher_only": {
          "type": "boolean",
          "_name_": "encipher_only",
          "title": "encipher_only",
          "default": false
         },
         "decipher_only": {
          "type": "boolean",
          "_name_": "decipher_only",
          "title": "decipher_only",
          "default": false
         },
         "extension_critical": {
          "type": "boolean",
          "_name_": "extension_critical",
          "title": "extension_critical",
          "default": false
         }
        },
        "additionalProperties": false,
        "_name_": "KeyUsage",
        "title": "KeyUsage",
        "default": {},
        "_attrs_order_": [
         "enabled",
         "digital_signature",
         "content_commitment",
         "key_encipherment",
         "data_encipherment",
         "key_agreement",
         "key_cert_sign",
         "crl_sign",
         "encipher_only",
         "decipher_only",
         "extension_critical"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "cert_extensions",
      "title": "cert_extensions",
      "default": {},
      "_attrs_order_": [
       "BasicConstraints",
       "AuthorityKeyIdentifier",
       "ExtendedKeyUsage",
       "KeyUsage"
      ],
      "description": "`cert_extensions` can be specified if specific extensions are to be set in the newly signed certificate."
     }
    },
    "additionalProperties": false,
    "_name_": "ca_sign_csr",
    "title": "ca_sign_csr",
    "default": {},
    "_attrs_order_": [
     "ca_id",
     "csr_cert_id",
     "name",
     "cert_extensions"
    ]
   },
   "return_schema_of_certificateauthority_ca_sign_csr": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked"
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_entry",
    "title": "certificate_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates"
    ]
   },
   "certificateauthority_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "certificateauthority_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "certificateauthority_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/certificateauthority_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/certificateauthority_get_instance_1"
     }
    }
   },
   "return_schema_of_certificateauthority_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "type": {
      "type": "integer",
      "_name_": "type",
      "title": "type"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "certificate": {
      "_name_": "certificate",
      "title": "certificate",
      "type": "string",
      "nullable": true
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string",
      "nullable": true
     },
     "CSR": {
      "_name_": "CSR",
      "title": "CSR",
      "type": "string",
      "nullable": true
     },
     "acme_uri": {
      "_name_": "acme_uri",
      "title": "acme_uri",
      "type": "string",
      "nullable": true
     },
     "domains_authenticators": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "domains_authenticators",
      "title": "domains_authenticators",
      "default": {},
      "_attrs_order_": []
     },
     "renew_days": {
      "type": "integer",
      "_name_": "renew_days",
      "title": "renew_days"
     },
     "revoked_date": {
      "_name_": "revoked_date",
      "title": "revoked_date",
      "type": "string",
      "nullable": true
     },
     "signedby": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "signedby",
      "title": "signedby",
      "default": {},
      "_attrs_order_": []
     },
     "root_path": {
      "_name_": "root_path",
      "title": "root_path",
      "type": "string"
     },
     "acme": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "acme",
      "title": "acme",
      "default": {},
      "_attrs_order_": []
     },
     "certificate_path": {
      "_name_": "certificate_path",
      "title": "certificate_path",
      "type": "string",
      "nullable": true
     },
     "privatekey_path": {
      "_name_": "privatekey_path",
      "title": "privatekey_path",
      "type": "string",
      "nullable": true
     },
     "csr_path": {
      "_name_": "csr_path",
      "title": "csr_path",
      "type": "string",
      "nullable": true
     },
     "cert_type": {
      "_name_": "cert_type",
      "title": "cert_type",
      "type": "string"
     },
     "revoked": {
      "type": "boolean",
      "_name_": "revoked",
      "title": "revoked"
     },
     "expired": {
      "type": "boolean",
      "_name_": "expired",
      "title": "expired",
      "nullable": true
     },
     "issuer": {
      "anyOf": [
       {
        "_name_": "issuer",
        "title": "issuer",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "issuer",
        "title": "issuer",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "issuer",
      "description": null
     },
     "chain_list": {
      "_name_": "chain_list",
      "title": "chain_list",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": "string"
      }
     },
     "country": {
      "_name_": "country",
      "title": "country",
      "type": "string",
      "nullable": true
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string",
      "nullable": true
     },
     "city": {
      "_name_": "city",
      "title": "city",
      "type": "string",
      "nullable": true
     },
     "organization": {
      "_name_": "organization",
      "title": "organization",
      "type": "string",
      "nullable": true
     },
     "organizational_unit": {
      "_name_": "organizational_unit",
      "title": "organizational_unit",
      "type": "string",
      "nullable": true
     },
     "san": {
      "_name_": "san",
      "title": "san",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "san_entry",
       "title": "san_entry",
       "_required_": false,
       "type": "string"
      },
      "nullable": true
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "nullable": true
     },
     "DN": {
      "_name_": "DN",
      "title": "DN",
      "type": "string",
      "nullable": true
     },
     "subject_name_hash": {
      "_name_": "subject_name_hash",
      "title": "subject_name_hash",
      "type": "string",
      "nullable": true
     },
     "digest_algorithm": {
      "_name_": "digest_algorithm",
      "title": "digest_algorithm",
      "type": "string",
      "nullable": true
     },
     "from": {
      "_name_": "from",
      "title": "from",
      "type": "string",
      "nullable": true
     },
     "common": {
      "_name_": "common",
      "title": "common",
      "type": "string",
      "nullable": true
     },
     "until": {
      "_name_": "until",
      "title": "until",
      "type": "string",
      "nullable": true
     },
     "fingerprint": {
      "_name_": "fingerprint",
      "title": "fingerprint",
      "type": "string",
      "nullable": true
     },
     "key_type": {
      "_name_": "key_type",
      "title": "key_type",
      "type": "string",
      "nullable": true
     },
     "internal": {
      "_name_": "internal",
      "title": "internal",
      "type": "string",
      "nullable": true
     },
     "lifetime": {
      "type": "integer",
      "_name_": "lifetime",
      "title": "lifetime",
      "nullable": true
     },
     "serial": {
      "type": "integer",
      "_name_": "serial",
      "title": "serial",
      "nullable": true
     },
     "key_length": {
      "type": "integer",
      "_name_": "key_length",
      "title": "key_length",
      "nullable": true
     },
     "chain": {
      "type": "boolean",
      "_name_": "chain",
      "title": "chain",
      "nullable": true
     },
     "CA_type_existing": {
      "type": "boolean",
      "_name_": "CA_type_existing",
      "title": "CA_type_existing"
     },
     "CA_type_internal": {
      "type": "boolean",
      "_name_": "CA_type_internal",
      "title": "CA_type_internal"
     },
     "CA_type_intermediate": {
      "type": "boolean",
      "_name_": "CA_type_intermediate",
      "title": "CA_type_intermediate"
     },
     "cert_type_existing": {
      "type": "boolean",
      "_name_": "cert_type_existing",
      "title": "cert_type_existing"
     },
     "cert_type_internal": {
      "type": "boolean",
      "_name_": "cert_type_internal",
      "title": "cert_type_internal"
     },
     "cert_type_CSR": {
      "type": "boolean",
      "_name_": "cert_type_CSR",
      "title": "cert_type_CSR"
     },
     "parsed": {
      "type": "boolean",
      "_name_": "parsed",
      "title": "parsed"
     },
     "can_be_revoked": {
      "type": "boolean",
      "_name_": "can_be_revoked",
      "title": "can_be_revoked"
     },
     "extensions": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extensions",
      "title": "extensions",
      "default": {},
      "_attrs_order_": []
     },
     "revoked_certs": {
      "_name_": "revoked_certs",
      "title": "revoked_certs",
      "default": [],
      "type": "array",
      "items": {}
     },
     "crl_path": {
      "_name_": "crl_path",
      "title": "crl_path",
      "type": "string"
     },
     "signed_certificates": {
      "type": "integer",
      "_name_": "signed_certificates",
      "title": "signed_certificates"
     },
     "add_to_trusted_store": {
      "type": "boolean",
      "_name_": "add_to_trusted_store",
      "title": "add_to_trusted_store"
     }
    },
    "additionalProperties": false,
    "_name_": "certificateauthority_entry",
    "title": "certificate_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "certificate",
     "privatekey",
     "CSR",
     "acme_uri",
     "domains_authenticators",
     "renew_days",
     "revoked_date",
     "signedby",
     "root_path",
     "acme",
     "certificate_path",
     "privatekey_path",
     "csr_path",
     "cert_type",
     "revoked",
     "expired",
     "issuer",
     "chain_list",
     "country",
     "state",
     "city",
     "organization",
     "organizational_unit",
     "san",
     "email",
     "DN",
     "subject_name_hash",
     "digest_algorithm",
     "from",
     "common",
     "until",
     "fingerprint",
     "key_type",
     "internal",
     "lifetime",
     "serial",
     "key_length",
     "chain",
     "CA_type_existing",
     "CA_type_internal",
     "CA_type_intermediate",
     "cert_type_existing",
     "cert_type_internal",
     "cert_type_CSR",
     "parsed",
     "can_be_revoked",
     "extensions",
     "revoked_certs",
     "crl_path",
     "signed_certificates",
     "add_to_trusted_store"
    ]
   },
   "return_schema_of_certificateauthority_profiles": {
    "type": "object",
    "properties": {
     "CA": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "CA",
      "title": "CA",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "certificate_authority_profiles",
    "title": "certificate_authority_profiles",
    "default": {},
    "_attrs_order_": [
     "CA"
    ]
   },
   "return_schema_of_chart_release_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "info": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "info",
          "title": "info",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "config": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "config",
          "title": "config",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "hooks": {
          "_name_": "hooks",
          "title": "hooks",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "version": {
          "type": "integer",
          "_name_": "version",
          "title": "version",
          "description": "Version of chart release",
          "_required_": true
         },
         "namespace": {
          "_name_": "namespace",
          "title": "namespace",
          "_required_": true,
          "type": "string"
         },
         "chart_metadata": {
          "type": "object",
          "properties": {
           "name": {
            "_name_": "name",
            "title": "name",
            "description": "Name of application",
            "_required_": true,
            "type": "string"
           },
           "version": {
            "_name_": "version",
            "title": "version",
            "description": "Version of application",
            "_required_": true,
            "type": "string"
           },
           "latest_chart_version": {
            "_name_": "latest_chart_version",
            "title": "latest_chart_version",
            "description": "Latest available version of application",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": true,
          "_name_": "chart_metadata",
          "title": "chart_metadata",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "name",
           "version",
           "latest_chart_version"
          ]
         },
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": true,
          "type": "string"
         },
         "catalog": {
          "_name_": "catalog",
          "title": "catalog",
          "_required_": true,
          "type": "string"
         },
         "catalog_train": {
          "_name_": "catalog_train",
          "title": "catalog_train",
          "_required_": true,
          "type": "string"
         },
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "dataset": {
          "_name_": "dataset",
          "title": "dataset",
          "_required_": true,
          "type": "string"
         },
         "status": {
          "_name_": "status",
          "title": "status",
          "_required_": true,
          "type": "string"
         },
         "used_ports": {
          "_name_": "used_ports",
          "title": "used_ports",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "port": {
              "type": "integer",
              "_name_": "port",
              "title": "port",
              "_required_": true
             },
             "protocol": {
              "_name_": "protocol",
              "title": "protocol",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "port",
            "title": "port",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "port",
             "protocol"
            ]
           }
          ]
         },
         "pod_status": {
          "type": "object",
          "properties": {
           "available": {
            "type": "integer",
            "_name_": "available",
            "title": "available",
            "_required_": true
           },
           "desired": {
            "type": "integer",
            "_name_": "desired",
            "title": "desired",
            "_required_": true
           }
          },
          "additionalProperties": false,
          "_name_": "pod_status",
          "title": "pod_status",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "available",
           "desired"
          ]
         },
         "update_available": {
          "type": "boolean",
          "_name_": "update_available",
          "title": "update_available",
          "_required_": true
         },
         "human_version": {
          "_name_": "human_version",
          "title": "human_version",
          "description": "Human friendly version identifier for chart release",
          "_required_": true,
          "type": "string"
         },
         "human_latest_version": {
          "_name_": "human_latest_version",
          "title": "human_latest_version",
          "description": "Human friendly latest available version identifier for chart release",
          "_required_": true,
          "type": "string"
         },
         "container_images_update_available": {
          "type": "boolean",
          "_name_": "container_images_update_available",
          "title": "container_images_update_available",
          "description": "Will be set when any image(s) being used in the chart release has a newer version available",
          "_required_": true
         },
         "portals": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "portals",
          "title": "portals",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "chart_schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "chart_schema",
          "title": "chart_schema",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "history": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "history",
          "title": "history",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "resources": {
          "type": "object",
          "properties": {
           "storage_class": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "_name_": "storage_class",
            "title": "storage_class",
            "default": {},
            "_required_": false,
            "_attrs_order_": []
           },
           "persistent_volumes": {
            "_name_": "persistent_volumes",
            "title": "persistent_volumes",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "host_path_volumes": {
            "_name_": "host_path_volumes",
            "title": "host_path_volumes",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "locked_host_paths": {
            "_name_": "locked_host_paths",
            "title": "locked_host_paths",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "container_images": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "_name_": "container_images",
            "title": "container_images",
            "default": {},
            "_required_": false,
            "_attrs_order_": []
           },
           "truenas_certificates": {
            "_name_": "truenas_certificates",
            "title": "truenas_certificates",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "integer",
              "_name_": "certificate_id",
              "title": "certificate_id",
              "_required_": false
             }
            ]
           },
           "truenas_certificate_authorities": {
            "_name_": "truenas_certificate_authorities",
            "title": "truenas_certificate_authorities",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "integer",
              "_name_": "certificate_authority_id",
              "title": "certificate_authority_id",
              "_required_": false
             }
            ]
           },
           "cronjobs": {
            "_name_": "cronjobs",
            "title": "cronjobs",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "deployments": {
            "_name_": "deployments",
            "title": "deployments",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "jobs": {
            "_name_": "jobs",
            "title": "jobs",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "pods": {
            "_name_": "pods",
            "title": "pods",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           },
           "statefulsets": {
            "_name_": "statefulsets",
            "title": "statefulsets",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": []
           }
          },
          "additionalProperties": false,
          "_name_": "resources",
          "title": "resources",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "storage_class",
           "persistent_volumes",
           "host_path_volumes",
           "locked_host_paths",
           "container_images",
           "truenas_certificates",
           "truenas_certificate_authorities",
           "cronjobs",
           "deployments",
           "jobs",
           "pods",
           "statefulsets"
          ]
         },
         "stats": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "stats",
          "title": "stats",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "chart_release_entry",
        "title": "chart_release_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "info",
         "config",
         "hooks",
         "version",
         "namespace",
         "chart_metadata",
         "id",
         "catalog",
         "catalog_train",
         "path",
         "dataset",
         "status",
         "used_ports",
         "pod_status",
         "update_available",
         "human_version",
         "human_latest_version",
         "container_images_update_available",
         "portals",
         "chart_schema",
         "history",
         "resources",
         "stats"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "info": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "info",
        "title": "info",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "config": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "config",
        "title": "config",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "hooks": {
        "_name_": "hooks",
        "title": "hooks",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "version": {
        "type": "integer",
        "_name_": "version",
        "title": "version",
        "description": "Version of chart release",
        "_required_": true
       },
       "namespace": {
        "_name_": "namespace",
        "title": "namespace",
        "_required_": true,
        "type": "string"
       },
       "chart_metadata": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "description": "Name of application",
          "_required_": true,
          "type": "string"
         },
         "version": {
          "_name_": "version",
          "title": "version",
          "description": "Version of application",
          "_required_": true,
          "type": "string"
         },
         "latest_chart_version": {
          "_name_": "latest_chart_version",
          "title": "latest_chart_version",
          "description": "Latest available version of application",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": true,
        "_name_": "chart_metadata",
        "title": "chart_metadata",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "version",
         "latest_chart_version"
        ]
       },
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "catalog": {
        "_name_": "catalog",
        "title": "catalog",
        "_required_": true,
        "type": "string"
       },
       "catalog_train": {
        "_name_": "catalog_train",
        "title": "catalog_train",
        "_required_": true,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "dataset": {
        "_name_": "dataset",
        "title": "dataset",
        "_required_": true,
        "type": "string"
       },
       "status": {
        "_name_": "status",
        "title": "status",
        "_required_": true,
        "type": "string"
       },
       "used_ports": {
        "_name_": "used_ports",
        "title": "used_ports",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "port": {
            "type": "integer",
            "_name_": "port",
            "title": "port",
            "_required_": true
           },
           "protocol": {
            "_name_": "protocol",
            "title": "protocol",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "port",
          "title": "port",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "port",
           "protocol"
          ]
         }
        ]
       },
       "pod_status": {
        "type": "object",
        "properties": {
         "available": {
          "type": "integer",
          "_name_": "available",
          "title": "available",
          "_required_": true
         },
         "desired": {
          "type": "integer",
          "_name_": "desired",
          "title": "desired",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "pod_status",
        "title": "pod_status",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "available",
         "desired"
        ]
       },
       "update_available": {
        "type": "boolean",
        "_name_": "update_available",
        "title": "update_available",
        "_required_": true
       },
       "human_version": {
        "_name_": "human_version",
        "title": "human_version",
        "description": "Human friendly version identifier for chart release",
        "_required_": true,
        "type": "string"
       },
       "human_latest_version": {
        "_name_": "human_latest_version",
        "title": "human_latest_version",
        "description": "Human friendly latest available version identifier for chart release",
        "_required_": true,
        "type": "string"
       },
       "container_images_update_available": {
        "type": "boolean",
        "_name_": "container_images_update_available",
        "title": "container_images_update_available",
        "description": "Will be set when any image(s) being used in the chart release has a newer version available",
        "_required_": true
       },
       "portals": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "portals",
        "title": "portals",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "chart_schema": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "chart_schema",
        "title": "chart_schema",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "history": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "history",
        "title": "history",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "resources": {
        "type": "object",
        "properties": {
         "storage_class": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "storage_class",
          "title": "storage_class",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "persistent_volumes": {
          "_name_": "persistent_volumes",
          "title": "persistent_volumes",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "host_path_volumes": {
          "_name_": "host_path_volumes",
          "title": "host_path_volumes",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "locked_host_paths": {
          "_name_": "locked_host_paths",
          "title": "locked_host_paths",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "container_images": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "container_images",
          "title": "container_images",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "truenas_certificates": {
          "_name_": "truenas_certificates",
          "title": "truenas_certificates",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "certificate_id",
            "title": "certificate_id",
            "_required_": false
           }
          ]
         },
         "truenas_certificate_authorities": {
          "_name_": "truenas_certificate_authorities",
          "title": "truenas_certificate_authorities",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "certificate_authority_id",
            "title": "certificate_authority_id",
            "_required_": false
           }
          ]
         },
         "cronjobs": {
          "_name_": "cronjobs",
          "title": "cronjobs",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "deployments": {
          "_name_": "deployments",
          "title": "deployments",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "jobs": {
          "_name_": "jobs",
          "title": "jobs",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "pods": {
          "_name_": "pods",
          "title": "pods",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "statefulsets": {
          "_name_": "statefulsets",
          "title": "statefulsets",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         }
        },
        "additionalProperties": false,
        "_name_": "resources",
        "title": "resources",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "storage_class",
         "persistent_volumes",
         "host_path_volumes",
         "locked_host_paths",
         "container_images",
         "truenas_certificates",
         "truenas_certificate_authorities",
         "cronjobs",
         "deployments",
         "jobs",
         "pods",
         "statefulsets"
        ]
       },
       "stats": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "stats",
        "title": "stats",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "chart_release_entry",
      "title": "chart_release_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "info",
       "config",
       "hooks",
       "version",
       "namespace",
       "chart_metadata",
       "id",
       "catalog",
       "catalog_train",
       "path",
       "dataset",
       "status",
       "used_ports",
       "pod_status",
       "update_available",
       "human_version",
       "human_latest_version",
       "container_images_update_available",
       "portals",
       "chart_schema",
       "history",
       "resources",
       "stats"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "info": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "info",
        "title": "info",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "config": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "config",
        "title": "config",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "hooks": {
        "_name_": "hooks",
        "title": "hooks",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "version": {
        "type": "integer",
        "_name_": "version",
        "title": "version",
        "description": "Version of chart release",
        "_required_": true
       },
       "namespace": {
        "_name_": "namespace",
        "title": "namespace",
        "_required_": true,
        "type": "string"
       },
       "chart_metadata": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "description": "Name of application",
          "_required_": true,
          "type": "string"
         },
         "version": {
          "_name_": "version",
          "title": "version",
          "description": "Version of application",
          "_required_": true,
          "type": "string"
         },
         "latest_chart_version": {
          "_name_": "latest_chart_version",
          "title": "latest_chart_version",
          "description": "Latest available version of application",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": true,
        "_name_": "chart_metadata",
        "title": "chart_metadata",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "version",
         "latest_chart_version"
        ]
       },
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "catalog": {
        "_name_": "catalog",
        "title": "catalog",
        "_required_": true,
        "type": "string"
       },
       "catalog_train": {
        "_name_": "catalog_train",
        "title": "catalog_train",
        "_required_": true,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "dataset": {
        "_name_": "dataset",
        "title": "dataset",
        "_required_": true,
        "type": "string"
       },
       "status": {
        "_name_": "status",
        "title": "status",
        "_required_": true,
        "type": "string"
       },
       "used_ports": {
        "_name_": "used_ports",
        "title": "used_ports",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "port": {
            "type": "integer",
            "_name_": "port",
            "title": "port",
            "_required_": true
           },
           "protocol": {
            "_name_": "protocol",
            "title": "protocol",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "port",
          "title": "port",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "port",
           "protocol"
          ]
         }
        ]
       },
       "pod_status": {
        "type": "object",
        "properties": {
         "available": {
          "type": "integer",
          "_name_": "available",
          "title": "available",
          "_required_": true
         },
         "desired": {
          "type": "integer",
          "_name_": "desired",
          "title": "desired",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "pod_status",
        "title": "pod_status",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "available",
         "desired"
        ]
       },
       "update_available": {
        "type": "boolean",
        "_name_": "update_available",
        "title": "update_available",
        "_required_": true
       },
       "human_version": {
        "_name_": "human_version",
        "title": "human_version",
        "description": "Human friendly version identifier for chart release",
        "_required_": true,
        "type": "string"
       },
       "human_latest_version": {
        "_name_": "human_latest_version",
        "title": "human_latest_version",
        "description": "Human friendly latest available version identifier for chart release",
        "_required_": true,
        "type": "string"
       },
       "container_images_update_available": {
        "type": "boolean",
        "_name_": "container_images_update_available",
        "title": "container_images_update_available",
        "description": "Will be set when any image(s) being used in the chart release has a newer version available",
        "_required_": true
       },
       "portals": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "portals",
        "title": "portals",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "chart_schema": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "chart_schema",
        "title": "chart_schema",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "history": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "history",
        "title": "history",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "resources": {
        "type": "object",
        "properties": {
         "storage_class": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "storage_class",
          "title": "storage_class",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "persistent_volumes": {
          "_name_": "persistent_volumes",
          "title": "persistent_volumes",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "host_path_volumes": {
          "_name_": "host_path_volumes",
          "title": "host_path_volumes",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "locked_host_paths": {
          "_name_": "locked_host_paths",
          "title": "locked_host_paths",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "container_images": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "container_images",
          "title": "container_images",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "truenas_certificates": {
          "_name_": "truenas_certificates",
          "title": "truenas_certificates",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "certificate_id",
            "title": "certificate_id",
            "_required_": false
           }
          ]
         },
         "truenas_certificate_authorities": {
          "_name_": "truenas_certificate_authorities",
          "title": "truenas_certificate_authorities",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "certificate_authority_id",
            "title": "certificate_authority_id",
            "_required_": false
           }
          ]
         },
         "cronjobs": {
          "_name_": "cronjobs",
          "title": "cronjobs",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "deployments": {
          "_name_": "deployments",
          "title": "deployments",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "jobs": {
          "_name_": "jobs",
          "title": "jobs",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "pods": {
          "_name_": "pods",
          "title": "pods",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "statefulsets": {
          "_name_": "statefulsets",
          "title": "statefulsets",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         }
        },
        "additionalProperties": false,
        "_name_": "resources",
        "title": "resources",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "storage_class",
         "persistent_volumes",
         "host_path_volumes",
         "locked_host_paths",
         "container_images",
         "truenas_certificates",
         "truenas_certificate_authorities",
         "cronjobs",
         "deployments",
         "jobs",
         "pods",
         "statefulsets"
        ]
       },
       "stats": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "stats",
        "title": "stats",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "chart_release_entry",
      "title": "chart_release_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "info",
       "config",
       "hooks",
       "version",
       "namespace",
       "chart_metadata",
       "id",
       "catalog",
       "catalog_train",
       "path",
       "dataset",
       "status",
       "used_ports",
       "pod_status",
       "update_available",
       "human_version",
       "human_latest_version",
       "container_images_update_available",
       "portals",
       "chart_schema",
       "history",
       "resources",
       "stats"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "chart_release_create": {
    "type": "object",
    "properties": {
     "values": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "values",
      "title": "values",
      "default": {},
      "_attrs_order_": []
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string",
      "description": "`catalog` is a valid catalog id where system will look for catalog `item` details.\n`train` is which train to look for under `catalog` i.e stable / testing etc."
     },
     "item": {
      "_name_": "item",
      "title": "item",
      "type": "string",
      "description": "`catalog` is a valid catalog id where system will look for catalog `item` details.\n`version` specifies the catalog `item` version."
     },
     "release_name": {
      "_name_": "release_name",
      "title": "release_name",
      "type": "string",
      "description": "`release_name` is the name which will be used to identify the created chart release."
     },
     "train": {
      "_name_": "train",
      "title": "train",
      "default": "charts",
      "type": "string",
      "description": "`train` is which train to look for under `catalog` i.e stable / testing etc."
     },
     "version": {
      "_name_": "version",
      "title": "version",
      "default": "latest",
      "type": "string",
      "description": "`version` specifies the catalog `item` version."
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_create",
    "title": "chart_release_create",
    "default": {},
    "_attrs_order_": [
     "values",
     "catalog",
     "item",
     "release_name",
     "train",
     "version"
    ]
   },
   "return_schema_of_chart_release_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "info": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "info",
      "title": "info",
      "default": {},
      "_attrs_order_": []
     },
     "config": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "config",
      "title": "config",
      "default": {},
      "_attrs_order_": []
     },
     "hooks": {
      "_name_": "hooks",
      "title": "hooks",
      "default": [],
      "type": "array",
      "items": {}
     },
     "version": {
      "type": "integer",
      "_name_": "version",
      "title": "version",
      "description": "Version of chart release"
     },
     "namespace": {
      "_name_": "namespace",
      "title": "namespace",
      "type": "string"
     },
     "chart_metadata": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "Name of application",
        "type": "string"
       },
       "version": {
        "_name_": "version",
        "title": "version",
        "description": "Version of application",
        "type": "string"
       },
       "latest_chart_version": {
        "_name_": "latest_chart_version",
        "title": "latest_chart_version",
        "description": "Latest available version of application",
        "type": "string"
       }
      },
      "additionalProperties": true,
      "_name_": "chart_metadata",
      "title": "chart_metadata",
      "default": {},
      "_attrs_order_": [
       "name",
       "version",
       "latest_chart_version"
      ]
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string",
      "description": "`catalog` is a valid catalog id where system will look for catalog `item` details.\n`train` is which train to look for under `catalog` i.e stable / testing etc."
     },
     "catalog_train": {
      "_name_": "catalog_train",
      "title": "catalog_train",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "used_ports": {
      "_name_": "used_ports",
      "title": "used_ports",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port",
         "_required_": true
        },
        "protocol": {
         "_name_": "protocol",
         "title": "protocol",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "port",
       "title": "port",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "port",
        "protocol"
       ]
      }
     },
     "pod_status": {
      "type": "object",
      "properties": {
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       },
       "desired": {
        "type": "integer",
        "_name_": "desired",
        "title": "desired"
       }
      },
      "additionalProperties": false,
      "_name_": "pod_status",
      "title": "pod_status",
      "default": {},
      "_attrs_order_": [
       "available",
       "desired"
      ]
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "human_version": {
      "_name_": "human_version",
      "title": "human_version",
      "description": "Human friendly version identifier for chart release",
      "type": "string"
     },
     "human_latest_version": {
      "_name_": "human_latest_version",
      "title": "human_latest_version",
      "description": "Human friendly latest available version identifier for chart release",
      "type": "string"
     },
     "container_images_update_available": {
      "type": "boolean",
      "_name_": "container_images_update_available",
      "title": "container_images_update_available",
      "description": "Will be set when any image(s) being used in the chart release has a newer version available"
     },
     "portals": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "portals",
      "title": "portals",
      "default": {},
      "_attrs_order_": []
     },
     "chart_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "chart_schema",
      "title": "chart_schema",
      "default": {},
      "_attrs_order_": []
     },
     "history": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "history",
      "title": "history",
      "default": {},
      "_attrs_order_": []
     },
     "resources": {
      "type": "object",
      "properties": {
       "storage_class": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "storage_class",
        "title": "storage_class",
        "default": {},
        "_attrs_order_": []
       },
       "persistent_volumes": {
        "_name_": "persistent_volumes",
        "title": "persistent_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "host_path_volumes": {
        "_name_": "host_path_volumes",
        "title": "host_path_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "locked_host_paths": {
        "_name_": "locked_host_paths",
        "title": "locked_host_paths",
        "default": [],
        "type": "array",
        "items": {}
       },
       "container_images": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "container_images",
        "title": "container_images",
        "default": {},
        "_attrs_order_": []
       },
       "truenas_certificates": {
        "_name_": "truenas_certificates",
        "title": "truenas_certificates",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_id",
         "title": "certificate_id",
         "_required_": false
        }
       },
       "truenas_certificate_authorities": {
        "_name_": "truenas_certificate_authorities",
        "title": "truenas_certificate_authorities",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_authority_id",
         "title": "certificate_authority_id",
         "_required_": false
        }
       },
       "cronjobs": {
        "_name_": "cronjobs",
        "title": "cronjobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "deployments": {
        "_name_": "deployments",
        "title": "deployments",
        "default": [],
        "type": "array",
        "items": {}
       },
       "jobs": {
        "_name_": "jobs",
        "title": "jobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "pods": {
        "_name_": "pods",
        "title": "pods",
        "default": [],
        "type": "array",
        "items": {}
       },
       "statefulsets": {
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "resources",
      "title": "resources",
      "default": {},
      "_attrs_order_": [
       "storage_class",
       "persistent_volumes",
       "host_path_volumes",
       "locked_host_paths",
       "container_images",
       "truenas_certificates",
       "truenas_certificate_authorities",
       "cronjobs",
       "deployments",
       "jobs",
       "pods",
       "statefulsets"
      ]
     },
     "stats": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "stats",
      "title": "stats",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_create_returns",
    "title": "chart_release_create_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "info",
     "config",
     "hooks",
     "version",
     "namespace",
     "chart_metadata",
     "id",
     "catalog",
     "catalog_train",
     "path",
     "dataset",
     "status",
     "used_ports",
     "pod_status",
     "update_available",
     "human_version",
     "human_latest_version",
     "container_images_update_available",
     "portals",
     "chart_schema",
     "history",
     "resources",
     "stats"
    ]
   },
   "chart_release_delete": {
    "type": "object",
    "properties": {
     "delete_unused_images": {
      "type": "boolean",
      "_name_": "delete_unused_images",
      "title": "delete_unused_images",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "delete_unused_images"
    ]
   },
   "return_schema_of_chart_release_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "chart_release_update": {
    "type": "object",
    "properties": {
     "values": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "values",
      "title": "values",
      "default": {},
      "_attrs_order_": [],
      "description": "`values` is configuration specified for the catalog item version in question which will be used to\ncreate the chart release.\nCreate a chart release for a catalog item."
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_update",
    "title": "chart_release_update",
    "default": {},
    "_attrs_order_": [
     "values"
    ]
   },
   "return_schema_of_chart_release_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "info": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "info",
      "title": "info",
      "default": {},
      "_attrs_order_": []
     },
     "config": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "config",
      "title": "config",
      "default": {},
      "_attrs_order_": []
     },
     "hooks": {
      "_name_": "hooks",
      "title": "hooks",
      "default": [],
      "type": "array",
      "items": {}
     },
     "version": {
      "type": "integer",
      "_name_": "version",
      "title": "version",
      "description": "Version of chart release"
     },
     "namespace": {
      "_name_": "namespace",
      "title": "namespace",
      "type": "string"
     },
     "chart_metadata": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "Name of application",
        "type": "string"
       },
       "version": {
        "_name_": "version",
        "title": "version",
        "description": "Version of application",
        "type": "string"
       },
       "latest_chart_version": {
        "_name_": "latest_chart_version",
        "title": "latest_chart_version",
        "description": "Latest available version of application",
        "type": "string"
       }
      },
      "additionalProperties": true,
      "_name_": "chart_metadata",
      "title": "chart_metadata",
      "default": {},
      "_attrs_order_": [
       "name",
       "version",
       "latest_chart_version"
      ]
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string",
      "description": "`catalog` is a valid catalog id where system will look for catalog `item` details.\n`train` is which train to look for under `catalog` i.e stable / testing etc."
     },
     "catalog_train": {
      "_name_": "catalog_train",
      "title": "catalog_train",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "used_ports": {
      "_name_": "used_ports",
      "title": "used_ports",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port",
         "_required_": true
        },
        "protocol": {
         "_name_": "protocol",
         "title": "protocol",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "port",
       "title": "port",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "port",
        "protocol"
       ]
      }
     },
     "pod_status": {
      "type": "object",
      "properties": {
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       },
       "desired": {
        "type": "integer",
        "_name_": "desired",
        "title": "desired"
       }
      },
      "additionalProperties": false,
      "_name_": "pod_status",
      "title": "pod_status",
      "default": {},
      "_attrs_order_": [
       "available",
       "desired"
      ]
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "human_version": {
      "_name_": "human_version",
      "title": "human_version",
      "description": "Human friendly version identifier for chart release",
      "type": "string"
     },
     "human_latest_version": {
      "_name_": "human_latest_version",
      "title": "human_latest_version",
      "description": "Human friendly latest available version identifier for chart release",
      "type": "string"
     },
     "container_images_update_available": {
      "type": "boolean",
      "_name_": "container_images_update_available",
      "title": "container_images_update_available",
      "description": "Will be set when any image(s) being used in the chart release has a newer version available"
     },
     "portals": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "portals",
      "title": "portals",
      "default": {},
      "_attrs_order_": []
     },
     "chart_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "chart_schema",
      "title": "chart_schema",
      "default": {},
      "_attrs_order_": []
     },
     "history": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "history",
      "title": "history",
      "default": {},
      "_attrs_order_": []
     },
     "resources": {
      "type": "object",
      "properties": {
       "storage_class": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "storage_class",
        "title": "storage_class",
        "default": {},
        "_attrs_order_": []
       },
       "persistent_volumes": {
        "_name_": "persistent_volumes",
        "title": "persistent_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "host_path_volumes": {
        "_name_": "host_path_volumes",
        "title": "host_path_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "locked_host_paths": {
        "_name_": "locked_host_paths",
        "title": "locked_host_paths",
        "default": [],
        "type": "array",
        "items": {}
       },
       "container_images": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "container_images",
        "title": "container_images",
        "default": {},
        "_attrs_order_": []
       },
       "truenas_certificates": {
        "_name_": "truenas_certificates",
        "title": "truenas_certificates",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_id",
         "title": "certificate_id",
         "_required_": false
        }
       },
       "truenas_certificate_authorities": {
        "_name_": "truenas_certificate_authorities",
        "title": "truenas_certificate_authorities",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_authority_id",
         "title": "certificate_authority_id",
         "_required_": false
        }
       },
       "cronjobs": {
        "_name_": "cronjobs",
        "title": "cronjobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "deployments": {
        "_name_": "deployments",
        "title": "deployments",
        "default": [],
        "type": "array",
        "items": {}
       },
       "jobs": {
        "_name_": "jobs",
        "title": "jobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "pods": {
        "_name_": "pods",
        "title": "pods",
        "default": [],
        "type": "array",
        "items": {}
       },
       "statefulsets": {
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "resources",
      "title": "resources",
      "default": {},
      "_attrs_order_": [
       "storage_class",
       "persistent_volumes",
       "host_path_volumes",
       "locked_host_paths",
       "container_images",
       "truenas_certificates",
       "truenas_certificate_authorities",
       "cronjobs",
       "deployments",
       "jobs",
       "pods",
       "statefulsets"
      ]
     },
     "stats": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "stats",
      "title": "stats",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_update_returns",
    "title": "chart_release_update_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "info",
     "config",
     "hooks",
     "version",
     "namespace",
     "chart_metadata",
     "id",
     "catalog",
     "catalog_train",
     "path",
     "dataset",
     "status",
     "used_ports",
     "pod_status",
     "update_available",
     "human_version",
     "human_latest_version",
     "container_images_update_available",
     "portals",
     "chart_schema",
     "history",
     "resources",
     "stats"
    ]
   },
   "return_schema_of_chart_release_certificate_authority_choices": {
    "_name_": "certificate_authority_choices",
    "title": "certificate_authority_choices",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "id": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      },
      "type": {
       "type": "integer",
       "_name_": "type",
       "title": "type",
       "_required_": false
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": false,
       "type": "string"
      },
      "certificate": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "privatekey": {
       "_name_": "privatekey",
       "title": "privatekey",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "CSR": {
       "_name_": "CSR",
       "title": "CSR",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "acme_uri": {
       "_name_": "acme_uri",
       "title": "acme_uri",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "domains_authenticators": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "domains_authenticators",
       "title": "domains_authenticators",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "renew_days": {
       "type": "integer",
       "_name_": "renew_days",
       "title": "renew_days",
       "_required_": false
      },
      "revoked_date": {
       "_name_": "revoked_date",
       "title": "revoked_date",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "signedby": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "signedby",
       "title": "signedby",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "root_path": {
       "_name_": "root_path",
       "title": "root_path",
       "_required_": false,
       "type": "string"
      },
      "acme": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "acme",
       "title": "acme",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "certificate_path": {
       "_name_": "certificate_path",
       "title": "certificate_path",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "privatekey_path": {
       "_name_": "privatekey_path",
       "title": "privatekey_path",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "csr_path": {
       "_name_": "csr_path",
       "title": "csr_path",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "cert_type": {
       "_name_": "cert_type",
       "title": "cert_type",
       "_required_": false,
       "type": "string"
      },
      "revoked": {
       "type": "boolean",
       "_name_": "revoked",
       "title": "revoked",
       "_required_": false
      },
      "expired": {
       "type": [
        "boolean",
        "null"
       ],
       "_name_": "expired",
       "title": "expired",
       "_required_": false
      },
      "issuer": {
       "anyOf": [
        {
         "_name_": "issuer",
         "title": "issuer",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "issuer",
         "title": "issuer",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        }
       ],
       "nullable": false,
       "_name_": "issuer",
       "description": null,
       "_required_": false
      },
      "chain_list": {
       "_name_": "chain_list",
       "title": "chain_list",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "_name_": "certificate",
         "title": "certificate",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "country": {
       "_name_": "country",
       "title": "country",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "state": {
       "_name_": "state",
       "title": "state",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "city": {
       "_name_": "city",
       "title": "city",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "organization": {
       "_name_": "organization",
       "title": "organization",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "organizational_unit": {
       "_name_": "organizational_unit",
       "title": "organizational_unit",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "san": {
       "_name_": "san",
       "title": "san",
       "default": [],
       "_required_": false,
       "type": [
        "array",
        "null"
       ],
       "items": [
        {
         "_name_": "san_entry",
         "title": "san_entry",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "email": {
       "_name_": "email",
       "title": "email",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "DN": {
       "_name_": "DN",
       "title": "DN",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "subject_name_hash": {
       "_name_": "subject_name_hash",
       "title": "subject_name_hash",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "digest_algorithm": {
       "_name_": "digest_algorithm",
       "title": "digest_algorithm",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "from": {
       "_name_": "from",
       "title": "from",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "common": {
       "_name_": "common",
       "title": "common",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "until": {
       "_name_": "until",
       "title": "until",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "fingerprint": {
       "_name_": "fingerprint",
       "title": "fingerprint",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "key_type": {
       "_name_": "key_type",
       "title": "key_type",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "internal": {
       "_name_": "internal",
       "title": "internal",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "lifetime": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "lifetime",
       "title": "lifetime",
       "_required_": false
      },
      "serial": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "serial",
       "title": "serial",
       "_required_": false
      },
      "key_length": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "key_length",
       "title": "key_length",
       "_required_": false
      },
      "chain": {
       "type": [
        "boolean",
        "null"
       ],
       "_name_": "chain",
       "title": "chain",
       "_required_": false
      },
      "CA_type_existing": {
       "type": "boolean",
       "_name_": "CA_type_existing",
       "title": "CA_type_existing",
       "_required_": false
      },
      "CA_type_internal": {
       "type": "boolean",
       "_name_": "CA_type_internal",
       "title": "CA_type_internal",
       "_required_": false
      },
      "CA_type_intermediate": {
       "type": "boolean",
       "_name_": "CA_type_intermediate",
       "title": "CA_type_intermediate",
       "_required_": false
      },
      "cert_type_existing": {
       "type": "boolean",
       "_name_": "cert_type_existing",
       "title": "cert_type_existing",
       "_required_": false
      },
      "cert_type_internal": {
       "type": "boolean",
       "_name_": "cert_type_internal",
       "title": "cert_type_internal",
       "_required_": false
      },
      "cert_type_CSR": {
       "type": "boolean",
       "_name_": "cert_type_CSR",
       "title": "cert_type_CSR",
       "_required_": false
      },
      "parsed": {
       "type": "boolean",
       "_name_": "parsed",
       "title": "parsed",
       "_required_": false
      },
      "can_be_revoked": {
       "type": "boolean",
       "_name_": "can_be_revoked",
       "title": "can_be_revoked",
       "_required_": false
      },
      "extensions": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "extensions",
       "title": "extensions",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "revoked_certs": {
       "_name_": "revoked_certs",
       "title": "revoked_certs",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      },
      "crl_path": {
       "_name_": "crl_path",
       "title": "crl_path",
       "_required_": false,
       "type": "string"
      },
      "signed_certificates": {
       "type": "integer",
       "_name_": "signed_certificates",
       "title": "signed_certificates",
       "_required_": false
      },
      "add_to_trusted_store": {
       "type": "boolean",
       "_name_": "add_to_trusted_store",
       "title": "add_to_trusted_store",
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "certificateauthority_entry",
     "title": "certificate_entry",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "id",
      "type",
      "name",
      "certificate",
      "privatekey",
      "CSR",
      "acme_uri",
      "domains_authenticators",
      "renew_days",
      "revoked_date",
      "signedby",
      "root_path",
      "acme",
      "certificate_path",
      "privatekey_path",
      "csr_path",
      "cert_type",
      "revoked",
      "expired",
      "issuer",
      "chain_list",
      "country",
      "state",
      "city",
      "organization",
      "organizational_unit",
      "san",
      "email",
      "DN",
      "subject_name_hash",
      "digest_algorithm",
      "from",
      "common",
      "until",
      "fingerprint",
      "key_type",
      "internal",
      "lifetime",
      "serial",
      "key_length",
      "chain",
      "CA_type_existing",
      "CA_type_internal",
      "CA_type_intermediate",
      "cert_type_existing",
      "cert_type_internal",
      "cert_type_CSR",
      "parsed",
      "can_be_revoked",
      "extensions",
      "revoked_certs",
      "crl_path",
      "signed_certificates",
      "add_to_trusted_store"
     ]
    }
   },
   "return_schema_of_chart_release_certificate_choices": {
    "_name_": "certificate_choices",
    "title": "certificate_choices",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "id": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      },
      "type": {
       "type": "integer",
       "_name_": "type",
       "title": "type",
       "_required_": false
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": false,
       "type": "string"
      },
      "certificate": {
       "_name_": "certificate",
       "title": "certificate",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "privatekey": {
       "_name_": "privatekey",
       "title": "privatekey",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "CSR": {
       "_name_": "CSR",
       "title": "CSR",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "acme_uri": {
       "_name_": "acme_uri",
       "title": "acme_uri",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "domains_authenticators": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "domains_authenticators",
       "title": "domains_authenticators",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "renew_days": {
       "type": "integer",
       "_name_": "renew_days",
       "title": "renew_days",
       "_required_": false
      },
      "revoked_date": {
       "_name_": "revoked_date",
       "title": "revoked_date",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "signedby": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "signedby",
       "title": "signedby",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "root_path": {
       "_name_": "root_path",
       "title": "root_path",
       "_required_": false,
       "type": "string"
      },
      "acme": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "acme",
       "title": "acme",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "certificate_path": {
       "_name_": "certificate_path",
       "title": "certificate_path",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "privatekey_path": {
       "_name_": "privatekey_path",
       "title": "privatekey_path",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "csr_path": {
       "_name_": "csr_path",
       "title": "csr_path",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "cert_type": {
       "_name_": "cert_type",
       "title": "cert_type",
       "_required_": false,
       "type": "string"
      },
      "revoked": {
       "type": "boolean",
       "_name_": "revoked",
       "title": "revoked",
       "_required_": false
      },
      "expired": {
       "type": [
        "boolean",
        "null"
       ],
       "_name_": "expired",
       "title": "expired",
       "_required_": false
      },
      "issuer": {
       "anyOf": [
        {
         "_name_": "issuer",
         "title": "issuer",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "issuer",
         "title": "issuer",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        }
       ],
       "nullable": false,
       "_name_": "issuer",
       "description": null,
       "_required_": false
      },
      "chain_list": {
       "_name_": "chain_list",
       "title": "chain_list",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "_name_": "certificate",
         "title": "certificate",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "country": {
       "_name_": "country",
       "title": "country",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "state": {
       "_name_": "state",
       "title": "state",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "city": {
       "_name_": "city",
       "title": "city",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "organization": {
       "_name_": "organization",
       "title": "organization",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "organizational_unit": {
       "_name_": "organizational_unit",
       "title": "organizational_unit",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "san": {
       "_name_": "san",
       "title": "san",
       "default": [],
       "_required_": false,
       "type": [
        "array",
        "null"
       ],
       "items": [
        {
         "_name_": "san_entry",
         "title": "san_entry",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "email": {
       "_name_": "email",
       "title": "email",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "DN": {
       "_name_": "DN",
       "title": "DN",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "subject_name_hash": {
       "_name_": "subject_name_hash",
       "title": "subject_name_hash",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "digest_algorithm": {
       "_name_": "digest_algorithm",
       "title": "digest_algorithm",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "from": {
       "_name_": "from",
       "title": "from",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "common": {
       "_name_": "common",
       "title": "common",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "until": {
       "_name_": "until",
       "title": "until",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "fingerprint": {
       "_name_": "fingerprint",
       "title": "fingerprint",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "key_type": {
       "_name_": "key_type",
       "title": "key_type",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "internal": {
       "_name_": "internal",
       "title": "internal",
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      },
      "lifetime": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "lifetime",
       "title": "lifetime",
       "_required_": false
      },
      "serial": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "serial",
       "title": "serial",
       "_required_": false
      },
      "key_length": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "key_length",
       "title": "key_length",
       "_required_": false
      },
      "chain": {
       "type": [
        "boolean",
        "null"
       ],
       "_name_": "chain",
       "title": "chain",
       "_required_": false
      },
      "CA_type_existing": {
       "type": "boolean",
       "_name_": "CA_type_existing",
       "title": "CA_type_existing",
       "_required_": false
      },
      "CA_type_internal": {
       "type": "boolean",
       "_name_": "CA_type_internal",
       "title": "CA_type_internal",
       "_required_": false
      },
      "CA_type_intermediate": {
       "type": "boolean",
       "_name_": "CA_type_intermediate",
       "title": "CA_type_intermediate",
       "_required_": false
      },
      "cert_type_existing": {
       "type": "boolean",
       "_name_": "cert_type_existing",
       "title": "cert_type_existing",
       "_required_": false
      },
      "cert_type_internal": {
       "type": "boolean",
       "_name_": "cert_type_internal",
       "title": "cert_type_internal",
       "_required_": false
      },
      "cert_type_CSR": {
       "type": "boolean",
       "_name_": "cert_type_CSR",
       "title": "cert_type_CSR",
       "_required_": false
      },
      "parsed": {
       "type": "boolean",
       "_name_": "parsed",
       "title": "parsed",
       "_required_": false
      },
      "can_be_revoked": {
       "type": "boolean",
       "_name_": "can_be_revoked",
       "title": "can_be_revoked",
       "_required_": false
      },
      "extensions": {
       "type": "object",
       "properties": {},
       "additionalProperties": true,
       "_name_": "extensions",
       "title": "extensions",
       "default": {},
       "_required_": false,
       "_attrs_order_": []
      },
      "revoked_certs": {
       "_name_": "revoked_certs",
       "title": "revoked_certs",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      },
      "crl_path": {
       "_name_": "crl_path",
       "title": "crl_path",
       "_required_": false,
       "type": "string"
      },
      "signed_certificates": {
       "type": "integer",
       "_name_": "signed_certificates",
       "title": "signed_certificates",
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "certificate_entry",
     "title": "certificate_entry",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "id",
      "type",
      "name",
      "certificate",
      "privatekey",
      "CSR",
      "acme_uri",
      "domains_authenticators",
      "renew_days",
      "revoked_date",
      "signedby",
      "root_path",
      "acme",
      "certificate_path",
      "privatekey_path",
      "csr_path",
      "cert_type",
      "revoked",
      "expired",
      "issuer",
      "chain_list",
      "country",
      "state",
      "city",
      "organization",
      "organizational_unit",
      "san",
      "email",
      "DN",
      "subject_name_hash",
      "digest_algorithm",
      "from",
      "common",
      "until",
      "fingerprint",
      "key_type",
      "internal",
      "lifetime",
      "serial",
      "key_length",
      "chain",
      "CA_type_existing",
      "CA_type_internal",
      "CA_type_intermediate",
      "cert_type_existing",
      "cert_type_internal",
      "cert_type_CSR",
      "parsed",
      "can_be_revoked",
      "extensions",
      "revoked_certs",
      "crl_path",
      "signed_certificates"
     ]
    }
   },
   "chart_release_events": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "return_schema_of_chart_release_events": {
    "_name_": "events",
    "title": "events",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "involvedObject": {
       "type": "object",
       "properties": {
        "kind": {
         "_name_": "kind",
         "title": "kind",
         "_required_": false,
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": false,
         "type": "string"
        },
        "namespace": {
         "_name_": "namespace",
         "title": "namespace",
         "_required_": false,
         "type": "string"
        }
       },
       "additionalProperties": true,
       "_name_": "involvedObject",
       "title": "involvedObject",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "kind",
        "name",
        "namespace"
       ]
      },
      "metadata": {
       "type": "object",
       "properties": {
        "namespace": {
         "_name_": "namespace",
         "title": "namespace",
         "_required_": true,
         "type": "string"
        },
        "uid": {
         "_name_": "uid",
         "title": "uid",
         "_required_": true,
         "type": "string"
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": true,
       "_name_": "metadata",
       "title": "metadata",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "namespace",
        "uid",
        "name"
       ]
      }
     },
     "additionalProperties": true,
     "_name_": "event",
     "title": "event",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "involvedObject",
      "metadata"
     ]
    }
   },
   "chart_release_get_chart_releases_using_chart_release_images": {
    "_name_": "chart_release_name",
    "title": "chart_release_name",
    "type": "string"
   },
   "return_schema_of_chart_release_get_chart_releases_using_chart_release_images": {
    "type": "object",
    "properties": {},
    "additionalProperties": false,
    "_name_": "get_chart_releases_using_chart_release_images",
    "title": "get_chart_releases_using_chart_release_images",
    "description": "\n\nExample(s):\n```\n{\n    \"minio2\": [\n        \"minio/minio:RELEASE.2022-03-05T06-32-39Z\"\n    ]\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "chart_release_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "chart_release_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "chart_release_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/chart_release_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/chart_release_get_instance_1"
     }
    }
   },
   "return_schema_of_chart_release_get_instance": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "info": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "info",
      "title": "info",
      "default": {},
      "_attrs_order_": []
     },
     "config": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "config",
      "title": "config",
      "default": {},
      "_attrs_order_": []
     },
     "hooks": {
      "_name_": "hooks",
      "title": "hooks",
      "default": [],
      "type": "array",
      "items": {}
     },
     "version": {
      "type": "integer",
      "_name_": "version",
      "title": "version",
      "description": "Version of chart release"
     },
     "namespace": {
      "_name_": "namespace",
      "title": "namespace",
      "type": "string"
     },
     "chart_metadata": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "Name of application",
        "type": "string"
       },
       "version": {
        "_name_": "version",
        "title": "version",
        "description": "Version of application",
        "type": "string"
       },
       "latest_chart_version": {
        "_name_": "latest_chart_version",
        "title": "latest_chart_version",
        "description": "Latest available version of application",
        "type": "string"
       }
      },
      "additionalProperties": true,
      "_name_": "chart_metadata",
      "title": "chart_metadata",
      "default": {},
      "_attrs_order_": [
       "name",
       "version",
       "latest_chart_version"
      ]
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string"
     },
     "catalog_train": {
      "_name_": "catalog_train",
      "title": "catalog_train",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "used_ports": {
      "_name_": "used_ports",
      "title": "used_ports",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port",
         "_required_": true
        },
        "protocol": {
         "_name_": "protocol",
         "title": "protocol",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "port",
       "title": "port",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "port",
        "protocol"
       ]
      }
     },
     "pod_status": {
      "type": "object",
      "properties": {
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       },
       "desired": {
        "type": "integer",
        "_name_": "desired",
        "title": "desired"
       }
      },
      "additionalProperties": false,
      "_name_": "pod_status",
      "title": "pod_status",
      "default": {},
      "_attrs_order_": [
       "available",
       "desired"
      ]
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "human_version": {
      "_name_": "human_version",
      "title": "human_version",
      "description": "Human friendly version identifier for chart release",
      "type": "string"
     },
     "human_latest_version": {
      "_name_": "human_latest_version",
      "title": "human_latest_version",
      "description": "Human friendly latest available version identifier for chart release",
      "type": "string"
     },
     "container_images_update_available": {
      "type": "boolean",
      "_name_": "container_images_update_available",
      "title": "container_images_update_available",
      "description": "Will be set when any image(s) being used in the chart release has a newer version available"
     },
     "portals": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "portals",
      "title": "portals",
      "default": {},
      "_attrs_order_": []
     },
     "chart_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "chart_schema",
      "title": "chart_schema",
      "default": {},
      "_attrs_order_": []
     },
     "history": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "history",
      "title": "history",
      "default": {},
      "_attrs_order_": []
     },
     "resources": {
      "type": "object",
      "properties": {
       "storage_class": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "storage_class",
        "title": "storage_class",
        "default": {},
        "_attrs_order_": []
       },
       "persistent_volumes": {
        "_name_": "persistent_volumes",
        "title": "persistent_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "host_path_volumes": {
        "_name_": "host_path_volumes",
        "title": "host_path_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "locked_host_paths": {
        "_name_": "locked_host_paths",
        "title": "locked_host_paths",
        "default": [],
        "type": "array",
        "items": {}
       },
       "container_images": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "container_images",
        "title": "container_images",
        "default": {},
        "_attrs_order_": []
       },
       "truenas_certificates": {
        "_name_": "truenas_certificates",
        "title": "truenas_certificates",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_id",
         "title": "certificate_id",
         "_required_": false
        }
       },
       "truenas_certificate_authorities": {
        "_name_": "truenas_certificate_authorities",
        "title": "truenas_certificate_authorities",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_authority_id",
         "title": "certificate_authority_id",
         "_required_": false
        }
       },
       "cronjobs": {
        "_name_": "cronjobs",
        "title": "cronjobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "deployments": {
        "_name_": "deployments",
        "title": "deployments",
        "default": [],
        "type": "array",
        "items": {}
       },
       "jobs": {
        "_name_": "jobs",
        "title": "jobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "pods": {
        "_name_": "pods",
        "title": "pods",
        "default": [],
        "type": "array",
        "items": {}
       },
       "statefulsets": {
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "resources",
      "title": "resources",
      "default": {},
      "_attrs_order_": [
       "storage_class",
       "persistent_volumes",
       "host_path_volumes",
       "locked_host_paths",
       "container_images",
       "truenas_certificates",
       "truenas_certificate_authorities",
       "cronjobs",
       "deployments",
       "jobs",
       "pods",
       "statefulsets"
      ]
     },
     "stats": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "stats",
      "title": "stats",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_entry",
    "title": "chart_release_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "info",
     "config",
     "hooks",
     "version",
     "namespace",
     "chart_metadata",
     "id",
     "catalog",
     "catalog_train",
     "path",
     "dataset",
     "status",
     "used_ports",
     "pod_status",
     "update_available",
     "human_version",
     "human_latest_version",
     "container_images_update_available",
     "portals",
     "chart_schema",
     "history",
     "resources",
     "stats"
    ]
   },
   "return_schema_of_chart_release_nic_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "nic_choices",
    "title": "nic_choices",
    "default": {},
    "_attrs_order_": []
   },
   "chart_release_pod_console_choices": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "return_schema_of_chart_release_pod_console_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "pod_console_choices",
    "title": "pod_console_choices",
    "description": "\n\nExample(s):\n```\n{\n    \"plex-d4559844b-zcgq9\": [\n        \"plex\"\n    ]\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "chart_release_pod_logs_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string",
    "description": "Export logs of `options.container_name` container in `options.pod_name` pod in `release_name` chart release."
   },
   "chart_release_pod_logs_1": {
    "type": "object",
    "properties": {
     "limit_bytes": {
      "type": "integer",
      "_name_": "limit_bytes",
      "title": "limit_bytes",
      "default": null,
      "nullable": true
     },
     "tail_lines": {
      "type": "integer",
      "_name_": "tail_lines",
      "title": "tail_lines",
      "default": 500,
      "nullable": true
     },
     "pod_name": {
      "_name_": "pod_name",
      "title": "pod_name",
      "type": "string"
     },
     "container_name": {
      "_name_": "container_name",
      "title": "container_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "limit_bytes",
     "tail_lines",
     "pod_name",
     "container_name"
    ]
   },
   "chart_release_pod_logs": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_pod_logs_0"
     },
     "options": {
      "$ref": "#/components/schemas/chart_release_pod_logs_1"
     }
    }
   },
   "chart_release_pod_logs_choices": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "return_schema_of_chart_release_pod_logs_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "pod_logs_choices",
    "title": "pod_logs_choices",
    "description": "\n\nExample(s):\n```\n{\n    \"plex-d4559844b-zcgq9\": [\n        \"plex\"\n    ]\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "chart_release_pod_status": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "return_schema_of_chart_release_pod_status": {
    "type": "object",
    "properties": {
     "available": {
      "type": "integer",
      "_name_": "available",
      "title": "available"
     },
     "desired": {
      "type": "integer",
      "_name_": "desired",
      "title": "desired"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string",
      "enum": [
       "ACTIVE",
       "DEPLOYING",
       "STOPPED"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "pod_status",
    "title": "pod_status",
    "default": {},
    "_attrs_order_": [
     "available",
     "desired",
     "status"
    ]
   },
   "chart_release_pull_container_images_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string",
    "description": "Update container images being used by `release_name` chart release."
   },
   "chart_release_pull_container_images_1": {
    "type": "object",
    "properties": {
     "redeploy": {
      "type": "boolean",
      "_name_": "redeploy",
      "title": "redeploy",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "pull_container_images_options",
    "title": "pull_container_images_options",
    "default": {},
    "_attrs_order_": [
     "redeploy"
    ]
   },
   "chart_release_pull_container_images": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_pull_container_images_0"
     },
     "pull_container_images_options": {
      "$ref": "#/components/schemas/chart_release_pull_container_images_1"
     }
    }
   },
   "return_schema_of_chart_release_pull_container_images": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "container_images",
    "title": "container_images",
    "description": "Dictionary of container image(s) with container image tag as key and update status as value\n\nExample(s):\n```\n{\n    \"plexinc/pms-docker:1.23.2.4656-85f0adf5b\": \"Updated image\"\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "chart_release_redeploy": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "return_schema_of_chart_release_redeploy": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "info": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "info",
      "title": "info",
      "default": {},
      "_attrs_order_": []
     },
     "config": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "config",
      "title": "config",
      "default": {},
      "_attrs_order_": []
     },
     "hooks": {
      "_name_": "hooks",
      "title": "hooks",
      "default": [],
      "type": "array",
      "items": {}
     },
     "version": {
      "type": "integer",
      "_name_": "version",
      "title": "version",
      "description": "Version of chart release"
     },
     "namespace": {
      "_name_": "namespace",
      "title": "namespace",
      "type": "string"
     },
     "chart_metadata": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "Name of application",
        "type": "string"
       },
       "version": {
        "_name_": "version",
        "title": "version",
        "description": "Version of application",
        "type": "string"
       },
       "latest_chart_version": {
        "_name_": "latest_chart_version",
        "title": "latest_chart_version",
        "description": "Latest available version of application",
        "type": "string"
       }
      },
      "additionalProperties": true,
      "_name_": "chart_metadata",
      "title": "chart_metadata",
      "default": {},
      "_attrs_order_": [
       "name",
       "version",
       "latest_chart_version"
      ]
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string"
     },
     "catalog_train": {
      "_name_": "catalog_train",
      "title": "catalog_train",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "used_ports": {
      "_name_": "used_ports",
      "title": "used_ports",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port",
         "_required_": true
        },
        "protocol": {
         "_name_": "protocol",
         "title": "protocol",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "port",
       "title": "port",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "port",
        "protocol"
       ]
      }
     },
     "pod_status": {
      "type": "object",
      "properties": {
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       },
       "desired": {
        "type": "integer",
        "_name_": "desired",
        "title": "desired"
       }
      },
      "additionalProperties": false,
      "_name_": "pod_status",
      "title": "pod_status",
      "default": {},
      "_attrs_order_": [
       "available",
       "desired"
      ]
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "human_version": {
      "_name_": "human_version",
      "title": "human_version",
      "description": "Human friendly version identifier for chart release",
      "type": "string"
     },
     "human_latest_version": {
      "_name_": "human_latest_version",
      "title": "human_latest_version",
      "description": "Human friendly latest available version identifier for chart release",
      "type": "string"
     },
     "container_images_update_available": {
      "type": "boolean",
      "_name_": "container_images_update_available",
      "title": "container_images_update_available",
      "description": "Will be set when any image(s) being used in the chart release has a newer version available"
     },
     "portals": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "portals",
      "title": "portals",
      "default": {},
      "_attrs_order_": []
     },
     "chart_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "chart_schema",
      "title": "chart_schema",
      "default": {},
      "_attrs_order_": []
     },
     "history": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "history",
      "title": "history",
      "default": {},
      "_attrs_order_": []
     },
     "resources": {
      "type": "object",
      "properties": {
       "storage_class": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "storage_class",
        "title": "storage_class",
        "default": {},
        "_attrs_order_": []
       },
       "persistent_volumes": {
        "_name_": "persistent_volumes",
        "title": "persistent_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "host_path_volumes": {
        "_name_": "host_path_volumes",
        "title": "host_path_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "locked_host_paths": {
        "_name_": "locked_host_paths",
        "title": "locked_host_paths",
        "default": [],
        "type": "array",
        "items": {}
       },
       "container_images": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "container_images",
        "title": "container_images",
        "default": {},
        "_attrs_order_": []
       },
       "truenas_certificates": {
        "_name_": "truenas_certificates",
        "title": "truenas_certificates",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_id",
         "title": "certificate_id",
         "_required_": false
        }
       },
       "truenas_certificate_authorities": {
        "_name_": "truenas_certificate_authorities",
        "title": "truenas_certificate_authorities",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_authority_id",
         "title": "certificate_authority_id",
         "_required_": false
        }
       },
       "cronjobs": {
        "_name_": "cronjobs",
        "title": "cronjobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "deployments": {
        "_name_": "deployments",
        "title": "deployments",
        "default": [],
        "type": "array",
        "items": {}
       },
       "jobs": {
        "_name_": "jobs",
        "title": "jobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "pods": {
        "_name_": "pods",
        "title": "pods",
        "default": [],
        "type": "array",
        "items": {}
       },
       "statefulsets": {
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "resources",
      "title": "resources",
      "default": {},
      "_attrs_order_": [
       "storage_class",
       "persistent_volumes",
       "host_path_volumes",
       "locked_host_paths",
       "container_images",
       "truenas_certificates",
       "truenas_certificate_authorities",
       "cronjobs",
       "deployments",
       "jobs",
       "pods",
       "statefulsets"
      ]
     },
     "stats": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "stats",
      "title": "stats",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_entry",
    "title": "chart_release_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "info",
     "config",
     "hooks",
     "version",
     "namespace",
     "chart_metadata",
     "id",
     "catalog",
     "catalog_train",
     "path",
     "dataset",
     "status",
     "used_ports",
     "pod_status",
     "update_available",
     "human_version",
     "human_latest_version",
     "container_images_update_available",
     "portals",
     "chart_schema",
     "history",
     "resources",
     "stats"
    ]
   },
   "chart_release_remove_ix_volume_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "chart_release_remove_ix_volume_1": {
    "_name_": "volume_name",
    "title": "volume_name",
    "type": "string"
   },
   "chart_release_remove_ix_volume": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_remove_ix_volume_0"
     },
     "volume_name": {
      "$ref": "#/components/schemas/chart_release_remove_ix_volume_1"
     }
    }
   },
   "chart_release_rollback_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "chart_release_rollback_1": {
    "type": "object",
    "properties": {
     "force_rollback": {
      "type": "boolean",
      "_name_": "force_rollback",
      "title": "force_rollback",
      "default": false,
      "description": "`force_rollback` is a boolean which when set will force rollback operation to move forward even if no\nsnapshots are found. This is only useful when `rollback_snapshot` is set."
     },
     "recreate_resources": {
      "type": "boolean",
      "_name_": "recreate_resources",
      "title": "recreate_resources",
      "default": false,
      "description": "`recreate_resources` is a boolean which will delete and then create the kubernetes resources on rollback\nof chart release. This should be used with caution as if chart release is consuming immutable objects like\na PVC, the rollback operation can't be performed and will fail as helm tries to do a 3 way patch for rollback."
     },
     "rollback_snapshot": {
      "type": "boolean",
      "_name_": "rollback_snapshot",
      "title": "rollback_snapshot",
      "default": true,
      "description": "`rollback_snapshot` is a boolean value which when set will rollback snapshots of any PVC's or ix volumes being\nconsumed by the chart release.\n`force_rollback` is a boolean which when set will force rollback operation to move forward even if no\nsnapshots are found. This is only useful when `rollback_snapshot` is set."
     },
     "item_version": {
      "_name_": "item_version",
      "title": "item_version",
      "type": "string",
      "description": "`item_version` is version which we want to rollback a chart release to."
     }
    },
    "additionalProperties": false,
    "_name_": "rollback_options",
    "title": "rollback_options",
    "default": {},
    "_attrs_order_": [
     "force_rollback",
     "recreate_resources",
     "rollback_snapshot",
     "item_version"
    ]
   },
   "chart_release_rollback": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_rollback_0"
     },
     "rollback_options": {
      "$ref": "#/components/schemas/chart_release_rollback_1"
     }
    }
   },
   "return_schema_of_chart_release_rollback": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "info": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "info",
      "title": "info",
      "default": {},
      "_attrs_order_": []
     },
     "config": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "config",
      "title": "config",
      "default": {},
      "_attrs_order_": []
     },
     "hooks": {
      "_name_": "hooks",
      "title": "hooks",
      "default": [],
      "type": "array",
      "items": {}
     },
     "version": {
      "type": "integer",
      "_name_": "version",
      "title": "version",
      "description": "Version of chart release"
     },
     "namespace": {
      "_name_": "namespace",
      "title": "namespace",
      "type": "string"
     },
     "chart_metadata": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "Name of application",
        "type": "string"
       },
       "version": {
        "_name_": "version",
        "title": "version",
        "description": "Version of application",
        "type": "string"
       },
       "latest_chart_version": {
        "_name_": "latest_chart_version",
        "title": "latest_chart_version",
        "description": "Latest available version of application",
        "type": "string"
       }
      },
      "additionalProperties": true,
      "_name_": "chart_metadata",
      "title": "chart_metadata",
      "default": {},
      "_attrs_order_": [
       "name",
       "version",
       "latest_chart_version"
      ]
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string"
     },
     "catalog_train": {
      "_name_": "catalog_train",
      "title": "catalog_train",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "used_ports": {
      "_name_": "used_ports",
      "title": "used_ports",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port",
         "_required_": true
        },
        "protocol": {
         "_name_": "protocol",
         "title": "protocol",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "port",
       "title": "port",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "port",
        "protocol"
       ]
      }
     },
     "pod_status": {
      "type": "object",
      "properties": {
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       },
       "desired": {
        "type": "integer",
        "_name_": "desired",
        "title": "desired"
       }
      },
      "additionalProperties": false,
      "_name_": "pod_status",
      "title": "pod_status",
      "default": {},
      "_attrs_order_": [
       "available",
       "desired"
      ]
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "human_version": {
      "_name_": "human_version",
      "title": "human_version",
      "description": "Human friendly version identifier for chart release",
      "type": "string"
     },
     "human_latest_version": {
      "_name_": "human_latest_version",
      "title": "human_latest_version",
      "description": "Human friendly latest available version identifier for chart release",
      "type": "string"
     },
     "container_images_update_available": {
      "type": "boolean",
      "_name_": "container_images_update_available",
      "title": "container_images_update_available",
      "description": "Will be set when any image(s) being used in the chart release has a newer version available"
     },
     "portals": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "portals",
      "title": "portals",
      "default": {},
      "_attrs_order_": []
     },
     "chart_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "chart_schema",
      "title": "chart_schema",
      "default": {},
      "_attrs_order_": []
     },
     "history": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "history",
      "title": "history",
      "default": {},
      "_attrs_order_": []
     },
     "resources": {
      "type": "object",
      "properties": {
       "storage_class": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "storage_class",
        "title": "storage_class",
        "default": {},
        "_attrs_order_": []
       },
       "persistent_volumes": {
        "_name_": "persistent_volumes",
        "title": "persistent_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "host_path_volumes": {
        "_name_": "host_path_volumes",
        "title": "host_path_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "locked_host_paths": {
        "_name_": "locked_host_paths",
        "title": "locked_host_paths",
        "default": [],
        "type": "array",
        "items": {}
       },
       "container_images": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "container_images",
        "title": "container_images",
        "default": {},
        "_attrs_order_": []
       },
       "truenas_certificates": {
        "_name_": "truenas_certificates",
        "title": "truenas_certificates",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_id",
         "title": "certificate_id",
         "_required_": false
        }
       },
       "truenas_certificate_authorities": {
        "_name_": "truenas_certificate_authorities",
        "title": "truenas_certificate_authorities",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_authority_id",
         "title": "certificate_authority_id",
         "_required_": false
        }
       },
       "cronjobs": {
        "_name_": "cronjobs",
        "title": "cronjobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "deployments": {
        "_name_": "deployments",
        "title": "deployments",
        "default": [],
        "type": "array",
        "items": {}
       },
       "jobs": {
        "_name_": "jobs",
        "title": "jobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "pods": {
        "_name_": "pods",
        "title": "pods",
        "default": [],
        "type": "array",
        "items": {}
       },
       "statefulsets": {
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "resources",
      "title": "resources",
      "default": {},
      "_attrs_order_": [
       "storage_class",
       "persistent_volumes",
       "host_path_volumes",
       "locked_host_paths",
       "container_images",
       "truenas_certificates",
       "truenas_certificate_authorities",
       "cronjobs",
       "deployments",
       "jobs",
       "pods",
       "statefulsets"
      ]
     },
     "stats": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "stats",
      "title": "stats",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_entry",
    "title": "chart_release_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "info",
     "config",
     "hooks",
     "version",
     "namespace",
     "chart_metadata",
     "id",
     "catalog",
     "catalog_train",
     "path",
     "dataset",
     "status",
     "used_ports",
     "pod_status",
     "update_available",
     "human_version",
     "human_latest_version",
     "container_images_update_available",
     "portals",
     "chart_schema",
     "history",
     "resources",
     "stats"
    ]
   },
   "chart_release_scale_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string",
    "description": "Scale a `release_name` chart release to `scale_options.replica_count` specified."
   },
   "chart_release_scale_1": {
    "type": "object",
    "properties": {
     "replica_count": {
      "type": "integer",
      "_name_": "replica_count",
      "title": "replica_count"
     }
    },
    "additionalProperties": false,
    "_name_": "scale_options",
    "title": "scale_options",
    "default": {},
    "_attrs_order_": [
     "replica_count"
    ]
   },
   "chart_release_scale": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_scale_0"
     },
     "scale_options": {
      "$ref": "#/components/schemas/chart_release_scale_1"
     }
    }
   },
   "return_schema_of_chart_release_scale": {
    "type": "object",
    "properties": {
     "before_scale": {
      "type": "object",
      "properties": {
       "deployments": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "deployments",
        "title": "deployments",
        "default": {},
        "_attrs_order_": []
       },
       "statefulsets": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": {},
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "before_scale",
      "title": "before_scale",
      "default": {},
      "_attrs_order_": [
       "deployments",
       "statefulsets"
      ]
     },
     "after_scale": {
      "type": "object",
      "properties": {
       "deployments": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "deployments",
        "title": "deployments",
        "default": {},
        "_attrs_order_": []
       },
       "statefulsets": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": {},
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "after_scale",
      "title": "after_scale",
      "default": {},
      "_attrs_order_": [
       "deployments",
       "statefulsets"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "scale_chart_release",
    "title": "scale_chart_release",
    "default": {},
    "_attrs_order_": [
     "before_scale",
     "after_scale"
    ]
   },
   "chart_release_scale_workloads_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string"
   },
   "chart_release_scale_workloads_1": {
    "_name_": "workloads",
    "title": "workloads",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "replica_count": {
       "type": "integer",
       "_name_": "replica_count",
       "title": "replica_count",
       "_required_": true
      },
      "type": {
       "_name_": "type",
       "title": "type",
       "_required_": true,
       "type": "string",
       "enum": [
        "DEPLOYMENT",
        "STATEFULSET"
       ]
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "scale_workload",
     "title": "scale_workload",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "replica_count",
      "type",
      "name"
     ]
    }
   },
   "chart_release_scale_workloads": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_scale_workloads_0"
     },
     "workloads": {
      "$ref": "#/components/schemas/chart_release_scale_workloads_1"
     }
    }
   },
   "return_schema_of_chart_release_scaleable_resources": {
    "type": "object",
    "properties": {
     "DEPLOYMENT": {
      "_name_": "DEPLOYMENT",
      "title": "DEPLOYMENT",
      "type": "string",
      "enum": [
       "DEPLOYMENT"
      ]
     },
     "STATEFULSET": {
      "_name_": "STATEFULSET",
      "title": "STATEFULSET",
      "type": "string",
      "enum": [
       "STATEFULSET"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "scaleable_resources",
    "title": "scaleable_resources",
    "default": {},
    "_attrs_order_": [
     "DEPLOYMENT",
     "STATEFULSET"
    ]
   },
   "chart_release_upgrade_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string",
    "description": "Upgrade `release_name` chart release.\nSystem will update container images being used by `release_name` chart release as a chart release\nupgrade is not considered complete until the images in use have also been updated to latest versions."
   },
   "chart_release_upgrade_1": {
    "type": "object",
    "properties": {
     "values": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "values",
      "title": "values",
      "default": {},
      "_attrs_order_": []
     },
     "item_version": {
      "_name_": "item_version",
      "title": "item_version",
      "default": "latest",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "upgrade_options",
    "title": "upgrade_options",
    "default": {},
    "_attrs_order_": [
     "values",
     "item_version"
    ]
   },
   "chart_release_upgrade": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_upgrade_0"
     },
     "upgrade_options": {
      "$ref": "#/components/schemas/chart_release_upgrade_1"
     }
    }
   },
   "return_schema_of_chart_release_upgrade": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "info": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "info",
      "title": "info",
      "default": {},
      "_attrs_order_": []
     },
     "config": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "config",
      "title": "config",
      "default": {},
      "_attrs_order_": []
     },
     "hooks": {
      "_name_": "hooks",
      "title": "hooks",
      "default": [],
      "type": "array",
      "items": {}
     },
     "version": {
      "type": "integer",
      "_name_": "version",
      "title": "version",
      "description": "Version of chart release"
     },
     "namespace": {
      "_name_": "namespace",
      "title": "namespace",
      "type": "string"
     },
     "chart_metadata": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "Name of application",
        "type": "string"
       },
       "version": {
        "_name_": "version",
        "title": "version",
        "description": "Version of application",
        "type": "string"
       },
       "latest_chart_version": {
        "_name_": "latest_chart_version",
        "title": "latest_chart_version",
        "description": "Latest available version of application",
        "type": "string"
       }
      },
      "additionalProperties": true,
      "_name_": "chart_metadata",
      "title": "chart_metadata",
      "default": {},
      "_attrs_order_": [
       "name",
       "version",
       "latest_chart_version"
      ]
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "catalog": {
      "_name_": "catalog",
      "title": "catalog",
      "type": "string"
     },
     "catalog_train": {
      "_name_": "catalog_train",
      "title": "catalog_train",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "used_ports": {
      "_name_": "used_ports",
      "title": "used_ports",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "port": {
         "type": "integer",
         "_name_": "port",
         "title": "port",
         "_required_": true
        },
        "protocol": {
         "_name_": "protocol",
         "title": "protocol",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "port",
       "title": "port",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "port",
        "protocol"
       ]
      }
     },
     "pod_status": {
      "type": "object",
      "properties": {
       "available": {
        "type": "integer",
        "_name_": "available",
        "title": "available"
       },
       "desired": {
        "type": "integer",
        "_name_": "desired",
        "title": "desired"
       }
      },
      "additionalProperties": false,
      "_name_": "pod_status",
      "title": "pod_status",
      "default": {},
      "_attrs_order_": [
       "available",
       "desired"
      ]
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "human_version": {
      "_name_": "human_version",
      "title": "human_version",
      "description": "Human friendly version identifier for chart release",
      "type": "string"
     },
     "human_latest_version": {
      "_name_": "human_latest_version",
      "title": "human_latest_version",
      "description": "Human friendly latest available version identifier for chart release",
      "type": "string"
     },
     "container_images_update_available": {
      "type": "boolean",
      "_name_": "container_images_update_available",
      "title": "container_images_update_available",
      "description": "Will be set when any image(s) being used in the chart release has a newer version available"
     },
     "portals": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "portals",
      "title": "portals",
      "default": {},
      "_attrs_order_": []
     },
     "chart_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "chart_schema",
      "title": "chart_schema",
      "default": {},
      "_attrs_order_": []
     },
     "history": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "history",
      "title": "history",
      "default": {},
      "_attrs_order_": []
     },
     "resources": {
      "type": "object",
      "properties": {
       "storage_class": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "storage_class",
        "title": "storage_class",
        "default": {},
        "_attrs_order_": []
       },
       "persistent_volumes": {
        "_name_": "persistent_volumes",
        "title": "persistent_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "host_path_volumes": {
        "_name_": "host_path_volumes",
        "title": "host_path_volumes",
        "default": [],
        "type": "array",
        "items": {}
       },
       "locked_host_paths": {
        "_name_": "locked_host_paths",
        "title": "locked_host_paths",
        "default": [],
        "type": "array",
        "items": {}
       },
       "container_images": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "container_images",
        "title": "container_images",
        "default": {},
        "_attrs_order_": []
       },
       "truenas_certificates": {
        "_name_": "truenas_certificates",
        "title": "truenas_certificates",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_id",
         "title": "certificate_id",
         "_required_": false
        }
       },
       "truenas_certificate_authorities": {
        "_name_": "truenas_certificate_authorities",
        "title": "truenas_certificate_authorities",
        "default": [],
        "type": "array",
        "items": {
         "type": "integer",
         "_name_": "certificate_authority_id",
         "title": "certificate_authority_id",
         "_required_": false
        }
       },
       "cronjobs": {
        "_name_": "cronjobs",
        "title": "cronjobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "deployments": {
        "_name_": "deployments",
        "title": "deployments",
        "default": [],
        "type": "array",
        "items": {}
       },
       "jobs": {
        "_name_": "jobs",
        "title": "jobs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "pods": {
        "_name_": "pods",
        "title": "pods",
        "default": [],
        "type": "array",
        "items": {}
       },
       "statefulsets": {
        "_name_": "statefulsets",
        "title": "statefulsets",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "resources",
      "title": "resources",
      "default": {},
      "_attrs_order_": [
       "storage_class",
       "persistent_volumes",
       "host_path_volumes",
       "locked_host_paths",
       "container_images",
       "truenas_certificates",
       "truenas_certificate_authorities",
       "cronjobs",
       "deployments",
       "jobs",
       "pods",
       "statefulsets"
      ]
     },
     "stats": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "stats",
      "title": "stats",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "chart_release_entry",
    "title": "chart_release_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "info",
     "config",
     "hooks",
     "version",
     "namespace",
     "chart_metadata",
     "id",
     "catalog",
     "catalog_train",
     "path",
     "dataset",
     "status",
     "used_ports",
     "pod_status",
     "update_available",
     "human_version",
     "human_latest_version",
     "container_images_update_available",
     "portals",
     "chart_schema",
     "history",
     "resources",
     "stats"
    ]
   },
   "chart_release_upgrade_summary_0": {
    "_name_": "release_name",
    "title": "release_name",
    "type": "string",
    "description": "Retrieve upgrade summary for `release_name` which will include which container images will be updated\nand changelog for `options.item_version` chart version specified if applicable. If only container images\nneed to be updated, changelog will be `null`."
   },
   "chart_release_upgrade_summary_1": {
    "type": "object",
    "properties": {
     "item_version": {
      "_name_": "item_version",
      "title": "item_version",
      "default": "latest",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "item_version"
    ]
   },
   "chart_release_upgrade_summary": {
    "type": "object",
    "properties": {
     "release_name": {
      "$ref": "#/components/schemas/chart_release_upgrade_summary_0"
     },
     "options": {
      "$ref": "#/components/schemas/chart_release_upgrade_summary_1"
     }
    }
   },
   "return_schema_of_chart_release_upgrade_summary": {
    "type": "object",
    "properties": {
     "image_update_available": {
      "type": "boolean",
      "_name_": "image_update_available",
      "title": "image_update_available"
     },
     "item_update_available": {
      "type": "boolean",
      "_name_": "item_update_available",
      "title": "item_update_available"
     },
     "container_images_to_update": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "container_images_to_update",
      "title": "container_images_to_update",
      "description": "Dictionary of container image(s) which have an update available against the same tag",
      "default": {},
      "_attrs_order_": []
     },
     "latest_version": {
      "_name_": "latest_version",
      "title": "latest_version",
      "type": "string"
     },
     "latest_human_version": {
      "_name_": "latest_human_version",
      "title": "latest_human_version",
      "type": "string"
     },
     "upgrade_version": {
      "_name_": "upgrade_version",
      "title": "upgrade_version",
      "type": "string"
     },
     "upgrade_human_version": {
      "_name_": "upgrade_human_version",
      "title": "upgrade_human_version",
      "type": "string"
     },
     "changelog": {
      "_name_": "changelog",
      "title": "changelog",
      "type": "string",
      "nullable": true
     },
     "available_versions_for_upgrade": {
      "_name_": "available_versions_for_upgrade",
      "title": "available_versions_for_upgrade",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "version": {
         "_name_": "version",
         "title": "version",
         "_required_": true,
         "type": "string"
        },
        "human_version": {
         "_name_": "human_version",
         "title": "human_version",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "version_info",
       "title": "version_info",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "version",
        "human_version"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "upgrade_summary",
    "title": "upgrade_summary",
    "default": {},
    "_attrs_order_": [
     "image_update_available",
     "item_update_available",
     "container_images_to_update",
     "latest_version",
     "latest_human_version",
     "upgrade_version",
     "upgrade_human_version",
     "changelog",
     "available_versions_for_upgrade"
    ]
   },
   "return_schema_of_chart_release_used_ports": {
    "_name_": "used_ports",
    "title": "used_ports",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "used_port",
     "title": "used_port",
     "_required_": false
    }
   },
   "return_schema_of_cloud_backup_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "description": {
          "_name_": "description",
          "title": "description",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "schedule": {
          "type": "object",
          "properties": {
           "minute": {
            "_name_": "minute",
            "title": "minute",
            "default": "00",
            "_required_": false,
            "type": "string"
           },
           "hour": {
            "_name_": "hour",
            "title": "hour",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dom": {
            "_name_": "dom",
            "title": "dom",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "month": {
            "_name_": "month",
            "title": "month",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dow": {
            "_name_": "dow",
            "title": "dow",
            "default": "*",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "schedule",
          "title": "schedule",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "minute",
           "hour",
           "dom",
           "month",
           "dow"
          ]
         },
         "pre_script": {
          "_name_": "pre_script",
          "title": "pre_script",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "post_script": {
          "_name_": "post_script",
          "title": "post_script",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "snapshot": {
          "type": "boolean",
          "_name_": "snapshot",
          "title": "snapshot",
          "default": false,
          "_required_": false
         },
         "bwlimit": {
          "_name_": "bwlimit",
          "title": "bwlimit",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "time": {
              "_name_": "time",
              "title": "time",
              "_required_": false,
              "type": "string"
             },
             "bandwidth": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "bandwidth",
              "title": "bandwidth",
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "cloud_sync_bwlimit",
            "title": "cloud_sync_bwlimit",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "time",
             "bandwidth"
            ]
           }
          ]
         },
         "include": {
          "_name_": "include",
          "title": "include",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "exclude": {
          "_name_": "exclude",
          "title": "exclude",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "transfers": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "transfers",
          "title": "transfers",
          "default": null,
          "_required_": false
         },
         "args": {
          "_name_": "args",
          "title": "args",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "password": {
          "_name_": "password",
          "title": "password",
          "_required_": true,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "credentials": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "credentials",
          "title": "credentials",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "job": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "_name_": "job",
          "title": "job",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "cloud_backup_entry",
        "title": "cloud_backup_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "description",
         "path",
         "attributes",
         "schedule",
         "pre_script",
         "post_script",
         "snapshot",
         "bwlimit",
         "include",
         "exclude",
         "transfers",
         "args",
         "enabled",
         "password",
         "id",
         "credentials",
         "job",
         "locked"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "pre_script": {
        "_name_": "pre_script",
        "title": "pre_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "post_script": {
        "_name_": "post_script",
        "title": "post_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "snapshot": {
        "type": "boolean",
        "_name_": "snapshot",
        "title": "snapshot",
        "default": false,
        "_required_": false
       },
       "bwlimit": {
        "_name_": "bwlimit",
        "title": "bwlimit",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        ]
       },
       "include": {
        "_name_": "include",
        "title": "include",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "exclude": {
        "_name_": "exclude",
        "title": "exclude",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "transfers": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "transfers",
        "title": "transfers",
        "default": null,
        "_required_": false
       },
       "args": {
        "_name_": "args",
        "title": "args",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "password": {
        "_name_": "password",
        "title": "password",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "credentials": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "credentials",
        "title": "credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "job": {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cloud_backup_entry",
      "title": "cloud_backup_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "description",
       "path",
       "attributes",
       "schedule",
       "pre_script",
       "post_script",
       "snapshot",
       "bwlimit",
       "include",
       "exclude",
       "transfers",
       "args",
       "enabled",
       "password",
       "id",
       "credentials",
       "job",
       "locked"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "pre_script": {
        "_name_": "pre_script",
        "title": "pre_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "post_script": {
        "_name_": "post_script",
        "title": "post_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "snapshot": {
        "type": "boolean",
        "_name_": "snapshot",
        "title": "snapshot",
        "default": false,
        "_required_": false
       },
       "bwlimit": {
        "_name_": "bwlimit",
        "title": "bwlimit",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        ]
       },
       "include": {
        "_name_": "include",
        "title": "include",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "exclude": {
        "_name_": "exclude",
        "title": "exclude",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "transfers": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "transfers",
        "title": "transfers",
        "default": null,
        "_required_": false
       },
       "args": {
        "_name_": "args",
        "title": "args",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "password": {
        "_name_": "password",
        "title": "password",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "credentials": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "credentials",
        "title": "credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "job": {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cloud_backup_entry",
      "title": "cloud_backup_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "description",
       "path",
       "attributes",
       "schedule",
       "pre_script",
       "post_script",
       "snapshot",
       "bwlimit",
       "include",
       "exclude",
       "transfers",
       "args",
       "enabled",
       "password",
       "id",
       "credentials",
       "job",
       "locked"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "cloud_backup_create": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "credentials": {
      "type": "integer",
      "_name_": "credentials",
      "title": "credentials"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_backup_create",
    "title": "cloud_backup_create",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "credentials",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "password"
    ]
   },
   "return_schema_of_cloud_backup_create": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "credentials",
      "title": "credentials",
      "default": {},
      "_attrs_order_": []
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_backup_create_returns",
    "title": "cloud_backup_create_returns",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "password",
     "id",
     "credentials",
     "job",
     "locked"
    ]
   },
   "return_schema_of_cloud_backup_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "cloud_backup_update": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "credentials": {
      "type": "integer",
      "_name_": "credentials",
      "title": "credentials"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_backup_update",
    "title": "cloud_backup_update",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "credentials",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "password"
    ]
   },
   "return_schema_of_cloud_backup_update": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "credentials",
      "title": "credentials",
      "default": {},
      "_attrs_order_": []
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_backup_update_returns",
    "title": "cloud_backup_update_returns",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "password",
     "id",
     "credentials",
     "job",
     "locked"
    ]
   },
   "cloud_backup_abort": {
    "type": "object",
    "properties": {}
   },
   "cloud_backup_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "cloud_backup_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "cloud_backup_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/cloud_backup_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/cloud_backup_get_instance_1"
     }
    }
   },
   "return_schema_of_cloud_backup_get_instance": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "credentials",
      "title": "credentials",
      "default": {},
      "_attrs_order_": []
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_backup_entry",
    "title": "cloud_backup_entry",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "password",
     "id",
     "credentials",
     "job",
     "locked"
    ]
   },
   "cloud_backup_init": {
    "type": "object",
    "properties": {}
   },
   "cloud_backup_sync": {
    "type": "object",
    "properties": {
     "dry_run": {
      "type": "boolean",
      "_name_": "dry_run",
      "title": "dry_run",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_backup_sync_options",
    "title": "cloud_backup_sync_options",
    "default": {},
    "_attrs_order_": [
     "dry_run"
    ]
   },
   "return_schema_of_cloudsync_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "description": {
          "_name_": "description",
          "title": "description",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "schedule": {
          "type": "object",
          "properties": {
           "minute": {
            "_name_": "minute",
            "title": "minute",
            "default": "00",
            "_required_": false,
            "type": "string"
           },
           "hour": {
            "_name_": "hour",
            "title": "hour",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dom": {
            "_name_": "dom",
            "title": "dom",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "month": {
            "_name_": "month",
            "title": "month",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dow": {
            "_name_": "dow",
            "title": "dow",
            "default": "*",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "schedule",
          "title": "schedule",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "minute",
           "hour",
           "dom",
           "month",
           "dow"
          ]
         },
         "pre_script": {
          "_name_": "pre_script",
          "title": "pre_script",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "post_script": {
          "_name_": "post_script",
          "title": "post_script",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "snapshot": {
          "type": "boolean",
          "_name_": "snapshot",
          "title": "snapshot",
          "default": false,
          "_required_": false
         },
         "bwlimit": {
          "_name_": "bwlimit",
          "title": "bwlimit",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "time": {
              "_name_": "time",
              "title": "time",
              "_required_": false,
              "type": "string"
             },
             "bandwidth": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "bandwidth",
              "title": "bandwidth",
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "cloud_sync_bwlimit",
            "title": "cloud_sync_bwlimit",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "time",
             "bandwidth"
            ]
           }
          ]
         },
         "include": {
          "_name_": "include",
          "title": "include",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "exclude": {
          "_name_": "exclude",
          "title": "exclude",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "transfers": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "transfers",
          "title": "transfers",
          "default": null,
          "_required_": false
         },
         "args": {
          "_name_": "args",
          "title": "args",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "direction": {
          "_name_": "direction",
          "title": "direction",
          "_required_": true,
          "type": "string",
          "enum": [
           "PUSH",
           "PULL"
          ]
         },
         "transfer_mode": {
          "_name_": "transfer_mode",
          "title": "transfer_mode",
          "_required_": true,
          "type": "string",
          "enum": [
           "SYNC",
           "COPY",
           "MOVE"
          ]
         },
         "encryption": {
          "type": "boolean",
          "_name_": "encryption",
          "title": "encryption",
          "default": false,
          "_required_": false
         },
         "filename_encryption": {
          "type": "boolean",
          "_name_": "filename_encryption",
          "title": "filename_encryption",
          "default": false,
          "_required_": false
         },
         "encryption_password": {
          "_name_": "encryption_password",
          "title": "encryption_password",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "encryption_salt": {
          "_name_": "encryption_salt",
          "title": "encryption_salt",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "create_empty_src_dirs": {
          "type": "boolean",
          "_name_": "create_empty_src_dirs",
          "title": "create_empty_src_dirs",
          "default": false,
          "_required_": false
         },
         "follow_symlinks": {
          "type": "boolean",
          "_name_": "follow_symlinks",
          "title": "follow_symlinks",
          "default": false,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "credentials": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "credentials",
          "title": "credentials",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "job": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "job",
          "title": "job",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "cloud_sync_entry",
        "title": "cloud_sync_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "description",
         "path",
         "attributes",
         "schedule",
         "pre_script",
         "post_script",
         "snapshot",
         "bwlimit",
         "include",
         "exclude",
         "transfers",
         "args",
         "enabled",
         "direction",
         "transfer_mode",
         "encryption",
         "filename_encryption",
         "encryption_password",
         "encryption_salt",
         "create_empty_src_dirs",
         "follow_symlinks",
         "id",
         "credentials",
         "job",
         "locked"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "pre_script": {
        "_name_": "pre_script",
        "title": "pre_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "post_script": {
        "_name_": "post_script",
        "title": "post_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "snapshot": {
        "type": "boolean",
        "_name_": "snapshot",
        "title": "snapshot",
        "default": false,
        "_required_": false
       },
       "bwlimit": {
        "_name_": "bwlimit",
        "title": "bwlimit",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        ]
       },
       "include": {
        "_name_": "include",
        "title": "include",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "exclude": {
        "_name_": "exclude",
        "title": "exclude",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "transfers": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "transfers",
        "title": "transfers",
        "default": null,
        "_required_": false
       },
       "args": {
        "_name_": "args",
        "title": "args",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "direction": {
        "_name_": "direction",
        "title": "direction",
        "_required_": true,
        "type": "string",
        "enum": [
         "PUSH",
         "PULL"
        ]
       },
       "transfer_mode": {
        "_name_": "transfer_mode",
        "title": "transfer_mode",
        "_required_": true,
        "type": "string",
        "enum": [
         "SYNC",
         "COPY",
         "MOVE"
        ]
       },
       "encryption": {
        "type": "boolean",
        "_name_": "encryption",
        "title": "encryption",
        "default": false,
        "_required_": false
       },
       "filename_encryption": {
        "type": "boolean",
        "_name_": "filename_encryption",
        "title": "filename_encryption",
        "default": false,
        "_required_": false
       },
       "encryption_password": {
        "_name_": "encryption_password",
        "title": "encryption_password",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "encryption_salt": {
        "_name_": "encryption_salt",
        "title": "encryption_salt",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "create_empty_src_dirs": {
        "type": "boolean",
        "_name_": "create_empty_src_dirs",
        "title": "create_empty_src_dirs",
        "default": false,
        "_required_": false
       },
       "follow_symlinks": {
        "type": "boolean",
        "_name_": "follow_symlinks",
        "title": "follow_symlinks",
        "default": false,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "credentials": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "credentials",
        "title": "credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "job": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cloud_sync_entry",
      "title": "cloud_sync_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "description",
       "path",
       "attributes",
       "schedule",
       "pre_script",
       "post_script",
       "snapshot",
       "bwlimit",
       "include",
       "exclude",
       "transfers",
       "args",
       "enabled",
       "direction",
       "transfer_mode",
       "encryption",
       "filename_encryption",
       "encryption_password",
       "encryption_salt",
       "create_empty_src_dirs",
       "follow_symlinks",
       "id",
       "credentials",
       "job",
       "locked"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "description": {
        "_name_": "description",
        "title": "description",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "pre_script": {
        "_name_": "pre_script",
        "title": "pre_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "post_script": {
        "_name_": "post_script",
        "title": "post_script",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "snapshot": {
        "type": "boolean",
        "_name_": "snapshot",
        "title": "snapshot",
        "default": false,
        "_required_": false
       },
       "bwlimit": {
        "_name_": "bwlimit",
        "title": "bwlimit",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "time": {
            "_name_": "time",
            "title": "time",
            "_required_": false,
            "type": "string"
           },
           "bandwidth": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "bandwidth",
            "title": "bandwidth",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "cloud_sync_bwlimit",
          "title": "cloud_sync_bwlimit",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "time",
           "bandwidth"
          ]
         }
        ]
       },
       "include": {
        "_name_": "include",
        "title": "include",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "exclude": {
        "_name_": "exclude",
        "title": "exclude",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "transfers": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "transfers",
        "title": "transfers",
        "default": null,
        "_required_": false
       },
       "args": {
        "_name_": "args",
        "title": "args",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "direction": {
        "_name_": "direction",
        "title": "direction",
        "_required_": true,
        "type": "string",
        "enum": [
         "PUSH",
         "PULL"
        ]
       },
       "transfer_mode": {
        "_name_": "transfer_mode",
        "title": "transfer_mode",
        "_required_": true,
        "type": "string",
        "enum": [
         "SYNC",
         "COPY",
         "MOVE"
        ]
       },
       "encryption": {
        "type": "boolean",
        "_name_": "encryption",
        "title": "encryption",
        "default": false,
        "_required_": false
       },
       "filename_encryption": {
        "type": "boolean",
        "_name_": "filename_encryption",
        "title": "filename_encryption",
        "default": false,
        "_required_": false
       },
       "encryption_password": {
        "_name_": "encryption_password",
        "title": "encryption_password",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "encryption_salt": {
        "_name_": "encryption_salt",
        "title": "encryption_salt",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "create_empty_src_dirs": {
        "type": "boolean",
        "_name_": "create_empty_src_dirs",
        "title": "create_empty_src_dirs",
        "default": false,
        "_required_": false
       },
       "follow_symlinks": {
        "type": "boolean",
        "_name_": "follow_symlinks",
        "title": "follow_symlinks",
        "default": false,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "credentials": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "credentials",
        "title": "credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "job": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cloud_sync_entry",
      "title": "cloud_sync_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "description",
       "path",
       "attributes",
       "schedule",
       "pre_script",
       "post_script",
       "snapshot",
       "bwlimit",
       "include",
       "exclude",
       "transfers",
       "args",
       "enabled",
       "direction",
       "transfer_mode",
       "encryption",
       "filename_encryption",
       "encryption_password",
       "encryption_salt",
       "create_empty_src_dirs",
       "follow_symlinks",
       "id",
       "credentials",
       "job",
       "locked"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "cloudsync_create": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "credentials": {
      "type": "integer",
      "_name_": "credentials",
      "title": "credentials"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY",
       "MOVE"
      ]
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "create_empty_src_dirs": {
      "type": "boolean",
      "_name_": "create_empty_src_dirs",
      "title": "create_empty_src_dirs",
      "default": false
     },
     "follow_symlinks": {
      "type": "boolean",
      "_name_": "follow_symlinks",
      "title": "follow_symlinks",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_create",
    "title": "cloud_sync_create",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "credentials",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "direction",
     "transfer_mode",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "create_empty_src_dirs",
     "follow_symlinks"
    ]
   },
   "return_schema_of_cloudsync_create": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY",
       "MOVE"
      ]
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "create_empty_src_dirs": {
      "type": "boolean",
      "_name_": "create_empty_src_dirs",
      "title": "create_empty_src_dirs",
      "default": false
     },
     "follow_symlinks": {
      "type": "boolean",
      "_name_": "follow_symlinks",
      "title": "follow_symlinks",
      "default": false
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "credentials",
      "title": "credentials",
      "default": {},
      "_attrs_order_": []
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "cloudsync_create_returns",
    "title": "cloudsync_create_returns",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "direction",
     "transfer_mode",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "create_empty_src_dirs",
     "follow_symlinks",
     "id",
     "credentials",
     "job",
     "locked"
    ]
   },
   "return_schema_of_cloudsync_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "cloudsync_update": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "credentials": {
      "type": "integer",
      "_name_": "credentials",
      "title": "credentials"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY",
       "MOVE"
      ]
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "create_empty_src_dirs": {
      "type": "boolean",
      "_name_": "create_empty_src_dirs",
      "title": "create_empty_src_dirs",
      "default": false
     },
     "follow_symlinks": {
      "type": "boolean",
      "_name_": "follow_symlinks",
      "title": "follow_symlinks",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_update",
    "title": "cloud_sync_update",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "credentials",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "direction",
     "transfer_mode",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "create_empty_src_dirs",
     "follow_symlinks"
    ]
   },
   "return_schema_of_cloudsync_update": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY",
       "MOVE"
      ]
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "create_empty_src_dirs": {
      "type": "boolean",
      "_name_": "create_empty_src_dirs",
      "title": "create_empty_src_dirs",
      "default": false
     },
     "follow_symlinks": {
      "type": "boolean",
      "_name_": "follow_symlinks",
      "title": "follow_symlinks",
      "default": false
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Updates the cloud_sync entry `id` with `data`.\nCreates a new cloud_sync entry."
     },
     "credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "credentials",
      "title": "credentials",
      "default": {},
      "_attrs_order_": []
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "cloudsync_update_returns",
    "title": "cloudsync_update_returns",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "direction",
     "transfer_mode",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "create_empty_src_dirs",
     "follow_symlinks",
     "id",
     "credentials",
     "job",
     "locked"
    ]
   },
   "cloudsync_abort": {
    "type": "object",
    "properties": {}
   },
   "cloudsync_create_bucket_0": {
    "type": "integer",
    "_name_": "credentials_id",
    "title": "credentials_id"
   },
   "cloudsync_create_bucket_1": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "cloudsync_create_bucket": {
    "type": "object",
    "properties": {
     "credentials_id": {
      "$ref": "#/components/schemas/cloudsync_create_bucket_0"
     },
     "name": {
      "$ref": "#/components/schemas/cloudsync_create_bucket_1"
     }
    }
   },
   "cloudsync_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "cloudsync_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "cloudsync_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/cloudsync_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/cloudsync_get_instance_1"
     }
    }
   },
   "return_schema_of_cloudsync_get_instance": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY",
       "MOVE"
      ]
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "create_empty_src_dirs": {
      "type": "boolean",
      "_name_": "create_empty_src_dirs",
      "title": "create_empty_src_dirs",
      "default": false
     },
     "follow_symlinks": {
      "type": "boolean",
      "_name_": "follow_symlinks",
      "title": "follow_symlinks",
      "default": false
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "credentials",
      "title": "credentials",
      "default": {},
      "_attrs_order_": []
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_entry",
    "title": "cloud_sync_entry",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "direction",
     "transfer_mode",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "create_empty_src_dirs",
     "follow_symlinks",
     "id",
     "credentials",
     "job",
     "locked"
    ]
   },
   "cloudsync_list_buckets": {
    "type": "integer",
    "_name_": "credentials_id",
    "title": "credentials_id"
   },
   "cloudsync_list_directory": {
    "type": "object",
    "properties": {
     "credentials": {
      "type": "integer",
      "_name_": "credentials",
      "title": "credentials"
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": [],
      "description": "If remote supports buckets, path is constructed by two keys \"bucket\"/\"folder\" in `attributes`.\nIf remote does not support buckets, path is constructed using \"folder\" key only in `attributes`.\n\"folder\" is directory name and \"bucket\" is bucket name for remote."
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_ls",
    "title": "cloud_sync_ls",
    "default": {},
    "_attrs_order_": [
     "credentials",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "attributes",
     "args"
    ]
   },
   "cloudsync_restore": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY"
      ]
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_restore",
    "title": "cloud_sync_restore",
    "default": {},
    "_attrs_order_": [
     "description",
     "transfer_mode",
     "path"
    ]
   },
   "cloudsync_sync": {
    "type": "object",
    "properties": {
     "dry_run": {
      "type": "boolean",
      "_name_": "dry_run",
      "title": "dry_run",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_sync_options",
    "title": "cloud_sync_sync_options",
    "default": {},
    "_attrs_order_": [
     "dry_run"
    ]
   },
   "cloudsync_sync_onetime_0": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "credentials": {
      "type": "integer",
      "_name_": "credentials",
      "title": "credentials"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "pre_script": {
      "_name_": "pre_script",
      "title": "pre_script",
      "default": "",
      "type": "string"
     },
     "post_script": {
      "_name_": "post_script",
      "title": "post_script",
      "default": "",
      "type": "string"
     },
     "snapshot": {
      "type": "boolean",
      "_name_": "snapshot",
      "title": "snapshot",
      "default": false
     },
     "bwlimit": {
      "_name_": "bwlimit",
      "title": "bwlimit",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "time": {
         "_name_": "time",
         "title": "time",
         "_required_": false,
         "type": "string"
        },
        "bandwidth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "bandwidth",
         "title": "bandwidth",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "cloud_sync_bwlimit",
       "title": "cloud_sync_bwlimit",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "time",
        "bandwidth"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "transfers": {
      "type": "integer",
      "_name_": "transfers",
      "title": "transfers",
      "default": null,
      "nullable": true
     },
     "args": {
      "_name_": "args",
      "title": "args",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transfer_mode": {
      "_name_": "transfer_mode",
      "title": "transfer_mode",
      "type": "string",
      "enum": [
       "SYNC",
       "COPY",
       "MOVE"
      ]
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "filename_encryption": {
      "type": "boolean",
      "_name_": "filename_encryption",
      "title": "filename_encryption",
      "default": false
     },
     "encryption_password": {
      "_name_": "encryption_password",
      "title": "encryption_password",
      "default": "",
      "type": "string"
     },
     "encryption_salt": {
      "_name_": "encryption_salt",
      "title": "encryption_salt",
      "default": "",
      "type": "string"
     },
     "create_empty_src_dirs": {
      "type": "boolean",
      "_name_": "create_empty_src_dirs",
      "title": "create_empty_src_dirs",
      "default": false
     },
     "follow_symlinks": {
      "type": "boolean",
      "_name_": "follow_symlinks",
      "title": "follow_symlinks",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_sync_onetime",
    "title": "cloud_sync_sync_onetime",
    "default": {},
    "_attrs_order_": [
     "description",
     "path",
     "credentials",
     "attributes",
     "schedule",
     "pre_script",
     "post_script",
     "snapshot",
     "bwlimit",
     "include",
     "exclude",
     "transfers",
     "args",
     "enabled",
     "direction",
     "transfer_mode",
     "encryption",
     "filename_encryption",
     "encryption_password",
     "encryption_salt",
     "create_empty_src_dirs",
     "follow_symlinks"
    ]
   },
   "cloudsync_sync_onetime_1": {
    "type": "object",
    "properties": {
     "dry_run": {
      "type": "boolean",
      "_name_": "dry_run",
      "title": "dry_run",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_sync_onetime_options",
    "title": "cloud_sync_sync_onetime_options",
    "default": {},
    "_attrs_order_": [
     "dry_run"
    ]
   },
   "cloudsync_sync_onetime": {
    "type": "object",
    "properties": {
     "cloud_sync_sync_onetime": {
      "$ref": "#/components/schemas/cloudsync_sync_onetime_0"
     },
     "cloud_sync_sync_onetime_options": {
      "$ref": "#/components/schemas/cloudsync_sync_onetime_1"
     }
    }
   },
   "return_schema_of_cloudsync_credentials_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "provider": {
          "_name_": "provider",
          "title": "provider",
          "_required_": true,
          "type": "string"
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "cloud_sync_credentials_entry",
        "title": "cloud_sync_credentials_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "provider",
         "attributes",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "provider": {
        "_name_": "provider",
        "title": "provider",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cloud_sync_credentials_entry",
      "title": "cloud_sync_credentials_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "provider",
       "attributes",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "provider": {
        "_name_": "provider",
        "title": "provider",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cloud_sync_credentials_entry",
      "title": "cloud_sync_credentials_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "provider",
       "attributes",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "cloudsync_credentials_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "provider": {
      "_name_": "provider",
      "title": "provider",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_credentials_create",
    "title": "cloud_sync_credentials_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "provider",
     "attributes"
    ]
   },
   "return_schema_of_cloudsync_credentials_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "provider": {
      "_name_": "provider",
      "title": "provider",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "cloudsync_credentials_create_returns",
    "title": "cloudsync_credentials_create_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "provider",
     "attributes",
     "id"
    ]
   },
   "return_schema_of_cloudsync_credentials_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "cloudsync_credentials_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "provider": {
      "_name_": "provider",
      "title": "provider",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_credentials_update",
    "title": "cloud_sync_credentials_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "provider",
     "attributes"
    ]
   },
   "return_schema_of_cloudsync_credentials_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "provider": {
      "_name_": "provider",
      "title": "provider",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update Cloud Sync Credentials of `id`.\nCreate Cloud Sync Credentials."
     }
    },
    "additionalProperties": false,
    "_name_": "cloudsync_credentials_update_returns",
    "title": "cloudsync_credentials_update_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "provider",
     "attributes",
     "id"
    ]
   },
   "cloudsync_credentials_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "cloudsync_credentials_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "cloudsync_credentials_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/cloudsync_credentials_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/cloudsync_credentials_get_instance_1"
     }
    }
   },
   "return_schema_of_cloudsync_credentials_get_instance": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "provider": {
      "_name_": "provider",
      "title": "provider",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_credentials_entry",
    "title": "cloud_sync_credentials_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "provider",
     "attributes",
     "id"
    ]
   },
   "cloudsync_credentials_verify": {
    "type": "object",
    "properties": {
     "provider": {
      "_name_": "provider",
      "title": "provider",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "cloud_sync_credentials_verify",
    "title": "cloud_sync_credentials_verify",
    "default": {},
    "_attrs_order_": [
     "provider",
     "attributes"
    ]
   },
   "config_reset": {
    "type": "object",
    "properties": {
     "reboot": {
      "type": "boolean",
      "_name_": "reboot",
      "title": "reboot",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "reboot"
    ]
   },
   "config_save": {
    "type": "object",
    "properties": {
     "secretseed": {
      "type": "boolean",
      "_name_": "secretseed",
      "title": "secretseed",
      "default": false,
      "description": "`secretseed` bool: When true, include password secret seed."
     },
     "pool_keys": {
      "type": "boolean",
      "_name_": "pool_keys",
      "title": "pool_keys",
      "default": false,
      "description": "`pool_keys` bool: IGNORED and DEPRECATED as it does not apply on SCALE systems."
     },
     "root_authorized_keys": {
      "type": "boolean",
      "_name_": "root_authorized_keys",
      "title": "root_authorized_keys",
      "default": false,
      "description": "`root_authorized_keys` bool: When true, include \"/root/.ssh/authorized_keys\" file for the root user."
     }
    },
    "additionalProperties": false,
    "_name_": "configsave",
    "title": "configsave",
    "default": {},
    "_attrs_order_": [
     "secretseed",
     "pool_keys",
     "root_authorized_keys"
    ]
   },
   "return_schema_of_container_config": {
    "type": "object",
    "properties": {
     "enable_image_updates": {
      "type": "boolean",
      "_name_": "enable_image_updates",
      "title": "enable_image_updates"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "container_entry",
    "title": "container_entry",
    "default": {},
    "_attrs_order_": [
     "enable_image_updates",
     "id"
    ]
   },
   "container_update": {
    "type": "object",
    "properties": {
     "enable_image_updates": {
      "type": "boolean",
      "_name_": "enable_image_updates",
      "title": "enable_image_updates"
     }
    },
    "additionalProperties": false,
    "_name_": "container_update",
    "title": "container_update",
    "default": {},
    "_attrs_order_": [
     "enable_image_updates"
    ]
   },
   "return_schema_of_container_update": {
    "type": "object",
    "properties": {
     "enable_image_updates": {
      "type": "boolean",
      "_name_": "enable_image_updates",
      "title": "enable_image_updates"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "container_update_returns",
    "title": "container_update_returns",
    "default": {},
    "_attrs_order_": [
     "enable_image_updates",
     "id"
    ]
   },
   "container_prune": {
    "type": "object",
    "properties": {
     "remove_unused_images": {
      "type": "boolean",
      "_name_": "remove_unused_images",
      "title": "remove_unused_images",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "prune_options",
    "title": "prune_options",
    "default": {},
    "_attrs_order_": [
     "remove_unused_images"
    ]
   },
   "return_schema_of_container_prune": {
    "type": "object",
    "properties": {
     "images": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "images",
      "title": "images",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "pruned_resources",
    "title": "pruned_resources",
    "description": "\n\nExample(s):\n```\n{\n    \"images\": {\n        \"ImagesDeleted\": [\n            {\n                \"id\": \"sha256:883e787c00d4208d75fc3e85d100ce64b517e49a2468f0e7f084cf05d16f3e46\",\n                \"Untagged\": \"quay.io/skopeo/stable:latest\"\n            },\n            {\n                \"id\": \"sha256:883e787c00d4208d75fc3e85d100ce64b517e49a2468f0e7f084cf05d16f3e46\",\n                \"Untagged\": \"quay.io/skopeo/stable:latest2\"\n            }\n        ],\n        \"SpaceReclaimed\": 260858493\n    }\n}\n```\n",
    "default": {},
    "_attrs_order_": [
     "images"
    ]
   },
   "return_schema_of_container_image_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": false,
          "type": "string"
         },
         "repo_tags": {
          "_name_": "repo_tags",
          "title": "repo_tags",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "repo_tag",
            "title": "repo_tag",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "repo_digests": {
          "_name_": "repo_digests",
          "title": "repo_digests",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "repo_digest",
            "title": "repo_digest",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "size": {
          "type": "integer",
          "_name_": "size",
          "title": "size",
          "_required_": false
         },
         "dangling": {
          "type": "boolean",
          "_name_": "dangling",
          "title": "dangling",
          "_required_": false
         },
         "update_available": {
          "type": "boolean",
          "_name_": "update_available",
          "title": "update_available",
          "_required_": false
         },
         "system_image": {
          "type": "boolean",
          "_name_": "system_image",
          "title": "system_image",
          "_required_": false
         },
         "parsed_repo_tags": {
          "_name_": "parsed_repo_tags",
          "title": "parsed_repo_tags",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "image": {
              "_name_": "image",
              "title": "image",
              "_required_": false,
              "type": "string"
             },
             "tag": {
              "_name_": "tag",
              "title": "tag",
              "_required_": false,
              "type": "string"
             },
             "registry": {
              "_name_": "registry",
              "title": "registry",
              "_required_": false,
              "type": "string"
             },
             "complete_tag": {
              "_name_": "complete_tag",
              "title": "complete_tag",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "parsed_repo_tag",
            "title": "parsed_repo_tag",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "image",
             "tag",
             "registry",
             "complete_tag"
            ]
           }
          ]
         },
         "complete_tags": {
          "_name_": "complete_tags",
          "title": "complete_tags",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "complete_tag",
            "title": "complete_tag",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "container_image_entry",
        "title": "container_image_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "repo_tags",
         "repo_digests",
         "size",
         "dangling",
         "update_available",
         "system_image",
         "parsed_repo_tags",
         "complete_tags"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": false,
        "type": "string"
       },
       "repo_tags": {
        "_name_": "repo_tags",
        "title": "repo_tags",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "repo_tag",
          "title": "repo_tag",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "repo_digests": {
        "_name_": "repo_digests",
        "title": "repo_digests",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "repo_digest",
          "title": "repo_digest",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "size": {
        "type": "integer",
        "_name_": "size",
        "title": "size",
        "_required_": false
       },
       "dangling": {
        "type": "boolean",
        "_name_": "dangling",
        "title": "dangling",
        "_required_": false
       },
       "update_available": {
        "type": "boolean",
        "_name_": "update_available",
        "title": "update_available",
        "_required_": false
       },
       "system_image": {
        "type": "boolean",
        "_name_": "system_image",
        "title": "system_image",
        "_required_": false
       },
       "parsed_repo_tags": {
        "_name_": "parsed_repo_tags",
        "title": "parsed_repo_tags",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "image": {
            "_name_": "image",
            "title": "image",
            "_required_": false,
            "type": "string"
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string"
           },
           "registry": {
            "_name_": "registry",
            "title": "registry",
            "_required_": false,
            "type": "string"
           },
           "complete_tag": {
            "_name_": "complete_tag",
            "title": "complete_tag",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "parsed_repo_tag",
          "title": "parsed_repo_tag",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "image",
           "tag",
           "registry",
           "complete_tag"
          ]
         }
        ]
       },
       "complete_tags": {
        "_name_": "complete_tags",
        "title": "complete_tags",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "complete_tag",
          "title": "complete_tag",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "container_image_entry",
      "title": "container_image_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "repo_tags",
       "repo_digests",
       "size",
       "dangling",
       "update_available",
       "system_image",
       "parsed_repo_tags",
       "complete_tags"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": false,
        "type": "string"
       },
       "repo_tags": {
        "_name_": "repo_tags",
        "title": "repo_tags",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "repo_tag",
          "title": "repo_tag",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "repo_digests": {
        "_name_": "repo_digests",
        "title": "repo_digests",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "repo_digest",
          "title": "repo_digest",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "size": {
        "type": "integer",
        "_name_": "size",
        "title": "size",
        "_required_": false
       },
       "dangling": {
        "type": "boolean",
        "_name_": "dangling",
        "title": "dangling",
        "_required_": false
       },
       "update_available": {
        "type": "boolean",
        "_name_": "update_available",
        "title": "update_available",
        "_required_": false
       },
       "system_image": {
        "type": "boolean",
        "_name_": "system_image",
        "title": "system_image",
        "_required_": false
       },
       "parsed_repo_tags": {
        "_name_": "parsed_repo_tags",
        "title": "parsed_repo_tags",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "image": {
            "_name_": "image",
            "title": "image",
            "_required_": false,
            "type": "string"
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string"
           },
           "registry": {
            "_name_": "registry",
            "title": "registry",
            "_required_": false,
            "type": "string"
           },
           "complete_tag": {
            "_name_": "complete_tag",
            "title": "complete_tag",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "parsed_repo_tag",
          "title": "parsed_repo_tag",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "image",
           "tag",
           "registry",
           "complete_tag"
          ]
         }
        ]
       },
       "complete_tags": {
        "_name_": "complete_tags",
        "title": "complete_tags",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "complete_tag",
          "title": "complete_tag",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "container_image_entry",
      "title": "container_image_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "repo_tags",
       "repo_digests",
       "size",
       "dangling",
       "update_available",
       "system_image",
       "parsed_repo_tags",
       "complete_tags"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "return_schema_of_container_image_dockerhub_rate_limit": {
    "type": "object",
    "properties": {
     "total_pull_limit": {
      "type": "integer",
      "_name_": "total_pull_limit",
      "title": "total_pull_limit",
      "description": "Total pull limit for Docker Hub registry",
      "nullable": true
     },
     "total_time_limit_in_secs": {
      "type": "integer",
      "_name_": "total_time_limit_in_secs",
      "title": "total_time_limit_in_secs",
      "description": "Total time limit in seconds for Docker Hub registry before the limit renews",
      "nullable": true
     },
     "remaining_pull_limit": {
      "type": "integer",
      "_name_": "remaining_pull_limit",
      "title": "remaining_pull_limit",
      "description": "Remaining pull limit for Docker Hub registry",
      "nullable": true
     },
     "remaining_time_limit_in_secs": {
      "type": "integer",
      "_name_": "remaining_time_limit_in_secs",
      "title": "remaining_time_limit_in_secs",
      "description": "Remaining time limit in seconds for Docker Hub registry for the current pull limit to be renewed",
      "nullable": true
     },
     "error": {
      "_name_": "error",
      "title": "error",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "dockerhub_rate_limit",
    "title": "dockerhub_rate_limit",
    "default": {},
    "_attrs_order_": [
     "total_pull_limit",
     "total_time_limit_in_secs",
     "remaining_pull_limit",
     "remaining_time_limit_in_secs",
     "error"
    ]
   },
   "container_image_get_chart_releases_consuming_image": {
    "_name_": "image_tags",
    "title": "image_tags",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "image_tag",
     "title": "image_tag",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_container_image_get_chart_releases_consuming_image": {
    "_name_": "get_chart_releases_consuming_image",
    "title": "get_chart_releases_consuming_image",
    "default": [],
    "type": "array",
    "items": {}
   },
   "container_image_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "container_image_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "container_image_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/container_image_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/container_image_get_instance_1"
     }
    }
   },
   "return_schema_of_container_image_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "repo_tags": {
      "_name_": "repo_tags",
      "title": "repo_tags",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "repo_tag",
       "title": "repo_tag",
       "_required_": false,
       "type": "string"
      }
     },
     "repo_digests": {
      "_name_": "repo_digests",
      "title": "repo_digests",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "repo_digest",
       "title": "repo_digest",
       "_required_": false,
       "type": "string"
      }
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size"
     },
     "dangling": {
      "type": "boolean",
      "_name_": "dangling",
      "title": "dangling"
     },
     "update_available": {
      "type": "boolean",
      "_name_": "update_available",
      "title": "update_available"
     },
     "system_image": {
      "type": "boolean",
      "_name_": "system_image",
      "title": "system_image"
     },
     "parsed_repo_tags": {
      "_name_": "parsed_repo_tags",
      "title": "parsed_repo_tags",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "image": {
         "_name_": "image",
         "title": "image",
         "_required_": false,
         "type": "string"
        },
        "tag": {
         "_name_": "tag",
         "title": "tag",
         "_required_": false,
         "type": "string"
        },
        "registry": {
         "_name_": "registry",
         "title": "registry",
         "_required_": false,
         "type": "string"
        },
        "complete_tag": {
         "_name_": "complete_tag",
         "title": "complete_tag",
         "_required_": false,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "parsed_repo_tag",
       "title": "parsed_repo_tag",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "image",
        "tag",
        "registry",
        "complete_tag"
       ]
      }
     },
     "complete_tags": {
      "_name_": "complete_tags",
      "title": "complete_tags",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "complete_tag",
       "title": "complete_tag",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "container_image_entry",
    "title": "container_image_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "repo_tags",
     "repo_digests",
     "size",
     "dangling",
     "update_available",
     "system_image",
     "parsed_repo_tags",
     "complete_tags"
    ]
   },
   "container_image_pull": {
    "type": "object",
    "properties": {
     "authentication": {
      "type": "object",
      "properties": {
       "username": {
        "_name_": "username",
        "title": "username",
        "type": "string"
       },
       "password": {
        "_name_": "password",
        "title": "password",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "authentication",
      "title": "authentication",
      "default": null,
      "_attrs_order_": [
       "username",
       "password"
      ]
     },
     "from_image": {
      "_name_": "from_image",
      "title": "from_image",
      "type": "string",
      "description": "`from_image` is the name of the image to pull. Format for the name is \"registry/repo/image\" where\nregistry may be omitted and it will default to docker registry in this case."
     },
     "tag": {
      "_name_": "tag",
      "title": "tag",
      "default": null,
      "type": "string",
      "description": "`tag` specifies tag of the image and defaults to `null`. In case of `null` it will retrieve all the tags\nof the image.",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "image_pull",
    "title": "image_pull",
    "default": {},
    "_attrs_order_": [
     "authentication",
     "from_image",
     "tag"
    ]
   },
   "return_schema_of_cronjob_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "_required_": false
         },
         "stderr": {
          "type": "boolean",
          "_name_": "stderr",
          "title": "stderr",
          "default": false,
          "_required_": false
         },
         "stdout": {
          "type": "boolean",
          "_name_": "stdout",
          "title": "stdout",
          "default": true,
          "_required_": false
         },
         "schedule": {
          "type": "object",
          "properties": {
           "minute": {
            "_name_": "minute",
            "title": "minute",
            "default": "00",
            "_required_": false,
            "type": "string"
           },
           "hour": {
            "_name_": "hour",
            "title": "hour",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dom": {
            "_name_": "dom",
            "title": "dom",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "month": {
            "_name_": "month",
            "title": "month",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dow": {
            "_name_": "dow",
            "title": "dow",
            "default": "*",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "schedule",
          "title": "schedule",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "minute",
           "hour",
           "dom",
           "month",
           "dow"
          ]
         },
         "command": {
          "_name_": "command",
          "title": "command",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": "string"
         },
         "user": {
          "_name_": "user",
          "title": "user",
          "_required_": true,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "cron_job_entry",
        "title": "cron_job_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "enabled",
         "stderr",
         "stdout",
         "schedule",
         "command",
         "description",
         "user",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "_required_": false
       },
       "stderr": {
        "type": "boolean",
        "_name_": "stderr",
        "title": "stderr",
        "default": false,
        "_required_": false
       },
       "stdout": {
        "type": "boolean",
        "_name_": "stdout",
        "title": "stdout",
        "default": true,
        "_required_": false
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "command": {
        "_name_": "command",
        "title": "command",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": "string"
       },
       "user": {
        "_name_": "user",
        "title": "user",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cron_job_entry",
      "title": "cron_job_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "enabled",
       "stderr",
       "stdout",
       "schedule",
       "command",
       "description",
       "user",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "_required_": false
       },
       "stderr": {
        "type": "boolean",
        "_name_": "stderr",
        "title": "stderr",
        "default": false,
        "_required_": false
       },
       "stdout": {
        "type": "boolean",
        "_name_": "stdout",
        "title": "stdout",
        "default": true,
        "_required_": false
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "command": {
        "_name_": "command",
        "title": "command",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": "string"
       },
       "user": {
        "_name_": "user",
        "title": "user",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "cron_job_entry",
      "title": "cron_job_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "enabled",
       "stderr",
       "stdout",
       "schedule",
       "command",
       "description",
       "user",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "cronjob_create": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "stderr": {
      "type": "boolean",
      "_name_": "stderr",
      "title": "stderr",
      "default": false,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "stdout": {
      "type": "boolean",
      "_name_": "stdout",
      "title": "stdout",
      "default": true,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "cron_job_create",
    "title": "cron_job_create",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "stderr",
     "stdout",
     "schedule",
     "command",
     "description",
     "user"
    ]
   },
   "return_schema_of_cronjob_create": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "stderr": {
      "type": "boolean",
      "_name_": "stderr",
      "title": "stderr",
      "default": false,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "stdout": {
      "type": "boolean",
      "_name_": "stdout",
      "title": "stdout",
      "default": true,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "cronjob_create_returns",
    "title": "cronjob_create_returns",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "stderr",
     "stdout",
     "schedule",
     "command",
     "description",
     "user",
     "id"
    ]
   },
   "return_schema_of_cronjob_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "cronjob_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "stderr": {
      "type": "boolean",
      "_name_": "stderr",
      "title": "stderr",
      "default": false,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "stdout": {
      "type": "boolean",
      "_name_": "stdout",
      "title": "stdout",
      "default": true,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "cronjob_update",
    "title": "cronjob_update",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "stderr",
     "stdout",
     "schedule",
     "command",
     "description",
     "user"
    ]
   },
   "return_schema_of_cronjob_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "stderr": {
      "type": "boolean",
      "_name_": "stderr",
      "title": "stderr",
      "default": false,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "stdout": {
      "type": "boolean",
      "_name_": "stdout",
      "title": "stdout",
      "default": true,
      "description": "`stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress\nstandard error / standard output respectively."
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update cronjob of `id`.\nCreate a new cron job."
     }
    },
    "additionalProperties": false,
    "_name_": "cronjob_update_returns",
    "title": "cronjob_update_returns",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "stderr",
     "stdout",
     "schedule",
     "command",
     "description",
     "user",
     "id"
    ]
   },
   "cronjob_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "cronjob_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "cronjob_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/cronjob_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/cronjob_get_instance_1"
     }
    }
   },
   "return_schema_of_cronjob_get_instance": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "stderr": {
      "type": "boolean",
      "_name_": "stderr",
      "title": "stderr",
      "default": false
     },
     "stdout": {
      "type": "boolean",
      "_name_": "stdout",
      "title": "stdout",
      "default": true
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "cron_job_entry",
    "title": "cron_job_entry",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "stderr",
     "stdout",
     "schedule",
     "command",
     "description",
     "user",
     "id"
    ]
   },
   "cronjob_run_0": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "cronjob_run_1": {
    "type": "boolean",
    "_name_": "skip_disabled",
    "title": "skip_disabled",
    "default": false
   },
   "cronjob_run": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/cronjob_run_0"
     },
     "skip_disabled": {
      "$ref": "#/components/schemas/cronjob_run_1"
     }
    }
   },
   "device_get_info": {
    "_name_": "type",
    "title": "type",
    "type": "string",
    "enum": [
     "SERIAL",
     "DISK",
     "GPU"
    ]
   },
   "return_schema_of_device_get_info": {
    "anyOf": [
     {
      "_name_": "serial_info",
      "title": "serial_info",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "location": {
          "_name_": "location",
          "title": "location",
          "_required_": false,
          "type": "string"
         },
         "drivername": {
          "_name_": "drivername",
          "title": "drivername",
          "_required_": false,
          "type": "string"
         },
         "start": {
          "_name_": "start",
          "title": "start",
          "_required_": false,
          "type": "string"
         },
         "size": {
          "type": "integer",
          "_name_": "size",
          "title": "size",
          "_required_": false
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "serial_info",
        "title": "serial_info",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "location",
         "drivername",
         "start",
         "size",
         "description"
        ]
       }
      ]
     },
     {
      "_name_": "gpu_info",
      "title": "gpu_info",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "addr": {
          "type": "object",
          "properties": {
           "pci_slot": {
            "_name_": "pci_slot",
            "title": "pci_slot",
            "_required_": true,
            "type": "string"
           },
           "domain": {
            "_name_": "domain",
            "title": "domain",
            "_required_": true,
            "type": "string"
           },
           "bus": {
            "_name_": "bus",
            "title": "bus",
            "_required_": true,
            "type": "string"
           },
           "slot": {
            "_name_": "slot",
            "title": true,
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "addr",
          "title": "addr",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "pci_slot",
           "domain",
           "bus",
           "slot"
          ]
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "devices": {
          "_name_": "devices",
          "title": "devices",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "pci_id": {
              "_name_": "pci_id",
              "title": "pci_id",
              "_required_": true,
              "type": "string"
             },
             "pci_slot": {
              "_name_": "pci_slot",
              "title": "pci_slot",
              "_required_": true,
              "type": "string"
             },
             "vm_pci_slot": {
              "_name_": "vm_pci_slot",
              "title": "vm_pci_slot",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "gpu_device",
            "title": "gpu_device",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "pci_id",
             "pci_slot",
             "vm_pci_slot"
            ]
           }
          ]
         },
         "vendor": {
          "_name_": "vendor",
          "title": "vendor",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "available_to_host": {
          "type": "boolean",
          "_name_": "available_to_host",
          "title": "available_to_host",
          "_required_": true
         },
         "uses_system_critical_devices": {
          "type": "boolean",
          "_name_": "uses_system_critical_devices",
          "title": "uses_system_critical_devices",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "gpu_info",
        "title": "gpu_info",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "addr",
         "description",
         "devices",
         "vendor",
         "available_to_host",
         "uses_system_critical_devices"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "disk_info",
      "title": "disk_info",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "device_info",
    "description": null
   },
   "return_schema_of_device_gpu_pci_ids_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "gpu_pci_id_choices",
    "title": "gpu_pci_id_choices",
    "description": "Returns PCI id(s) of GPU(s) located in the system\n\nExample(s):\n```\n{\n    \"Red Hat, Inc. QXL paravirtual graphic card\": \"0000:00:02.0\"\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_directoryservices_get_state": {
    "type": "object",
    "properties": {
     "activedirectory": {
      "_name_": "activedirectory",
      "title": "directoryservice_state",
      "type": "string",
      "enum": [
       "DISABLED",
       "FAULTED",
       "LEAVING",
       "JOINING",
       "HEALTHY"
      ]
     },
     "ldap": {
      "_name_": "ldap",
      "title": "directoryservice_state",
      "type": "string",
      "enum": [
       "DISABLED",
       "FAULTED",
       "LEAVING",
       "JOINING",
       "HEALTHY"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "directory_services_states",
    "title": "directory_services_states",
    "default": {},
    "_attrs_order_": [
     "activedirectory",
     "ldap"
    ]
   },
   "return_schema_of_disk_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "identifier": {
          "_name_": "identifier",
          "title": "identifier",
          "_required_": true,
          "type": "string"
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "subsystem": {
          "_name_": "subsystem",
          "title": "subsystem",
          "_required_": true,
          "type": "string"
         },
         "number": {
          "type": "integer",
          "_name_": "number",
          "title": "number",
          "_required_": true
         },
         "serial": {
          "_name_": "serial",
          "title": "serial",
          "_required_": true,
          "type": "string"
         },
         "lunid": {
          "_name_": "lunid",
          "title": "lunid",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "size": {
          "type": "integer",
          "_name_": "size",
          "title": "size",
          "_required_": true
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "transfermode": {
          "_name_": "transfermode",
          "title": "transfermode",
          "_required_": true,
          "type": "string"
         },
         "hddstandby": {
          "_name_": "hddstandby",
          "title": "hddstandby",
          "_required_": true,
          "type": "string",
          "enum": [
           "ALWAYS ON",
           "5",
           "10",
           "20",
           "30",
           "60",
           "120",
           "180",
           "240",
           "300",
           "330"
          ]
         },
         "togglesmart": {
          "type": "boolean",
          "_name_": "togglesmart",
          "title": "togglesmart",
          "_required_": true
         },
         "advpowermgmt": {
          "_name_": "advpowermgmt",
          "title": "advpowermgmt",
          "_required_": true,
          "type": "string",
          "enum": [
           "DISABLED",
           "1",
           "64",
           "127",
           "128",
           "192",
           "254"
          ]
         },
         "smartoptions": {
          "_name_": "smartoptions",
          "title": "smartoptions",
          "_required_": true,
          "type": "string"
         },
         "expiretime": {
          "_name_": "expiretime",
          "title": "expiretime",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "critical": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "critical",
          "title": "critical",
          "_required_": true
         },
         "difference": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "difference",
          "title": "difference",
          "_required_": true
         },
         "informational": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "informational",
          "title": "informational",
          "_required_": true
         },
         "model": {
          "_name_": "model",
          "title": "model",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "rotationrate": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "rotationrate",
          "title": "rotationrate",
          "_required_": true
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "zfs_guid": {
          "_name_": "zfs_guid",
          "title": "zfs_guid",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "bus": {
          "_name_": "bus",
          "title": "bus",
          "_required_": true,
          "type": "string"
         },
         "devname": {
          "_name_": "devname",
          "title": "devname",
          "_required_": true,
          "type": "string"
         },
         "enclosure": {
          "type": "object",
          "properties": {
           "number": {
            "type": "integer",
            "_name_": "number",
            "title": "number",
            "_required_": false
           },
           "slot": {
            "type": "integer",
            "_name_": "slot",
            "title": "slot",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "enclosure",
          "title": "enclosure",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "number",
           "slot"
          ]
         },
         "pool": {
          "_name_": "pool",
          "title": "pool",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "passwd": {
          "_name_": "passwd",
          "title": "passwd",
          "_required_": false,
          "type": "string"
         },
         "kmip_uid": {
          "_name_": "kmip_uid",
          "title": "kmip_uid",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "supports_smart": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "supports_smart",
          "title": "supports_smart",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "disk_entry",
        "title": "disk_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "identifier",
         "name",
         "subsystem",
         "number",
         "serial",
         "lunid",
         "size",
         "description",
         "transfermode",
         "hddstandby",
         "togglesmart",
         "advpowermgmt",
         "smartoptions",
         "expiretime",
         "critical",
         "difference",
         "informational",
         "model",
         "rotationrate",
         "type",
         "zfs_guid",
         "bus",
         "devname",
         "enclosure",
         "pool",
         "passwd",
         "kmip_uid",
         "supports_smart"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "identifier": {
        "_name_": "identifier",
        "title": "identifier",
        "_required_": true,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "subsystem": {
        "_name_": "subsystem",
        "title": "subsystem",
        "_required_": true,
        "type": "string"
       },
       "number": {
        "type": "integer",
        "_name_": "number",
        "title": "number",
        "_required_": true
       },
       "serial": {
        "_name_": "serial",
        "title": "serial",
        "_required_": true,
        "type": "string"
       },
       "lunid": {
        "_name_": "lunid",
        "title": "lunid",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "size": {
        "type": "integer",
        "_name_": "size",
        "title": "size",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "transfermode": {
        "_name_": "transfermode",
        "title": "transfermode",
        "_required_": true,
        "type": "string"
       },
       "hddstandby": {
        "_name_": "hddstandby",
        "title": "hddstandby",
        "_required_": true,
        "type": "string",
        "enum": [
         "ALWAYS ON",
         "5",
         "10",
         "20",
         "30",
         "60",
         "120",
         "180",
         "240",
         "300",
         "330"
        ]
       },
       "togglesmart": {
        "type": "boolean",
        "_name_": "togglesmart",
        "title": "togglesmart",
        "_required_": true
       },
       "advpowermgmt": {
        "_name_": "advpowermgmt",
        "title": "advpowermgmt",
        "_required_": true,
        "type": "string",
        "enum": [
         "DISABLED",
         "1",
         "64",
         "127",
         "128",
         "192",
         "254"
        ]
       },
       "smartoptions": {
        "_name_": "smartoptions",
        "title": "smartoptions",
        "_required_": true,
        "type": "string"
       },
       "expiretime": {
        "_name_": "expiretime",
        "title": "expiretime",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "critical": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "critical",
        "title": "critical",
        "_required_": true
       },
       "difference": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "difference",
        "title": "difference",
        "_required_": true
       },
       "informational": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "informational",
        "title": "informational",
        "_required_": true
       },
       "model": {
        "_name_": "model",
        "title": "model",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "rotationrate": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "rotationrate",
        "title": "rotationrate",
        "_required_": true
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "zfs_guid": {
        "_name_": "zfs_guid",
        "title": "zfs_guid",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "bus": {
        "_name_": "bus",
        "title": "bus",
        "_required_": true,
        "type": "string"
       },
       "devname": {
        "_name_": "devname",
        "title": "devname",
        "_required_": true,
        "type": "string"
       },
       "enclosure": {
        "type": "object",
        "properties": {
         "number": {
          "type": "integer",
          "_name_": "number",
          "title": "number",
          "_required_": false
         },
         "slot": {
          "type": "integer",
          "_name_": "slot",
          "title": "slot",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "enclosure",
        "title": "enclosure",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "number",
         "slot"
        ]
       },
       "pool": {
        "_name_": "pool",
        "title": "pool",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "passwd": {
        "_name_": "passwd",
        "title": "passwd",
        "_required_": false,
        "type": "string"
       },
       "kmip_uid": {
        "_name_": "kmip_uid",
        "title": "kmip_uid",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "supports_smart": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "supports_smart",
        "title": "supports_smart",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "disk_entry",
      "title": "disk_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "identifier",
       "name",
       "subsystem",
       "number",
       "serial",
       "lunid",
       "size",
       "description",
       "transfermode",
       "hddstandby",
       "togglesmart",
       "advpowermgmt",
       "smartoptions",
       "expiretime",
       "critical",
       "difference",
       "informational",
       "model",
       "rotationrate",
       "type",
       "zfs_guid",
       "bus",
       "devname",
       "enclosure",
       "pool",
       "passwd",
       "kmip_uid",
       "supports_smart"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "identifier": {
        "_name_": "identifier",
        "title": "identifier",
        "_required_": true,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "subsystem": {
        "_name_": "subsystem",
        "title": "subsystem",
        "_required_": true,
        "type": "string"
       },
       "number": {
        "type": "integer",
        "_name_": "number",
        "title": "number",
        "_required_": true
       },
       "serial": {
        "_name_": "serial",
        "title": "serial",
        "_required_": true,
        "type": "string"
       },
       "lunid": {
        "_name_": "lunid",
        "title": "lunid",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "size": {
        "type": "integer",
        "_name_": "size",
        "title": "size",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "transfermode": {
        "_name_": "transfermode",
        "title": "transfermode",
        "_required_": true,
        "type": "string"
       },
       "hddstandby": {
        "_name_": "hddstandby",
        "title": "hddstandby",
        "_required_": true,
        "type": "string",
        "enum": [
         "ALWAYS ON",
         "5",
         "10",
         "20",
         "30",
         "60",
         "120",
         "180",
         "240",
         "300",
         "330"
        ]
       },
       "togglesmart": {
        "type": "boolean",
        "_name_": "togglesmart",
        "title": "togglesmart",
        "_required_": true
       },
       "advpowermgmt": {
        "_name_": "advpowermgmt",
        "title": "advpowermgmt",
        "_required_": true,
        "type": "string",
        "enum": [
         "DISABLED",
         "1",
         "64",
         "127",
         "128",
         "192",
         "254"
        ]
       },
       "smartoptions": {
        "_name_": "smartoptions",
        "title": "smartoptions",
        "_required_": true,
        "type": "string"
       },
       "expiretime": {
        "_name_": "expiretime",
        "title": "expiretime",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "critical": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "critical",
        "title": "critical",
        "_required_": true
       },
       "difference": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "difference",
        "title": "difference",
        "_required_": true
       },
       "informational": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "informational",
        "title": "informational",
        "_required_": true
       },
       "model": {
        "_name_": "model",
        "title": "model",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "rotationrate": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "rotationrate",
        "title": "rotationrate",
        "_required_": true
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "zfs_guid": {
        "_name_": "zfs_guid",
        "title": "zfs_guid",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "bus": {
        "_name_": "bus",
        "title": "bus",
        "_required_": true,
        "type": "string"
       },
       "devname": {
        "_name_": "devname",
        "title": "devname",
        "_required_": true,
        "type": "string"
       },
       "enclosure": {
        "type": "object",
        "properties": {
         "number": {
          "type": "integer",
          "_name_": "number",
          "title": "number",
          "_required_": false
         },
         "slot": {
          "type": "integer",
          "_name_": "slot",
          "title": "slot",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "enclosure",
        "title": "enclosure",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "number",
         "slot"
        ]
       },
       "pool": {
        "_name_": "pool",
        "title": "pool",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "passwd": {
        "_name_": "passwd",
        "title": "passwd",
        "_required_": false,
        "type": "string"
       },
       "kmip_uid": {
        "_name_": "kmip_uid",
        "title": "kmip_uid",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "supports_smart": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "supports_smart",
        "title": "supports_smart",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "disk_entry",
      "title": "disk_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "identifier",
       "name",
       "subsystem",
       "number",
       "serial",
       "lunid",
       "size",
       "description",
       "transfermode",
       "hddstandby",
       "togglesmart",
       "advpowermgmt",
       "smartoptions",
       "expiretime",
       "critical",
       "difference",
       "informational",
       "model",
       "rotationrate",
       "type",
       "zfs_guid",
       "bus",
       "devname",
       "enclosure",
       "pool",
       "passwd",
       "kmip_uid",
       "supports_smart"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "disk_update": {
    "type": "object",
    "properties": {
     "number": {
      "type": "integer",
      "_name_": "number",
      "title": "number"
     },
     "lunid": {
      "_name_": "lunid",
      "title": "lunid",
      "type": "string",
      "nullable": true
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "hddstandby": {
      "_name_": "hddstandby",
      "title": "hddstandby",
      "type": "string",
      "enum": [
       "ALWAYS ON",
       "5",
       "10",
       "20",
       "30",
       "60",
       "120",
       "180",
       "240",
       "300",
       "330"
      ]
     },
     "togglesmart": {
      "type": "boolean",
      "_name_": "togglesmart",
      "title": "togglesmart"
     },
     "advpowermgmt": {
      "_name_": "advpowermgmt",
      "title": "advpowermgmt",
      "type": "string",
      "enum": [
       "DISABLED",
       "1",
       "64",
       "127",
       "128",
       "192",
       "254"
      ]
     },
     "smartoptions": {
      "_name_": "smartoptions",
      "title": "smartoptions",
      "type": "string",
      "description": "`smartoptions`."
     },
     "critical": {
      "type": "integer",
      "_name_": "critical",
      "title": "critical",
      "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_CRIT is issued when disk temperature crosses `critical`.",
      "nullable": true
     },
     "difference": {
      "type": "integer",
      "_name_": "difference",
      "title": "difference",
      "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.",
      "nullable": true
     },
     "informational": {
      "type": "integer",
      "_name_": "informational",
      "title": "informational",
      "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_INFO is issued when disk temperature crosses `informational`.",
      "nullable": true
     },
     "bus": {
      "_name_": "bus",
      "title": "bus",
      "type": "string"
     },
     "enclosure": {
      "type": "object",
      "properties": {
       "number": {
        "type": "integer",
        "_name_": "number",
        "title": "number"
       },
       "slot": {
        "type": "integer",
        "_name_": "slot",
        "title": "slot"
       }
      },
      "additionalProperties": false,
      "_name_": "enclosure",
      "title": "enclosure",
      "default": {},
      "_attrs_order_": [
       "number",
       "slot"
      ]
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "nullable": true
     },
     "passwd": {
      "_name_": "passwd",
      "title": "passwd",
      "type": "string"
     },
     "supports_smart": {
      "type": "boolean",
      "_name_": "supports_smart",
      "title": "supports_smart",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "disk_update",
    "title": "disk_update",
    "default": {},
    "_attrs_order_": [
     "number",
     "lunid",
     "description",
     "hddstandby",
     "togglesmart",
     "advpowermgmt",
     "smartoptions",
     "critical",
     "difference",
     "informational",
     "bus",
     "enclosure",
     "pool",
     "passwd",
     "supports_smart"
    ]
   },
   "return_schema_of_disk_update": {
    "type": "object",
    "properties": {
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "subsystem": {
      "_name_": "subsystem",
      "title": "subsystem",
      "type": "string"
     },
     "number": {
      "type": "integer",
      "_name_": "number",
      "title": "number"
     },
     "serial": {
      "_name_": "serial",
      "title": "serial",
      "type": "string"
     },
     "lunid": {
      "_name_": "lunid",
      "title": "lunid",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "transfermode": {
      "_name_": "transfermode",
      "title": "transfermode",
      "type": "string"
     },
     "hddstandby": {
      "_name_": "hddstandby",
      "title": "hddstandby",
      "type": "string",
      "enum": [
       "ALWAYS ON",
       "5",
       "10",
       "20",
       "30",
       "60",
       "120",
       "180",
       "240",
       "300",
       "330"
      ]
     },
     "togglesmart": {
      "type": "boolean",
      "_name_": "togglesmart",
      "title": "togglesmart"
     },
     "advpowermgmt": {
      "_name_": "advpowermgmt",
      "title": "advpowermgmt",
      "type": "string",
      "enum": [
       "DISABLED",
       "1",
       "64",
       "127",
       "128",
       "192",
       "254"
      ]
     },
     "smartoptions": {
      "_name_": "smartoptions",
      "title": "smartoptions",
      "type": "string",
      "description": "`smartoptions`."
     },
     "expiretime": {
      "_name_": "expiretime",
      "title": "expiretime",
      "type": "string",
      "nullable": true
     },
     "critical": {
      "type": "integer",
      "_name_": "critical",
      "title": "critical",
      "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_CRIT is issued when disk temperature crosses `critical`.",
      "nullable": true
     },
     "difference": {
      "type": "integer",
      "_name_": "difference",
      "title": "difference",
      "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.",
      "nullable": true
     },
     "informational": {
      "type": "integer",
      "_name_": "informational",
      "title": "informational",
      "description": "`critical`, `informational` and `difference` are integer values on which alerts for SMART are configured\nif the disk temperature crosses the assigned threshold for each respective attribute.\nIf they are set to null, then SMARTD config values are used as defaults.\nEmail of log level LOG_INFO is issued when disk temperature crosses `informational`.",
      "nullable": true
     },
     "model": {
      "_name_": "model",
      "title": "model",
      "type": "string",
      "nullable": true
     },
     "rotationrate": {
      "type": "integer",
      "_name_": "rotationrate",
      "title": "rotationrate",
      "nullable": true
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "nullable": true
     },
     "zfs_guid": {
      "_name_": "zfs_guid",
      "title": "zfs_guid",
      "type": "string",
      "nullable": true
     },
     "bus": {
      "_name_": "bus",
      "title": "bus",
      "type": "string"
     },
     "devname": {
      "_name_": "devname",
      "title": "devname",
      "type": "string"
     },
     "enclosure": {
      "type": "object",
      "properties": {
       "number": {
        "type": "integer",
        "_name_": "number",
        "title": "number"
       },
       "slot": {
        "type": "integer",
        "_name_": "slot",
        "title": "slot"
       }
      },
      "additionalProperties": false,
      "_name_": "enclosure",
      "title": "enclosure",
      "default": {},
      "_attrs_order_": [
       "number",
       "slot"
      ]
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "nullable": true
     },
     "passwd": {
      "_name_": "passwd",
      "title": "passwd",
      "type": "string"
     },
     "kmip_uid": {
      "_name_": "kmip_uid",
      "title": "kmip_uid",
      "type": "string",
      "nullable": true
     },
     "supports_smart": {
      "type": "boolean",
      "_name_": "supports_smart",
      "title": "supports_smart",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "disk_update_returns",
    "title": "disk_update_returns",
    "default": {},
    "_attrs_order_": [
     "identifier",
     "name",
     "subsystem",
     "number",
     "serial",
     "lunid",
     "size",
     "description",
     "transfermode",
     "hddstandby",
     "togglesmart",
     "advpowermgmt",
     "smartoptions",
     "expiretime",
     "critical",
     "difference",
     "informational",
     "model",
     "rotationrate",
     "type",
     "zfs_guid",
     "bus",
     "devname",
     "enclosure",
     "pool",
     "passwd",
     "kmip_uid",
     "supports_smart"
    ]
   },
   "disk_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "disk_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "disk_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/disk_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/disk_get_instance_1"
     }
    }
   },
   "return_schema_of_disk_get_instance": {
    "type": "object",
    "properties": {
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "subsystem": {
      "_name_": "subsystem",
      "title": "subsystem",
      "type": "string"
     },
     "number": {
      "type": "integer",
      "_name_": "number",
      "title": "number"
     },
     "serial": {
      "_name_": "serial",
      "title": "serial",
      "type": "string"
     },
     "lunid": {
      "_name_": "lunid",
      "title": "lunid",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "transfermode": {
      "_name_": "transfermode",
      "title": "transfermode",
      "type": "string"
     },
     "hddstandby": {
      "_name_": "hddstandby",
      "title": "hddstandby",
      "type": "string",
      "enum": [
       "ALWAYS ON",
       "5",
       "10",
       "20",
       "30",
       "60",
       "120",
       "180",
       "240",
       "300",
       "330"
      ]
     },
     "togglesmart": {
      "type": "boolean",
      "_name_": "togglesmart",
      "title": "togglesmart"
     },
     "advpowermgmt": {
      "_name_": "advpowermgmt",
      "title": "advpowermgmt",
      "type": "string",
      "enum": [
       "DISABLED",
       "1",
       "64",
       "127",
       "128",
       "192",
       "254"
      ]
     },
     "smartoptions": {
      "_name_": "smartoptions",
      "title": "smartoptions",
      "type": "string"
     },
     "expiretime": {
      "_name_": "expiretime",
      "title": "expiretime",
      "type": "string",
      "nullable": true
     },
     "critical": {
      "type": "integer",
      "_name_": "critical",
      "title": "critical",
      "nullable": true
     },
     "difference": {
      "type": "integer",
      "_name_": "difference",
      "title": "difference",
      "nullable": true
     },
     "informational": {
      "type": "integer",
      "_name_": "informational",
      "title": "informational",
      "nullable": true
     },
     "model": {
      "_name_": "model",
      "title": "model",
      "type": "string",
      "nullable": true
     },
     "rotationrate": {
      "type": "integer",
      "_name_": "rotationrate",
      "title": "rotationrate",
      "nullable": true
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "nullable": true
     },
     "zfs_guid": {
      "_name_": "zfs_guid",
      "title": "zfs_guid",
      "type": "string",
      "nullable": true
     },
     "bus": {
      "_name_": "bus",
      "title": "bus",
      "type": "string"
     },
     "devname": {
      "_name_": "devname",
      "title": "devname",
      "type": "string"
     },
     "enclosure": {
      "type": "object",
      "properties": {
       "number": {
        "type": "integer",
        "_name_": "number",
        "title": "number"
       },
       "slot": {
        "type": "integer",
        "_name_": "slot",
        "title": "slot"
       }
      },
      "additionalProperties": false,
      "_name_": "enclosure",
      "title": "enclosure",
      "default": {},
      "_attrs_order_": [
       "number",
       "slot"
      ]
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "nullable": true
     },
     "passwd": {
      "_name_": "passwd",
      "title": "passwd",
      "type": "string"
     },
     "kmip_uid": {
      "_name_": "kmip_uid",
      "title": "kmip_uid",
      "type": "string",
      "nullable": true
     },
     "supports_smart": {
      "type": "boolean",
      "_name_": "supports_smart",
      "title": "supports_smart",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "disk_entry",
    "title": "disk_entry",
    "default": {},
    "_attrs_order_": [
     "identifier",
     "name",
     "subsystem",
     "number",
     "serial",
     "lunid",
     "size",
     "description",
     "transfermode",
     "hddstandby",
     "togglesmart",
     "advpowermgmt",
     "smartoptions",
     "expiretime",
     "critical",
     "difference",
     "informational",
     "model",
     "rotationrate",
     "type",
     "zfs_guid",
     "bus",
     "devname",
     "enclosure",
     "pool",
     "passwd",
     "kmip_uid",
     "supports_smart"
    ]
   },
   "disk_get_unused": {
    "type": "boolean",
    "_name_": "join_partitions",
    "title": "join_partitions",
    "default": false
   },
   "disk_resize_0": {
    "_name_": "disks",
    "title": "disks",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "size": {
       "type": "integer",
       "_name_": "size",
       "title": "size",
       "default": null,
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "size"
     ]
    }
   },
   "disk_resize_1": {
    "type": "boolean",
    "_name_": "sync",
    "title": "sync",
    "default": true,
    "description": "`sync`: boolean, when true (default) will synchronize the new size of the disk(s)\n    with the database cache."
   },
   "disk_resize_2": {
    "type": "boolean",
    "_name_": "raise_error",
    "title": "raise_error",
    "default": false,
    "description": "`raise_error`: boolean\n    when true, will raise a `CallError` if any failures occur\n    when false, will will log the errors if any failures occur"
   },
   "disk_resize": {
    "type": "object",
    "properties": {
     "disks": {
      "$ref": "#/components/schemas/disk_resize_0"
     },
     "sync": {
      "$ref": "#/components/schemas/disk_resize_1"
     },
     "raise_error": {
      "$ref": "#/components/schemas/disk_resize_2"
     }
    }
   },
   "disk_retaste": {
    "_name_": "disks",
    "title": "disks",
    "default": null,
    "type": "array",
    "items": {
     "_name_": "name",
     "title": "name",
     "_required_": true,
     "type": "string"
    }
   },
   "disk_smart_attributes": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "return_schema_of_disk_smart_attributes": {
    "_name_": "smart_attributes",
    "title": "smart_attributes",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "id": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": true
      },
      "value": {
       "type": "integer",
       "_name_": "value",
       "title": "value",
       "_required_": true
      },
      "worst": {
       "type": "integer",
       "_name_": "worst",
       "title": "worst",
       "_required_": true
      },
      "thresh": {
       "type": "integer",
       "_name_": "thresh",
       "title": "thresh",
       "_required_": true
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "when_failed": {
       "_name_": "when_failed",
       "title": "when_failed",
       "_required_": true,
       "type": "string"
      },
      "flags": {
       "type": "object",
       "properties": {
        "value": {
         "type": "integer",
         "_name_": "value",
         "title": "value",
         "_required_": true
        },
        "string": {
         "_name_": "string",
         "title": "string",
         "_required_": true,
         "type": "string"
        },
        "prefailure": {
         "type": "boolean",
         "_name_": "prefailure",
         "title": "prefailure",
         "_required_": true
        },
        "updated_online": {
         "type": "boolean",
         "_name_": "updated_online",
         "title": "updated_online",
         "_required_": true
        },
        "performance": {
         "type": "boolean",
         "_name_": "performance",
         "title": "performance",
         "_required_": true
        },
        "error_rate": {
         "type": "boolean",
         "_name_": "error_rate",
         "title": "error_rate",
         "_required_": true
        },
        "event_count": {
         "type": "boolean",
         "_name_": "event_count",
         "title": "event_count",
         "_required_": true
        },
        "auto_keep": {
         "type": "boolean",
         "_name_": "auto_keep",
         "title": "auto_keep",
         "_required_": true
        }
       },
       "additionalProperties": false,
       "_name_": "flags",
       "title": "flags",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "value",
        "string",
        "prefailure",
        "updated_online",
        "performance",
        "error_rate",
        "event_count",
        "auto_keep"
       ]
      },
      "raw": {
       "type": "object",
       "properties": {
        "value": {
         "type": "integer",
         "_name_": "value",
         "title": "value",
         "_required_": true
        },
        "string": {
         "_name_": "string",
         "title": "string",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "raw",
       "title": "raw",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "value",
        "string"
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "smart_attribute",
     "title": "smart_attribute",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "id",
      "value",
      "worst",
      "thresh",
      "name",
      "when_failed",
      "flags",
      "raw"
     ]
    }
   },
   "disk_temperature_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "disk_temperature_1": {
    "type": "object",
    "properties": {
     "cache": {
      "type": "integer",
      "_name_": "cache",
      "title": "cache",
      "default": null,
      "nullable": true
     },
     "powermode": {
      "_name_": "powermode",
      "title": "powermode",
      "default": "NEVER",
      "type": "string",
      "enum": [
       "NEVER",
       "SLEEP",
       "STANDBY",
       "IDLE"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "cache",
     "powermode"
    ]
   },
   "disk_temperature": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/disk_temperature_0"
     },
     "options": {
      "$ref": "#/components/schemas/disk_temperature_1"
     }
    }
   },
   "return_schema_of_disk_temperature": {
    "type": "integer",
    "_name_": "temperature",
    "title": "temperature",
    "nullable": true
   },
   "disk_temperature_agg_0": {
    "_name_": "names",
    "title": "names",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "name",
     "title": "name",
     "_required_": false,
     "type": "string"
    }
   },
   "disk_temperature_agg_1": {
    "type": "integer",
    "_name_": "days",
    "title": "days",
    "default": 7
   },
   "disk_temperature_agg": {
    "type": "object",
    "properties": {
     "names": {
      "$ref": "#/components/schemas/disk_temperature_agg_0"
     },
     "days": {
      "$ref": "#/components/schemas/disk_temperature_agg_1"
     }
    }
   },
   "return_schema_of_disk_temperature_agg": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "temperatures",
    "title": "temperatures",
    "default": {},
    "_attrs_order_": []
   },
   "disk_temperature_alerts": {
    "_name_": "names",
    "title": "names",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "name",
     "title": "name",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_disk_temperature_alerts": {
    "type": "object",
    "properties": {
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "type": "string"
     },
     "source": {
      "_name_": "source",
      "title": "source",
      "type": "string"
     },
     "klass": {
      "_name_": "klass",
      "title": "klass",
      "type": "string"
     },
     "args": {
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "boolean"
       },
       {
        "type": "object"
       },
       {
        "type": "array"
       }
      ],
      "nullable": false,
      "_name_": "args",
      "title": "args"
     },
     "node": {
      "_name_": "node",
      "title": "node",
      "type": "string"
     },
     "key": {
      "_name_": "key",
      "title": "key",
      "type": "string"
     },
     "datetime": {
      "_name_": "datetime",
      "title": "datetime",
      "type": "string"
     },
     "last_occurrence": {
      "_name_": "last_occurrence",
      "title": "last_occurrence",
      "type": "string"
     },
     "dismissed": {
      "type": "boolean",
      "_name_": "dismissed",
      "title": "dismissed"
     },
     "mail": {
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "boolean"
       },
       {
        "type": "object"
       },
       {
        "type": "array"
       }
      ],
      "nullable": true,
      "_name_": "mail",
      "title": "mail"
     },
     "text": {
      "_name_": "text",
      "title": "text",
      "type": "string"
     },
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "level": {
      "_name_": "level",
      "title": "level",
      "type": "string"
     },
     "formatted": {
      "_name_": "formatted",
      "title": "formatted",
      "type": "string",
      "nullable": true
     },
     "one_shot": {
      "type": "boolean",
      "_name_": "one_shot",
      "title": "one_shot"
     }
    },
    "additionalProperties": false,
    "_name_": "alert",
    "title": "alert",
    "default": {},
    "_attrs_order_": [
     "uuid",
     "source",
     "klass",
     "args",
     "node",
     "key",
     "datetime",
     "last_occurrence",
     "dismissed",
     "mail",
     "text",
     "id",
     "level",
     "formatted",
     "one_shot"
    ]
   },
   "disk_temperatures_0": {
    "_name_": "names",
    "title": "names",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "name",
     "title": "name",
     "_required_": false,
     "type": "string"
    }
   },
   "disk_temperatures_1": {
    "type": "object",
    "properties": {
     "cache": {
      "type": "integer",
      "_name_": "cache",
      "title": "cache",
      "default": 290,
      "nullable": true
     },
     "only_cached": {
      "type": "boolean",
      "_name_": "only_cached",
      "title": "only_cached",
      "default": false
     },
     "powermode": {
      "_name_": "powermode",
      "title": "powermode",
      "default": "NEVER",
      "type": "string",
      "enum": [
       "NEVER",
       "SLEEP",
       "STANDBY",
       "IDLE"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "cache",
     "only_cached",
     "powermode"
    ]
   },
   "disk_temperatures": {
    "type": "object",
    "properties": {
     "names": {
      "$ref": "#/components/schemas/disk_temperatures_0"
     },
     "options": {
      "$ref": "#/components/schemas/disk_temperatures_1"
     }
    }
   },
   "return_schema_of_disk_temperatures": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "disks_temperatures",
    "title": "disks_temperatures",
    "default": {},
    "_attrs_order_": []
   },
   "disk_wipe_0": {
    "_name_": "dev",
    "title": "dev",
    "type": "string"
   },
   "disk_wipe_1": {
    "_name_": "mode",
    "title": "mode",
    "type": "string",
    "enum": [
     "QUICK",
     "FULL",
     "FULL_RANDOM"
    ]
   },
   "disk_wipe_2": {
    "type": "boolean",
    "_name_": "synccache",
    "title": "synccache",
    "default": true
   },
   "disk_wipe_3": {
    "type": "object",
    "properties": {
     "configure_swap": {
      "type": "boolean",
      "_name_": "configure_swap",
      "title": "configure_swap",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "swap_removal_options",
    "title": "swap_removal_options",
    "default": {},
    "_attrs_order_": [
     "configure_swap"
    ]
   },
   "disk_wipe": {
    "type": "object",
    "properties": {
     "dev": {
      "$ref": "#/components/schemas/disk_wipe_0"
     },
     "mode": {
      "$ref": "#/components/schemas/disk_wipe_1"
     },
     "synccache": {
      "$ref": "#/components/schemas/disk_wipe_2"
     },
     "swap_removal_options": {
      "$ref": "#/components/schemas/disk_wipe_3"
     }
    }
   },
   "return_schema_of_dns_query": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "nameserver": {
        "_name_": "nameserver",
        "title": "nameserver",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "nameserver",
      "title": "nameserver",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "nameserver"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "nameserver": {
          "_name_": "nameserver",
          "title": "nameserver",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "nameserver",
        "title": "nameserver",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "nameserver"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_enclosure_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "enclosure_entry",
        "title": "enclosure_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "enclosure_entry",
      "title": "enclosure_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "enclosure_entry",
      "title": "enclosure_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "enclosure_update": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "enclosure_update",
    "title": "enclosure_update",
    "default": {},
    "_attrs_order_": [
     "label"
    ]
   },
   "return_schema_of_enclosure_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "enclosure_update_returns",
    "title": "enclosure_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "enclosure_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "enclosure_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "enclosure_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/enclosure_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/enclosure_get_instance_1"
     }
    }
   },
   "return_schema_of_enclosure_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "enclosure_entry",
    "title": "enclosure_entry",
    "default": {},
    "_attrs_order_": []
   },
   "enclosure_set_slot_status_0": {
    "_name_": "enclosure_id",
    "title": "enclosure_id",
    "type": "string"
   },
   "enclosure_set_slot_status_1": {
    "type": "integer",
    "_name_": "slot",
    "title": "slot"
   },
   "enclosure_set_slot_status_2": {
    "_name_": "status",
    "title": "status",
    "type": "string",
    "enum": [
     "CLEAR",
     "FAULT",
     "IDENTIFY"
    ]
   },
   "enclosure_set_slot_status": {
    "type": "object",
    "properties": {
     "enclosure_id": {
      "$ref": "#/components/schemas/enclosure_set_slot_status_0"
     },
     "slot": {
      "$ref": "#/components/schemas/enclosure_set_slot_status_1"
     },
     "status": {
      "$ref": "#/components/schemas/enclosure_set_slot_status_2"
     }
    }
   },
   "return_schema_of_failover_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "disabled": {
      "type": "boolean",
      "_name_": "disabled",
      "title": "disabled"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout"
     },
     "master": {
      "type": "boolean",
      "_name_": "master",
      "title": "master"
     }
    },
    "additionalProperties": false,
    "_name_": "failover_entry",
    "title": "failover_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "disabled",
     "timeout",
     "master"
    ]
   },
   "failover_update": {
    "type": "object",
    "properties": {
     "disabled": {
      "type": "boolean",
      "_name_": "disabled",
      "title": "disabled",
      "description": "`disabled` When true indicates that HA will be disabled."
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "description": "`timeout` is the time to WAIT until a failover occurs when a network\n    event occurs on an interface that is marked critical for failover AND\n    HA is enabled and working appropriately."
     },
     "master": {
      "type": "boolean",
      "_name_": "master",
      "title": "master",
      "description": "`master`  Marks the particular node in the chassis as the master node.\n            The standby node will have the opposite value.",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "failover_update",
    "title": "failover_update",
    "default": {},
    "_attrs_order_": [
     "disabled",
     "timeout",
     "master"
    ]
   },
   "return_schema_of_failover_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "disabled": {
      "type": "boolean",
      "_name_": "disabled",
      "title": "disabled",
      "description": "`disabled` When true indicates that HA will be disabled."
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "description": "`timeout` is the time to WAIT until a failover occurs when a network\n    event occurs on an interface that is marked critical for failover AND\n    HA is enabled and working appropriately."
     },
     "master": {
      "type": "boolean",
      "_name_": "master",
      "title": "master",
      "description": "`master`  Marks the particular node in the chassis as the master node.\n            The standby node will have the opposite value."
     }
    },
    "additionalProperties": false,
    "_name_": "failover_update_returns",
    "title": "failover_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "disabled",
     "timeout",
     "master"
    ]
   },
   "failover_call_remote_0": {
    "_name_": "method",
    "title": "method",
    "type": "string",
    "description": "`method` name of the method to be called\n`args` list of arguments to be passed to `method`"
   },
   "failover_call_remote_1": {
    "_name_": "args",
    "title": "args",
    "default": [],
    "type": "array",
    "items": {},
    "description": "`method` name of the method to be called\n`args` list of arguments to be passed to `method`"
   },
   "failover_call_remote_2": {
    "type": "object",
    "properties": {
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 60
     },
     "job": {
      "type": "boolean",
      "_name_": "job",
      "title": "job",
      "default": false
     },
     "job_return": {
      "type": "boolean",
      "_name_": "job_return",
      "title": "job_return",
      "default": null,
      "nullable": true
     },
     "callback": {
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "boolean"
       },
       {
        "type": "object"
       },
       {
        "type": "array"
       }
      ],
      "nullable": true,
      "_name_": "callback",
      "title": "callback",
      "default": null
     },
     "connect_timeout": {
      "type": "float",
      "_name_": "connect_timeout",
      "title": "connect_timeout",
      "default": 2.0
     },
     "raise_connect_error": {
      "type": "boolean",
      "_name_": "raise_connect_error",
      "title": "raise_connect_error",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "timeout",
     "job",
     "job_return",
     "callback",
     "connect_timeout",
     "raise_connect_error"
    ]
   },
   "failover_call_remote": {
    "type": "object",
    "properties": {
     "method": {
      "$ref": "#/components/schemas/failover_call_remote_0"
     },
     "args": {
      "$ref": "#/components/schemas/failover_call_remote_1"
     },
     "options": {
      "$ref": "#/components/schemas/failover_call_remote_2"
     }
    }
   },
   "return_schema_of_failover_call_remote": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": true,
    "_name_": "call_remote",
    "title": "call_remote"
   },
   "failover_control_0": {
    "_name_": "action",
    "title": "action",
    "type": "string",
    "enum": [
     "ENABLE",
     "DISABLE"
    ]
   },
   "failover_control_1": {
    "type": "object",
    "properties": {
     "active": {
      "type": "boolean",
      "_name_": "active",
      "title": "active"
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "active"
    ]
   },
   "failover_control": {
    "type": "object",
    "properties": {
     "action": {
      "$ref": "#/components/schemas/failover_control_0"
     },
     "options": {
      "$ref": "#/components/schemas/failover_control_1"
     }
    }
   },
   "return_schema_of_failover_force_master": {
    "type": "boolean",
    "_name_": "force_master",
    "title": "force_master"
   },
   "return_schema_of_failover_get_ips": {
    "_name_": "ips",
    "title": "ips",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "ip",
     "title": "ip",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_failover_hardware": {
    "_name_": "hardware",
    "title": "hardware",
    "type": "string"
   },
   "return_schema_of_failover_in_progress": {
    "type": "boolean",
    "_name_": "in_progress",
    "title": "in_progress"
   },
   "return_schema_of_failover_licensed": {
    "type": "boolean",
    "_name_": "licensed",
    "title": "licensed"
   },
   "return_schema_of_failover_node": {
    "_name_": "node",
    "title": "node",
    "type": "string"
   },
   "return_schema_of_failover_status": {
    "_name_": "status",
    "title": "status",
    "type": "string"
   },
   "failover_sync_to_peer": {
    "type": "object",
    "properties": {
     "reboot": {
      "type": "boolean",
      "_name_": "reboot",
      "title": "reboot",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "reboot"
    ]
   },
   "failover_unlock": {
    "type": "object",
    "properties": {
     "pools": {
      "_name_": "pools",
      "title": "pools",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "pool_keys",
       "title": "pool_keys",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "name",
        "passphrase"
       ]
      }
     },
     "datasets": {
      "_name_": "datasets",
      "title": "datasets",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "dataset_keys",
       "title": "dataset_keys",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "name",
        "passphrase"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "pools",
     "datasets"
    ]
   },
   "return_schema_of_failover_unlock": {
    "type": "boolean",
    "_name_": "unlock",
    "title": "unlock"
   },
   "failover_upgrade": {
    "type": "object",
    "properties": {
     "train": {
      "_name_": "train",
      "title": "train",
      "type": "string"
     },
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume",
      "default": false
     },
     "resume_manual": {
      "type": "boolean",
      "_name_": "resume_manual",
      "title": "resume_manual",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "failover_upgrade",
    "title": "failover_upgrade",
    "default": {},
    "_attrs_order_": [
     "train",
     "resume",
     "resume_manual"
    ]
   },
   "return_schema_of_failover_upgrade": {
    "type": "boolean",
    "_name_": "upgrade",
    "title": "upgrade"
   },
   "return_schema_of_failover_upgrade_finish": {
    "type": "boolean",
    "_name_": "upgrade_finish",
    "title": "upgrade_finish"
   },
   "return_schema_of_failover_upgrade_pending": {
    "type": "boolean",
    "_name_": "upgrade_pending",
    "title": "upgrade_pending"
   },
   "return_schema_of_failover_reboot_info": {
    "type": "object",
    "properties": {
     "this_node": {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "type": "string"
       },
       "reboot_required": {
        "type": "boolean",
        "_name_": "reboot_required",
        "title": "reboot_required"
       }
      },
      "additionalProperties": false,
      "_name_": "this_node",
      "title": "this_node",
      "default": {},
      "_attrs_order_": [
       "id",
       "reboot_required"
      ]
     },
     "other_node": {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "type": "string",
        "nullable": true
       },
       "reboot_required": {
        "type": "boolean",
        "_name_": "reboot_required",
        "title": "reboot_required",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "other_node",
      "title": "other_node",
      "default": {},
      "_attrs_order_": [
       "id",
       "reboot_required"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "info",
    "title": "info",
    "default": {},
    "_attrs_order_": [
     "this_node",
     "other_node"
    ]
   },
   "return_schema_of_failover_reboot_required": {
    "type": "boolean",
    "_name_": "required",
    "title": "required"
   },
   "filesystem_acl_is_trivial": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "return_schema_of_filesystem_acl_is_trivial": {
    "type": "boolean",
    "_name_": "paths_acl_is_trivial",
    "title": "paths_acl_is_trivial"
   },
   "filesystem_can_access_as_user_0": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "filesystem_can_access_as_user_1": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "filesystem_can_access_as_user_2": {
    "type": "object",
    "properties": {
     "read": {
      "type": "boolean",
      "_name_": "read",
      "title": "read",
      "default": null,
      "nullable": true
     },
     "write": {
      "type": "boolean",
      "_name_": "write",
      "title": "write",
      "default": null,
      "nullable": true
     },
     "execute": {
      "type": "boolean",
      "_name_": "execute",
      "title": "execute",
      "default": null,
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "permissions",
    "title": "permissions",
    "default": {},
    "_attrs_order_": [
     "read",
     "write",
     "execute"
    ]
   },
   "filesystem_can_access_as_user": {
    "type": "object",
    "properties": {
     "username": {
      "$ref": "#/components/schemas/filesystem_can_access_as_user_0"
     },
     "path": {
      "$ref": "#/components/schemas/filesystem_can_access_as_user_1"
     },
     "permissions": {
      "$ref": "#/components/schemas/filesystem_can_access_as_user_2"
     }
    }
   },
   "return_schema_of_filesystem_can_access_as_user": {
    "type": "boolean",
    "_name_": "can_access_as_user",
    "title": "can_access_as_user"
   },
   "filesystem_chown": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "Change owner or group of file at `path`."
     },
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "default": null,
      "description": "`uid` and `gid` specify new owner of the file. If either\nkey is absent or None, then existing value on the file is not\nchanged.",
      "nullable": true
     },
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "default": null,
      "description": "`uid` and `gid` specify new owner of the file. If either\nkey is absent or None, then existing value on the file is not\nchanged.",
      "nullable": true
     },
     "options": {
      "type": "object",
      "properties": {
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "default": false
       },
       "traverse": {
        "type": "boolean",
        "_name_": "traverse",
        "title": "traverse",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "recursive",
       "traverse"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "filesystem_ownership",
    "title": "filesystem_ownership",
    "default": {},
    "_attrs_order_": [
     "path",
     "uid",
     "gid",
     "options"
    ]
   },
   "filesystem_default_acl_choices": {
    "_name_": "path",
    "title": "path",
    "default": "",
    "type": "string"
   },
   "return_schema_of_filesystem_default_acl_choices": {
    "_name_": "acl_choices",
    "title": "acl_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "choice",
     "title": "choice",
     "_required_": false,
     "type": "string"
    }
   },
   "filesystem_get": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "filesystem_get_default_acl_0": {
    "_name_": "acl_type",
    "title": "acl_type",
    "default": "POSIX_OPEN",
    "type": "string"
   },
   "filesystem_get_default_acl_1": {
    "_name_": "share_type",
    "title": "share_type",
    "default": "NONE",
    "type": "string",
    "enum": [
     "NONE",
     "SMB",
     "NFS"
    ]
   },
   "filesystem_get_default_acl": {
    "type": "object",
    "properties": {
     "acl_type": {
      "$ref": "#/components/schemas/filesystem_get_default_acl_0"
     },
     "share_type": {
      "$ref": "#/components/schemas/filesystem_get_default_acl_1"
     }
    }
   },
   "return_schema_of_filesystem_get_default_acl": {
    "anyOf": [
     {
      "_name_": "nfs4_acl",
      "title": "nfs4_acl",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "tag": {
          "_name_": "tag",
          "title": "tag",
          "_required_": false,
          "type": "string",
          "enum": [
           "owner@",
           "group@",
           "everyone@",
           "USER",
           "GROUP"
          ]
         },
         "id": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": false,
          "type": "string",
          "enum": [
           "ALLOW",
           "DENY"
          ]
         },
         "perms": {
          "type": "object",
          "properties": {
           "READ_DATA": {
            "type": "boolean",
            "_name_": "READ_DATA",
            "title": "READ_DATA",
            "_required_": false
           },
           "WRITE_DATA": {
            "type": "boolean",
            "_name_": "WRITE_DATA",
            "title": "WRITE_DATA",
            "_required_": false
           },
           "APPEND_DATA": {
            "type": "boolean",
            "_name_": "APPEND_DATA",
            "title": "APPEND_DATA",
            "_required_": false
           },
           "READ_NAMED_ATTRS": {
            "type": "boolean",
            "_name_": "READ_NAMED_ATTRS",
            "title": "READ_NAMED_ATTRS",
            "_required_": false
           },
           "WRITE_NAMED_ATTRS": {
            "type": "boolean",
            "_name_": "WRITE_NAMED_ATTRS",
            "title": "WRITE_NAMED_ATTRS",
            "_required_": false
           },
           "EXECUTE": {
            "type": "boolean",
            "_name_": "EXECUTE",
            "title": "EXECUTE",
            "_required_": false
           },
           "DELETE_CHILD": {
            "type": "boolean",
            "_name_": "DELETE_CHILD",
            "title": "DELETE_CHILD",
            "_required_": false
           },
           "READ_ATTRIBUTES": {
            "type": "boolean",
            "_name_": "READ_ATTRIBUTES",
            "title": "READ_ATTRIBUTES",
            "_required_": false
           },
           "WRITE_ATTRIBUTES": {
            "type": "boolean",
            "_name_": "WRITE_ATTRIBUTES",
            "title": "WRITE_ATTRIBUTES",
            "_required_": false
           },
           "DELETE": {
            "type": "boolean",
            "_name_": "DELETE",
            "title": "DELETE",
            "_required_": false
           },
           "READ_ACL": {
            "type": "boolean",
            "_name_": "READ_ACL",
            "title": "READ_ACL",
            "_required_": false
           },
           "WRITE_ACL": {
            "type": "boolean",
            "_name_": "WRITE_ACL",
            "title": "WRITE_ACL",
            "_required_": false
           },
           "WRITE_OWNER": {
            "type": "boolean",
            "_name_": "WRITE_OWNER",
            "title": "WRITE_OWNER",
            "_required_": false
           },
           "SYNCHRONIZE": {
            "type": "boolean",
            "_name_": "SYNCHRONIZE",
            "title": "SYNCHRONIZE",
            "_required_": false
           },
           "BASIC": {
            "_name_": "BASIC",
            "title": "BASIC",
            "_required_": false,
            "type": "string",
            "enum": [
             "FULL_CONTROL",
             "MODIFY",
             "READ",
             "TRAVERSE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "perms",
          "title": "perms",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "READ_DATA",
           "WRITE_DATA",
           "APPEND_DATA",
           "READ_NAMED_ATTRS",
           "WRITE_NAMED_ATTRS",
           "EXECUTE",
           "DELETE_CHILD",
           "READ_ATTRIBUTES",
           "WRITE_ATTRIBUTES",
           "DELETE",
           "READ_ACL",
           "WRITE_ACL",
           "WRITE_OWNER",
           "SYNCHRONIZE",
           "BASIC"
          ]
         },
         "flags": {
          "type": "object",
          "properties": {
           "FILE_INHERIT": {
            "type": "boolean",
            "_name_": "FILE_INHERIT",
            "title": "FILE_INHERIT",
            "_required_": false
           },
           "DIRECTORY_INHERIT": {
            "type": "boolean",
            "_name_": "DIRECTORY_INHERIT",
            "title": "DIRECTORY_INHERIT",
            "_required_": false
           },
           "NO_PROPAGATE_INHERIT": {
            "type": "boolean",
            "_name_": "NO_PROPAGATE_INHERIT",
            "title": "NO_PROPAGATE_INHERIT",
            "_required_": false
           },
           "INHERIT_ONLY": {
            "type": "boolean",
            "_name_": "INHERIT_ONLY",
            "title": "INHERIT_ONLY",
            "_required_": false
           },
           "INHERITED": {
            "type": "boolean",
            "_name_": "INHERITED",
            "title": "INHERITED",
            "_required_": false
           },
           "BASIC": {
            "_name_": "BASIC",
            "title": "BASIC",
            "_required_": false,
            "type": "string",
            "enum": [
             "INHERIT",
             "NOINHERIT"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "flags",
          "title": "flags",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "FILE_INHERIT",
           "DIRECTORY_INHERIT",
           "NO_PROPAGATE_INHERIT",
           "INHERIT_ONLY",
           "INHERITED",
           "BASIC"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "nfs4_ace",
        "title": "nfs4_ace",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "tag",
         "id",
         "type",
         "perms",
         "flags"
        ]
       }
      ]
     },
     {
      "_name_": "posix1e_acl",
      "title": "posix1e_acl",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "default": {
          "type": "boolean",
          "_name_": "default",
          "title": "default",
          "default": false,
          "_required_": false
         },
         "tag": {
          "_name_": "tag",
          "title": "tag",
          "_required_": false,
          "type": "string",
          "enum": [
           "USER_OBJ",
           "GROUP_OBJ",
           "USER",
           "GROUP",
           "OTHER",
           "MASK"
          ]
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "default": -1,
          "_required_": false
         },
         "perms": {
          "type": "object",
          "properties": {
           "READ": {
            "type": "boolean",
            "_name_": "READ",
            "title": "READ",
            "default": false,
            "_required_": false
           },
           "WRITE": {
            "type": "boolean",
            "_name_": "WRITE",
            "title": "WRITE",
            "default": false,
            "_required_": false
           },
           "EXECUTE": {
            "type": "boolean",
            "_name_": "EXECUTE",
            "title": "EXECUTE",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "perms",
          "title": "perms",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "READ",
           "WRITE",
           "EXECUTE"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "posix1e_ace",
        "title": "posix1e_ace",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "default",
         "tag",
         "id",
         "perms"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "acl",
    "description": null
   },
   "filesystem_get_dosmode": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "return_schema_of_filesystem_get_dosmode": {
    "type": "object",
    "properties": {
     "readonly": {
      "type": "boolean",
      "_name_": "readonly",
      "title": "readonly"
     },
     "hidden": {
      "type": "boolean",
      "_name_": "hidden",
      "title": "hidden"
     },
     "system": {
      "type": "boolean",
      "_name_": "system",
      "title": "system"
     },
     "archive": {
      "type": "boolean",
      "_name_": "archive",
      "title": "archive"
     },
     "reparse": {
      "type": "boolean",
      "_name_": "reparse",
      "title": "reparse"
     },
     "offline": {
      "type": "boolean",
      "_name_": "offline",
      "title": "offline"
     },
     "sparse": {
      "type": "boolean",
      "_name_": "sparse",
      "title": "sparse"
     }
    },
    "additionalProperties": false,
    "_name_": "dosmode",
    "title": "dosmode",
    "default": {},
    "_attrs_order_": [
     "readonly",
     "hidden",
     "system",
     "archive",
     "reparse",
     "offline",
     "sparse"
    ]
   },
   "filesystem_getacl_0": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "filesystem_getacl_1": {
    "type": "boolean",
    "_name_": "simplified",
    "title": "simplified",
    "default": true,
    "description": "`simplified` - effect of this depends on ACL type on underlying filesystem. In the case of\nNFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.\nNFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.\n`simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions\nhave been simplified, then the `perms` object will contain only a single `BASIC` key with a string\ndescribing the underlying permissions set."
   },
   "filesystem_getacl_2": {
    "type": "boolean",
    "_name_": "resolve_ids",
    "title": "resolve_ids",
    "default": false,
    "description": "`resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to\na user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ\n(POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of\nMASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.\nIn case of failure to resolve the id to a name, `who` will be set to null. This option should\nonly be used if resolving ids to names is required."
   },
   "filesystem_getacl": {
    "type": "object",
    "properties": {
     "path": {
      "$ref": "#/components/schemas/filesystem_getacl_0"
     },
     "simplified": {
      "$ref": "#/components/schemas/filesystem_getacl_1"
     },
     "resolve_ids": {
      "$ref": "#/components/schemas/filesystem_getacl_2"
     }
    }
   },
   "return_schema_of_filesystem_getacl": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "trivial": {
      "type": "boolean",
      "_name_": "trivial",
      "title": "trivial"
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E",
       "DISABLED"
      ],
      "description": "Return ACL of a given path. This may return a POSIX1e ACL or a NFSv4 ACL. The acl type is indicated\nby the `acltype` key.",
      "nullable": true
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "truenas_acl",
    "title": "truenas_acl",
    "default": {},
    "_attrs_order_": [
     "path",
     "trivial",
     "acltype",
     "acl"
    ]
   },
   "filesystem_is_immutable": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "return_schema_of_filesystem_is_immutable": {
    "type": "boolean",
    "_name_": "is_immutable",
    "title": "is_immutable"
   },
   "filesystem_listdir_0": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "filesystem_listdir_1": {
    "_name_": "query-filters",
    "title": "query-filters",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "query-filter",
     "title": "query-filter",
     "default": [],
     "_required_": false,
     "type": "array",
     "items": []
    }
   },
   "filesystem_listdir_2": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "query-options",
    "title": "query-options",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "filesystem_listdir": {
    "type": "object",
    "properties": {
     "path": {
      "$ref": "#/components/schemas/filesystem_listdir_0"
     },
     "query-filters": {
      "$ref": "#/components/schemas/filesystem_listdir_1"
     },
     "query-options": {
      "$ref": "#/components/schemas/filesystem_listdir_2"
     }
    }
   },
   "return_schema_of_filesystem_listdir": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "realpath": {
        "_name_": "realpath",
        "title": "realpath",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "DIRECTORY",
         "FILE",
         "SYMLINK",
         "OTHER"
        ]
       },
       "size": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "size",
        "title": "size",
        "_required_": true
       },
       "allocation_size": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "allocation_size",
        "title": "allocation_size",
        "_required_": true
       },
       "mode": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "mode",
        "title": "mode",
        "_required_": true
       },
       "acl": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "acl",
        "title": "acl",
        "_required_": true
       },
       "uid": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "uid",
        "title": "uid",
        "_required_": true
       },
       "gid": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "gid",
        "title": "gid",
        "_required_": true
       },
       "is_mountpoint": {
        "type": "boolean",
        "_name_": "is_mountpoint",
        "title": "is_mountpoint",
        "_required_": true
       },
       "is_ctldir": {
        "type": "boolean",
        "_name_": "is_ctldir",
        "title": "is_ctldir",
        "_required_": true
       },
       "attributes": {
        "_name_": "attributes",
        "title": "attributes",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "_name_": "statx_attribute",
          "title": "statx_attribute",
          "_required_": false,
          "type": "string",
          "enum": [
           "COMPRESSED",
           "IMMUTABLE",
           "APPEND",
           "NODUMP",
           "ENCRYPTED",
           "AUTOMOUNT",
           "MOUNT_ROOT",
           "VERIFY",
           "DAX"
          ]
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "path_entry",
      "title": "path_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "path",
       "realpath",
       "type",
       "size",
       "allocation_size",
       "mode",
       "acl",
       "uid",
       "gid",
       "is_mountpoint",
       "is_ctldir",
       "attributes"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "realpath": {
          "_name_": "realpath",
          "title": "realpath",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string",
          "enum": [
           "DIRECTORY",
           "FILE",
           "SYMLINK",
           "OTHER"
          ]
         },
         "size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "size",
          "title": "size",
          "_required_": true
         },
         "allocation_size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "allocation_size",
          "title": "allocation_size",
          "_required_": true
         },
         "mode": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "mode",
          "title": "mode",
          "_required_": true
         },
         "acl": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "acl",
          "title": "acl",
          "_required_": true
         },
         "uid": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "uid",
          "title": "uid",
          "_required_": true
         },
         "gid": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "gid",
          "title": "gid",
          "_required_": true
         },
         "is_mountpoint": {
          "type": "boolean",
          "_name_": "is_mountpoint",
          "title": "is_mountpoint",
          "_required_": true
         },
         "is_ctldir": {
          "type": "boolean",
          "_name_": "is_ctldir",
          "title": "is_ctldir",
          "_required_": true
         },
         "attributes": {
          "_name_": "attributes",
          "title": "attributes",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "statx_attribute",
            "title": "statx_attribute",
            "_required_": false,
            "type": "string",
            "enum": [
             "COMPRESSED",
             "IMMUTABLE",
             "APPEND",
             "NODUMP",
             "ENCRYPTED",
             "AUTOMOUNT",
             "MOUNT_ROOT",
             "VERIFY",
             "DAX"
            ]
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "path_entry",
        "title": "path_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "path",
         "realpath",
         "type",
         "size",
         "allocation_size",
         "mode",
         "acl",
         "uid",
         "gid",
         "is_mountpoint",
         "is_ctldir",
         "attributes"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "filesystem_mkdir": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "options": {
      "type": "object",
      "properties": {
       "mode": {
        "_name_": "mode",
        "title": "mode",
        "default": "755",
        "type": "string"
       },
       "raise_chmod_error": {
        "type": "boolean",
        "_name_": "raise_chmod_error",
        "title": "raise_chmod_error",
        "default": true
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "mode",
       "raise_chmod_error"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "filesystem_mkdir",
    "title": "filesystem_mkdir",
    "default": {},
    "_attrs_order_": [
     "path",
     "options"
    ]
   },
   "return_schema_of_filesystem_mkdir": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "realpath": {
      "_name_": "realpath",
      "title": "realpath",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "DIRECTORY",
       "FILE",
       "SYMLINK",
       "OTHER"
      ]
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size",
      "nullable": true
     },
     "allocation_size": {
      "type": "integer",
      "_name_": "allocation_size",
      "title": "allocation_size",
      "nullable": true
     },
     "mode": {
      "type": "integer",
      "_name_": "mode",
      "title": "mode",
      "description": "`mode` - specify the permissions to set on the new directory (0o755 is default).\n`raise_chmod_error` - choose whether to raise an exception if the attempt to set\nmode fails. In this case, the newly created directory will be removed to prevent\nuse with unintended permissions.",
      "nullable": true
     },
     "acl": {
      "type": "boolean",
      "_name_": "acl",
      "title": "acl",
      "nullable": true
     },
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "nullable": true
     },
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "nullable": true
     },
     "is_mountpoint": {
      "type": "boolean",
      "_name_": "is_mountpoint",
      "title": "is_mountpoint"
     },
     "is_ctldir": {
      "type": "boolean",
      "_name_": "is_ctldir",
      "title": "is_ctldir"
     },
     "attributes": {
      "_name_": "attributes",
      "title": "attributes",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "statx_attribute",
       "title": "statx_attribute",
       "_required_": false,
       "type": "string",
       "enum": [
        "COMPRESSED",
        "IMMUTABLE",
        "APPEND",
        "NODUMP",
        "ENCRYPTED",
        "AUTOMOUNT",
        "MOUNT_ROOT",
        "VERIFY",
        "DAX"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "path_entry",
    "title": "path_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "path",
     "realpath",
     "type",
     "size",
     "allocation_size",
     "mode",
     "acl",
     "uid",
     "gid",
     "is_mountpoint",
     "is_ctldir",
     "attributes"
    ]
   },
   "filesystem_put_0": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "filesystem_put_1": {
    "type": "object",
    "properties": {
     "append": {
      "type": "boolean",
      "_name_": "append",
      "title": "append",
      "default": false
     },
     "mode": {
      "type": "integer",
      "_name_": "mode",
      "title": "mode"
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "append",
     "mode"
    ]
   },
   "filesystem_put": {
    "type": "object",
    "properties": {
     "path": {
      "$ref": "#/components/schemas/filesystem_put_0"
     },
     "options": {
      "$ref": "#/components/schemas/filesystem_put_1"
     }
    }
   },
   "return_schema_of_filesystem_put": {
    "type": "boolean",
    "_name_": "successful_put",
    "title": "successful_put"
   },
   "filesystem_set_dosmode": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "dosmode": {
      "type": "object",
      "properties": {
       "readonly": {
        "type": "boolean",
        "_name_": "readonly",
        "title": "readonly"
       },
       "hidden": {
        "type": "boolean",
        "_name_": "hidden",
        "title": "hidden"
       },
       "system": {
        "type": "boolean",
        "_name_": "system",
        "title": "system"
       },
       "archive": {
        "type": "boolean",
        "_name_": "archive",
        "title": "archive"
       },
       "reparse": {
        "type": "boolean",
        "_name_": "reparse",
        "title": "reparse"
       },
       "offline": {
        "type": "boolean",
        "_name_": "offline",
        "title": "offline"
       },
       "sparse": {
        "type": "boolean",
        "_name_": "sparse",
        "title": "sparse"
       }
      },
      "additionalProperties": false,
      "_name_": "dosmode",
      "title": "dosmode",
      "default": {},
      "_attrs_order_": [
       "readonly",
       "hidden",
       "system",
       "archive",
       "reparse",
       "offline",
       "sparse"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "set_dosmode",
    "title": "set_dosmode",
    "default": {},
    "_attrs_order_": [
     "path",
     "dosmode"
    ]
   },
   "filesystem_set_immutable_0": {
    "type": "boolean",
    "_name_": "set_flag",
    "title": "set_flag"
   },
   "filesystem_set_immutable_1": {
    "_name_": "path",
    "title": "path",
    "type": "string",
    "description": "Set/Unset immutable flag at `path`."
   },
   "filesystem_set_immutable": {
    "type": "object",
    "properties": {
     "set_flag": {
      "$ref": "#/components/schemas/filesystem_set_immutable_0"
     },
     "path": {
      "$ref": "#/components/schemas/filesystem_set_immutable_1"
     }
    }
   },
   "filesystem_setacl": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` full path to directory or file."
     },
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "default": null,
      "description": "`uid` the desired UID of the file user. If set to None (the default), then user is not changed.",
      "nullable": true
     },
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "default": null,
      "description": "`gid` the desired GID of the file group. If set to None (the default), then group is not changed.",
      "nullable": true
     },
     "dacl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "dacl",
      "description": "`dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires\nNFSv4 entries. POSIX1e requires POSIX1e entries."
     },
     "nfs41_flags": {
      "type": "object",
      "properties": {
       "autoinherit": {
        "type": "boolean",
        "_name_": "autoinherit",
        "title": "autoinherit",
        "default": false
       },
       "protected": {
        "type": "boolean",
        "_name_": "protected",
        "title": "protected",
        "default": false
       },
       "defaulted": {
        "type": "boolean",
        "_name_": "defaulted",
        "title": "defaulted",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "nfs41_flags",
      "title": "nfs41_flags",
      "default": {},
      "_attrs_order_": [
       "autoinherit",
       "protected",
       "defaulted"
      ]
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E",
       "DISABLED"
      ],
      "description": "`dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires\nNFSv4 entries. POSIX1e requires POSIX1e entries.",
      "nullable": true
     },
     "options": {
      "type": "object",
      "properties": {
       "stripacl": {
        "type": "boolean",
        "_name_": "stripacl",
        "title": "stripacl",
        "default": false
       },
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "default": false
       },
       "traverse": {
        "type": "boolean",
        "_name_": "traverse",
        "title": "traverse",
        "default": false
       },
       "canonicalize": {
        "type": "boolean",
        "_name_": "canonicalize",
        "title": "canonicalize",
        "default": true
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "stripacl",
       "recursive",
       "traverse",
       "canonicalize"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "filesystem_acl",
    "title": "filesystem_acl",
    "default": {},
    "_attrs_order_": [
     "path",
     "uid",
     "gid",
     "dacl",
     "nfs41_flags",
     "acltype",
     "options"
    ]
   },
   "filesystem_setperm": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "Set unix permissions on given `path`.\n`stripacl` setperm will fail if an extended ACL is present on `path`,\nunless `stripacl` is set to True."
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "type": "string",
      "description": "If `mode` is specified then the mode will be applied to the\npath and files and subdirectories depending on which `options` are\nselected. Mode should be formatted as string representation of octal\npermissions bits.",
      "nullable": true
     },
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "default": null,
      "description": "`uid` the desired UID of the file user. If set to None (the default), then user is not changed.",
      "nullable": true
     },
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "default": null,
      "description": "`gid` the desired GID of the file group. If set to None (the default), then group is not changed.",
      "nullable": true
     },
     "options": {
      "type": "object",
      "properties": {
       "stripacl": {
        "type": "boolean",
        "_name_": "stripacl",
        "title": "stripacl",
        "default": false
       },
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "default": false
       },
       "traverse": {
        "type": "boolean",
        "_name_": "traverse",
        "title": "traverse",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "stripacl",
       "recursive",
       "traverse"
      ],
      "description": "If `mode` is specified then the mode will be applied to the\npath and files and subdirectories depending on which `options` are\nselected. Mode should be formatted as string representation of octal\npermissions bits."
     }
    },
    "additionalProperties": false,
    "_name_": "filesystem_permission",
    "title": "filesystem_permission",
    "default": {},
    "_attrs_order_": [
     "path",
     "mode",
     "uid",
     "gid",
     "options"
    ]
   },
   "filesystem_stat": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "return_schema_of_filesystem_stat": {
    "type": "object",
    "properties": {
     "realpath": {
      "_name_": "realpath",
      "title": "realpath",
      "type": "string"
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size"
     },
     "allocation_size": {
      "type": "integer",
      "_name_": "allocation_size",
      "title": "allocation_size"
     },
     "mode": {
      "type": "integer",
      "_name_": "mode",
      "title": "mode"
     },
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid"
     },
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid"
     },
     "atime": {
      "type": "float",
      "_name_": "atime",
      "title": "atime"
     },
     "mtime": {
      "type": "float",
      "_name_": "mtime",
      "title": "mtime"
     },
     "ctime": {
      "type": "float",
      "_name_": "ctime",
      "title": "ctime"
     },
     "btime": {
      "type": "float",
      "_name_": "btime",
      "title": "btime"
     },
     "dev": {
      "type": "integer",
      "_name_": "dev",
      "title": "dev"
     },
     "mount_id": {
      "type": "integer",
      "_name_": "mount_id",
      "title": "mount_id"
     },
     "inode": {
      "type": "integer",
      "_name_": "inode",
      "title": "inode"
     },
     "nlink": {
      "type": "integer",
      "_name_": "nlink",
      "title": "nlink"
     },
     "is_mountpoint": {
      "type": "boolean",
      "_name_": "is_mountpoint",
      "title": "is_mountpoint"
     },
     "is_ctldir": {
      "type": "boolean",
      "_name_": "is_ctldir",
      "title": "is_ctldir"
     },
     "attributes": {
      "_name_": "attributes",
      "title": "attributes",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "statx_attribute",
       "title": "statx_attribute",
       "_required_": false,
       "type": "string",
       "enum": [
        "COMPRESSED",
        "IMMUTABLE",
        "APPEND",
        "NODUMP",
        "ENCRYPTED",
        "AUTOMOUNT",
        "MOUNT_ROOT",
        "VERIFY",
        "DAX"
       ]
      }
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "nullable": true
     },
     "group": {
      "_name_": "group",
      "title": "group",
      "type": "string",
      "nullable": true
     },
     "acl": {
      "type": "boolean",
      "_name_": "acl",
      "title": "acl"
     }
    },
    "additionalProperties": false,
    "_name_": "path_stats",
    "title": "path_stats",
    "default": {},
    "_attrs_order_": [
     "realpath",
     "size",
     "allocation_size",
     "mode",
     "uid",
     "gid",
     "atime",
     "mtime",
     "ctime",
     "btime",
     "dev",
     "mount_id",
     "inode",
     "nlink",
     "is_mountpoint",
     "is_ctldir",
     "attributes",
     "user",
     "group",
     "acl"
    ]
   },
   "filesystem_statfs": {
    "_name_": "path",
    "title": "path",
    "type": "string"
   },
   "return_schema_of_filesystem_statfs": {
    "type": "object",
    "properties": {
     "flags": {
      "_name_": "flags",
      "title": "flags",
      "default": [],
      "type": "array",
      "items": {}
     },
     "fsid": {
      "_name_": "fsid",
      "title": "fsid",
      "default": [],
      "type": "array",
      "items": {}
     },
     "fstype": {
      "_name_": "fstype",
      "title": "fstype",
      "type": "string"
     },
     "source": {
      "_name_": "source",
      "title": "source",
      "type": "string"
     },
     "dest": {
      "_name_": "dest",
      "title": "dest",
      "type": "string"
     },
     "blocksize": {
      "type": "integer",
      "_name_": "blocksize",
      "title": "blocksize"
     },
     "total_blocks": {
      "type": "integer",
      "_name_": "total_blocks",
      "title": "total_blocks"
     },
     "free_blocks": {
      "type": "integer",
      "_name_": "free_blocks",
      "title": "free_blocks"
     },
     "avail_blocks": {
      "type": "integer",
      "_name_": "avail_blocks",
      "title": "avail_blocks"
     },
     "total_blocks_str": {
      "_name_": "total_blocks_str",
      "title": "total_blocks_str",
      "type": "string"
     },
     "free_blocks_str": {
      "_name_": "free_blocks_str",
      "title": "free_blocks_str",
      "type": "string"
     },
     "avail_blocks_str": {
      "_name_": "avail_blocks_str",
      "title": "avail_blocks_str",
      "type": "string"
     },
     "files": {
      "type": "integer",
      "_name_": "files",
      "title": "files"
     },
     "free_files": {
      "type": "integer",
      "_name_": "free_files",
      "title": "free_files"
     },
     "name_max": {
      "type": "integer",
      "_name_": "name_max",
      "title": "name_max"
     },
     "total_bytes": {
      "type": "integer",
      "_name_": "total_bytes",
      "title": "total_bytes"
     },
     "free_bytes": {
      "type": "integer",
      "_name_": "free_bytes",
      "title": "free_bytes"
     },
     "avail_bytes": {
      "type": "integer",
      "_name_": "avail_bytes",
      "title": "avail_bytes"
     },
     "total_bytes_str": {
      "_name_": "total_bytes_str",
      "title": "total_bytes_str",
      "type": "string"
     },
     "free_bytes_str": {
      "_name_": "free_bytes_str",
      "title": "free_bytes_str",
      "type": "string"
     },
     "avail_bytes_str": {
      "_name_": "avail_bytes_str",
      "title": "avail_bytes_str",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "path_statfs",
    "title": "path_statfs",
    "default": {},
    "_attrs_order_": [
     "flags",
     "fsid",
     "fstype",
     "source",
     "dest",
     "blocksize",
     "total_blocks",
     "free_blocks",
     "avail_blocks",
     "total_blocks_str",
     "free_blocks_str",
     "avail_blocks_str",
     "files",
     "free_files",
     "name_max",
     "total_bytes",
     "free_bytes",
     "avail_bytes",
     "total_bytes_str",
     "free_bytes_str",
     "avail_bytes_str"
    ]
   },
   "return_schema_of_filesystem_acltemplate_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "acltype": {
          "_name_": "acltype",
          "title": "acltype",
          "_required_": true,
          "type": "string",
          "enum": [
           "NFS4",
           "POSIX1E"
          ]
         },
         "comment": {
          "_name_": "comment",
          "title": "comment",
          "_required_": false,
          "type": "string"
         },
         "acl": {
          "anyOf": [
           {
            "_name_": "nfs4_acl",
            "title": "nfs4_acl",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "object",
              "properties": {
               "tag": {
                "_name_": "tag",
                "title": "tag",
                "_required_": false,
                "type": "string",
                "enum": [
                 "owner@",
                 "group@",
                 "everyone@",
                 "USER",
                 "GROUP"
                ]
               },
               "id": {
                "type": [
                 "integer",
                 "null"
                ],
                "_name_": "id",
                "title": "id",
                "_required_": false
               },
               "type": {
                "_name_": "type",
                "title": "type",
                "_required_": false,
                "type": "string",
                "enum": [
                 "ALLOW",
                 "DENY"
                ]
               },
               "perms": {
                "type": "object",
                "properties": {
                 "READ_DATA": {
                  "type": "boolean",
                  "_name_": "READ_DATA",
                  "title": "READ_DATA",
                  "_required_": false
                 },
                 "WRITE_DATA": {
                  "type": "boolean",
                  "_name_": "WRITE_DATA",
                  "title": "WRITE_DATA",
                  "_required_": false
                 },
                 "APPEND_DATA": {
                  "type": "boolean",
                  "_name_": "APPEND_DATA",
                  "title": "APPEND_DATA",
                  "_required_": false
                 },
                 "READ_NAMED_ATTRS": {
                  "type": "boolean",
                  "_name_": "READ_NAMED_ATTRS",
                  "title": "READ_NAMED_ATTRS",
                  "_required_": false
                 },
                 "WRITE_NAMED_ATTRS": {
                  "type": "boolean",
                  "_name_": "WRITE_NAMED_ATTRS",
                  "title": "WRITE_NAMED_ATTRS",
                  "_required_": false
                 },
                 "EXECUTE": {
                  "type": "boolean",
                  "_name_": "EXECUTE",
                  "title": "EXECUTE",
                  "_required_": false
                 },
                 "DELETE_CHILD": {
                  "type": "boolean",
                  "_name_": "DELETE_CHILD",
                  "title": "DELETE_CHILD",
                  "_required_": false
                 },
                 "READ_ATTRIBUTES": {
                  "type": "boolean",
                  "_name_": "READ_ATTRIBUTES",
                  "title": "READ_ATTRIBUTES",
                  "_required_": false
                 },
                 "WRITE_ATTRIBUTES": {
                  "type": "boolean",
                  "_name_": "WRITE_ATTRIBUTES",
                  "title": "WRITE_ATTRIBUTES",
                  "_required_": false
                 },
                 "DELETE": {
                  "type": "boolean",
                  "_name_": "DELETE",
                  "title": "DELETE",
                  "_required_": false
                 },
                 "READ_ACL": {
                  "type": "boolean",
                  "_name_": "READ_ACL",
                  "title": "READ_ACL",
                  "_required_": false
                 },
                 "WRITE_ACL": {
                  "type": "boolean",
                  "_name_": "WRITE_ACL",
                  "title": "WRITE_ACL",
                  "_required_": false
                 },
                 "WRITE_OWNER": {
                  "type": "boolean",
                  "_name_": "WRITE_OWNER",
                  "title": "WRITE_OWNER",
                  "_required_": false
                 },
                 "SYNCHRONIZE": {
                  "type": "boolean",
                  "_name_": "SYNCHRONIZE",
                  "title": "SYNCHRONIZE",
                  "_required_": false
                 },
                 "BASIC": {
                  "_name_": "BASIC",
                  "title": "BASIC",
                  "_required_": false,
                  "type": "string",
                  "enum": [
                   "FULL_CONTROL",
                   "MODIFY",
                   "READ",
                   "TRAVERSE"
                  ]
                 }
                },
                "additionalProperties": false,
                "_name_": "perms",
                "title": "perms",
                "default": {},
                "_required_": false,
                "_attrs_order_": [
                 "READ_DATA",
                 "WRITE_DATA",
                 "APPEND_DATA",
                 "READ_NAMED_ATTRS",
                 "WRITE_NAMED_ATTRS",
                 "EXECUTE",
                 "DELETE_CHILD",
                 "READ_ATTRIBUTES",
                 "WRITE_ATTRIBUTES",
                 "DELETE",
                 "READ_ACL",
                 "WRITE_ACL",
                 "WRITE_OWNER",
                 "SYNCHRONIZE",
                 "BASIC"
                ]
               },
               "flags": {
                "type": "object",
                "properties": {
                 "FILE_INHERIT": {
                  "type": "boolean",
                  "_name_": "FILE_INHERIT",
                  "title": "FILE_INHERIT",
                  "_required_": false
                 },
                 "DIRECTORY_INHERIT": {
                  "type": "boolean",
                  "_name_": "DIRECTORY_INHERIT",
                  "title": "DIRECTORY_INHERIT",
                  "_required_": false
                 },
                 "NO_PROPAGATE_INHERIT": {
                  "type": "boolean",
                  "_name_": "NO_PROPAGATE_INHERIT",
                  "title": "NO_PROPAGATE_INHERIT",
                  "_required_": false
                 },
                 "INHERIT_ONLY": {
                  "type": "boolean",
                  "_name_": "INHERIT_ONLY",
                  "title": "INHERIT_ONLY",
                  "_required_": false
                 },
                 "INHERITED": {
                  "type": "boolean",
                  "_name_": "INHERITED",
                  "title": "INHERITED",
                  "_required_": false
                 },
                 "BASIC": {
                  "_name_": "BASIC",
                  "title": "BASIC",
                  "_required_": false,
                  "type": "string",
                  "enum": [
                   "INHERIT",
                   "NOINHERIT"
                  ]
                 }
                },
                "additionalProperties": false,
                "_name_": "flags",
                "title": "flags",
                "default": {},
                "_required_": false,
                "_attrs_order_": [
                 "FILE_INHERIT",
                 "DIRECTORY_INHERIT",
                 "NO_PROPAGATE_INHERIT",
                 "INHERIT_ONLY",
                 "INHERITED",
                 "BASIC"
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "nfs4_ace",
              "title": "nfs4_ace",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "tag",
               "id",
               "type",
               "perms",
               "flags"
              ]
             }
            ]
           },
           {
            "_name_": "posix1e_acl",
            "title": "posix1e_acl",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "object",
              "properties": {
               "default": {
                "type": "boolean",
                "_name_": "default",
                "title": "default",
                "default": false,
                "_required_": false
               },
               "tag": {
                "_name_": "tag",
                "title": "tag",
                "_required_": false,
                "type": "string",
                "enum": [
                 "USER_OBJ",
                 "GROUP_OBJ",
                 "USER",
                 "GROUP",
                 "OTHER",
                 "MASK"
                ]
               },
               "id": {
                "type": "integer",
                "_name_": "id",
                "title": "id",
                "default": -1,
                "_required_": false
               },
               "perms": {
                "type": "object",
                "properties": {
                 "READ": {
                  "type": "boolean",
                  "_name_": "READ",
                  "title": "READ",
                  "default": false,
                  "_required_": false
                 },
                 "WRITE": {
                  "type": "boolean",
                  "_name_": "WRITE",
                  "title": "WRITE",
                  "default": false,
                  "_required_": false
                 },
                 "EXECUTE": {
                  "type": "boolean",
                  "_name_": "EXECUTE",
                  "title": "EXECUTE",
                  "default": false,
                  "_required_": false
                 }
                },
                "additionalProperties": false,
                "_name_": "perms",
                "title": "perms",
                "default": {},
                "_required_": false,
                "_attrs_order_": [
                 "READ",
                 "WRITE",
                 "EXECUTE"
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "posix1e_ace",
              "title": "posix1e_ace",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "default",
               "tag",
               "id",
               "perms"
              ]
             }
            ]
           }
          ],
          "nullable": false,
          "_name_": "acl",
          "description": null,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "builtin": {
          "type": "boolean",
          "_name_": "builtin",
          "title": "builtin",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "acltemplate_entry",
        "title": "acltemplate_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "acltype",
         "comment",
         "acl",
         "id",
         "builtin"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "acltype": {
        "_name_": "acltype",
        "title": "acltype",
        "_required_": true,
        "type": "string",
        "enum": [
         "NFS4",
         "POSIX1E"
        ]
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "_required_": false,
        "type": "string"
       },
       "acl": {
        "anyOf": [
         {
          "_name_": "nfs4_acl",
          "title": "nfs4_acl",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "tag": {
              "_name_": "tag",
              "title": "tag",
              "_required_": false,
              "type": "string",
              "enum": [
               "owner@",
               "group@",
               "everyone@",
               "USER",
               "GROUP"
              ]
             },
             "id": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "id",
              "title": "id",
              "_required_": false
             },
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": false,
              "type": "string",
              "enum": [
               "ALLOW",
               "DENY"
              ]
             },
             "perms": {
              "type": "object",
              "properties": {
               "READ_DATA": {
                "type": "boolean",
                "_name_": "READ_DATA",
                "title": "READ_DATA",
                "_required_": false
               },
               "WRITE_DATA": {
                "type": "boolean",
                "_name_": "WRITE_DATA",
                "title": "WRITE_DATA",
                "_required_": false
               },
               "APPEND_DATA": {
                "type": "boolean",
                "_name_": "APPEND_DATA",
                "title": "APPEND_DATA",
                "_required_": false
               },
               "READ_NAMED_ATTRS": {
                "type": "boolean",
                "_name_": "READ_NAMED_ATTRS",
                "title": "READ_NAMED_ATTRS",
                "_required_": false
               },
               "WRITE_NAMED_ATTRS": {
                "type": "boolean",
                "_name_": "WRITE_NAMED_ATTRS",
                "title": "WRITE_NAMED_ATTRS",
                "_required_": false
               },
               "EXECUTE": {
                "type": "boolean",
                "_name_": "EXECUTE",
                "title": "EXECUTE",
                "_required_": false
               },
               "DELETE_CHILD": {
                "type": "boolean",
                "_name_": "DELETE_CHILD",
                "title": "DELETE_CHILD",
                "_required_": false
               },
               "READ_ATTRIBUTES": {
                "type": "boolean",
                "_name_": "READ_ATTRIBUTES",
                "title": "READ_ATTRIBUTES",
                "_required_": false
               },
               "WRITE_ATTRIBUTES": {
                "type": "boolean",
                "_name_": "WRITE_ATTRIBUTES",
                "title": "WRITE_ATTRIBUTES",
                "_required_": false
               },
               "DELETE": {
                "type": "boolean",
                "_name_": "DELETE",
                "title": "DELETE",
                "_required_": false
               },
               "READ_ACL": {
                "type": "boolean",
                "_name_": "READ_ACL",
                "title": "READ_ACL",
                "_required_": false
               },
               "WRITE_ACL": {
                "type": "boolean",
                "_name_": "WRITE_ACL",
                "title": "WRITE_ACL",
                "_required_": false
               },
               "WRITE_OWNER": {
                "type": "boolean",
                "_name_": "WRITE_OWNER",
                "title": "WRITE_OWNER",
                "_required_": false
               },
               "SYNCHRONIZE": {
                "type": "boolean",
                "_name_": "SYNCHRONIZE",
                "title": "SYNCHRONIZE",
                "_required_": false
               },
               "BASIC": {
                "_name_": "BASIC",
                "title": "BASIC",
                "_required_": false,
                "type": "string",
                "enum": [
                 "FULL_CONTROL",
                 "MODIFY",
                 "READ",
                 "TRAVERSE"
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "perms",
              "title": "perms",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "READ_DATA",
               "WRITE_DATA",
               "APPEND_DATA",
               "READ_NAMED_ATTRS",
               "WRITE_NAMED_ATTRS",
               "EXECUTE",
               "DELETE_CHILD",
               "READ_ATTRIBUTES",
               "WRITE_ATTRIBUTES",
               "DELETE",
               "READ_ACL",
               "WRITE_ACL",
               "WRITE_OWNER",
               "SYNCHRONIZE",
               "BASIC"
              ]
             },
             "flags": {
              "type": "object",
              "properties": {
               "FILE_INHERIT": {
                "type": "boolean",
                "_name_": "FILE_INHERIT",
                "title": "FILE_INHERIT",
                "_required_": false
               },
               "DIRECTORY_INHERIT": {
                "type": "boolean",
                "_name_": "DIRECTORY_INHERIT",
                "title": "DIRECTORY_INHERIT",
                "_required_": false
               },
               "NO_PROPAGATE_INHERIT": {
                "type": "boolean",
                "_name_": "NO_PROPAGATE_INHERIT",
                "title": "NO_PROPAGATE_INHERIT",
                "_required_": false
               },
               "INHERIT_ONLY": {
                "type": "boolean",
                "_name_": "INHERIT_ONLY",
                "title": "INHERIT_ONLY",
                "_required_": false
               },
               "INHERITED": {
                "type": "boolean",
                "_name_": "INHERITED",
                "title": "INHERITED",
                "_required_": false
               },
               "BASIC": {
                "_name_": "BASIC",
                "title": "BASIC",
                "_required_": false,
                "type": "string",
                "enum": [
                 "INHERIT",
                 "NOINHERIT"
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "flags",
              "title": "flags",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "FILE_INHERIT",
               "DIRECTORY_INHERIT",
               "NO_PROPAGATE_INHERIT",
               "INHERIT_ONLY",
               "INHERITED",
               "BASIC"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "nfs4_ace",
            "title": "nfs4_ace",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "tag",
             "id",
             "type",
             "perms",
             "flags"
            ]
           }
          ]
         },
         {
          "_name_": "posix1e_acl",
          "title": "posix1e_acl",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "default": {
              "type": "boolean",
              "_name_": "default",
              "title": "default",
              "default": false,
              "_required_": false
             },
             "tag": {
              "_name_": "tag",
              "title": "tag",
              "_required_": false,
              "type": "string",
              "enum": [
               "USER_OBJ",
               "GROUP_OBJ",
               "USER",
               "GROUP",
               "OTHER",
               "MASK"
              ]
             },
             "id": {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "default": -1,
              "_required_": false
             },
             "perms": {
              "type": "object",
              "properties": {
               "READ": {
                "type": "boolean",
                "_name_": "READ",
                "title": "READ",
                "default": false,
                "_required_": false
               },
               "WRITE": {
                "type": "boolean",
                "_name_": "WRITE",
                "title": "WRITE",
                "default": false,
                "_required_": false
               },
               "EXECUTE": {
                "type": "boolean",
                "_name_": "EXECUTE",
                "title": "EXECUTE",
                "default": false,
                "_required_": false
               }
              },
              "additionalProperties": false,
              "_name_": "perms",
              "title": "perms",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "READ",
               "WRITE",
               "EXECUTE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "posix1e_ace",
            "title": "posix1e_ace",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "default",
             "tag",
             "id",
             "perms"
            ]
           }
          ]
         }
        ],
        "nullable": false,
        "_name_": "acl",
        "description": null,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "acltemplate_entry",
      "title": "acltemplate_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "acltype",
       "comment",
       "acl",
       "id",
       "builtin"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "acltype": {
        "_name_": "acltype",
        "title": "acltype",
        "_required_": true,
        "type": "string",
        "enum": [
         "NFS4",
         "POSIX1E"
        ]
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "_required_": false,
        "type": "string"
       },
       "acl": {
        "anyOf": [
         {
          "_name_": "nfs4_acl",
          "title": "nfs4_acl",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "tag": {
              "_name_": "tag",
              "title": "tag",
              "_required_": false,
              "type": "string",
              "enum": [
               "owner@",
               "group@",
               "everyone@",
               "USER",
               "GROUP"
              ]
             },
             "id": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "id",
              "title": "id",
              "_required_": false
             },
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": false,
              "type": "string",
              "enum": [
               "ALLOW",
               "DENY"
              ]
             },
             "perms": {
              "type": "object",
              "properties": {
               "READ_DATA": {
                "type": "boolean",
                "_name_": "READ_DATA",
                "title": "READ_DATA",
                "_required_": false
               },
               "WRITE_DATA": {
                "type": "boolean",
                "_name_": "WRITE_DATA",
                "title": "WRITE_DATA",
                "_required_": false
               },
               "APPEND_DATA": {
                "type": "boolean",
                "_name_": "APPEND_DATA",
                "title": "APPEND_DATA",
                "_required_": false
               },
               "READ_NAMED_ATTRS": {
                "type": "boolean",
                "_name_": "READ_NAMED_ATTRS",
                "title": "READ_NAMED_ATTRS",
                "_required_": false
               },
               "WRITE_NAMED_ATTRS": {
                "type": "boolean",
                "_name_": "WRITE_NAMED_ATTRS",
                "title": "WRITE_NAMED_ATTRS",
                "_required_": false
               },
               "EXECUTE": {
                "type": "boolean",
                "_name_": "EXECUTE",
                "title": "EXECUTE",
                "_required_": false
               },
               "DELETE_CHILD": {
                "type": "boolean",
                "_name_": "DELETE_CHILD",
                "title": "DELETE_CHILD",
                "_required_": false
               },
               "READ_ATTRIBUTES": {
                "type": "boolean",
                "_name_": "READ_ATTRIBUTES",
                "title": "READ_ATTRIBUTES",
                "_required_": false
               },
               "WRITE_ATTRIBUTES": {
                "type": "boolean",
                "_name_": "WRITE_ATTRIBUTES",
                "title": "WRITE_ATTRIBUTES",
                "_required_": false
               },
               "DELETE": {
                "type": "boolean",
                "_name_": "DELETE",
                "title": "DELETE",
                "_required_": false
               },
               "READ_ACL": {
                "type": "boolean",
                "_name_": "READ_ACL",
                "title": "READ_ACL",
                "_required_": false
               },
               "WRITE_ACL": {
                "type": "boolean",
                "_name_": "WRITE_ACL",
                "title": "WRITE_ACL",
                "_required_": false
               },
               "WRITE_OWNER": {
                "type": "boolean",
                "_name_": "WRITE_OWNER",
                "title": "WRITE_OWNER",
                "_required_": false
               },
               "SYNCHRONIZE": {
                "type": "boolean",
                "_name_": "SYNCHRONIZE",
                "title": "SYNCHRONIZE",
                "_required_": false
               },
               "BASIC": {
                "_name_": "BASIC",
                "title": "BASIC",
                "_required_": false,
                "type": "string",
                "enum": [
                 "FULL_CONTROL",
                 "MODIFY",
                 "READ",
                 "TRAVERSE"
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "perms",
              "title": "perms",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "READ_DATA",
               "WRITE_DATA",
               "APPEND_DATA",
               "READ_NAMED_ATTRS",
               "WRITE_NAMED_ATTRS",
               "EXECUTE",
               "DELETE_CHILD",
               "READ_ATTRIBUTES",
               "WRITE_ATTRIBUTES",
               "DELETE",
               "READ_ACL",
               "WRITE_ACL",
               "WRITE_OWNER",
               "SYNCHRONIZE",
               "BASIC"
              ]
             },
             "flags": {
              "type": "object",
              "properties": {
               "FILE_INHERIT": {
                "type": "boolean",
                "_name_": "FILE_INHERIT",
                "title": "FILE_INHERIT",
                "_required_": false
               },
               "DIRECTORY_INHERIT": {
                "type": "boolean",
                "_name_": "DIRECTORY_INHERIT",
                "title": "DIRECTORY_INHERIT",
                "_required_": false
               },
               "NO_PROPAGATE_INHERIT": {
                "type": "boolean",
                "_name_": "NO_PROPAGATE_INHERIT",
                "title": "NO_PROPAGATE_INHERIT",
                "_required_": false
               },
               "INHERIT_ONLY": {
                "type": "boolean",
                "_name_": "INHERIT_ONLY",
                "title": "INHERIT_ONLY",
                "_required_": false
               },
               "INHERITED": {
                "type": "boolean",
                "_name_": "INHERITED",
                "title": "INHERITED",
                "_required_": false
               },
               "BASIC": {
                "_name_": "BASIC",
                "title": "BASIC",
                "_required_": false,
                "type": "string",
                "enum": [
                 "INHERIT",
                 "NOINHERIT"
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "flags",
              "title": "flags",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "FILE_INHERIT",
               "DIRECTORY_INHERIT",
               "NO_PROPAGATE_INHERIT",
               "INHERIT_ONLY",
               "INHERITED",
               "BASIC"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "nfs4_ace",
            "title": "nfs4_ace",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "tag",
             "id",
             "type",
             "perms",
             "flags"
            ]
           }
          ]
         },
         {
          "_name_": "posix1e_acl",
          "title": "posix1e_acl",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "default": {
              "type": "boolean",
              "_name_": "default",
              "title": "default",
              "default": false,
              "_required_": false
             },
             "tag": {
              "_name_": "tag",
              "title": "tag",
              "_required_": false,
              "type": "string",
              "enum": [
               "USER_OBJ",
               "GROUP_OBJ",
               "USER",
               "GROUP",
               "OTHER",
               "MASK"
              ]
             },
             "id": {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "default": -1,
              "_required_": false
             },
             "perms": {
              "type": "object",
              "properties": {
               "READ": {
                "type": "boolean",
                "_name_": "READ",
                "title": "READ",
                "default": false,
                "_required_": false
               },
               "WRITE": {
                "type": "boolean",
                "_name_": "WRITE",
                "title": "WRITE",
                "default": false,
                "_required_": false
               },
               "EXECUTE": {
                "type": "boolean",
                "_name_": "EXECUTE",
                "title": "EXECUTE",
                "default": false,
                "_required_": false
               }
              },
              "additionalProperties": false,
              "_name_": "perms",
              "title": "perms",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "READ",
               "WRITE",
               "EXECUTE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "posix1e_ace",
            "title": "posix1e_ace",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "default",
             "tag",
             "id",
             "perms"
            ]
           }
          ]
         }
        ],
        "nullable": false,
        "_name_": "acl",
        "description": null,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "acltemplate_entry",
      "title": "acltemplate_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "acltype",
       "comment",
       "acl",
       "id",
       "builtin"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "filesystem_acltemplate_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E"
      ]
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "acltemplate_create",
    "title": "acltemplate_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "acltype",
     "comment",
     "acl"
    ]
   },
   "return_schema_of_filesystem_acltemplate_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E"
      ]
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": null
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     }
    },
    "additionalProperties": false,
    "_name_": "filesystem_acltemplate_create_returns",
    "title": "filesystem_acltemplate_create_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "acltype",
     "comment",
     "acl",
     "id",
     "builtin"
    ]
   },
   "return_schema_of_filesystem_acltemplate_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "filesystem_acltemplate_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E"
      ]
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "acltemplate_update",
    "title": "acltemplate_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "acltype",
     "comment",
     "acl"
    ]
   },
   "return_schema_of_filesystem_acltemplate_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E"
      ]
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": null
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     }
    },
    "additionalProperties": false,
    "_name_": "filesystem_acltemplate_update_returns",
    "title": "filesystem_acltemplate_update_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "acltype",
     "comment",
     "acl",
     "id",
     "builtin"
    ]
   },
   "filesystem_acltemplate_by_path": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "default": "",
      "type": "string",
      "description": "Retrieve list of available ACL templates for a given `path`."
     },
     "query-filters": {
      "_name_": "query-filters",
      "title": "query-filters",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "query-filter",
       "title": "query-filter",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      }
     },
     "query-options": {
      "type": "object",
      "properties": {
       "relationships": {
        "type": "boolean",
        "_name_": "relationships",
        "title": "relationships",
        "default": true
       },
       "extend": {
        "_name_": "extend",
        "title": "extend",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extend_context": {
        "_name_": "extend_context",
        "title": "extend_context",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "prefix": {
        "_name_": "prefix",
        "title": "prefix",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extra": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extra",
        "title": "extra",
        "default": {},
        "_attrs_order_": []
       },
       "order_by": {
        "_name_": "order_by",
        "title": "order_by",
        "default": [],
        "type": "array",
        "items": {}
       },
       "select": {
        "_name_": "select",
        "title": "select",
        "default": [],
        "type": "array",
        "items": {}
       },
       "count": {
        "type": "boolean",
        "_name_": "count",
        "title": "count",
        "default": false
       },
       "get": {
        "type": "boolean",
        "_name_": "get",
        "title": "get",
        "default": false
       },
       "offset": {
        "type": "integer",
        "_name_": "offset",
        "title": "offset",
        "default": 0
       },
       "limit": {
        "type": "integer",
        "_name_": "limit",
        "title": "limit",
        "default": 0
       },
       "force_sql_filters": {
        "type": "boolean",
        "_name_": "force_sql_filters",
        "title": "force_sql_filters",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "query-options",
      "title": "query-options",
      "default": {},
      "_attrs_order_": [
       "relationships",
       "extend",
       "extend_context",
       "prefix",
       "extra",
       "order_by",
       "select",
       "count",
       "get",
       "offset",
       "limit",
       "force_sql_filters"
      ]
     },
     "format-options": {
      "type": "object",
      "properties": {
       "canonicalize": {
        "type": "boolean",
        "_name_": "canonicalize",
        "title": "canonicalize",
        "default": false
       },
       "ensure_builtins": {
        "type": "boolean",
        "_name_": "ensure_builtins",
        "title": "ensure_builtins",
        "default": false
       },
       "resolve_names": {
        "type": "boolean",
        "_name_": "resolve_names",
        "title": "resolve_names",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "format-options",
      "title": "format-options",
      "default": {},
      "_attrs_order_": [
       "canonicalize",
       "ensure_builtins",
       "resolve_names"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "acltemplate_by_path",
    "title": "acltemplate_by_path",
    "default": {},
    "_attrs_order_": [
     "path",
     "query-filters",
     "query-options",
     "format-options"
    ]
   },
   "return_schema_of_filesystem_acltemplate_by_path": {
    "_name_": "templates",
    "title": "templates",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "acltype": {
       "_name_": "acltype",
       "title": "acltype",
       "_required_": true,
       "type": "string",
       "enum": [
        "NFS4",
        "POSIX1E"
       ]
      },
      "comment": {
       "_name_": "comment",
       "title": "comment",
       "_required_": false,
       "type": "string"
      },
      "acl": {
       "anyOf": [
        {
         "_name_": "nfs4_acl",
         "title": "nfs4_acl",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "tag": {
             "_name_": "tag",
             "title": "tag",
             "_required_": false,
             "type": "string",
             "enum": [
              "owner@",
              "group@",
              "everyone@",
              "USER",
              "GROUP"
             ]
            },
            "id": {
             "type": [
              "integer",
              "null"
             ],
             "_name_": "id",
             "title": "id",
             "_required_": false
            },
            "type": {
             "_name_": "type",
             "title": "type",
             "_required_": false,
             "type": "string",
             "enum": [
              "ALLOW",
              "DENY"
             ]
            },
            "perms": {
             "type": "object",
             "properties": {
              "READ_DATA": {
               "type": "boolean",
               "_name_": "READ_DATA",
               "title": "READ_DATA",
               "_required_": false
              },
              "WRITE_DATA": {
               "type": "boolean",
               "_name_": "WRITE_DATA",
               "title": "WRITE_DATA",
               "_required_": false
              },
              "APPEND_DATA": {
               "type": "boolean",
               "_name_": "APPEND_DATA",
               "title": "APPEND_DATA",
               "_required_": false
              },
              "READ_NAMED_ATTRS": {
               "type": "boolean",
               "_name_": "READ_NAMED_ATTRS",
               "title": "READ_NAMED_ATTRS",
               "_required_": false
              },
              "WRITE_NAMED_ATTRS": {
               "type": "boolean",
               "_name_": "WRITE_NAMED_ATTRS",
               "title": "WRITE_NAMED_ATTRS",
               "_required_": false
              },
              "EXECUTE": {
               "type": "boolean",
               "_name_": "EXECUTE",
               "title": "EXECUTE",
               "_required_": false
              },
              "DELETE_CHILD": {
               "type": "boolean",
               "_name_": "DELETE_CHILD",
               "title": "DELETE_CHILD",
               "_required_": false
              },
              "READ_ATTRIBUTES": {
               "type": "boolean",
               "_name_": "READ_ATTRIBUTES",
               "title": "READ_ATTRIBUTES",
               "_required_": false
              },
              "WRITE_ATTRIBUTES": {
               "type": "boolean",
               "_name_": "WRITE_ATTRIBUTES",
               "title": "WRITE_ATTRIBUTES",
               "_required_": false
              },
              "DELETE": {
               "type": "boolean",
               "_name_": "DELETE",
               "title": "DELETE",
               "_required_": false
              },
              "READ_ACL": {
               "type": "boolean",
               "_name_": "READ_ACL",
               "title": "READ_ACL",
               "_required_": false
              },
              "WRITE_ACL": {
               "type": "boolean",
               "_name_": "WRITE_ACL",
               "title": "WRITE_ACL",
               "_required_": false
              },
              "WRITE_OWNER": {
               "type": "boolean",
               "_name_": "WRITE_OWNER",
               "title": "WRITE_OWNER",
               "_required_": false
              },
              "SYNCHRONIZE": {
               "type": "boolean",
               "_name_": "SYNCHRONIZE",
               "title": "SYNCHRONIZE",
               "_required_": false
              },
              "BASIC": {
               "_name_": "BASIC",
               "title": "BASIC",
               "_required_": false,
               "type": "string",
               "enum": [
                "FULL_CONTROL",
                "MODIFY",
                "READ",
                "TRAVERSE"
               ]
              }
             },
             "additionalProperties": false,
             "_name_": "perms",
             "title": "perms",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "READ_DATA",
              "WRITE_DATA",
              "APPEND_DATA",
              "READ_NAMED_ATTRS",
              "WRITE_NAMED_ATTRS",
              "EXECUTE",
              "DELETE_CHILD",
              "READ_ATTRIBUTES",
              "WRITE_ATTRIBUTES",
              "DELETE",
              "READ_ACL",
              "WRITE_ACL",
              "WRITE_OWNER",
              "SYNCHRONIZE",
              "BASIC"
             ]
            },
            "flags": {
             "type": "object",
             "properties": {
              "FILE_INHERIT": {
               "type": "boolean",
               "_name_": "FILE_INHERIT",
               "title": "FILE_INHERIT",
               "_required_": false
              },
              "DIRECTORY_INHERIT": {
               "type": "boolean",
               "_name_": "DIRECTORY_INHERIT",
               "title": "DIRECTORY_INHERIT",
               "_required_": false
              },
              "NO_PROPAGATE_INHERIT": {
               "type": "boolean",
               "_name_": "NO_PROPAGATE_INHERIT",
               "title": "NO_PROPAGATE_INHERIT",
               "_required_": false
              },
              "INHERIT_ONLY": {
               "type": "boolean",
               "_name_": "INHERIT_ONLY",
               "title": "INHERIT_ONLY",
               "_required_": false
              },
              "INHERITED": {
               "type": "boolean",
               "_name_": "INHERITED",
               "title": "INHERITED",
               "_required_": false
              },
              "BASIC": {
               "_name_": "BASIC",
               "title": "BASIC",
               "_required_": false,
               "type": "string",
               "enum": [
                "INHERIT",
                "NOINHERIT"
               ]
              }
             },
             "additionalProperties": false,
             "_name_": "flags",
             "title": "flags",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "FILE_INHERIT",
              "DIRECTORY_INHERIT",
              "NO_PROPAGATE_INHERIT",
              "INHERIT_ONLY",
              "INHERITED",
              "BASIC"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "nfs4_ace",
           "title": "nfs4_ace",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "tag",
            "id",
            "type",
            "perms",
            "flags"
           ]
          }
         ]
        },
        {
         "_name_": "posix1e_acl",
         "title": "posix1e_acl",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "default": {
             "type": "boolean",
             "_name_": "default",
             "title": "default",
             "default": false,
             "_required_": false
            },
            "tag": {
             "_name_": "tag",
             "title": "tag",
             "_required_": false,
             "type": "string",
             "enum": [
              "USER_OBJ",
              "GROUP_OBJ",
              "USER",
              "GROUP",
              "OTHER",
              "MASK"
             ]
            },
            "id": {
             "type": "integer",
             "_name_": "id",
             "title": "id",
             "default": -1,
             "_required_": false
            },
            "perms": {
             "type": "object",
             "properties": {
              "READ": {
               "type": "boolean",
               "_name_": "READ",
               "title": "READ",
               "default": false,
               "_required_": false
              },
              "WRITE": {
               "type": "boolean",
               "_name_": "WRITE",
               "title": "WRITE",
               "default": false,
               "_required_": false
              },
              "EXECUTE": {
               "type": "boolean",
               "_name_": "EXECUTE",
               "title": "EXECUTE",
               "default": false,
               "_required_": false
              }
             },
             "additionalProperties": false,
             "_name_": "perms",
             "title": "perms",
             "default": {},
             "_required_": false,
             "_attrs_order_": [
              "READ",
              "WRITE",
              "EXECUTE"
             ]
            }
           },
           "additionalProperties": false,
           "_name_": "posix1e_ace",
           "title": "posix1e_ace",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "default",
            "tag",
            "id",
            "perms"
           ]
          }
         ]
        }
       ],
       "nullable": false,
       "_name_": "acl",
       "description": null,
       "_required_": false
      },
      "id": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      },
      "builtin": {
       "type": "boolean",
       "_name_": "builtin",
       "title": "builtin",
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "acltemplate_entry",
     "title": "acltemplate_entry",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "acltype",
      "comment",
      "acl",
      "id",
      "builtin"
     ]
    }
   },
   "filesystem_acltemplate_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "filesystem_acltemplate_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "filesystem_acltemplate_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/filesystem_acltemplate_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/filesystem_acltemplate_get_instance_1"
     }
    }
   },
   "return_schema_of_filesystem_acltemplate_get_instance": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "type": "string",
      "enum": [
       "NFS4",
       "POSIX1E"
      ]
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": null
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     }
    },
    "additionalProperties": false,
    "_name_": "acltemplate_entry",
    "title": "acltemplate_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "acltype",
     "comment",
     "acl",
     "id",
     "builtin"
    ]
   },
   "return_schema_of_ftp_config": {
    "type": "object",
    "properties": {
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "clients": {
      "type": "integer",
      "_name_": "clients",
      "title": "clients"
     },
     "ipconnections": {
      "type": "integer",
      "_name_": "ipconnections",
      "title": "ipconnections"
     },
     "loginattempt": {
      "type": "integer",
      "_name_": "loginattempt",
      "title": "loginattempt"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout"
     },
     "timeout_notransfer": {
      "type": "integer",
      "_name_": "timeout_notransfer",
      "title": "timeout_notransfer"
     },
     "rootlogin": {
      "type": "boolean",
      "_name_": "rootlogin",
      "title": "rootlogin"
     },
     "onlyanonymous": {
      "type": "boolean",
      "_name_": "onlyanonymous",
      "title": "onlyanonymous"
     },
     "anonpath": {
      "_name_": "anonpath",
      "title": "anonpath",
      "type": "string",
      "nullable": true
     },
     "onlylocal": {
      "type": "boolean",
      "_name_": "onlylocal",
      "title": "onlylocal"
     },
     "banner": {
      "_name_": "banner",
      "title": "banner",
      "type": "string"
     },
     "filemask": {
      "_name_": "filemask",
      "title": "filemask",
      "type": "string"
     },
     "dirmask": {
      "_name_": "dirmask",
      "title": "dirmask",
      "type": "string"
     },
     "fxp": {
      "type": "boolean",
      "_name_": "fxp",
      "title": "fxp"
     },
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume"
     },
     "defaultroot": {
      "type": "boolean",
      "_name_": "defaultroot",
      "title": "defaultroot"
     },
     "ident": {
      "type": "boolean",
      "_name_": "ident",
      "title": "ident"
     },
     "reversedns": {
      "type": "boolean",
      "_name_": "reversedns",
      "title": "reversedns"
     },
     "masqaddress": {
      "_name_": "masqaddress",
      "title": "masqaddress",
      "type": "string"
     },
     "passiveportsmin": {
      "type": "integer",
      "_name_": "passiveportsmin",
      "title": "passiveportsmin"
     },
     "passiveportsmax": {
      "type": "integer",
      "_name_": "passiveportsmax",
      "title": "passiveportsmax"
     },
     "localuserbw": {
      "type": "integer",
      "_name_": "localuserbw",
      "title": "localuserbw"
     },
     "localuserdlbw": {
      "type": "integer",
      "_name_": "localuserdlbw",
      "title": "localuserdlbw"
     },
     "anonuserbw": {
      "type": "integer",
      "_name_": "anonuserbw",
      "title": "anonuserbw"
     },
     "anonuserdlbw": {
      "type": "integer",
      "_name_": "anonuserdlbw",
      "title": "anonuserdlbw"
     },
     "tls": {
      "type": "boolean",
      "_name_": "tls",
      "title": "tls"
     },
     "tls_policy": {
      "_name_": "tls_policy",
      "title": "tls_policy",
      "type": "string",
      "enum": [
       "on",
       "off",
       "data",
       "!data",
       "auth",
       "ctrl",
       "ctrl+data",
       "ctrl+!data",
       "auth+data",
       "auth+!data"
      ]
     },
     "tls_opt_allow_client_renegotiations": {
      "type": "boolean",
      "_name_": "tls_opt_allow_client_renegotiations",
      "title": "tls_opt_allow_client_renegotiations"
     },
     "tls_opt_allow_dot_login": {
      "type": "boolean",
      "_name_": "tls_opt_allow_dot_login",
      "title": "tls_opt_allow_dot_login"
     },
     "tls_opt_allow_per_user": {
      "type": "boolean",
      "_name_": "tls_opt_allow_per_user",
      "title": "tls_opt_allow_per_user"
     },
     "tls_opt_common_name_required": {
      "type": "boolean",
      "_name_": "tls_opt_common_name_required",
      "title": "tls_opt_common_name_required"
     },
     "tls_opt_enable_diags": {
      "type": "boolean",
      "_name_": "tls_opt_enable_diags",
      "title": "tls_opt_enable_diags"
     },
     "tls_opt_export_cert_data": {
      "type": "boolean",
      "_name_": "tls_opt_export_cert_data",
      "title": "tls_opt_export_cert_data"
     },
     "tls_opt_no_empty_fragments": {
      "type": "boolean",
      "_name_": "tls_opt_no_empty_fragments",
      "title": "tls_opt_no_empty_fragments"
     },
     "tls_opt_no_session_reuse_required": {
      "type": "boolean",
      "_name_": "tls_opt_no_session_reuse_required",
      "title": "tls_opt_no_session_reuse_required"
     },
     "tls_opt_stdenvvars": {
      "type": "boolean",
      "_name_": "tls_opt_stdenvvars",
      "title": "tls_opt_stdenvvars"
     },
     "tls_opt_dns_name_required": {
      "type": "boolean",
      "_name_": "tls_opt_dns_name_required",
      "title": "tls_opt_dns_name_required"
     },
     "tls_opt_ip_address_required": {
      "type": "boolean",
      "_name_": "tls_opt_ip_address_required",
      "title": "tls_opt_ip_address_required"
     },
     "ssltls_certificate": {
      "type": "integer",
      "_name_": "ssltls_certificate",
      "title": "ssltls_certificate",
      "nullable": true
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "ftp_entry",
    "title": "ftp_entry",
    "default": {},
    "_attrs_order_": [
     "port",
     "clients",
     "ipconnections",
     "loginattempt",
     "timeout",
     "timeout_notransfer",
     "rootlogin",
     "onlyanonymous",
     "anonpath",
     "onlylocal",
     "banner",
     "filemask",
     "dirmask",
     "fxp",
     "resume",
     "defaultroot",
     "ident",
     "reversedns",
     "masqaddress",
     "passiveportsmin",
     "passiveportsmax",
     "localuserbw",
     "localuserdlbw",
     "anonuserbw",
     "anonuserdlbw",
     "tls",
     "tls_policy",
     "tls_opt_allow_client_renegotiations",
     "tls_opt_allow_dot_login",
     "tls_opt_allow_per_user",
     "tls_opt_common_name_required",
     "tls_opt_enable_diags",
     "tls_opt_export_cert_data",
     "tls_opt_no_empty_fragments",
     "tls_opt_no_session_reuse_required",
     "tls_opt_stdenvvars",
     "tls_opt_dns_name_required",
     "tls_opt_ip_address_required",
     "ssltls_certificate",
     "options",
     "id"
    ]
   },
   "ftp_update": {
    "type": "object",
    "properties": {
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "clients": {
      "type": "integer",
      "_name_": "clients",
      "title": "clients",
      "description": "`clients` is an integer value which sets the maximum number of simultaneous clients allowed. It defaults to 32."
     },
     "ipconnections": {
      "type": "integer",
      "_name_": "ipconnections",
      "title": "ipconnections",
      "description": "`ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults\nto 0 which equals to unlimited."
     },
     "loginattempt": {
      "type": "integer",
      "_name_": "loginattempt",
      "title": "loginattempt"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "description": "`timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving\nany data on either the control or data connection."
     },
     "timeout_notransfer": {
      "type": "integer",
      "_name_": "timeout_notransfer",
      "title": "timeout_notransfer",
      "description": "`timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after\nauthentication, without issuing a command which results in creating an active or passive data connection\n(i.e. sending/receiving a file, or receiving a directory listing)."
     },
     "rootlogin": {
      "type": "boolean",
      "_name_": "rootlogin",
      "title": "rootlogin",
      "description": "`rootlogin` is a boolean value which when configured to true enables login as root. This is generally\ndiscouraged because of the security risks."
     },
     "onlyanonymous": {
      "type": "boolean",
      "_name_": "onlyanonymous",
      "title": "onlyanonymous",
      "description": "`onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`."
     },
     "anonpath": {
      "_name_": "anonpath",
      "title": "anonpath",
      "type": "string",
      "description": "`onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`.",
      "nullable": true
     },
     "onlylocal": {
      "type": "boolean",
      "_name_": "onlylocal",
      "title": "onlylocal"
     },
     "banner": {
      "_name_": "banner",
      "title": "banner",
      "type": "string",
      "description": "`banner` is a message displayed to local login users after they successfully authenticate. It is not displayed\nto anonymous login users."
     },
     "filemask": {
      "_name_": "filemask",
      "title": "filemask",
      "type": "string",
      "description": "`filemask` sets the default permissions for newly created files which by default are 077."
     },
     "dirmask": {
      "_name_": "dirmask",
      "title": "dirmask",
      "type": "string",
      "description": "`dirmask` sets the default permissions for newly created directories which by default are 077."
     },
     "fxp": {
      "type": "boolean",
      "_name_": "fxp",
      "title": "fxp",
      "description": "`fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it\nmakes the server vulnerable to FTP bounce attacks."
     },
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume",
      "description": "`resume` if set allows FTP clients to resume interrupted transfers."
     },
     "defaultroot": {
      "type": "boolean",
      "_name_": "defaultroot",
      "title": "defaultroot",
      "description": "`defaultroot` when set ensures that for local users, home directory access is only granted if the user\nis a member of group wheel."
     },
     "ident": {
      "type": "boolean",
      "_name_": "ident",
      "title": "ident",
      "description": "`ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd\nis not running on the client, this can result in timeouts."
     },
     "reversedns": {
      "type": "boolean",
      "_name_": "reversedns",
      "title": "reversedns"
     },
     "masqaddress": {
      "_name_": "masqaddress",
      "title": "masqaddress",
      "type": "string",
      "description": "`masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a\nNAT device."
     },
     "passiveportsmin": {
      "type": "integer",
      "_name_": "passiveportsmin",
      "title": "passiveportsmin"
     },
     "passiveportsmax": {
      "type": "integer",
      "_name_": "passiveportsmax",
      "title": "passiveportsmax"
     },
     "localuserbw": {
      "type": "integer",
      "_name_": "localuserbw",
      "title": "localuserbw",
      "description": "`localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration )."
     },
     "localuserdlbw": {
      "type": "integer",
      "_name_": "localuserdlbw",
      "title": "localuserdlbw",
      "description": "`localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.\nDefault of zero indicates unlimited download bandwidth ( from the FTP server configuration )."
     },
     "anonuserbw": {
      "type": "integer",
      "_name_": "anonuserbw",
      "title": "anonuserbw",
      "description": "`anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration )."
     },
     "anonuserdlbw": {
      "type": "integer",
      "_name_": "anonuserdlbw",
      "title": "anonuserdlbw",
      "description": "`anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous\nuser. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration )."
     },
     "tls": {
      "type": "boolean",
      "_name_": "tls",
      "title": "tls",
      "description": "`tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a\ncertificate to be configured first with the certificate service and the id of certificate is passed on in"
     },
     "tls_policy": {
      "_name_": "tls_policy",
      "title": "tls_policy",
      "type": "string",
      "enum": [
       "on",
       "off",
       "data",
       "!data",
       "auth",
       "ctrl",
       "ctrl+data",
       "ctrl+!data",
       "auth+data",
       "auth+!data"
      ],
      "description": "`tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP\nsession must occur over SSL/TLS."
     },
     "tls_opt_allow_client_renegotiations": {
      "type": "boolean",
      "_name_": "tls_opt_allow_client_renegotiations",
      "title": "tls_opt_allow_client_renegotiations"
     },
     "tls_opt_allow_dot_login": {
      "type": "boolean",
      "_name_": "tls_opt_allow_dot_login",
      "title": "tls_opt_allow_dot_login"
     },
     "tls_opt_allow_per_user": {
      "type": "boolean",
      "_name_": "tls_opt_allow_per_user",
      "title": "tls_opt_allow_per_user"
     },
     "tls_opt_common_name_required": {
      "type": "boolean",
      "_name_": "tls_opt_common_name_required",
      "title": "tls_opt_common_name_required"
     },
     "tls_opt_enable_diags": {
      "type": "boolean",
      "_name_": "tls_opt_enable_diags",
      "title": "tls_opt_enable_diags",
      "description": "`tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a\nconnection."
     },
     "tls_opt_export_cert_data": {
      "type": "boolean",
      "_name_": "tls_opt_export_cert_data",
      "title": "tls_opt_export_cert_data"
     },
     "tls_opt_no_empty_fragments": {
      "type": "boolean",
      "_name_": "tls_opt_no_empty_fragments",
      "title": "tls_opt_no_empty_fragments"
     },
     "tls_opt_no_session_reuse_required": {
      "type": "boolean",
      "_name_": "tls_opt_no_session_reuse_required",
      "title": "tls_opt_no_session_reuse_required"
     },
     "tls_opt_stdenvvars": {
      "type": "boolean",
      "_name_": "tls_opt_stdenvvars",
      "title": "tls_opt_stdenvvars"
     },
     "tls_opt_dns_name_required": {
      "type": "boolean",
      "_name_": "tls_opt_dns_name_required",
      "title": "tls_opt_dns_name_required"
     },
     "tls_opt_ip_address_required": {
      "type": "boolean",
      "_name_": "tls_opt_ip_address_required",
      "title": "tls_opt_ip_address_required"
     },
     "ssltls_certificate": {
      "type": "integer",
      "_name_": "ssltls_certificate",
      "title": "ssltls_certificate",
      "description": "`ssltls_certificate`.",
      "nullable": true
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "ftp_update",
    "title": "ftp_update",
    "default": {},
    "_attrs_order_": [
     "port",
     "clients",
     "ipconnections",
     "loginattempt",
     "timeout",
     "timeout_notransfer",
     "rootlogin",
     "onlyanonymous",
     "anonpath",
     "onlylocal",
     "banner",
     "filemask",
     "dirmask",
     "fxp",
     "resume",
     "defaultroot",
     "ident",
     "reversedns",
     "masqaddress",
     "passiveportsmin",
     "passiveportsmax",
     "localuserbw",
     "localuserdlbw",
     "anonuserbw",
     "anonuserdlbw",
     "tls",
     "tls_policy",
     "tls_opt_allow_client_renegotiations",
     "tls_opt_allow_dot_login",
     "tls_opt_allow_per_user",
     "tls_opt_common_name_required",
     "tls_opt_enable_diags",
     "tls_opt_export_cert_data",
     "tls_opt_no_empty_fragments",
     "tls_opt_no_session_reuse_required",
     "tls_opt_stdenvvars",
     "tls_opt_dns_name_required",
     "tls_opt_ip_address_required",
     "ssltls_certificate",
     "options"
    ]
   },
   "return_schema_of_ftp_update": {
    "type": "object",
    "properties": {
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "clients": {
      "type": "integer",
      "_name_": "clients",
      "title": "clients",
      "description": "`clients` is an integer value which sets the maximum number of simultaneous clients allowed. It defaults to 32."
     },
     "ipconnections": {
      "type": "integer",
      "_name_": "ipconnections",
      "title": "ipconnections",
      "description": "`ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults\nto 0 which equals to unlimited."
     },
     "loginattempt": {
      "type": "integer",
      "_name_": "loginattempt",
      "title": "loginattempt"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "description": "`timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving\nany data on either the control or data connection."
     },
     "timeout_notransfer": {
      "type": "integer",
      "_name_": "timeout_notransfer",
      "title": "timeout_notransfer",
      "description": "`timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after\nauthentication, without issuing a command which results in creating an active or passive data connection\n(i.e. sending/receiving a file, or receiving a directory listing)."
     },
     "rootlogin": {
      "type": "boolean",
      "_name_": "rootlogin",
      "title": "rootlogin",
      "description": "`rootlogin` is a boolean value which when configured to true enables login as root. This is generally\ndiscouraged because of the security risks."
     },
     "onlyanonymous": {
      "type": "boolean",
      "_name_": "onlyanonymous",
      "title": "onlyanonymous",
      "description": "`onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`."
     },
     "anonpath": {
      "_name_": "anonpath",
      "title": "anonpath",
      "type": "string",
      "description": "`onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`.",
      "nullable": true
     },
     "onlylocal": {
      "type": "boolean",
      "_name_": "onlylocal",
      "title": "onlylocal"
     },
     "banner": {
      "_name_": "banner",
      "title": "banner",
      "type": "string",
      "description": "`banner` is a message displayed to local login users after they successfully authenticate. It is not displayed\nto anonymous login users."
     },
     "filemask": {
      "_name_": "filemask",
      "title": "filemask",
      "type": "string",
      "description": "`filemask` sets the default permissions for newly created files which by default are 077."
     },
     "dirmask": {
      "_name_": "dirmask",
      "title": "dirmask",
      "type": "string",
      "description": "`dirmask` sets the default permissions for newly created directories which by default are 077."
     },
     "fxp": {
      "type": "boolean",
      "_name_": "fxp",
      "title": "fxp",
      "description": "`fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it\nmakes the server vulnerable to FTP bounce attacks."
     },
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume",
      "description": "`resume` if set allows FTP clients to resume interrupted transfers."
     },
     "defaultroot": {
      "type": "boolean",
      "_name_": "defaultroot",
      "title": "defaultroot",
      "description": "`defaultroot` when set ensures that for local users, home directory access is only granted if the user\nis a member of group wheel."
     },
     "ident": {
      "type": "boolean",
      "_name_": "ident",
      "title": "ident",
      "description": "`ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd\nis not running on the client, this can result in timeouts."
     },
     "reversedns": {
      "type": "boolean",
      "_name_": "reversedns",
      "title": "reversedns"
     },
     "masqaddress": {
      "_name_": "masqaddress",
      "title": "masqaddress",
      "type": "string",
      "description": "`masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a\nNAT device."
     },
     "passiveportsmin": {
      "type": "integer",
      "_name_": "passiveportsmin",
      "title": "passiveportsmin"
     },
     "passiveportsmax": {
      "type": "integer",
      "_name_": "passiveportsmax",
      "title": "passiveportsmax"
     },
     "localuserbw": {
      "type": "integer",
      "_name_": "localuserbw",
      "title": "localuserbw",
      "description": "`localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration )."
     },
     "localuserdlbw": {
      "type": "integer",
      "_name_": "localuserdlbw",
      "title": "localuserdlbw",
      "description": "`localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.\nDefault of zero indicates unlimited download bandwidth ( from the FTP server configuration )."
     },
     "anonuserbw": {
      "type": "integer",
      "_name_": "anonuserbw",
      "title": "anonuserbw",
      "description": "`anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.\nDefault of zero indicates unlimited upload bandwidth ( from the FTP server configuration )."
     },
     "anonuserdlbw": {
      "type": "integer",
      "_name_": "anonuserdlbw",
      "title": "anonuserdlbw",
      "description": "`anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous\nuser. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration )."
     },
     "tls": {
      "type": "boolean",
      "_name_": "tls",
      "title": "tls",
      "description": "`tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a\ncertificate to be configured first with the certificate service and the id of certificate is passed on in"
     },
     "tls_policy": {
      "_name_": "tls_policy",
      "title": "tls_policy",
      "type": "string",
      "enum": [
       "on",
       "off",
       "data",
       "!data",
       "auth",
       "ctrl",
       "ctrl+data",
       "ctrl+!data",
       "auth+data",
       "auth+!data"
      ],
      "description": "`tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP\nsession must occur over SSL/TLS."
     },
     "tls_opt_allow_client_renegotiations": {
      "type": "boolean",
      "_name_": "tls_opt_allow_client_renegotiations",
      "title": "tls_opt_allow_client_renegotiations"
     },
     "tls_opt_allow_dot_login": {
      "type": "boolean",
      "_name_": "tls_opt_allow_dot_login",
      "title": "tls_opt_allow_dot_login"
     },
     "tls_opt_allow_per_user": {
      "type": "boolean",
      "_name_": "tls_opt_allow_per_user",
      "title": "tls_opt_allow_per_user"
     },
     "tls_opt_common_name_required": {
      "type": "boolean",
      "_name_": "tls_opt_common_name_required",
      "title": "tls_opt_common_name_required"
     },
     "tls_opt_enable_diags": {
      "type": "boolean",
      "_name_": "tls_opt_enable_diags",
      "title": "tls_opt_enable_diags",
      "description": "`tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a\nconnection."
     },
     "tls_opt_export_cert_data": {
      "type": "boolean",
      "_name_": "tls_opt_export_cert_data",
      "title": "tls_opt_export_cert_data"
     },
     "tls_opt_no_empty_fragments": {
      "type": "boolean",
      "_name_": "tls_opt_no_empty_fragments",
      "title": "tls_opt_no_empty_fragments"
     },
     "tls_opt_no_session_reuse_required": {
      "type": "boolean",
      "_name_": "tls_opt_no_session_reuse_required",
      "title": "tls_opt_no_session_reuse_required"
     },
     "tls_opt_stdenvvars": {
      "type": "boolean",
      "_name_": "tls_opt_stdenvvars",
      "title": "tls_opt_stdenvvars"
     },
     "tls_opt_dns_name_required": {
      "type": "boolean",
      "_name_": "tls_opt_dns_name_required",
      "title": "tls_opt_dns_name_required"
     },
     "tls_opt_ip_address_required": {
      "type": "boolean",
      "_name_": "tls_opt_ip_address_required",
      "title": "tls_opt_ip_address_required"
     },
     "ssltls_certificate": {
      "type": "integer",
      "_name_": "ssltls_certificate",
      "title": "ssltls_certificate",
      "description": "`ssltls_certificate`.",
      "nullable": true
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "ftp_update_returns",
    "title": "ftp_update_returns",
    "default": {},
    "_attrs_order_": [
     "port",
     "clients",
     "ipconnections",
     "loginattempt",
     "timeout",
     "timeout_notransfer",
     "rootlogin",
     "onlyanonymous",
     "anonpath",
     "onlylocal",
     "banner",
     "filemask",
     "dirmask",
     "fxp",
     "resume",
     "defaultroot",
     "ident",
     "reversedns",
     "masqaddress",
     "passiveportsmin",
     "passiveportsmax",
     "localuserbw",
     "localuserdlbw",
     "anonuserbw",
     "anonuserdlbw",
     "tls",
     "tls_policy",
     "tls_opt_allow_client_renegotiations",
     "tls_opt_allow_dot_login",
     "tls_opt_allow_per_user",
     "tls_opt_common_name_required",
     "tls_opt_enable_diags",
     "tls_opt_export_cert_data",
     "tls_opt_no_empty_fragments",
     "tls_opt_no_session_reuse_required",
     "tls_opt_stdenvvars",
     "tls_opt_dns_name_required",
     "tls_opt_ip_address_required",
     "ssltls_certificate",
     "options",
     "id"
    ]
   },
   "return_schema_of_group_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "gid": {
          "type": "integer",
          "_name_": "gid",
          "title": "gid",
          "_required_": false
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "smb": {
          "type": "boolean",
          "_name_": "smb",
          "title": "smb",
          "default": true,
          "_required_": false
         },
         "sudo_commands": {
          "_name_": "sudo_commands",
          "title": "sudo_commands",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "command",
            "title": "command",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "sudo_commands_nopasswd": {
          "_name_": "sudo_commands_nopasswd",
          "title": "sudo_commands_nopasswd",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "command",
            "title": "command",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "users": {
          "_name_": "users",
          "title": "users",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "_required_": false
           }
          ]
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "group": {
          "_name_": "group",
          "title": "group",
          "_required_": false,
          "type": "string"
         },
         "builtin": {
          "type": "boolean",
          "_name_": "builtin",
          "title": "builtin",
          "_required_": false
         },
         "id_type_both": {
          "type": "boolean",
          "_name_": "id_type_both",
          "title": "id_type_both",
          "_required_": false
         },
         "local": {
          "type": "boolean",
          "_name_": "local",
          "title": "local",
          "_required_": false
         },
         "nt_name": {
          "_name_": "nt_name",
          "title": "nt_name",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "sid": {
          "_name_": "sid",
          "title": "sid",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "roles": {
          "_name_": "roles",
          "title": "roles",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "role",
            "title": "role",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "group_entry",
        "title": "group_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "gid",
         "name",
         "smb",
         "sudo_commands",
         "sudo_commands_nopasswd",
         "users",
         "id",
         "group",
         "builtin",
         "id_type_both",
         "local",
         "nt_name",
         "sid",
         "roles"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "gid": {
        "type": "integer",
        "_name_": "gid",
        "title": "gid",
        "_required_": false
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "smb": {
        "type": "boolean",
        "_name_": "smb",
        "title": "smb",
        "default": true,
        "_required_": false
       },
       "sudo_commands": {
        "_name_": "sudo_commands",
        "title": "sudo_commands",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sudo_commands_nopasswd": {
        "_name_": "sudo_commands_nopasswd",
        "title": "sudo_commands_nopasswd",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "users": {
        "_name_": "users",
        "title": "users",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        ]
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "group": {
        "_name_": "group",
        "title": "group",
        "_required_": false,
        "type": "string"
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       },
       "id_type_both": {
        "type": "boolean",
        "_name_": "id_type_both",
        "title": "id_type_both",
        "_required_": false
       },
       "local": {
        "type": "boolean",
        "_name_": "local",
        "title": "local",
        "_required_": false
       },
       "nt_name": {
        "_name_": "nt_name",
        "title": "nt_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "sid": {
        "_name_": "sid",
        "title": "sid",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "roles": {
        "_name_": "roles",
        "title": "roles",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "role",
          "title": "role",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "group_entry",
      "title": "group_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "gid",
       "name",
       "smb",
       "sudo_commands",
       "sudo_commands_nopasswd",
       "users",
       "id",
       "group",
       "builtin",
       "id_type_both",
       "local",
       "nt_name",
       "sid",
       "roles"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "gid": {
        "type": "integer",
        "_name_": "gid",
        "title": "gid",
        "_required_": false
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "smb": {
        "type": "boolean",
        "_name_": "smb",
        "title": "smb",
        "default": true,
        "_required_": false
       },
       "sudo_commands": {
        "_name_": "sudo_commands",
        "title": "sudo_commands",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sudo_commands_nopasswd": {
        "_name_": "sudo_commands_nopasswd",
        "title": "sudo_commands_nopasswd",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "users": {
        "_name_": "users",
        "title": "users",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        ]
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "group": {
        "_name_": "group",
        "title": "group",
        "_required_": false,
        "type": "string"
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       },
       "id_type_both": {
        "type": "boolean",
        "_name_": "id_type_both",
        "title": "id_type_both",
        "_required_": false
       },
       "local": {
        "type": "boolean",
        "_name_": "local",
        "title": "local",
        "_required_": false
       },
       "nt_name": {
        "_name_": "nt_name",
        "title": "nt_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "sid": {
        "_name_": "sid",
        "title": "sid",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "roles": {
        "_name_": "roles",
        "title": "roles",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "role",
          "title": "role",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "group_entry",
      "title": "group_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "gid",
       "name",
       "smb",
       "sudo_commands",
       "sudo_commands_nopasswd",
       "users",
       "id",
       "group",
       "builtin",
       "id_type_both",
       "local",
       "nt_name",
       "sid",
       "roles"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "group_create": {
    "type": "object",
    "properties": {
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "description": "If `gid` is not provided it is automatically filled with the next one available."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "smb": {
      "type": "boolean",
      "_name_": "smb",
      "title": "smb",
      "default": true
     },
     "sudo_commands": {
      "_name_": "sudo_commands",
      "title": "sudo_commands",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sudo_commands_nopasswd": {
      "_name_": "sudo_commands_nopasswd",
      "title": "sudo_commands_nopasswd",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "allow_duplicate_gid": {
      "type": "boolean",
      "_name_": "allow_duplicate_gid",
      "title": "allow_duplicate_gid",
      "default": false,
      "description": "`allow_duplicate_gid` allows distinct group names to share the same gid."
     },
     "users": {
      "_name_": "users",
      "title": "users",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      },
      "description": "`users` is a list of user ids (`id` attribute from `user.query`)."
     }
    },
    "additionalProperties": false,
    "_name_": "group_create",
    "title": "group_create",
    "default": {},
    "_attrs_order_": [
     "gid",
     "name",
     "smb",
     "sudo_commands",
     "sudo_commands_nopasswd",
     "allow_duplicate_gid",
     "users"
    ]
   },
   "return_schema_of_group_create": {
    "type": "integer",
    "_name_": "primary_key",
    "title": "primary_key"
   },
   "group_delete": {
    "type": "object",
    "properties": {
     "delete_users": {
      "type": "boolean",
      "_name_": "delete_users",
      "title": "delete_users",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "delete_users"
    ]
   },
   "return_schema_of_group_delete": {
    "type": "integer",
    "_name_": "primary_key",
    "title": "primary_key"
   },
   "group_update": {
    "type": "object",
    "properties": {
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "description": "If `gid` is not provided it is automatically filled with the next one available."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "smb": {
      "type": "boolean",
      "_name_": "smb",
      "title": "smb",
      "default": true
     },
     "sudo_commands": {
      "_name_": "sudo_commands",
      "title": "sudo_commands",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sudo_commands_nopasswd": {
      "_name_": "sudo_commands_nopasswd",
      "title": "sudo_commands_nopasswd",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "allow_duplicate_gid": {
      "type": "boolean",
      "_name_": "allow_duplicate_gid",
      "title": "allow_duplicate_gid",
      "default": false,
      "description": "`allow_duplicate_gid` allows distinct group names to share the same gid."
     },
     "users": {
      "_name_": "users",
      "title": "users",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      },
      "description": "`users` is a list of user ids (`id` attribute from `user.query`)."
     }
    },
    "additionalProperties": false,
    "_name_": "group_update",
    "title": "group_update",
    "default": {},
    "_attrs_order_": [
     "gid",
     "name",
     "smb",
     "sudo_commands",
     "sudo_commands_nopasswd",
     "allow_duplicate_gid",
     "users"
    ]
   },
   "return_schema_of_group_update": {
    "type": "integer",
    "_name_": "primary_key",
    "title": "primary_key"
   },
   "group_get_group_obj": {
    "type": "object",
    "properties": {
     "groupname": {
      "_name_": "groupname",
      "title": "groupname",
      "default": null,
      "type": "string"
     },
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid",
      "default": null
     }
    },
    "additionalProperties": false,
    "_name_": "get_group_obj",
    "title": "get_group_obj",
    "default": {},
    "_attrs_order_": [
     "groupname",
     "gid"
    ]
   },
   "return_schema_of_group_get_group_obj": {
    "type": "object",
    "properties": {
     "gr_name": {
      "_name_": "gr_name",
      "title": "gr_name",
      "type": "string"
     },
     "gr_gid": {
      "type": "integer",
      "_name_": "gr_gid",
      "title": "gr_gid"
     },
     "gr_mem": {
      "_name_": "gr_mem",
      "title": "gr_mem",
      "default": [],
      "type": "array",
      "items": {}
     }
    },
    "additionalProperties": false,
    "_name_": "group_info",
    "title": "group_info",
    "default": {},
    "_attrs_order_": [
     "gr_name",
     "gr_gid",
     "gr_mem"
    ]
   },
   "group_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "group_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "group_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/group_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/group_get_instance_1"
     }
    }
   },
   "return_schema_of_group_get_instance": {
    "type": "object",
    "properties": {
     "gid": {
      "type": "integer",
      "_name_": "gid",
      "title": "gid"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "smb": {
      "type": "boolean",
      "_name_": "smb",
      "title": "smb",
      "default": true
     },
     "sudo_commands": {
      "_name_": "sudo_commands",
      "title": "sudo_commands",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sudo_commands_nopasswd": {
      "_name_": "sudo_commands_nopasswd",
      "title": "sudo_commands_nopasswd",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "users": {
      "_name_": "users",
      "title": "users",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      }
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "group": {
      "_name_": "group",
      "title": "group",
      "type": "string"
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     },
     "id_type_both": {
      "type": "boolean",
      "_name_": "id_type_both",
      "title": "id_type_both"
     },
     "local": {
      "type": "boolean",
      "_name_": "local",
      "title": "local"
     },
     "nt_name": {
      "_name_": "nt_name",
      "title": "nt_name",
      "type": "string",
      "nullable": true
     },
     "sid": {
      "_name_": "sid",
      "title": "sid",
      "type": "string",
      "nullable": true
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "group_entry",
    "title": "group_entry",
    "default": {},
    "_attrs_order_": [
     "gid",
     "name",
     "smb",
     "sudo_commands",
     "sudo_commands_nopasswd",
     "users",
     "id",
     "group",
     "builtin",
     "id_type_both",
     "local",
     "nt_name",
     "sid",
     "roles"
    ]
   },
   "return_schema_of_group_get_next_gid": {
    "type": "integer",
    "_name_": "next_available_gid",
    "title": "next_available_gid"
   },
   "group_has_password_enabled_user_0": {
    "_name_": "gids",
    "title": "gids",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "gid",
     "title": "gid",
     "_required_": false
    }
   },
   "group_has_password_enabled_user_1": {
    "_name_": "exclude_user_ids",
    "title": "exclude_user_ids",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "exclude_user_id",
     "title": "exclude_user_id",
     "_required_": false
    }
   },
   "group_has_password_enabled_user": {
    "type": "object",
    "properties": {
     "gids": {
      "$ref": "#/components/schemas/group_has_password_enabled_user_0"
     },
     "exclude_user_ids": {
      "$ref": "#/components/schemas/group_has_password_enabled_user_1"
     }
    }
   },
   "return_schema_of_hardware_cpu_available_governors": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "governor",
    "title": "governor",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_hardware_cpu_current_governor": {
    "_name_": "governor",
    "title": "governor",
    "type": "string"
   },
   "hardware_cpu_set_governor": {
    "_name_": "governor",
    "title": "governor",
    "type": "string"
   },
   "return_schema_of_hardware_memory_error_info": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "mem_ctrl",
    "title": "mem_ctrl",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_idmap_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "dns_domain_name": {
          "_name_": "dns_domain_name",
          "title": "dns_domain_name",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "range_low": {
          "type": "integer",
          "_name_": "range_low",
          "title": "range_low",
          "_required_": true
         },
         "range_high": {
          "type": "integer",
          "_name_": "range_high",
          "title": "range_high",
          "_required_": true
         },
         "idmap_backend": {
          "_name_": "idmap_backend",
          "title": "idmap_backend",
          "_required_": true,
          "type": "string",
          "enum": [
           "AD",
           "AUTORID",
           "LDAP",
           "NSS",
           "RFC2307",
           "RID",
           "TDB"
          ]
         },
         "certificate": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "certificate",
          "title": "certificate",
          "_required_": false
         },
         "options": {
          "anyOf": [
           {
            "type": "object",
            "properties": {
             "schema_mode": {
              "_name_": "schema_mode",
              "title": "nss_info_ad",
              "default": "SFU",
              "_required_": false,
              "type": "string",
              "enum": [
               "SFU",
               "SFU20",
               "RFC2307",
               "TEMPLATE"
              ]
             },
             "unix_primary_group": {
              "type": "boolean",
              "_name_": "unix_primary_group",
              "title": "unix_primary_group",
              "default": false,
              "_required_": false
             },
             "unix_nss_info": {
              "type": "boolean",
              "_name_": "unix_nss_info",
              "title": "unix_nss_info",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "idmap_ad_options",
            "title": "idmap_ad_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "schema_mode",
             "unix_primary_group",
             "unix_nss_info"
            ]
           },
           {
            "type": "object",
            "properties": {
             "rangesize": {
              "type": "integer",
              "_name_": "rangesize",
              "title": "rangesize",
              "default": 100000,
              "_required_": false
             },
             "readonly": {
              "type": "boolean",
              "_name_": "readonly",
              "title": "readonly",
              "default": false,
              "_required_": false
             },
             "ignore_builtin": {
              "type": "boolean",
              "_name_": "ignore_builtin",
              "title": "ignore_builtin",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "idmap_autorid_options",
            "title": "idmap_autorid_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "rangesize",
             "readonly",
             "ignore_builtin"
            ]
           },
           {
            "type": "object",
            "properties": {
             "ldap_base_dn": {
              "_name_": "ldap_base_dn",
              "title": "ldap_base_dn",
              "_required_": false,
              "type": "string"
             },
             "ldap_user_dn": {
              "_name_": "ldap_user_dn",
              "title": "ldap_user_dn",
              "_required_": false,
              "type": "string"
             },
             "ldap_user_dn_password": {
              "_name_": "ldap_user_dn_password",
              "title": "ldap_user_dn_password",
              "_required_": false,
              "type": "string"
             },
             "ldap_url": {
              "_name_": "ldap_url",
              "title": "ldap_url",
              "_required_": false,
              "type": "string"
             },
             "readonly": {
              "type": "boolean",
              "_name_": "readonly",
              "title": "readonly",
              "default": false,
              "_required_": false
             },
             "ssl": {
              "_name_": "ssl",
              "title": "ldap_ssl_choice",
              "default": "ON",
              "_required_": false,
              "type": "string",
              "enum": [
               "OFF",
               "ON",
               "START_TLS"
              ]
             },
             "validate_certificates": {
              "type": "boolean",
              "_name_": "validate_certificates",
              "title": "validate_certificates",
              "default": true,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "idmap_ldap_options",
            "title": "idmap_ldap_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "ldap_base_dn",
             "ldap_user_dn",
             "ldap_user_dn_password",
             "ldap_url",
             "readonly",
             "ssl",
             "validate_certificates"
            ]
           },
           {
            "type": "object",
            "properties": {
             "linked_service": {
              "_name_": "linked_service",
              "title": "linked_service",
              "default": "LOCAL_ACCOUNT",
              "_required_": false,
              "type": "string",
              "enum": [
               "LOCAL_ACCOUNT",
               "LDAP"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "idmap_nss_options",
            "title": "idmap_nss_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "linked_service"
            ]
           },
           {
            "type": "object",
            "properties": {
             "ldap_server": {
              "_name_": "ldap_server",
              "title": "ldap_server",
              "_required_": true,
              "type": "string",
              "enum": [
               "AD",
               "STANDALONE"
              ]
             },
             "ldap_realm": {
              "type": "boolean",
              "_name_": "ldap_realm",
              "title": "ldap_realm",
              "default": false,
              "_required_": false
             },
             "bind_path_user": {
              "_name_": "bind_path_user",
              "title": "bind_path_user",
              "_required_": false,
              "type": "string"
             },
             "bind_path_group": {
              "_name_": "bind_path_group",
              "title": "bind_path_group",
              "_required_": false,
              "type": "string"
             },
             "user_cn": {
              "type": "boolean",
              "_name_": "user_cn",
              "title": "user_cn",
              "default": false,
              "_required_": false
             },
             "cn_realm": {
              "_name_": "cn_realm",
              "title": "cn_realm",
              "_required_": false,
              "type": "string"
             },
             "ldap_domain": {
              "_name_": "ldap_domain",
              "title": "ldap_domain",
              "_required_": false,
              "type": "string"
             },
             "ldap_url": {
              "_name_": "ldap_url",
              "title": "ldap_url",
              "_required_": false,
              "type": "string"
             },
             "ldap_user_dn": {
              "_name_": "ldap_user_dn",
              "title": "ldap_user_dn",
              "_required_": false,
              "type": "string"
             },
             "ldap_user_dn_password": {
              "_name_": "ldap_user_dn_password",
              "title": "ldap_user_dn_password",
              "_required_": false,
              "type": "string"
             },
             "ssl": {
              "_name_": "ssl",
              "title": "ldap_ssl_choice",
              "default": "ON",
              "_required_": false,
              "type": "string",
              "enum": [
               "OFF",
               "ON",
               "START_TLS"
              ]
             },
             "validate_certificates": {
              "type": "boolean",
              "_name_": "validate_certificates",
              "title": "validate_certificates",
              "default": true,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "idmap_rfc2307_options",
            "title": "idmap_rfc2307_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "ldap_server",
             "ldap_realm",
             "bind_path_user",
             "bind_path_group",
             "user_cn",
             "cn_realm",
             "ldap_domain",
             "ldap_url",
             "ldap_user_dn",
             "ldap_user_dn_password",
             "ssl",
             "validate_certificates"
            ]
           },
           {
            "type": "object",
            "properties": {
             "sssd_compat": {
              "type": "boolean",
              "_name_": "sssd_compat",
              "title": "sssd_compat",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "idmap_rid_options",
            "title": "idmap_rid_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "sssd_compat"
            ]
           },
           {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "_name_": "idmap_tdb_options",
            "title": "idmap_tdb_options",
            "default": {},
            "_required_": false,
            "_attrs_order_": []
           }
          ],
          "nullable": false,
          "_name_": "options",
          "description": null,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_domain_entry",
        "title": "idmap_domain_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "dns_domain_name",
         "range_low",
         "range_high",
         "idmap_backend",
         "certificate",
         "options",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "dns_domain_name": {
        "_name_": "dns_domain_name",
        "title": "dns_domain_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "range_low": {
        "type": "integer",
        "_name_": "range_low",
        "title": "range_low",
        "_required_": true
       },
       "range_high": {
        "type": "integer",
        "_name_": "range_high",
        "title": "range_high",
        "_required_": true
       },
       "idmap_backend": {
        "_name_": "idmap_backend",
        "title": "idmap_backend",
        "_required_": true,
        "type": "string",
        "enum": [
         "AD",
         "AUTORID",
         "LDAP",
         "NSS",
         "RFC2307",
         "RID",
         "TDB"
        ]
       },
       "certificate": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "certificate",
        "title": "certificate",
        "_required_": false
       },
       "options": {
        "anyOf": [
         {
          "type": "object",
          "properties": {
           "schema_mode": {
            "_name_": "schema_mode",
            "title": "nss_info_ad",
            "default": "SFU",
            "_required_": false,
            "type": "string",
            "enum": [
             "SFU",
             "SFU20",
             "RFC2307",
             "TEMPLATE"
            ]
           },
           "unix_primary_group": {
            "type": "boolean",
            "_name_": "unix_primary_group",
            "title": "unix_primary_group",
            "default": false,
            "_required_": false
           },
           "unix_nss_info": {
            "type": "boolean",
            "_name_": "unix_nss_info",
            "title": "unix_nss_info",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_ad_options",
          "title": "idmap_ad_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "schema_mode",
           "unix_primary_group",
           "unix_nss_info"
          ]
         },
         {
          "type": "object",
          "properties": {
           "rangesize": {
            "type": "integer",
            "_name_": "rangesize",
            "title": "rangesize",
            "default": 100000,
            "_required_": false
           },
           "readonly": {
            "type": "boolean",
            "_name_": "readonly",
            "title": "readonly",
            "default": false,
            "_required_": false
           },
           "ignore_builtin": {
            "type": "boolean",
            "_name_": "ignore_builtin",
            "title": "ignore_builtin",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_autorid_options",
          "title": "idmap_autorid_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "rangesize",
           "readonly",
           "ignore_builtin"
          ]
         },
         {
          "type": "object",
          "properties": {
           "ldap_base_dn": {
            "_name_": "ldap_base_dn",
            "title": "ldap_base_dn",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn": {
            "_name_": "ldap_user_dn",
            "title": "ldap_user_dn",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn_password": {
            "_name_": "ldap_user_dn_password",
            "title": "ldap_user_dn_password",
            "_required_": false,
            "type": "string"
           },
           "ldap_url": {
            "_name_": "ldap_url",
            "title": "ldap_url",
            "_required_": false,
            "type": "string"
           },
           "readonly": {
            "type": "boolean",
            "_name_": "readonly",
            "title": "readonly",
            "default": false,
            "_required_": false
           },
           "ssl": {
            "_name_": "ssl",
            "title": "ldap_ssl_choice",
            "default": "ON",
            "_required_": false,
            "type": "string",
            "enum": [
             "OFF",
             "ON",
             "START_TLS"
            ]
           },
           "validate_certificates": {
            "type": "boolean",
            "_name_": "validate_certificates",
            "title": "validate_certificates",
            "default": true,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_ldap_options",
          "title": "idmap_ldap_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "ldap_base_dn",
           "ldap_user_dn",
           "ldap_user_dn_password",
           "ldap_url",
           "readonly",
           "ssl",
           "validate_certificates"
          ]
         },
         {
          "type": "object",
          "properties": {
           "linked_service": {
            "_name_": "linked_service",
            "title": "linked_service",
            "default": "LOCAL_ACCOUNT",
            "_required_": false,
            "type": "string",
            "enum": [
             "LOCAL_ACCOUNT",
             "LDAP"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_nss_options",
          "title": "idmap_nss_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "linked_service"
          ]
         },
         {
          "type": "object",
          "properties": {
           "ldap_server": {
            "_name_": "ldap_server",
            "title": "ldap_server",
            "_required_": true,
            "type": "string",
            "enum": [
             "AD",
             "STANDALONE"
            ]
           },
           "ldap_realm": {
            "type": "boolean",
            "_name_": "ldap_realm",
            "title": "ldap_realm",
            "default": false,
            "_required_": false
           },
           "bind_path_user": {
            "_name_": "bind_path_user",
            "title": "bind_path_user",
            "_required_": false,
            "type": "string"
           },
           "bind_path_group": {
            "_name_": "bind_path_group",
            "title": "bind_path_group",
            "_required_": false,
            "type": "string"
           },
           "user_cn": {
            "type": "boolean",
            "_name_": "user_cn",
            "title": "user_cn",
            "default": false,
            "_required_": false
           },
           "cn_realm": {
            "_name_": "cn_realm",
            "title": "cn_realm",
            "_required_": false,
            "type": "string"
           },
           "ldap_domain": {
            "_name_": "ldap_domain",
            "title": "ldap_domain",
            "_required_": false,
            "type": "string"
           },
           "ldap_url": {
            "_name_": "ldap_url",
            "title": "ldap_url",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn": {
            "_name_": "ldap_user_dn",
            "title": "ldap_user_dn",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn_password": {
            "_name_": "ldap_user_dn_password",
            "title": "ldap_user_dn_password",
            "_required_": false,
            "type": "string"
           },
           "ssl": {
            "_name_": "ssl",
            "title": "ldap_ssl_choice",
            "default": "ON",
            "_required_": false,
            "type": "string",
            "enum": [
             "OFF",
             "ON",
             "START_TLS"
            ]
           },
           "validate_certificates": {
            "type": "boolean",
            "_name_": "validate_certificates",
            "title": "validate_certificates",
            "default": true,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_rfc2307_options",
          "title": "idmap_rfc2307_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "ldap_server",
           "ldap_realm",
           "bind_path_user",
           "bind_path_group",
           "user_cn",
           "cn_realm",
           "ldap_domain",
           "ldap_url",
           "ldap_user_dn",
           "ldap_user_dn_password",
           "ssl",
           "validate_certificates"
          ]
         },
         {
          "type": "object",
          "properties": {
           "sssd_compat": {
            "type": "boolean",
            "_name_": "sssd_compat",
            "title": "sssd_compat",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_rid_options",
          "title": "idmap_rid_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "sssd_compat"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "_name_": "idmap_tdb_options",
          "title": "idmap_tdb_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "options",
        "description": null,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "idmap_domain_entry",
      "title": "idmap_domain_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "dns_domain_name",
       "range_low",
       "range_high",
       "idmap_backend",
       "certificate",
       "options",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "dns_domain_name": {
        "_name_": "dns_domain_name",
        "title": "dns_domain_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "range_low": {
        "type": "integer",
        "_name_": "range_low",
        "title": "range_low",
        "_required_": true
       },
       "range_high": {
        "type": "integer",
        "_name_": "range_high",
        "title": "range_high",
        "_required_": true
       },
       "idmap_backend": {
        "_name_": "idmap_backend",
        "title": "idmap_backend",
        "_required_": true,
        "type": "string",
        "enum": [
         "AD",
         "AUTORID",
         "LDAP",
         "NSS",
         "RFC2307",
         "RID",
         "TDB"
        ]
       },
       "certificate": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "certificate",
        "title": "certificate",
        "_required_": false
       },
       "options": {
        "anyOf": [
         {
          "type": "object",
          "properties": {
           "schema_mode": {
            "_name_": "schema_mode",
            "title": "nss_info_ad",
            "default": "SFU",
            "_required_": false,
            "type": "string",
            "enum": [
             "SFU",
             "SFU20",
             "RFC2307",
             "TEMPLATE"
            ]
           },
           "unix_primary_group": {
            "type": "boolean",
            "_name_": "unix_primary_group",
            "title": "unix_primary_group",
            "default": false,
            "_required_": false
           },
           "unix_nss_info": {
            "type": "boolean",
            "_name_": "unix_nss_info",
            "title": "unix_nss_info",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_ad_options",
          "title": "idmap_ad_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "schema_mode",
           "unix_primary_group",
           "unix_nss_info"
          ]
         },
         {
          "type": "object",
          "properties": {
           "rangesize": {
            "type": "integer",
            "_name_": "rangesize",
            "title": "rangesize",
            "default": 100000,
            "_required_": false
           },
           "readonly": {
            "type": "boolean",
            "_name_": "readonly",
            "title": "readonly",
            "default": false,
            "_required_": false
           },
           "ignore_builtin": {
            "type": "boolean",
            "_name_": "ignore_builtin",
            "title": "ignore_builtin",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_autorid_options",
          "title": "idmap_autorid_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "rangesize",
           "readonly",
           "ignore_builtin"
          ]
         },
         {
          "type": "object",
          "properties": {
           "ldap_base_dn": {
            "_name_": "ldap_base_dn",
            "title": "ldap_base_dn",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn": {
            "_name_": "ldap_user_dn",
            "title": "ldap_user_dn",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn_password": {
            "_name_": "ldap_user_dn_password",
            "title": "ldap_user_dn_password",
            "_required_": false,
            "type": "string"
           },
           "ldap_url": {
            "_name_": "ldap_url",
            "title": "ldap_url",
            "_required_": false,
            "type": "string"
           },
           "readonly": {
            "type": "boolean",
            "_name_": "readonly",
            "title": "readonly",
            "default": false,
            "_required_": false
           },
           "ssl": {
            "_name_": "ssl",
            "title": "ldap_ssl_choice",
            "default": "ON",
            "_required_": false,
            "type": "string",
            "enum": [
             "OFF",
             "ON",
             "START_TLS"
            ]
           },
           "validate_certificates": {
            "type": "boolean",
            "_name_": "validate_certificates",
            "title": "validate_certificates",
            "default": true,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_ldap_options",
          "title": "idmap_ldap_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "ldap_base_dn",
           "ldap_user_dn",
           "ldap_user_dn_password",
           "ldap_url",
           "readonly",
           "ssl",
           "validate_certificates"
          ]
         },
         {
          "type": "object",
          "properties": {
           "linked_service": {
            "_name_": "linked_service",
            "title": "linked_service",
            "default": "LOCAL_ACCOUNT",
            "_required_": false,
            "type": "string",
            "enum": [
             "LOCAL_ACCOUNT",
             "LDAP"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_nss_options",
          "title": "idmap_nss_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "linked_service"
          ]
         },
         {
          "type": "object",
          "properties": {
           "ldap_server": {
            "_name_": "ldap_server",
            "title": "ldap_server",
            "_required_": true,
            "type": "string",
            "enum": [
             "AD",
             "STANDALONE"
            ]
           },
           "ldap_realm": {
            "type": "boolean",
            "_name_": "ldap_realm",
            "title": "ldap_realm",
            "default": false,
            "_required_": false
           },
           "bind_path_user": {
            "_name_": "bind_path_user",
            "title": "bind_path_user",
            "_required_": false,
            "type": "string"
           },
           "bind_path_group": {
            "_name_": "bind_path_group",
            "title": "bind_path_group",
            "_required_": false,
            "type": "string"
           },
           "user_cn": {
            "type": "boolean",
            "_name_": "user_cn",
            "title": "user_cn",
            "default": false,
            "_required_": false
           },
           "cn_realm": {
            "_name_": "cn_realm",
            "title": "cn_realm",
            "_required_": false,
            "type": "string"
           },
           "ldap_domain": {
            "_name_": "ldap_domain",
            "title": "ldap_domain",
            "_required_": false,
            "type": "string"
           },
           "ldap_url": {
            "_name_": "ldap_url",
            "title": "ldap_url",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn": {
            "_name_": "ldap_user_dn",
            "title": "ldap_user_dn",
            "_required_": false,
            "type": "string"
           },
           "ldap_user_dn_password": {
            "_name_": "ldap_user_dn_password",
            "title": "ldap_user_dn_password",
            "_required_": false,
            "type": "string"
           },
           "ssl": {
            "_name_": "ssl",
            "title": "ldap_ssl_choice",
            "default": "ON",
            "_required_": false,
            "type": "string",
            "enum": [
             "OFF",
             "ON",
             "START_TLS"
            ]
           },
           "validate_certificates": {
            "type": "boolean",
            "_name_": "validate_certificates",
            "title": "validate_certificates",
            "default": true,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_rfc2307_options",
          "title": "idmap_rfc2307_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "ldap_server",
           "ldap_realm",
           "bind_path_user",
           "bind_path_group",
           "user_cn",
           "cn_realm",
           "ldap_domain",
           "ldap_url",
           "ldap_user_dn",
           "ldap_user_dn_password",
           "ssl",
           "validate_certificates"
          ]
         },
         {
          "type": "object",
          "properties": {
           "sssd_compat": {
            "type": "boolean",
            "_name_": "sssd_compat",
            "title": "sssd_compat",
            "default": false,
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "idmap_rid_options",
          "title": "idmap_rid_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "sssd_compat"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "_name_": "idmap_tdb_options",
          "title": "idmap_tdb_options",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "options",
        "description": null,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "idmap_domain_entry",
      "title": "idmap_domain_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "dns_domain_name",
       "range_low",
       "range_high",
       "idmap_backend",
       "certificate",
       "options",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "idmap_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` the pre-windows 2000 domain name."
     },
     "dns_domain_name": {
      "_name_": "dns_domain_name",
      "title": "dns_domain_name",
      "type": "string",
      "nullable": true
     },
     "range_low": {
      "type": "integer",
      "_name_": "range_low",
      "title": "range_low",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "range_high": {
      "type": "integer",
      "_name_": "range_high",
      "title": "range_high",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "idmap_backend": {
      "_name_": "idmap_backend",
      "title": "idmap_backend",
      "type": "string",
      "enum": [
       "AD",
       "AUTORID",
       "LDAP",
       "NSS",
       "RFC2307",
       "RID",
       "TDB"
      ],
      "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "options": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "schema_mode": {
          "_name_": "schema_mode",
          "title": "nss_info_ad",
          "default": "SFU",
          "_required_": false,
          "type": "string",
          "enum": [
           "SFU",
           "SFU20",
           "RFC2307",
           "TEMPLATE"
          ]
         },
         "unix_primary_group": {
          "type": "boolean",
          "_name_": "unix_primary_group",
          "title": "unix_primary_group",
          "default": false,
          "_required_": false
         },
         "unix_nss_info": {
          "type": "boolean",
          "_name_": "unix_nss_info",
          "title": "unix_nss_info",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ad_options",
        "title": "idmap_ad_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "schema_mode",
         "unix_primary_group",
         "unix_nss_info"
        ]
       },
       {
        "type": "object",
        "properties": {
         "rangesize": {
          "type": "integer",
          "_name_": "rangesize",
          "title": "rangesize",
          "default": 100000,
          "_required_": false
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ignore_builtin": {
          "type": "boolean",
          "_name_": "ignore_builtin",
          "title": "ignore_builtin",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_autorid_options",
        "title": "idmap_autorid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "rangesize",
         "readonly",
         "ignore_builtin"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_base_dn": {
          "_name_": "ldap_base_dn",
          "title": "ldap_base_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ldap_options",
        "title": "idmap_ldap_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_base_dn",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ldap_url",
         "readonly",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "linked_service": {
          "_name_": "linked_service",
          "title": "linked_service",
          "default": "LOCAL_ACCOUNT",
          "_required_": false,
          "type": "string",
          "enum": [
           "LOCAL_ACCOUNT",
           "LDAP"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_nss_options",
        "title": "idmap_nss_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "linked_service"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_server": {
          "_name_": "ldap_server",
          "title": "ldap_server",
          "_required_": true,
          "type": "string",
          "enum": [
           "AD",
           "STANDALONE"
          ]
         },
         "ldap_realm": {
          "type": "boolean",
          "_name_": "ldap_realm",
          "title": "ldap_realm",
          "default": false,
          "_required_": false
         },
         "bind_path_user": {
          "_name_": "bind_path_user",
          "title": "bind_path_user",
          "_required_": false,
          "type": "string"
         },
         "bind_path_group": {
          "_name_": "bind_path_group",
          "title": "bind_path_group",
          "_required_": false,
          "type": "string"
         },
         "user_cn": {
          "type": "boolean",
          "_name_": "user_cn",
          "title": "user_cn",
          "default": false,
          "_required_": false
         },
         "cn_realm": {
          "_name_": "cn_realm",
          "title": "cn_realm",
          "_required_": false,
          "type": "string"
         },
         "ldap_domain": {
          "_name_": "ldap_domain",
          "title": "ldap_domain",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rfc2307_options",
        "title": "idmap_rfc2307_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_server",
         "ldap_realm",
         "bind_path_user",
         "bind_path_group",
         "user_cn",
         "cn_realm",
         "ldap_domain",
         "ldap_url",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "sssd_compat": {
          "type": "boolean",
          "_name_": "sssd_compat",
          "title": "sssd_compat",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rid_options",
        "title": "idmap_rid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "sssd_compat"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "idmap_tdb_options",
        "title": "idmap_tdb_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "options",
      "description": "`options` are additional parameters that are backend-dependent:"
     }
    },
    "additionalProperties": false,
    "_name_": "idmap_domain_create",
    "title": "idmap_domain_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "dns_domain_name",
     "range_low",
     "range_high",
     "idmap_backend",
     "certificate",
     "options"
    ]
   },
   "return_schema_of_idmap_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` the pre-windows 2000 domain name."
     },
     "dns_domain_name": {
      "_name_": "dns_domain_name",
      "title": "dns_domain_name",
      "type": "string",
      "nullable": true
     },
     "range_low": {
      "type": "integer",
      "_name_": "range_low",
      "title": "range_low",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "range_high": {
      "type": "integer",
      "_name_": "range_high",
      "title": "range_high",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "idmap_backend": {
      "_name_": "idmap_backend",
      "title": "idmap_backend",
      "type": "string",
      "enum": [
       "AD",
       "AUTORID",
       "LDAP",
       "NSS",
       "RFC2307",
       "RID",
       "TDB"
      ],
      "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "options": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "schema_mode": {
          "_name_": "schema_mode",
          "title": "nss_info_ad",
          "default": "SFU",
          "_required_": false,
          "type": "string",
          "enum": [
           "SFU",
           "SFU20",
           "RFC2307",
           "TEMPLATE"
          ]
         },
         "unix_primary_group": {
          "type": "boolean",
          "_name_": "unix_primary_group",
          "title": "unix_primary_group",
          "default": false,
          "_required_": false
         },
         "unix_nss_info": {
          "type": "boolean",
          "_name_": "unix_nss_info",
          "title": "unix_nss_info",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ad_options",
        "title": "idmap_ad_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "schema_mode",
         "unix_primary_group",
         "unix_nss_info"
        ]
       },
       {
        "type": "object",
        "properties": {
         "rangesize": {
          "type": "integer",
          "_name_": "rangesize",
          "title": "rangesize",
          "default": 100000,
          "_required_": false
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ignore_builtin": {
          "type": "boolean",
          "_name_": "ignore_builtin",
          "title": "ignore_builtin",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_autorid_options",
        "title": "idmap_autorid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "rangesize",
         "readonly",
         "ignore_builtin"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_base_dn": {
          "_name_": "ldap_base_dn",
          "title": "ldap_base_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ldap_options",
        "title": "idmap_ldap_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_base_dn",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ldap_url",
         "readonly",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "linked_service": {
          "_name_": "linked_service",
          "title": "linked_service",
          "default": "LOCAL_ACCOUNT",
          "_required_": false,
          "type": "string",
          "enum": [
           "LOCAL_ACCOUNT",
           "LDAP"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_nss_options",
        "title": "idmap_nss_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "linked_service"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_server": {
          "_name_": "ldap_server",
          "title": "ldap_server",
          "_required_": true,
          "type": "string",
          "enum": [
           "AD",
           "STANDALONE"
          ]
         },
         "ldap_realm": {
          "type": "boolean",
          "_name_": "ldap_realm",
          "title": "ldap_realm",
          "default": false,
          "_required_": false
         },
         "bind_path_user": {
          "_name_": "bind_path_user",
          "title": "bind_path_user",
          "_required_": false,
          "type": "string"
         },
         "bind_path_group": {
          "_name_": "bind_path_group",
          "title": "bind_path_group",
          "_required_": false,
          "type": "string"
         },
         "user_cn": {
          "type": "boolean",
          "_name_": "user_cn",
          "title": "user_cn",
          "default": false,
          "_required_": false
         },
         "cn_realm": {
          "_name_": "cn_realm",
          "title": "cn_realm",
          "_required_": false,
          "type": "string"
         },
         "ldap_domain": {
          "_name_": "ldap_domain",
          "title": "ldap_domain",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rfc2307_options",
        "title": "idmap_rfc2307_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_server",
         "ldap_realm",
         "bind_path_user",
         "bind_path_group",
         "user_cn",
         "cn_realm",
         "ldap_domain",
         "ldap_url",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "sssd_compat": {
          "type": "boolean",
          "_name_": "sssd_compat",
          "title": "sssd_compat",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rid_options",
        "title": "idmap_rid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "sssd_compat"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "idmap_tdb_options",
        "title": "idmap_tdb_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "options",
      "description": "`options` are additional parameters that are backend-dependent:"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "idmap_create_returns",
    "title": "idmap_create_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "dns_domain_name",
     "range_low",
     "range_high",
     "idmap_backend",
     "certificate",
     "options",
     "id"
    ]
   },
   "return_schema_of_idmap_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "idmap_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` the pre-windows 2000 domain name."
     },
     "dns_domain_name": {
      "_name_": "dns_domain_name",
      "title": "dns_domain_name",
      "type": "string",
      "nullable": true
     },
     "range_low": {
      "type": "integer",
      "_name_": "range_low",
      "title": "range_low",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "range_high": {
      "type": "integer",
      "_name_": "range_high",
      "title": "range_high",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "idmap_backend": {
      "_name_": "idmap_backend",
      "title": "idmap_backend",
      "type": "string",
      "enum": [
       "AD",
       "AUTORID",
       "LDAP",
       "NSS",
       "RFC2307",
       "RID",
       "TDB"
      ],
      "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "options": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "schema_mode": {
          "_name_": "schema_mode",
          "title": "nss_info_ad",
          "default": "SFU",
          "_required_": false,
          "type": "string",
          "enum": [
           "SFU",
           "SFU20",
           "RFC2307",
           "TEMPLATE"
          ]
         },
         "unix_primary_group": {
          "type": "boolean",
          "_name_": "unix_primary_group",
          "title": "unix_primary_group",
          "default": false,
          "_required_": false
         },
         "unix_nss_info": {
          "type": "boolean",
          "_name_": "unix_nss_info",
          "title": "unix_nss_info",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ad_options",
        "title": "idmap_ad_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "schema_mode",
         "unix_primary_group",
         "unix_nss_info"
        ]
       },
       {
        "type": "object",
        "properties": {
         "rangesize": {
          "type": "integer",
          "_name_": "rangesize",
          "title": "rangesize",
          "default": 100000,
          "_required_": false
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ignore_builtin": {
          "type": "boolean",
          "_name_": "ignore_builtin",
          "title": "ignore_builtin",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_autorid_options",
        "title": "idmap_autorid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "rangesize",
         "readonly",
         "ignore_builtin"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_base_dn": {
          "_name_": "ldap_base_dn",
          "title": "ldap_base_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ldap_options",
        "title": "idmap_ldap_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_base_dn",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ldap_url",
         "readonly",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "linked_service": {
          "_name_": "linked_service",
          "title": "linked_service",
          "default": "LOCAL_ACCOUNT",
          "_required_": false,
          "type": "string",
          "enum": [
           "LOCAL_ACCOUNT",
           "LDAP"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_nss_options",
        "title": "idmap_nss_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "linked_service"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_server": {
          "_name_": "ldap_server",
          "title": "ldap_server",
          "_required_": true,
          "type": "string",
          "enum": [
           "AD",
           "STANDALONE"
          ]
         },
         "ldap_realm": {
          "type": "boolean",
          "_name_": "ldap_realm",
          "title": "ldap_realm",
          "default": false,
          "_required_": false
         },
         "bind_path_user": {
          "_name_": "bind_path_user",
          "title": "bind_path_user",
          "_required_": false,
          "type": "string"
         },
         "bind_path_group": {
          "_name_": "bind_path_group",
          "title": "bind_path_group",
          "_required_": false,
          "type": "string"
         },
         "user_cn": {
          "type": "boolean",
          "_name_": "user_cn",
          "title": "user_cn",
          "default": false,
          "_required_": false
         },
         "cn_realm": {
          "_name_": "cn_realm",
          "title": "cn_realm",
          "_required_": false,
          "type": "string"
         },
         "ldap_domain": {
          "_name_": "ldap_domain",
          "title": "ldap_domain",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rfc2307_options",
        "title": "idmap_rfc2307_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_server",
         "ldap_realm",
         "bind_path_user",
         "bind_path_group",
         "user_cn",
         "cn_realm",
         "ldap_domain",
         "ldap_url",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "sssd_compat": {
          "type": "boolean",
          "_name_": "sssd_compat",
          "title": "sssd_compat",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rid_options",
        "title": "idmap_rid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "sssd_compat"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "idmap_tdb_options",
        "title": "idmap_tdb_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "options",
      "description": "`options` are additional parameters that are backend-dependent:"
     }
    },
    "additionalProperties": false,
    "_name_": "idmap_update",
    "title": "idmap_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "dns_domain_name",
     "range_low",
     "range_high",
     "idmap_backend",
     "certificate",
     "options"
    ]
   },
   "return_schema_of_idmap_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` the pre-windows 2000 domain name."
     },
     "dns_domain_name": {
      "_name_": "dns_domain_name",
      "title": "dns_domain_name",
      "type": "string",
      "nullable": true
     },
     "range_low": {
      "type": "integer",
      "_name_": "range_low",
      "title": "range_low",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "range_high": {
      "type": "integer",
      "_name_": "range_high",
      "title": "range_high",
      "description": "`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.\n`range_low` and `range_high` specify the UID and GID range for which this backend is authoritative."
     },
     "idmap_backend": {
      "_name_": "idmap_backend",
      "title": "idmap_backend",
      "type": "string",
      "enum": [
       "AD",
       "AUTORID",
       "LDAP",
       "NSS",
       "RFC2307",
       "RID",
       "TDB"
      ],
      "description": "`idmap_backend` provides a plugin interface for Winbind to use varying\nbackends to store SID/uid/gid mapping tables. The correct setting\ndepends on the environment in which the NAS is deployed."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "options": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "schema_mode": {
          "_name_": "schema_mode",
          "title": "nss_info_ad",
          "default": "SFU",
          "_required_": false,
          "type": "string",
          "enum": [
           "SFU",
           "SFU20",
           "RFC2307",
           "TEMPLATE"
          ]
         },
         "unix_primary_group": {
          "type": "boolean",
          "_name_": "unix_primary_group",
          "title": "unix_primary_group",
          "default": false,
          "_required_": false
         },
         "unix_nss_info": {
          "type": "boolean",
          "_name_": "unix_nss_info",
          "title": "unix_nss_info",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ad_options",
        "title": "idmap_ad_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "schema_mode",
         "unix_primary_group",
         "unix_nss_info"
        ]
       },
       {
        "type": "object",
        "properties": {
         "rangesize": {
          "type": "integer",
          "_name_": "rangesize",
          "title": "rangesize",
          "default": 100000,
          "_required_": false
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ignore_builtin": {
          "type": "boolean",
          "_name_": "ignore_builtin",
          "title": "ignore_builtin",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_autorid_options",
        "title": "idmap_autorid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "rangesize",
         "readonly",
         "ignore_builtin"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_base_dn": {
          "_name_": "ldap_base_dn",
          "title": "ldap_base_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ldap_options",
        "title": "idmap_ldap_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_base_dn",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ldap_url",
         "readonly",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "linked_service": {
          "_name_": "linked_service",
          "title": "linked_service",
          "default": "LOCAL_ACCOUNT",
          "_required_": false,
          "type": "string",
          "enum": [
           "LOCAL_ACCOUNT",
           "LDAP"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_nss_options",
        "title": "idmap_nss_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "linked_service"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_server": {
          "_name_": "ldap_server",
          "title": "ldap_server",
          "_required_": true,
          "type": "string",
          "enum": [
           "AD",
           "STANDALONE"
          ]
         },
         "ldap_realm": {
          "type": "boolean",
          "_name_": "ldap_realm",
          "title": "ldap_realm",
          "default": false,
          "_required_": false
         },
         "bind_path_user": {
          "_name_": "bind_path_user",
          "title": "bind_path_user",
          "_required_": false,
          "type": "string"
         },
         "bind_path_group": {
          "_name_": "bind_path_group",
          "title": "bind_path_group",
          "_required_": false,
          "type": "string"
         },
         "user_cn": {
          "type": "boolean",
          "_name_": "user_cn",
          "title": "user_cn",
          "default": false,
          "_required_": false
         },
         "cn_realm": {
          "_name_": "cn_realm",
          "title": "cn_realm",
          "_required_": false,
          "type": "string"
         },
         "ldap_domain": {
          "_name_": "ldap_domain",
          "title": "ldap_domain",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rfc2307_options",
        "title": "idmap_rfc2307_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_server",
         "ldap_realm",
         "bind_path_user",
         "bind_path_group",
         "user_cn",
         "cn_realm",
         "ldap_domain",
         "ldap_url",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "sssd_compat": {
          "type": "boolean",
          "_name_": "sssd_compat",
          "title": "sssd_compat",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rid_options",
        "title": "idmap_rid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "sssd_compat"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "idmap_tdb_options",
        "title": "idmap_tdb_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "options",
      "description": "`options` are additional parameters that are backend-dependent:"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "idmap_update_returns",
    "title": "idmap_update_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "dns_domain_name",
     "range_low",
     "range_high",
     "idmap_backend",
     "certificate",
     "options",
     "id"
    ]
   },
   "idmap_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "idmap_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "idmap_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/idmap_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/idmap_get_instance_1"
     }
    }
   },
   "return_schema_of_idmap_get_instance": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "dns_domain_name": {
      "_name_": "dns_domain_name",
      "title": "dns_domain_name",
      "type": "string",
      "nullable": true
     },
     "range_low": {
      "type": "integer",
      "_name_": "range_low",
      "title": "range_low"
     },
     "range_high": {
      "type": "integer",
      "_name_": "range_high",
      "title": "range_high"
     },
     "idmap_backend": {
      "_name_": "idmap_backend",
      "title": "idmap_backend",
      "type": "string",
      "enum": [
       "AD",
       "AUTORID",
       "LDAP",
       "NSS",
       "RFC2307",
       "RID",
       "TDB"
      ]
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "options": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "schema_mode": {
          "_name_": "schema_mode",
          "title": "nss_info_ad",
          "default": "SFU",
          "_required_": false,
          "type": "string",
          "enum": [
           "SFU",
           "SFU20",
           "RFC2307",
           "TEMPLATE"
          ]
         },
         "unix_primary_group": {
          "type": "boolean",
          "_name_": "unix_primary_group",
          "title": "unix_primary_group",
          "default": false,
          "_required_": false
         },
         "unix_nss_info": {
          "type": "boolean",
          "_name_": "unix_nss_info",
          "title": "unix_nss_info",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ad_options",
        "title": "idmap_ad_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "schema_mode",
         "unix_primary_group",
         "unix_nss_info"
        ]
       },
       {
        "type": "object",
        "properties": {
         "rangesize": {
          "type": "integer",
          "_name_": "rangesize",
          "title": "rangesize",
          "default": 100000,
          "_required_": false
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ignore_builtin": {
          "type": "boolean",
          "_name_": "ignore_builtin",
          "title": "ignore_builtin",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_autorid_options",
        "title": "idmap_autorid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "rangesize",
         "readonly",
         "ignore_builtin"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_base_dn": {
          "_name_": "ldap_base_dn",
          "title": "ldap_base_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "readonly": {
          "type": "boolean",
          "_name_": "readonly",
          "title": "readonly",
          "default": false,
          "_required_": false
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_ldap_options",
        "title": "idmap_ldap_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_base_dn",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ldap_url",
         "readonly",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "linked_service": {
          "_name_": "linked_service",
          "title": "linked_service",
          "default": "LOCAL_ACCOUNT",
          "_required_": false,
          "type": "string",
          "enum": [
           "LOCAL_ACCOUNT",
           "LDAP"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_nss_options",
        "title": "idmap_nss_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "linked_service"
        ]
       },
       {
        "type": "object",
        "properties": {
         "ldap_server": {
          "_name_": "ldap_server",
          "title": "ldap_server",
          "_required_": true,
          "type": "string",
          "enum": [
           "AD",
           "STANDALONE"
          ]
         },
         "ldap_realm": {
          "type": "boolean",
          "_name_": "ldap_realm",
          "title": "ldap_realm",
          "default": false,
          "_required_": false
         },
         "bind_path_user": {
          "_name_": "bind_path_user",
          "title": "bind_path_user",
          "_required_": false,
          "type": "string"
         },
         "bind_path_group": {
          "_name_": "bind_path_group",
          "title": "bind_path_group",
          "_required_": false,
          "type": "string"
         },
         "user_cn": {
          "type": "boolean",
          "_name_": "user_cn",
          "title": "user_cn",
          "default": false,
          "_required_": false
         },
         "cn_realm": {
          "_name_": "cn_realm",
          "title": "cn_realm",
          "_required_": false,
          "type": "string"
         },
         "ldap_domain": {
          "_name_": "ldap_domain",
          "title": "ldap_domain",
          "_required_": false,
          "type": "string"
         },
         "ldap_url": {
          "_name_": "ldap_url",
          "title": "ldap_url",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn": {
          "_name_": "ldap_user_dn",
          "title": "ldap_user_dn",
          "_required_": false,
          "type": "string"
         },
         "ldap_user_dn_password": {
          "_name_": "ldap_user_dn_password",
          "title": "ldap_user_dn_password",
          "_required_": false,
          "type": "string"
         },
         "ssl": {
          "_name_": "ssl",
          "title": "ldap_ssl_choice",
          "default": "ON",
          "_required_": false,
          "type": "string",
          "enum": [
           "OFF",
           "ON",
           "START_TLS"
          ]
         },
         "validate_certificates": {
          "type": "boolean",
          "_name_": "validate_certificates",
          "title": "validate_certificates",
          "default": true,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rfc2307_options",
        "title": "idmap_rfc2307_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "ldap_server",
         "ldap_realm",
         "bind_path_user",
         "bind_path_group",
         "user_cn",
         "cn_realm",
         "ldap_domain",
         "ldap_url",
         "ldap_user_dn",
         "ldap_user_dn_password",
         "ssl",
         "validate_certificates"
        ]
       },
       {
        "type": "object",
        "properties": {
         "sssd_compat": {
          "type": "boolean",
          "_name_": "sssd_compat",
          "title": "sssd_compat",
          "default": false,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "idmap_rid_options",
        "title": "idmap_rid_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "sssd_compat"
        ]
       },
       {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "_name_": "idmap_tdb_options",
        "title": "idmap_tdb_options",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ],
      "nullable": false,
      "_name_": "options",
      "description": null
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "idmap_domain_entry",
    "title": "idmap_domain_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "dns_domain_name",
     "range_low",
     "range_high",
     "idmap_backend",
     "certificate",
     "options",
     "id"
    ]
   },
   "idmap_options_choices": {
    "_name_": "idmap_backend",
    "title": "idmap_backend",
    "type": "string",
    "enum": [
     "AD",
     "AUTORID",
     "LDAP",
     "NSS",
     "RFC2307",
     "RID",
     "TDB"
    ]
   },
   "return_schema_of_initshutdownscript_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string",
          "enum": [
           "COMMAND",
           "SCRIPT"
          ]
         },
         "command": {
          "_name_": "command",
          "title": "command",
          "default": "",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "script": {
          "_name_": "script",
          "title": "script",
          "default": "",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "when": {
          "_name_": "when",
          "title": "when",
          "_required_": true,
          "type": "string",
          "enum": [
           "PREINIT",
           "POSTINIT",
           "SHUTDOWN"
          ]
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "timeout": {
          "type": "integer",
          "_name_": "timeout",
          "title": "timeout",
          "default": 10,
          "_required_": false
         },
         "comment": {
          "_name_": "comment",
          "title": "comment",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "init_shutdown_script_entry",
        "title": "init_shutdown_script_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "command",
         "script",
         "when",
         "enabled",
         "timeout",
         "comment",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "COMMAND",
         "SCRIPT"
        ]
       },
       "command": {
        "_name_": "command",
        "title": "command",
        "default": "",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "script": {
        "_name_": "script",
        "title": "script",
        "default": "",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "when": {
        "_name_": "when",
        "title": "when",
        "_required_": true,
        "type": "string",
        "enum": [
         "PREINIT",
         "POSTINIT",
         "SHUTDOWN"
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "timeout": {
        "type": "integer",
        "_name_": "timeout",
        "title": "timeout",
        "default": 10,
        "_required_": false
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "init_shutdown_script_entry",
      "title": "init_shutdown_script_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "type",
       "command",
       "script",
       "when",
       "enabled",
       "timeout",
       "comment",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "COMMAND",
         "SCRIPT"
        ]
       },
       "command": {
        "_name_": "command",
        "title": "command",
        "default": "",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "script": {
        "_name_": "script",
        "title": "script",
        "default": "",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "when": {
        "_name_": "when",
        "title": "when",
        "_required_": true,
        "type": "string",
        "enum": [
         "PREINIT",
         "POSTINIT",
         "SHUTDOWN"
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "timeout": {
        "type": "integer",
        "_name_": "timeout",
        "title": "timeout",
        "default": 10,
        "_required_": false
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "init_shutdown_script_entry",
      "title": "init_shutdown_script_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "type",
       "command",
       "script",
       "when",
       "enabled",
       "timeout",
       "comment",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "initshutdownscript_create": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "COMMAND",
       "SCRIPT"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`."
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "script": {
      "_name_": "script",
      "title": "script",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "when": {
      "_name_": "when",
      "title": "when",
      "type": "string",
      "enum": [
       "PREINIT",
       "POSTINIT",
       "SHUTDOWN"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`.\nThere are three choices for `when`:"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 10
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "init_shutdown_script_create",
    "title": "init_shutdown_script_create",
    "default": {},
    "_attrs_order_": [
     "type",
     "command",
     "script",
     "when",
     "enabled",
     "timeout",
     "comment"
    ]
   },
   "return_schema_of_initshutdownscript_create": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "COMMAND",
       "SCRIPT"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`."
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "script": {
      "_name_": "script",
      "title": "script",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "when": {
      "_name_": "when",
      "title": "when",
      "type": "string",
      "enum": [
       "PREINIT",
       "POSTINIT",
       "SHUTDOWN"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`.\nThere are three choices for `when`:"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 10
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "initshutdownscript_create_returns",
    "title": "initshutdownscript_create_returns",
    "default": {},
    "_attrs_order_": [
     "type",
     "command",
     "script",
     "when",
     "enabled",
     "timeout",
     "comment",
     "id"
    ]
   },
   "return_schema_of_initshutdownscript_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "initshutdownscript_update": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "COMMAND",
       "SCRIPT"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`."
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "script": {
      "_name_": "script",
      "title": "script",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "when": {
      "_name_": "when",
      "title": "when",
      "type": "string",
      "enum": [
       "PREINIT",
       "POSTINIT",
       "SHUTDOWN"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`.\nThere are three choices for `when`:"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 10
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "initshutdownscript_update",
    "title": "initshutdownscript_update",
    "default": {},
    "_attrs_order_": [
     "type",
     "command",
     "script",
     "when",
     "enabled",
     "timeout",
     "comment"
    ]
   },
   "return_schema_of_initshutdownscript_update": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "COMMAND",
       "SCRIPT"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`."
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "script": {
      "_name_": "script",
      "title": "script",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "when": {
      "_name_": "when",
      "title": "when",
      "type": "string",
      "enum": [
       "PREINIT",
       "POSTINIT",
       "SHUTDOWN"
      ],
      "description": "`type` indicates if a command or script should be executed at `when`.\nThere are three choices for `when`:"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 10
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update initshutdown script task of `id`.\nCreate an initshutdown script task."
     }
    },
    "additionalProperties": false,
    "_name_": "initshutdownscript_update_returns",
    "title": "initshutdownscript_update_returns",
    "default": {},
    "_attrs_order_": [
     "type",
     "command",
     "script",
     "when",
     "enabled",
     "timeout",
     "comment",
     "id"
    ]
   },
   "initshutdownscript_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "initshutdownscript_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "initshutdownscript_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/initshutdownscript_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/initshutdownscript_get_instance_1"
     }
    }
   },
   "return_schema_of_initshutdownscript_get_instance": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "COMMAND",
       "SCRIPT"
      ]
     },
     "command": {
      "_name_": "command",
      "title": "command",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "script": {
      "_name_": "script",
      "title": "script",
      "default": "",
      "type": "string",
      "nullable": true
     },
     "when": {
      "_name_": "when",
      "title": "when",
      "type": "string",
      "enum": [
       "PREINIT",
       "POSTINIT",
       "SHUTDOWN"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 10
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "init_shutdown_script_entry",
    "title": "init_shutdown_script_entry",
    "default": {},
    "_attrs_order_": [
     "type",
     "command",
     "script",
     "when",
     "enabled",
     "timeout",
     "comment",
     "id"
    ]
   },
   "return_schema_of_interface_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": true,
          "type": "string"
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "fake": {
          "type": "boolean",
          "_name_": "fake",
          "title": "fake",
          "_required_": true
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "state": {
          "type": "object",
          "properties": {
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "orig_name": {
            "_name_": "orig_name",
            "title": "orig_name",
            "_required_": true,
            "type": "string"
           },
           "description": {
            "_name_": "description",
            "title": "description",
            "_required_": true,
            "type": "string"
           },
           "mtu": {
            "type": "integer",
            "_name_": "mtu",
            "title": "mtu",
            "_required_": true
           },
           "cloned": {
            "type": "boolean",
            "_name_": "cloned",
            "title": "cloned",
            "_required_": true
           },
           "flags": {
            "_name_": "flags",
            "title": "flags",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": [
             {
              "_name_": "flag",
              "title": "flag",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "nd6_flags": {
            "_name_": "nd6_flags",
            "title": "nd6_flags",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "capabilities": {
            "_name_": "capabilities",
            "title": "capabilities",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "link_state": {
            "_name_": "link_state",
            "title": "link_state",
            "_required_": true,
            "type": "string"
           },
           "media_type": {
            "_name_": "media_type",
            "title": "media_type",
            "_required_": true,
            "type": "string"
           },
           "media_subtype": {
            "_name_": "media_subtype",
            "title": "media_subtype",
            "_required_": true,
            "type": "string"
           },
           "active_media_type": {
            "_name_": "active_media_type",
            "title": "active_media_type",
            "_required_": true,
            "type": "string"
           },
           "active_media_subtype": {
            "_name_": "active_media_subtype",
            "title": "active_media_subtype",
            "_required_": true,
            "type": "string"
           },
           "supported_media": {
            "_name_": "supported_media",
            "title": "supported_media",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "media_options": {
            "_name_": "media_options",
            "title": "media_options",
            "default": [],
            "_required_": true,
            "type": [
             "array",
             "null"
            ],
            "items": []
           },
           "link_address": {
            "_name_": "link_address",
            "title": "link_address",
            "_required_": true,
            "type": "string"
           },
           "permanent_link_address": {
            "_name_": "permanent_link_address",
            "title": "permanent_link_address",
            "_required_": true,
            "type": [
             "string",
             "null"
            ]
           },
           "hardware_link_address": {
            "_name_": "hardware_link_address",
            "title": "hardware_link_address",
            "_required_": true,
            "type": "string"
           },
           "rx_queues": {
            "type": "integer",
            "_name_": "rx_queues",
            "title": "rx_queues",
            "_required_": true
           },
           "tx_queues": {
            "type": "integer",
            "_name_": "tx_queues",
            "title": "tx_queues",
            "_required_": true
           },
           "aliases": {
            "_name_": "aliases",
            "title": "aliases",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": [
             {
              "type": "object",
              "properties": {
               "type": {
                "_name_": "type",
                "title": "type",
                "_required_": true,
                "type": "string"
               },
               "address": {
                "_name_": "address",
                "title": "address",
                "_required_": true,
                "type": "string"
               },
               "netmask": {
                "_name_": "netmask",
                "title": "netmask",
                "_required_": false,
                "type": "string"
               },
               "broadcast": {
                "_name_": "broadcast",
                "title": "broadcast",
                "_required_": false,
                "type": "string"
               }
              },
              "additionalProperties": false,
              "_name_": "alias",
              "title": "alias",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "type",
               "address",
               "netmask",
               "broadcast"
              ]
             }
            ]
           },
           "vrrp_config": {
            "_name_": "vrrp_config",
            "title": "vrrp_config",
            "default": [],
            "_required_": false,
            "type": [
             "array",
             "null"
            ],
            "items": []
           },
           "protocol": {
            "_name_": "protocol",
            "title": "protocol",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "ports": {
            "_name_": "ports",
            "title": "ports",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "object",
              "properties": {
               "name": {
                "_name_": "name",
                "title": "name",
                "_required_": false,
                "type": "string"
               },
               "flags": {
                "_name_": "flags",
                "title": "flags",
                "default": [],
                "_required_": false,
                "type": "array",
                "items": [
                 {
                  "_name_": "flag",
                  "title": "flag",
                  "_required_": false,
                  "type": "string"
                 }
                ]
               }
              },
              "additionalProperties": false,
              "_name_": "lag_ports",
              "title": "lag_ports",
              "default": {},
              "_required_": false,
              "_attrs_order_": [
               "name",
               "flags"
              ]
             }
            ]
           },
           "xmit_hash_policy": {
            "_name_": "xmit_hash_policy",
            "title": "xmit_hash_policy",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "lacpdu_rate": {
            "_name_": "lacpdu_rate",
            "title": "lacpdu_rate",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "parent": {
            "_name_": "parent",
            "title": "parent",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "tag": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "tag",
            "title": "tag",
            "_required_": false
           },
           "pcp": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "pcp",
            "title": "pcp",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "state",
          "title": "state",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "name",
           "orig_name",
           "description",
           "mtu",
           "cloned",
           "flags",
           "nd6_flags",
           "capabilities",
           "link_state",
           "media_type",
           "media_subtype",
           "active_media_type",
           "active_media_subtype",
           "supported_media",
           "media_options",
           "link_address",
           "permanent_link_address",
           "hardware_link_address",
           "rx_queues",
           "tx_queues",
           "aliases",
           "vrrp_config",
           "protocol",
           "ports",
           "xmit_hash_policy",
           "lacpdu_rate",
           "parent",
           "tag",
           "pcp"
          ]
         },
         "aliases": {
          "_name_": "aliases",
          "title": "aliases",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string"
             },
             "address": {
              "_name_": "address",
              "title": "address",
              "_required_": true,
              "type": "string"
             },
             "netmask": {
              "_name_": "netmask",
              "title": "netmask",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "alias",
            "title": "alias",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "address",
             "netmask"
            ]
           }
          ]
         },
         "ipv4_dhcp": {
          "type": "boolean",
          "_name_": "ipv4_dhcp",
          "title": "ipv4_dhcp",
          "_required_": true
         },
         "ipv6_auto": {
          "type": "boolean",
          "_name_": "ipv6_auto",
          "title": "ipv6_auto",
          "_required_": true
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "mtu": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "mtu",
          "title": "mtu",
          "_required_": true
         },
         "vlan_parent_interface": {
          "_name_": "vlan_parent_interface",
          "title": "vlan_parent_interface",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "vlan_tag": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "vlan_tag",
          "title": "vlan_tag",
          "_required_": false
         },
         "vlan_pcp": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "vlan_pcp",
          "title": "vlan_pcp",
          "_required_": false
         },
         "lag_protocol": {
          "_name_": "lag_protocol",
          "title": "lag_protocol",
          "_required_": false,
          "type": "string"
         },
         "lag_ports": {
          "_name_": "lag_ports",
          "title": "lag_ports",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "lag_port",
            "title": "lag_port",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "bridge_members": {
          "_name_": "bridge_members",
          "title": "bridge_members",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "member",
            "title": "member",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": true,
        "_name_": "interface_entry",
        "title": "interface_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "name",
         "fake",
         "type",
         "state",
         "aliases",
         "ipv4_dhcp",
         "ipv6_auto",
         "description",
         "mtu",
         "vlan_parent_interface",
         "vlan_tag",
         "vlan_pcp",
         "lag_protocol",
         "lag_ports",
         "bridge_members"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "fake": {
        "type": "boolean",
        "_name_": "fake",
        "title": "fake",
        "_required_": true
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "state": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "orig_name": {
          "_name_": "orig_name",
          "title": "orig_name",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "mtu": {
          "type": "integer",
          "_name_": "mtu",
          "title": "mtu",
          "_required_": true
         },
         "cloned": {
          "type": "boolean",
          "_name_": "cloned",
          "title": "cloned",
          "_required_": true
         },
         "flags": {
          "_name_": "flags",
          "title": "flags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "flag",
            "title": "flag",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "nd6_flags": {
          "_name_": "nd6_flags",
          "title": "nd6_flags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "capabilities": {
          "_name_": "capabilities",
          "title": "capabilities",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "link_state": {
          "_name_": "link_state",
          "title": "link_state",
          "_required_": true,
          "type": "string"
         },
         "media_type": {
          "_name_": "media_type",
          "title": "media_type",
          "_required_": true,
          "type": "string"
         },
         "media_subtype": {
          "_name_": "media_subtype",
          "title": "media_subtype",
          "_required_": true,
          "type": "string"
         },
         "active_media_type": {
          "_name_": "active_media_type",
          "title": "active_media_type",
          "_required_": true,
          "type": "string"
         },
         "active_media_subtype": {
          "_name_": "active_media_subtype",
          "title": "active_media_subtype",
          "_required_": true,
          "type": "string"
         },
         "supported_media": {
          "_name_": "supported_media",
          "title": "supported_media",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "media_options": {
          "_name_": "media_options",
          "title": "media_options",
          "default": [],
          "_required_": true,
          "type": [
           "array",
           "null"
          ],
          "items": []
         },
         "link_address": {
          "_name_": "link_address",
          "title": "link_address",
          "_required_": true,
          "type": "string"
         },
         "permanent_link_address": {
          "_name_": "permanent_link_address",
          "title": "permanent_link_address",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "hardware_link_address": {
          "_name_": "hardware_link_address",
          "title": "hardware_link_address",
          "_required_": true,
          "type": "string"
         },
         "rx_queues": {
          "type": "integer",
          "_name_": "rx_queues",
          "title": "rx_queues",
          "_required_": true
         },
         "tx_queues": {
          "type": "integer",
          "_name_": "tx_queues",
          "title": "tx_queues",
          "_required_": true
         },
         "aliases": {
          "_name_": "aliases",
          "title": "aliases",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string"
             },
             "address": {
              "_name_": "address",
              "title": "address",
              "_required_": true,
              "type": "string"
             },
             "netmask": {
              "_name_": "netmask",
              "title": "netmask",
              "_required_": false,
              "type": "string"
             },
             "broadcast": {
              "_name_": "broadcast",
              "title": "broadcast",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "alias",
            "title": "alias",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "address",
             "netmask",
             "broadcast"
            ]
           }
          ]
         },
         "vrrp_config": {
          "_name_": "vrrp_config",
          "title": "vrrp_config",
          "default": [],
          "_required_": false,
          "type": [
           "array",
           "null"
          ],
          "items": []
         },
         "protocol": {
          "_name_": "protocol",
          "title": "protocol",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "ports": {
          "_name_": "ports",
          "title": "ports",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": false,
              "type": "string"
             },
             "flags": {
              "_name_": "flags",
              "title": "flags",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "flag",
                "title": "flag",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "lag_ports",
            "title": "lag_ports",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "name",
             "flags"
            ]
           }
          ]
         },
         "xmit_hash_policy": {
          "_name_": "xmit_hash_policy",
          "title": "xmit_hash_policy",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "lacpdu_rate": {
          "_name_": "lacpdu_rate",
          "title": "lacpdu_rate",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "parent": {
          "_name_": "parent",
          "title": "parent",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "tag": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "tag",
          "title": "tag",
          "_required_": false
         },
         "pcp": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "pcp",
          "title": "pcp",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "state",
        "title": "state",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "name",
         "orig_name",
         "description",
         "mtu",
         "cloned",
         "flags",
         "nd6_flags",
         "capabilities",
         "link_state",
         "media_type",
         "media_subtype",
         "active_media_type",
         "active_media_subtype",
         "supported_media",
         "media_options",
         "link_address",
         "permanent_link_address",
         "hardware_link_address",
         "rx_queues",
         "tx_queues",
         "aliases",
         "vrrp_config",
         "protocol",
         "ports",
         "xmit_hash_policy",
         "lacpdu_rate",
         "parent",
         "tag",
         "pcp"
        ]
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": true,
            "type": "string"
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "alias",
          "title": "alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        ]
       },
       "ipv4_dhcp": {
        "type": "boolean",
        "_name_": "ipv4_dhcp",
        "title": "ipv4_dhcp",
        "_required_": true
       },
       "ipv6_auto": {
        "type": "boolean",
        "_name_": "ipv6_auto",
        "title": "ipv6_auto",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "mtu": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "mtu",
        "title": "mtu",
        "_required_": true
       },
       "vlan_parent_interface": {
        "_name_": "vlan_parent_interface",
        "title": "vlan_parent_interface",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "vlan_tag": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "vlan_tag",
        "title": "vlan_tag",
        "_required_": false
       },
       "vlan_pcp": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "vlan_pcp",
        "title": "vlan_pcp",
        "_required_": false
       },
       "lag_protocol": {
        "_name_": "lag_protocol",
        "title": "lag_protocol",
        "_required_": false,
        "type": "string"
       },
       "lag_ports": {
        "_name_": "lag_ports",
        "title": "lag_ports",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "lag_port",
          "title": "lag_port",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "bridge_members": {
        "_name_": "bridge_members",
        "title": "bridge_members",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "member",
          "title": "member",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": true,
      "_name_": "interface_entry",
      "title": "interface_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "name",
       "fake",
       "type",
       "state",
       "aliases",
       "ipv4_dhcp",
       "ipv6_auto",
       "description",
       "mtu",
       "vlan_parent_interface",
       "vlan_tag",
       "vlan_pcp",
       "lag_protocol",
       "lag_ports",
       "bridge_members"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "fake": {
        "type": "boolean",
        "_name_": "fake",
        "title": "fake",
        "_required_": true
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "state": {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "orig_name": {
          "_name_": "orig_name",
          "title": "orig_name",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "mtu": {
          "type": "integer",
          "_name_": "mtu",
          "title": "mtu",
          "_required_": true
         },
         "cloned": {
          "type": "boolean",
          "_name_": "cloned",
          "title": "cloned",
          "_required_": true
         },
         "flags": {
          "_name_": "flags",
          "title": "flags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "_name_": "flag",
            "title": "flag",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "nd6_flags": {
          "_name_": "nd6_flags",
          "title": "nd6_flags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "capabilities": {
          "_name_": "capabilities",
          "title": "capabilities",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "link_state": {
          "_name_": "link_state",
          "title": "link_state",
          "_required_": true,
          "type": "string"
         },
         "media_type": {
          "_name_": "media_type",
          "title": "media_type",
          "_required_": true,
          "type": "string"
         },
         "media_subtype": {
          "_name_": "media_subtype",
          "title": "media_subtype",
          "_required_": true,
          "type": "string"
         },
         "active_media_type": {
          "_name_": "active_media_type",
          "title": "active_media_type",
          "_required_": true,
          "type": "string"
         },
         "active_media_subtype": {
          "_name_": "active_media_subtype",
          "title": "active_media_subtype",
          "_required_": true,
          "type": "string"
         },
         "supported_media": {
          "_name_": "supported_media",
          "title": "supported_media",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "media_options": {
          "_name_": "media_options",
          "title": "media_options",
          "default": [],
          "_required_": true,
          "type": [
           "array",
           "null"
          ],
          "items": []
         },
         "link_address": {
          "_name_": "link_address",
          "title": "link_address",
          "_required_": true,
          "type": "string"
         },
         "permanent_link_address": {
          "_name_": "permanent_link_address",
          "title": "permanent_link_address",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "hardware_link_address": {
          "_name_": "hardware_link_address",
          "title": "hardware_link_address",
          "_required_": true,
          "type": "string"
         },
         "rx_queues": {
          "type": "integer",
          "_name_": "rx_queues",
          "title": "rx_queues",
          "_required_": true
         },
         "tx_queues": {
          "type": "integer",
          "_name_": "tx_queues",
          "title": "tx_queues",
          "_required_": true
         },
         "aliases": {
          "_name_": "aliases",
          "title": "aliases",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "type": {
              "_name_": "type",
              "title": "type",
              "_required_": true,
              "type": "string"
             },
             "address": {
              "_name_": "address",
              "title": "address",
              "_required_": true,
              "type": "string"
             },
             "netmask": {
              "_name_": "netmask",
              "title": "netmask",
              "_required_": false,
              "type": "string"
             },
             "broadcast": {
              "_name_": "broadcast",
              "title": "broadcast",
              "_required_": false,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "alias",
            "title": "alias",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "type",
             "address",
             "netmask",
             "broadcast"
            ]
           }
          ]
         },
         "vrrp_config": {
          "_name_": "vrrp_config",
          "title": "vrrp_config",
          "default": [],
          "_required_": false,
          "type": [
           "array",
           "null"
          ],
          "items": []
         },
         "protocol": {
          "_name_": "protocol",
          "title": "protocol",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "ports": {
          "_name_": "ports",
          "title": "ports",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": false,
              "type": "string"
             },
             "flags": {
              "_name_": "flags",
              "title": "flags",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "flag",
                "title": "flag",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "lag_ports",
            "title": "lag_ports",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "name",
             "flags"
            ]
           }
          ]
         },
         "xmit_hash_policy": {
          "_name_": "xmit_hash_policy",
          "title": "xmit_hash_policy",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "lacpdu_rate": {
          "_name_": "lacpdu_rate",
          "title": "lacpdu_rate",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "parent": {
          "_name_": "parent",
          "title": "parent",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "tag": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "tag",
          "title": "tag",
          "_required_": false
         },
         "pcp": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "pcp",
          "title": "pcp",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "state",
        "title": "state",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "name",
         "orig_name",
         "description",
         "mtu",
         "cloned",
         "flags",
         "nd6_flags",
         "capabilities",
         "link_state",
         "media_type",
         "media_subtype",
         "active_media_type",
         "active_media_subtype",
         "supported_media",
         "media_options",
         "link_address",
         "permanent_link_address",
         "hardware_link_address",
         "rx_queues",
         "tx_queues",
         "aliases",
         "vrrp_config",
         "protocol",
         "ports",
         "xmit_hash_policy",
         "lacpdu_rate",
         "parent",
         "tag",
         "pcp"
        ]
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": true,
            "type": "string"
           },
           "address": {
            "_name_": "address",
            "title": "address",
            "_required_": true,
            "type": "string"
           },
           "netmask": {
            "_name_": "netmask",
            "title": "netmask",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "alias",
          "title": "alias",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "type",
           "address",
           "netmask"
          ]
         }
        ]
       },
       "ipv4_dhcp": {
        "type": "boolean",
        "_name_": "ipv4_dhcp",
        "title": "ipv4_dhcp",
        "_required_": true
       },
       "ipv6_auto": {
        "type": "boolean",
        "_name_": "ipv6_auto",
        "title": "ipv6_auto",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "mtu": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "mtu",
        "title": "mtu",
        "_required_": true
       },
       "vlan_parent_interface": {
        "_name_": "vlan_parent_interface",
        "title": "vlan_parent_interface",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "vlan_tag": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "vlan_tag",
        "title": "vlan_tag",
        "_required_": false
       },
       "vlan_pcp": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "vlan_pcp",
        "title": "vlan_pcp",
        "_required_": false
       },
       "lag_protocol": {
        "_name_": "lag_protocol",
        "title": "lag_protocol",
        "_required_": false,
        "type": "string"
       },
       "lag_ports": {
        "_name_": "lag_ports",
        "title": "lag_ports",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "lag_port",
          "title": "lag_port",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "bridge_members": {
        "_name_": "bridge_members",
        "title": "bridge_members",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "member",
          "title": "member",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": true,
      "_name_": "interface_entry",
      "title": "interface_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "name",
       "fake",
       "type",
       "state",
       "aliases",
       "ipv4_dhcp",
       "ipv6_auto",
       "description",
       "mtu",
       "vlan_parent_interface",
       "vlan_tag",
       "vlan_pcp",
       "lag_protocol",
       "lag_ports",
       "bridge_members"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "interface_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "BRIDGE",
       "LINK_AGGREGATION",
       "VLAN"
      ],
      "description": "For BRIDGE `type` the following attribute is required: bridge_members.\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp."
     },
     "ipv4_dhcp": {
      "type": "boolean",
      "_name_": "ipv4_dhcp",
      "title": "ipv4_dhcp",
      "default": false
     },
     "ipv6_auto": {
      "type": "boolean",
      "_name_": "ipv6_auto",
      "title": "ipv6_auto",
      "default": false
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "INET",
         "_required_": true,
         "type": "string",
         "enum": [
          "INET",
          "INET6"
         ]
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        },
        "netmask": {
         "type": "integer",
         "_name_": "netmask",
         "title": "netmask",
         "_required_": true
        }
       },
       "additionalProperties": false,
       "_name_": "interface_alias",
       "title": "interface_alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address",
        "netmask"
       ]
      }
     },
     "failover_critical": {
      "type": "boolean",
      "_name_": "failover_critical",
      "title": "failover_critical",
      "default": false
     },
     "failover_group": {
      "type": "integer",
      "_name_": "failover_group",
      "title": "failover_group",
      "nullable": true
     },
     "failover_vhid": {
      "type": "integer",
      "_name_": "failover_vhid",
      "title": "failover_vhid",
      "nullable": true
     },
     "failover_aliases": {
      "_name_": "failover_aliases",
      "title": "failover_aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "INET",
         "_required_": true,
         "type": "string",
         "enum": [
          "INET",
          "INET6"
         ]
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "interface_failover_alias",
       "title": "interface_failover_alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address"
       ]
      }
     },
     "failover_virtual_aliases": {
      "_name_": "failover_virtual_aliases",
      "title": "failover_virtual_aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "INET",
         "_required_": true,
         "type": "string",
         "enum": [
          "INET",
          "INET6"
         ]
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "interface_virtual_alias",
       "title": "interface_virtual_alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address"
       ]
      }
     },
     "bridge_members": {
      "_name_": "bridge_members",
      "title": "bridge_members",
      "default": [],
      "type": "array",
      "items": {}
     },
     "stp": {
      "type": "boolean",
      "_name_": "stp",
      "title": "stp",
      "default": true
     },
     "lag_protocol": {
      "_name_": "lag_protocol",
      "title": "lag_protocol",
      "type": "string",
      "enum": [
       "LACP",
       "FAILOVER",
       "LOADBALANCE",
       "ROUNDROBIN",
       "NONE"
      ]
     },
     "xmit_hash_policy": {
      "_name_": "xmit_hash_policy",
      "title": "xmit_hash_policy",
      "default": null,
      "type": "string",
      "enum": [
       "LAYER2",
       "LAYER2+3",
       "LAYER3+4"
      ],
      "nullable": true
     },
     "lacpdu_rate": {
      "_name_": "lacpdu_rate",
      "title": "lacpdu_rate",
      "default": null,
      "type": "string",
      "enum": [
       "SLOW",
       "FAST"
      ],
      "nullable": true
     },
     "lag_ports": {
      "_name_": "lag_ports",
      "title": "lag_ports",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "interface",
       "title": "interface",
       "_required_": false,
       "type": "string"
      }
     },
     "vlan_parent_interface": {
      "_name_": "vlan_parent_interface",
      "title": "vlan_parent_interface",
      "type": "string"
     },
     "vlan_tag": {
      "type": "integer",
      "_name_": "vlan_tag",
      "title": "vlan_tag"
     },
     "vlan_pcp": {
      "type": "integer",
      "_name_": "vlan_pcp",
      "title": "vlan_pcp",
      "nullable": true
     },
     "mtu": {
      "type": "integer",
      "_name_": "mtu",
      "title": "mtu",
      "default": null,
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "interface_create",
    "title": "interface_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "description",
     "type",
     "ipv4_dhcp",
     "ipv6_auto",
     "aliases",
     "failover_critical",
     "failover_group",
     "failover_vhid",
     "failover_aliases",
     "failover_virtual_aliases",
     "bridge_members",
     "stp",
     "lag_protocol",
     "xmit_hash_policy",
     "lacpdu_rate",
     "lag_ports",
     "vlan_parent_interface",
     "vlan_tag",
     "vlan_pcp",
     "mtu"
    ]
   },
   "return_schema_of_interface_create": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "fake": {
      "type": "boolean",
      "_name_": "fake",
      "title": "fake"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "For BRIDGE `type` the following attribute is required: bridge_members.\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp."
     },
     "state": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       },
       "orig_name": {
        "_name_": "orig_name",
        "title": "orig_name",
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "type": "string"
       },
       "mtu": {
        "type": "integer",
        "_name_": "mtu",
        "title": "mtu"
       },
       "cloned": {
        "type": "boolean",
        "_name_": "cloned",
        "title": "cloned"
       },
       "flags": {
        "_name_": "flags",
        "title": "flags",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "flag",
         "title": "flag",
         "_required_": false,
         "type": "string"
        }
       },
       "nd6_flags": {
        "_name_": "nd6_flags",
        "title": "nd6_flags",
        "default": [],
        "type": "array",
        "items": {}
       },
       "capabilities": {
        "_name_": "capabilities",
        "title": "capabilities",
        "default": [],
        "type": "array",
        "items": {}
       },
       "link_state": {
        "_name_": "link_state",
        "title": "link_state",
        "type": "string"
       },
       "media_type": {
        "_name_": "media_type",
        "title": "media_type",
        "type": "string"
       },
       "media_subtype": {
        "_name_": "media_subtype",
        "title": "media_subtype",
        "type": "string"
       },
       "active_media_type": {
        "_name_": "active_media_type",
        "title": "active_media_type",
        "type": "string"
       },
       "active_media_subtype": {
        "_name_": "active_media_subtype",
        "title": "active_media_subtype",
        "type": "string"
       },
       "supported_media": {
        "_name_": "supported_media",
        "title": "supported_media",
        "default": [],
        "type": "array",
        "items": {}
       },
       "media_options": {
        "_name_": "media_options",
        "title": "media_options",
        "default": [],
        "type": "array",
        "items": {},
        "nullable": true
       },
       "link_address": {
        "_name_": "link_address",
        "title": "link_address",
        "type": "string"
       },
       "permanent_link_address": {
        "_name_": "permanent_link_address",
        "title": "permanent_link_address",
        "type": "string",
        "nullable": true
       },
       "hardware_link_address": {
        "_name_": "hardware_link_address",
        "title": "hardware_link_address",
        "type": "string"
       },
       "rx_queues": {
        "type": "integer",
        "_name_": "rx_queues",
        "title": "rx_queues"
       },
       "tx_queues": {
        "type": "integer",
        "_name_": "tx_queues",
        "title": "tx_queues"
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "address": {
           "_name_": "address",
           "title": "address",
           "_required_": true,
           "type": "string"
          },
          "netmask": {
           "_name_": "netmask",
           "title": "netmask",
           "_required_": false,
           "type": "string"
          },
          "broadcast": {
           "_name_": "broadcast",
           "title": "broadcast",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "alias",
         "title": "alias",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "address",
          "netmask",
          "broadcast"
         ]
        }
       },
       "vrrp_config": {
        "_name_": "vrrp_config",
        "title": "vrrp_config",
        "default": [],
        "type": "array",
        "items": {},
        "nullable": true
       },
       "protocol": {
        "_name_": "protocol",
        "title": "protocol",
        "type": "string",
        "nullable": true
       },
       "ports": {
        "_name_": "ports",
        "title": "ports",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "flag",
             "title": "flag",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "name",
          "flags"
         ]
        }
       },
       "xmit_hash_policy": {
        "_name_": "xmit_hash_policy",
        "title": "xmit_hash_policy",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "lacpdu_rate": {
        "_name_": "lacpdu_rate",
        "title": "lacpdu_rate",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "parent": {
        "_name_": "parent",
        "title": "parent",
        "type": "string",
        "nullable": true
       },
       "tag": {
        "type": "integer",
        "_name_": "tag",
        "title": "tag",
        "nullable": true
       },
       "pcp": {
        "type": "integer",
        "_name_": "pcp",
        "title": "pcp",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": [
       "name",
       "orig_name",
       "description",
       "mtu",
       "cloned",
       "flags",
       "nd6_flags",
       "capabilities",
       "link_state",
       "media_type",
       "media_subtype",
       "active_media_type",
       "active_media_subtype",
       "supported_media",
       "media_options",
       "link_address",
       "permanent_link_address",
       "hardware_link_address",
       "rx_queues",
       "tx_queues",
       "aliases",
       "vrrp_config",
       "protocol",
       "ports",
       "xmit_hash_policy",
       "lacpdu_rate",
       "parent",
       "tag",
       "pcp"
      ]
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "_required_": true,
         "type": "string"
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        },
        "netmask": {
         "_name_": "netmask",
         "title": "netmask",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "alias",
       "title": "alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address",
        "netmask"
       ]
      }
     },
     "ipv4_dhcp": {
      "type": "boolean",
      "_name_": "ipv4_dhcp",
      "title": "ipv4_dhcp"
     },
     "ipv6_auto": {
      "type": "boolean",
      "_name_": "ipv6_auto",
      "title": "ipv6_auto"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "mtu": {
      "type": "integer",
      "_name_": "mtu",
      "title": "mtu",
      "nullable": true
     },
     "vlan_parent_interface": {
      "_name_": "vlan_parent_interface",
      "title": "vlan_parent_interface",
      "type": "string",
      "nullable": true
     },
     "vlan_tag": {
      "type": "integer",
      "_name_": "vlan_tag",
      "title": "vlan_tag",
      "nullable": true
     },
     "vlan_pcp": {
      "type": "integer",
      "_name_": "vlan_pcp",
      "title": "vlan_pcp",
      "nullable": true
     },
     "lag_protocol": {
      "_name_": "lag_protocol",
      "title": "lag_protocol",
      "type": "string"
     },
     "lag_ports": {
      "_name_": "lag_ports",
      "title": "lag_ports",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "lag_port",
       "title": "lag_port",
       "_required_": false,
       "type": "string"
      }
     },
     "bridge_members": {
      "_name_": "bridge_members",
      "title": "bridge_members",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "member",
       "title": "member",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": true,
    "_name_": "interface_create_returns",
    "title": "interface_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "fake",
     "type",
     "state",
     "aliases",
     "ipv4_dhcp",
     "ipv6_auto",
     "description",
     "mtu",
     "vlan_parent_interface",
     "vlan_tag",
     "vlan_pcp",
     "lag_protocol",
     "lag_ports",
     "bridge_members"
    ]
   },
   "return_schema_of_interface_delete": {
    "_name_": "interface_id",
    "title": "interface_id",
    "type": "string"
   },
   "interface_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "ipv4_dhcp": {
      "type": "boolean",
      "_name_": "ipv4_dhcp",
      "title": "ipv4_dhcp",
      "default": false
     },
     "ipv6_auto": {
      "type": "boolean",
      "_name_": "ipv6_auto",
      "title": "ipv6_auto",
      "default": false
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "INET",
         "_required_": true,
         "type": "string",
         "enum": [
          "INET",
          "INET6"
         ]
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        },
        "netmask": {
         "type": "integer",
         "_name_": "netmask",
         "title": "netmask",
         "_required_": true
        }
       },
       "additionalProperties": false,
       "_name_": "interface_alias",
       "title": "interface_alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address",
        "netmask"
       ]
      }
     },
     "failover_critical": {
      "type": "boolean",
      "_name_": "failover_critical",
      "title": "failover_critical",
      "default": false
     },
     "failover_group": {
      "type": "integer",
      "_name_": "failover_group",
      "title": "failover_group",
      "nullable": true
     },
     "failover_vhid": {
      "type": "integer",
      "_name_": "failover_vhid",
      "title": "failover_vhid",
      "nullable": true
     },
     "failover_aliases": {
      "_name_": "failover_aliases",
      "title": "failover_aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "INET",
         "_required_": true,
         "type": "string",
         "enum": [
          "INET",
          "INET6"
         ]
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "interface_failover_alias",
       "title": "interface_failover_alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address"
       ]
      }
     },
     "failover_virtual_aliases": {
      "_name_": "failover_virtual_aliases",
      "title": "failover_virtual_aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "INET",
         "_required_": true,
         "type": "string",
         "enum": [
          "INET",
          "INET6"
         ]
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "interface_virtual_alias",
       "title": "interface_virtual_alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address"
       ]
      }
     },
     "bridge_members": {
      "_name_": "bridge_members",
      "title": "bridge_members",
      "default": [],
      "type": "array",
      "items": {}
     },
     "stp": {
      "type": "boolean",
      "_name_": "stp",
      "title": "stp",
      "default": true
     },
     "lag_protocol": {
      "_name_": "lag_protocol",
      "title": "lag_protocol",
      "type": "string",
      "enum": [
       "LACP",
       "FAILOVER",
       "LOADBALANCE",
       "ROUNDROBIN",
       "NONE"
      ]
     },
     "xmit_hash_policy": {
      "_name_": "xmit_hash_policy",
      "title": "xmit_hash_policy",
      "default": null,
      "type": "string",
      "enum": [
       "LAYER2",
       "LAYER2+3",
       "LAYER3+4"
      ],
      "nullable": true
     },
     "lacpdu_rate": {
      "_name_": "lacpdu_rate",
      "title": "lacpdu_rate",
      "default": null,
      "type": "string",
      "enum": [
       "SLOW",
       "FAST"
      ],
      "nullable": true
     },
     "lag_ports": {
      "_name_": "lag_ports",
      "title": "lag_ports",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "interface",
       "title": "interface",
       "_required_": false,
       "type": "string"
      }
     },
     "vlan_parent_interface": {
      "_name_": "vlan_parent_interface",
      "title": "vlan_parent_interface",
      "type": "string"
     },
     "vlan_tag": {
      "type": "integer",
      "_name_": "vlan_tag",
      "title": "vlan_tag"
     },
     "vlan_pcp": {
      "type": "integer",
      "_name_": "vlan_pcp",
      "title": "vlan_pcp",
      "nullable": true
     },
     "mtu": {
      "type": "integer",
      "_name_": "mtu",
      "title": "mtu",
      "default": null,
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "interface_update",
    "title": "interface_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "description",
     "ipv4_dhcp",
     "ipv6_auto",
     "aliases",
     "failover_critical",
     "failover_group",
     "failover_vhid",
     "failover_aliases",
     "failover_virtual_aliases",
     "bridge_members",
     "stp",
     "lag_protocol",
     "xmit_hash_policy",
     "lacpdu_rate",
     "lag_ports",
     "vlan_parent_interface",
     "vlan_tag",
     "vlan_pcp",
     "mtu"
    ]
   },
   "return_schema_of_interface_update": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Update Interface of `id`."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "fake": {
      "type": "boolean",
      "_name_": "fake",
      "title": "fake"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "For BRIDGE `type` the following attribute is required: bridge_members.\nFor LINK_AGGREGATION `type` the following attributes are required: lag_ports,\nlag_protocol.\nFor VLAN `type` the following attributes are required: vlan_parent_interface,\nvlan_tag and vlan_pcp."
     },
     "state": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       },
       "orig_name": {
        "_name_": "orig_name",
        "title": "orig_name",
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "type": "string"
       },
       "mtu": {
        "type": "integer",
        "_name_": "mtu",
        "title": "mtu"
       },
       "cloned": {
        "type": "boolean",
        "_name_": "cloned",
        "title": "cloned"
       },
       "flags": {
        "_name_": "flags",
        "title": "flags",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "flag",
         "title": "flag",
         "_required_": false,
         "type": "string"
        }
       },
       "nd6_flags": {
        "_name_": "nd6_flags",
        "title": "nd6_flags",
        "default": [],
        "type": "array",
        "items": {}
       },
       "capabilities": {
        "_name_": "capabilities",
        "title": "capabilities",
        "default": [],
        "type": "array",
        "items": {}
       },
       "link_state": {
        "_name_": "link_state",
        "title": "link_state",
        "type": "string"
       },
       "media_type": {
        "_name_": "media_type",
        "title": "media_type",
        "type": "string"
       },
       "media_subtype": {
        "_name_": "media_subtype",
        "title": "media_subtype",
        "type": "string"
       },
       "active_media_type": {
        "_name_": "active_media_type",
        "title": "active_media_type",
        "type": "string"
       },
       "active_media_subtype": {
        "_name_": "active_media_subtype",
        "title": "active_media_subtype",
        "type": "string"
       },
       "supported_media": {
        "_name_": "supported_media",
        "title": "supported_media",
        "default": [],
        "type": "array",
        "items": {}
       },
       "media_options": {
        "_name_": "media_options",
        "title": "media_options",
        "default": [],
        "type": "array",
        "items": {},
        "nullable": true
       },
       "link_address": {
        "_name_": "link_address",
        "title": "link_address",
        "type": "string"
       },
       "permanent_link_address": {
        "_name_": "permanent_link_address",
        "title": "permanent_link_address",
        "type": "string",
        "nullable": true
       },
       "hardware_link_address": {
        "_name_": "hardware_link_address",
        "title": "hardware_link_address",
        "type": "string"
       },
       "rx_queues": {
        "type": "integer",
        "_name_": "rx_queues",
        "title": "rx_queues"
       },
       "tx_queues": {
        "type": "integer",
        "_name_": "tx_queues",
        "title": "tx_queues"
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "address": {
           "_name_": "address",
           "title": "address",
           "_required_": true,
           "type": "string"
          },
          "netmask": {
           "_name_": "netmask",
           "title": "netmask",
           "_required_": false,
           "type": "string"
          },
          "broadcast": {
           "_name_": "broadcast",
           "title": "broadcast",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "alias",
         "title": "alias",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "address",
          "netmask",
          "broadcast"
         ]
        }
       },
       "vrrp_config": {
        "_name_": "vrrp_config",
        "title": "vrrp_config",
        "default": [],
        "type": "array",
        "items": {},
        "nullable": true
       },
       "protocol": {
        "_name_": "protocol",
        "title": "protocol",
        "type": "string",
        "nullable": true
       },
       "ports": {
        "_name_": "ports",
        "title": "ports",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "flag",
             "title": "flag",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "name",
          "flags"
         ]
        }
       },
       "xmit_hash_policy": {
        "_name_": "xmit_hash_policy",
        "title": "xmit_hash_policy",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "lacpdu_rate": {
        "_name_": "lacpdu_rate",
        "title": "lacpdu_rate",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "parent": {
        "_name_": "parent",
        "title": "parent",
        "type": "string",
        "nullable": true
       },
       "tag": {
        "type": "integer",
        "_name_": "tag",
        "title": "tag",
        "nullable": true
       },
       "pcp": {
        "type": "integer",
        "_name_": "pcp",
        "title": "pcp",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": [
       "name",
       "orig_name",
       "description",
       "mtu",
       "cloned",
       "flags",
       "nd6_flags",
       "capabilities",
       "link_state",
       "media_type",
       "media_subtype",
       "active_media_type",
       "active_media_subtype",
       "supported_media",
       "media_options",
       "link_address",
       "permanent_link_address",
       "hardware_link_address",
       "rx_queues",
       "tx_queues",
       "aliases",
       "vrrp_config",
       "protocol",
       "ports",
       "xmit_hash_policy",
       "lacpdu_rate",
       "parent",
       "tag",
       "pcp"
      ]
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "_required_": true,
         "type": "string"
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        },
        "netmask": {
         "_name_": "netmask",
         "title": "netmask",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "alias",
       "title": "alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address",
        "netmask"
       ]
      }
     },
     "ipv4_dhcp": {
      "type": "boolean",
      "_name_": "ipv4_dhcp",
      "title": "ipv4_dhcp"
     },
     "ipv6_auto": {
      "type": "boolean",
      "_name_": "ipv6_auto",
      "title": "ipv6_auto"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "mtu": {
      "type": "integer",
      "_name_": "mtu",
      "title": "mtu",
      "nullable": true
     },
     "vlan_parent_interface": {
      "_name_": "vlan_parent_interface",
      "title": "vlan_parent_interface",
      "type": "string",
      "nullable": true
     },
     "vlan_tag": {
      "type": "integer",
      "_name_": "vlan_tag",
      "title": "vlan_tag",
      "nullable": true
     },
     "vlan_pcp": {
      "type": "integer",
      "_name_": "vlan_pcp",
      "title": "vlan_pcp",
      "nullable": true
     },
     "lag_protocol": {
      "_name_": "lag_protocol",
      "title": "lag_protocol",
      "type": "string"
     },
     "lag_ports": {
      "_name_": "lag_ports",
      "title": "lag_ports",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "lag_port",
       "title": "lag_port",
       "_required_": false,
       "type": "string"
      }
     },
     "bridge_members": {
      "_name_": "bridge_members",
      "title": "bridge_members",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "member",
       "title": "member",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": true,
    "_name_": "interface_update_returns",
    "title": "interface_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "fake",
     "type",
     "state",
     "aliases",
     "ipv4_dhcp",
     "ipv6_auto",
     "description",
     "mtu",
     "vlan_parent_interface",
     "vlan_tag",
     "vlan_pcp",
     "lag_protocol",
     "lag_ports",
     "bridge_members"
    ]
   },
   "interface_bridge_members_choices": {
    "_name_": "id",
    "title": "id",
    "default": null,
    "type": "string",
    "nullable": true
   },
   "return_schema_of_interface_bridge_members_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "bridge_members_choices",
    "title": "bridge_members_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_interface_checkin_waiting": {
    "type": "integer",
    "_name_": "remaining_seconds",
    "title": "remaining_seconds",
    "nullable": true
   },
   "interface_choices": {
    "type": "object",
    "properties": {
     "bridge_members": {
      "type": "boolean",
      "_name_": "bridge_members",
      "title": "bridge_members",
      "default": false,
      "description": "`bridge_members` will include BRIDGE members."
     },
     "lag_ports": {
      "type": "boolean",
      "_name_": "lag_ports",
      "title": "lag_ports",
      "default": false,
      "description": "`lag_ports` will include LINK_AGGREGATION ports."
     },
     "vlan_parent": {
      "type": "boolean",
      "_name_": "vlan_parent",
      "title": "vlan_parent",
      "default": true,
      "description": "`vlan_parent` will include VLAN parent interface."
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [
       "epair",
       "tap",
       "vnet"
      ],
      "type": "array",
      "items": {},
      "description": "`exclude` is a list of interfaces prefix to remove."
     },
     "exclude_types": {
      "_name_": "exclude_types",
      "title": "exclude_types",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "type",
       "title": "type",
       "_required_": false,
       "type": "string",
       "enum": [
        "BRIDGE",
        "LINK_AGGREGATION",
        "PHYSICAL",
        "UNKNOWN",
        "VLAN"
       ]
      }
     },
     "include": {
      "_name_": "include",
      "title": "include",
      "default": [],
      "type": "array",
      "items": {}
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "bridge_members",
     "lag_ports",
     "vlan_parent",
     "exclude",
     "exclude_types",
     "include"
    ]
   },
   "return_schema_of_interface_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "available_interfaces",
    "title": "available_interfaces",
    "default": {},
    "_attrs_order_": []
   },
   "interface_commit": {
    "type": "object",
    "properties": {
     "rollback": {
      "type": "boolean",
      "_name_": "rollback",
      "title": "rollback",
      "default": true,
      "description": "`rollback` as true (default) will rollback changes in case they fail to apply."
     },
     "checkin_timeout": {
      "type": "integer",
      "_name_": "checkin_timeout",
      "title": "checkin_timeout",
      "default": 60
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "rollback",
     "checkin_timeout"
    ]
   },
   "return_schema_of_interface_default_route_will_be_removed": {
    "type": "boolean",
    "_name_": "default_route_will_be_removed",
    "title": "default_route_will_be_removed"
   },
   "interface_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "interface_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "interface_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/interface_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/interface_get_instance_1"
     }
    }
   },
   "return_schema_of_interface_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "fake": {
      "type": "boolean",
      "_name_": "fake",
      "title": "fake"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "state": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       },
       "orig_name": {
        "_name_": "orig_name",
        "title": "orig_name",
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "type": "string"
       },
       "mtu": {
        "type": "integer",
        "_name_": "mtu",
        "title": "mtu"
       },
       "cloned": {
        "type": "boolean",
        "_name_": "cloned",
        "title": "cloned"
       },
       "flags": {
        "_name_": "flags",
        "title": "flags",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "flag",
         "title": "flag",
         "_required_": false,
         "type": "string"
        }
       },
       "nd6_flags": {
        "_name_": "nd6_flags",
        "title": "nd6_flags",
        "default": [],
        "type": "array",
        "items": {}
       },
       "capabilities": {
        "_name_": "capabilities",
        "title": "capabilities",
        "default": [],
        "type": "array",
        "items": {}
       },
       "link_state": {
        "_name_": "link_state",
        "title": "link_state",
        "type": "string"
       },
       "media_type": {
        "_name_": "media_type",
        "title": "media_type",
        "type": "string"
       },
       "media_subtype": {
        "_name_": "media_subtype",
        "title": "media_subtype",
        "type": "string"
       },
       "active_media_type": {
        "_name_": "active_media_type",
        "title": "active_media_type",
        "type": "string"
       },
       "active_media_subtype": {
        "_name_": "active_media_subtype",
        "title": "active_media_subtype",
        "type": "string"
       },
       "supported_media": {
        "_name_": "supported_media",
        "title": "supported_media",
        "default": [],
        "type": "array",
        "items": {}
       },
       "media_options": {
        "_name_": "media_options",
        "title": "media_options",
        "default": [],
        "type": "array",
        "items": {},
        "nullable": true
       },
       "link_address": {
        "_name_": "link_address",
        "title": "link_address",
        "type": "string"
       },
       "permanent_link_address": {
        "_name_": "permanent_link_address",
        "title": "permanent_link_address",
        "type": "string",
        "nullable": true
       },
       "hardware_link_address": {
        "_name_": "hardware_link_address",
        "title": "hardware_link_address",
        "type": "string"
       },
       "rx_queues": {
        "type": "integer",
        "_name_": "rx_queues",
        "title": "rx_queues"
       },
       "tx_queues": {
        "type": "integer",
        "_name_": "tx_queues",
        "title": "tx_queues"
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string"
          },
          "address": {
           "_name_": "address",
           "title": "address",
           "_required_": true,
           "type": "string"
          },
          "netmask": {
           "_name_": "netmask",
           "title": "netmask",
           "_required_": false,
           "type": "string"
          },
          "broadcast": {
           "_name_": "broadcast",
           "title": "broadcast",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "alias",
         "title": "alias",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "address",
          "netmask",
          "broadcast"
         ]
        }
       },
       "vrrp_config": {
        "_name_": "vrrp_config",
        "title": "vrrp_config",
        "default": [],
        "type": "array",
        "items": {},
        "nullable": true
       },
       "protocol": {
        "_name_": "protocol",
        "title": "protocol",
        "type": "string",
        "nullable": true
       },
       "ports": {
        "_name_": "ports",
        "title": "ports",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "name": {
           "_name_": "name",
           "title": "name",
           "_required_": false,
           "type": "string"
          },
          "flags": {
           "_name_": "flags",
           "title": "flags",
           "default": [],
           "_required_": false,
           "type": "array",
           "items": [
            {
             "_name_": "flag",
             "title": "flag",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "lag_ports",
         "title": "lag_ports",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "name",
          "flags"
         ]
        }
       },
       "xmit_hash_policy": {
        "_name_": "xmit_hash_policy",
        "title": "xmit_hash_policy",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "lacpdu_rate": {
        "_name_": "lacpdu_rate",
        "title": "lacpdu_rate",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "parent": {
        "_name_": "parent",
        "title": "parent",
        "type": "string",
        "nullable": true
       },
       "tag": {
        "type": "integer",
        "_name_": "tag",
        "title": "tag",
        "nullable": true
       },
       "pcp": {
        "type": "integer",
        "_name_": "pcp",
        "title": "pcp",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": [
       "name",
       "orig_name",
       "description",
       "mtu",
       "cloned",
       "flags",
       "nd6_flags",
       "capabilities",
       "link_state",
       "media_type",
       "media_subtype",
       "active_media_type",
       "active_media_subtype",
       "supported_media",
       "media_options",
       "link_address",
       "permanent_link_address",
       "hardware_link_address",
       "rx_queues",
       "tx_queues",
       "aliases",
       "vrrp_config",
       "protocol",
       "ports",
       "xmit_hash_policy",
       "lacpdu_rate",
       "parent",
       "tag",
       "pcp"
      ]
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "type": {
         "_name_": "type",
         "title": "type",
         "_required_": true,
         "type": "string"
        },
        "address": {
         "_name_": "address",
         "title": "address",
         "_required_": true,
         "type": "string"
        },
        "netmask": {
         "_name_": "netmask",
         "title": "netmask",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "alias",
       "title": "alias",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "type",
        "address",
        "netmask"
       ]
      }
     },
     "ipv4_dhcp": {
      "type": "boolean",
      "_name_": "ipv4_dhcp",
      "title": "ipv4_dhcp"
     },
     "ipv6_auto": {
      "type": "boolean",
      "_name_": "ipv6_auto",
      "title": "ipv6_auto"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "mtu": {
      "type": "integer",
      "_name_": "mtu",
      "title": "mtu",
      "nullable": true
     },
     "vlan_parent_interface": {
      "_name_": "vlan_parent_interface",
      "title": "vlan_parent_interface",
      "type": "string",
      "nullable": true
     },
     "vlan_tag": {
      "type": "integer",
      "_name_": "vlan_tag",
      "title": "vlan_tag",
      "nullable": true
     },
     "vlan_pcp": {
      "type": "integer",
      "_name_": "vlan_pcp",
      "title": "vlan_pcp",
      "nullable": true
     },
     "lag_protocol": {
      "_name_": "lag_protocol",
      "title": "lag_protocol",
      "type": "string"
     },
     "lag_ports": {
      "_name_": "lag_ports",
      "title": "lag_ports",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "lag_port",
       "title": "lag_port",
       "_required_": false,
       "type": "string"
      }
     },
     "bridge_members": {
      "_name_": "bridge_members",
      "title": "bridge_members",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "member",
       "title": "member",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": true,
    "_name_": "interface_entry",
    "title": "interface_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "fake",
     "type",
     "state",
     "aliases",
     "ipv4_dhcp",
     "ipv6_auto",
     "description",
     "mtu",
     "vlan_parent_interface",
     "vlan_tag",
     "vlan_pcp",
     "lag_protocol",
     "lag_ports",
     "bridge_members"
    ]
   },
   "return_schema_of_interface_has_pending_changes": {
    "type": "boolean",
    "_name_": "has_pending_changes",
    "title": "has_pending_changes"
   },
   "interface_ip_in_use": {
    "type": "object",
    "properties": {
     "ipv4": {
      "type": "boolean",
      "_name_": "ipv4",
      "title": "ipv4",
      "default": true
     },
     "ipv6": {
      "type": "boolean",
      "_name_": "ipv6",
      "title": "ipv6",
      "default": true
     },
     "ipv6_link_local": {
      "type": "boolean",
      "_name_": "ipv6_link_local",
      "title": "ipv6_link_local",
      "default": false
     },
     "loopback": {
      "type": "boolean",
      "_name_": "loopback",
      "title": "loopback",
      "default": false,
      "description": "`loopback` will return loopback interface addresses."
     },
     "any": {
      "type": "boolean",
      "_name_": "any",
      "title": "any",
      "default": false,
      "description": "`any` will return wildcard addresses (0.0.0.0 and ::)."
     },
     "static": {
      "type": "boolean",
      "_name_": "static",
      "title": "static",
      "default": false,
      "description": "`static` when enabled will ensure we only return static ip's configured."
     }
    },
    "additionalProperties": false,
    "_name_": "ips",
    "title": "ips",
    "default": {},
    "_attrs_order_": [
     "ipv4",
     "ipv6",
     "ipv6_link_local",
     "loopback",
     "any",
     "static"
    ]
   },
   "return_schema_of_interface_ip_in_use": {
    "_name_": "in_use_ips",
    "title": "in_use_ips",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "type": {
       "_name_": "type",
       "title": "type",
       "_required_": true,
       "type": "string"
      },
      "address": {
       "_name_": "address",
       "title": "address",
       "_required_": true,
       "type": "string"
      },
      "netmask": {
       "type": "integer",
       "_name_": "netmask",
       "title": "netmask",
       "_required_": true
      },
      "broadcast": {
       "_name_": "broadcast",
       "title": "broadcast",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "in_use_ip",
     "title": "in_use_ip",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "type",
      "address",
      "netmask",
      "broadcast"
     ]
    }
   },
   "return_schema_of_interface_lacpdu_rate_choices": {
    "type": "object",
    "properties": {
     "SLOW": {
      "_name_": "SLOW",
      "title": "SLOW",
      "type": "string",
      "enum": [
       "SLOW"
      ]
     },
     "FAST": {
      "_name_": "FAST",
      "title": "FAST",
      "type": "string",
      "enum": [
       "FAST"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "lacpdu_rate_choices",
    "title": "lacpdu_rate_choices",
    "default": {},
    "_attrs_order_": [
     "SLOW",
     "FAST"
    ]
   },
   "interface_lag_ports_choices": {
    "_name_": "id",
    "title": "id",
    "default": null,
    "type": "string",
    "nullable": true
   },
   "return_schema_of_interface_lag_ports_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "lag_ports_choices",
    "title": "lag_ports_choices",
    "default": {},
    "_attrs_order_": []
   },
   "interface_save_default_route": {
    "_name_": "gw",
    "title": "gw",
    "type": "string"
   },
   "return_schema_of_interface_services_restarted_on_sync": {
    "_name_": "services_to_be_restarted",
    "title": "services_to_be_restarted",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "type": {
       "_name_": "type",
       "title": "type",
       "_required_": true,
       "type": "string"
      },
      "service": {
       "_name_": "service",
       "title": "service",
       "_required_": true,
       "type": "string"
      },
      "ips": {
       "_name_": "ips",
       "title": "ips",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": [
        {
         "_name_": "ip",
         "title": "ip",
         "_required_": false,
         "type": "string"
        }
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "service_restart",
     "title": "service_restart",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "type",
      "service",
      "ips"
     ]
    }
   },
   "return_schema_of_interface_vlan_parent_interface_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "vlan_parent_interface_choices",
    "title": "vlan_parent_interface_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_interface_xmit_hash_policy_choices": {
    "type": "object",
    "properties": {
     "LAYER2": {
      "_name_": "LAYER2",
      "title": "LAYER2",
      "type": "string",
      "enum": [
       "LAYER2"
      ]
     },
     "LAYER2+3": {
      "_name_": "LAYER2+3",
      "title": "LAYER2+3",
      "type": "string",
      "enum": [
       "LAYER2+3"
      ]
     },
     "LAYER3+4": {
      "_name_": "LAYER3+4",
      "title": "LAYER3+4",
      "type": "string",
      "enum": [
       "LAYER3+4"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "xmit_hash_policy_choices",
    "title": "xmit_hash_policy_choices",
    "default": {},
    "_attrs_order_": [
     "LAYER2",
     "LAYER2+3",
     "LAYER3+4"
    ]
   },
   "interface_capabilities_get": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "return_schema_of_interface_capabilities_get": {
    "type": "object",
    "properties": {
     "enabled": {
      "_name_": "enabled",
      "title": "enabled",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "capability",
       "title": "capability",
       "_required_": false,
       "type": "string"
      }
     },
     "disabled": {
      "_name_": "disabled",
      "title": "disabled",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "capability",
       "title": "capability",
       "_required_": false,
       "type": "string"
      }
     },
     "supported": {
      "_name_": "supported",
      "title": "supported",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "capability",
       "title": "capability",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "capabilties",
    "title": "capabilties",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "disabled",
     "supported"
    ]
   },
   "interface_capabilities_set": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` String representing name of the interface\n`capabilities` List representing capabilities to be acted upon"
     },
     "capabilties": {
      "_name_": "capabilties",
      "title": "capabilties",
      "default": [],
      "type": "array",
      "items": {}
     },
     "action": {
      "_name_": "action",
      "title": "action",
      "type": "string",
      "enum": [
       "ENABLE",
       "DISABLE"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "capabilities_set",
    "title": "capabilities_set",
    "default": {},
    "_attrs_order_": [
     "name",
     "capabilties",
     "action"
    ]
   },
   "return_schema_of_interface_capabilities_set": {
    "_name_": "capabilities",
    "title": "capabilities",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "capability",
     "title": "capability",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_ipmi_is_loaded": {
    "type": "boolean",
    "_name_": "ipmi_loaded",
    "title": "ipmi_loaded"
   },
   "ipmi_chassis_identify": {
    "_name_": "verb",
    "title": "verb",
    "default": "ON",
    "type": "string",
    "enum": [
     "ON",
     "OFF"
    ]
   },
   "return_schema_of_ipmi_chassis_info": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "chassis_info",
    "title": "chassis_info",
    "default": {},
    "_attrs_order_": []
   },
   "ipmi_lan_query": {
    "type": "object",
    "properties": {
     "query-filters": {
      "_name_": "query-filters",
      "title": "query-filters",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "query-filter",
       "title": "query-filter",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      }
     },
     "query-options": {
      "type": "object",
      "properties": {
       "relationships": {
        "type": "boolean",
        "_name_": "relationships",
        "title": "relationships",
        "default": true
       },
       "extend": {
        "_name_": "extend",
        "title": "extend",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extend_context": {
        "_name_": "extend_context",
        "title": "extend_context",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "prefix": {
        "_name_": "prefix",
        "title": "prefix",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "extra": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extra",
        "title": "extra",
        "default": {},
        "_attrs_order_": []
       },
       "order_by": {
        "_name_": "order_by",
        "title": "order_by",
        "default": [],
        "type": "array",
        "items": {}
       },
       "select": {
        "_name_": "select",
        "title": "select",
        "default": [],
        "type": "array",
        "items": {}
       },
       "count": {
        "type": "boolean",
        "_name_": "count",
        "title": "count",
        "default": false
       },
       "get": {
        "type": "boolean",
        "_name_": "get",
        "title": "get",
        "default": false
       },
       "offset": {
        "type": "integer",
        "_name_": "offset",
        "title": "offset",
        "default": 0
       },
       "limit": {
        "type": "integer",
        "_name_": "limit",
        "title": "limit",
        "default": 0
       },
       "force_sql_filters": {
        "type": "boolean",
        "_name_": "force_sql_filters",
        "title": "force_sql_filters",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "query-options",
      "title": "query-options",
      "default": {},
      "_attrs_order_": [
       "relationships",
       "extend",
       "extend_context",
       "prefix",
       "extra",
       "order_by",
       "select",
       "count",
       "get",
       "offset",
       "limit",
       "force_sql_filters"
      ]
     },
     "ipmi-options": {
      "type": "object",
      "properties": {
       "query-remote": {
        "type": "boolean",
        "_name_": "query-remote",
        "title": "query-remote",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "ipmi-options",
      "title": "ipmi-options",
      "default": {},
      "_attrs_order_": [
       "query-remote"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "ipmi_lan_query",
    "title": "ipmi_lan_query",
    "default": {},
    "_attrs_order_": [
     "query-filters",
     "query-options",
     "ipmi-options"
    ]
   },
   "return_schema_of_ipmi_lan_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "channel": {
          "type": "integer",
          "_name_": "channel",
          "title": "channel",
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "ip_address_source": {
          "_name_": "ip_address_source",
          "title": "ip_address_source",
          "_required_": false,
          "type": "string"
         },
         "ip_address": {
          "_name_": "ip_address",
          "title": "ip_address",
          "_required_": false,
          "type": "string"
         },
         "mac_address": {
          "_name_": "mac_address",
          "title": "mac_address",
          "_required_": false,
          "type": "string"
         },
         "subnet_mask": {
          "_name_": "subnet_mask",
          "title": "subnet_mask",
          "_required_": false,
          "type": "string"
         },
         "default_gateway_ip_address": {
          "_name_": "default_gateway_ip_address",
          "title": "default_gateway_ip_address",
          "_required_": false,
          "type": "string"
         },
         "default_gateway_mac_address": {
          "_name_": "default_gateway_mac_address",
          "title": "default_gateway_mac_address",
          "_required_": false,
          "type": "string"
         },
         "backup_gateway_ip_address": {
          "_name_": "backup_gateway_ip_address",
          "title": "backup_gateway_ip_address",
          "_required_": false,
          "type": "string"
         },
         "backup_gateway_mac_address": {
          "_name_": "backup_gateway_mac_address",
          "title": "backup_gateway_mac_address",
          "_required_": false,
          "type": "string"
         },
         "vlan_id": {
          "type": "integer",
          "_name_": "vlan_id",
          "title": "vlan_id",
          "_required_": false
         },
         "vlan_id_enable": {
          "type": "boolean",
          "_name_": "vlan_id_enable",
          "title": "vlan_id_enable",
          "_required_": false
         },
         "vlan_priority": {
          "type": "integer",
          "_name_": "vlan_priority",
          "title": "vlan_priority",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "ipmi_channel",
        "title": "ipmi_channel",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "channel",
         "id",
         "ip_address_source",
         "ip_address",
         "mac_address",
         "subnet_mask",
         "default_gateway_ip_address",
         "default_gateway_mac_address",
         "backup_gateway_ip_address",
         "backup_gateway_mac_address",
         "vlan_id",
         "vlan_id_enable",
         "vlan_priority"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "channel": {
        "type": "integer",
        "_name_": "channel",
        "title": "channel",
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "ip_address_source": {
        "_name_": "ip_address_source",
        "title": "ip_address_source",
        "_required_": false,
        "type": "string"
       },
       "ip_address": {
        "_name_": "ip_address",
        "title": "ip_address",
        "_required_": false,
        "type": "string"
       },
       "mac_address": {
        "_name_": "mac_address",
        "title": "mac_address",
        "_required_": false,
        "type": "string"
       },
       "subnet_mask": {
        "_name_": "subnet_mask",
        "title": "subnet_mask",
        "_required_": false,
        "type": "string"
       },
       "default_gateway_ip_address": {
        "_name_": "default_gateway_ip_address",
        "title": "default_gateway_ip_address",
        "_required_": false,
        "type": "string"
       },
       "default_gateway_mac_address": {
        "_name_": "default_gateway_mac_address",
        "title": "default_gateway_mac_address",
        "_required_": false,
        "type": "string"
       },
       "backup_gateway_ip_address": {
        "_name_": "backup_gateway_ip_address",
        "title": "backup_gateway_ip_address",
        "_required_": false,
        "type": "string"
       },
       "backup_gateway_mac_address": {
        "_name_": "backup_gateway_mac_address",
        "title": "backup_gateway_mac_address",
        "_required_": false,
        "type": "string"
       },
       "vlan_id": {
        "type": "integer",
        "_name_": "vlan_id",
        "title": "vlan_id",
        "_required_": false
       },
       "vlan_id_enable": {
        "type": "boolean",
        "_name_": "vlan_id_enable",
        "title": "vlan_id_enable",
        "_required_": false
       },
       "vlan_priority": {
        "type": "integer",
        "_name_": "vlan_priority",
        "title": "vlan_priority",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "ipmi_channel",
      "title": "ipmi_channel",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "channel",
       "id",
       "ip_address_source",
       "ip_address",
       "mac_address",
       "subnet_mask",
       "default_gateway_ip_address",
       "default_gateway_mac_address",
       "backup_gateway_ip_address",
       "backup_gateway_mac_address",
       "vlan_id",
       "vlan_id_enable",
       "vlan_priority"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "channel": {
        "type": "integer",
        "_name_": "channel",
        "title": "channel",
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "ip_address_source": {
        "_name_": "ip_address_source",
        "title": "ip_address_source",
        "_required_": false,
        "type": "string"
       },
       "ip_address": {
        "_name_": "ip_address",
        "title": "ip_address",
        "_required_": false,
        "type": "string"
       },
       "mac_address": {
        "_name_": "mac_address",
        "title": "mac_address",
        "_required_": false,
        "type": "string"
       },
       "subnet_mask": {
        "_name_": "subnet_mask",
        "title": "subnet_mask",
        "_required_": false,
        "type": "string"
       },
       "default_gateway_ip_address": {
        "_name_": "default_gateway_ip_address",
        "title": "default_gateway_ip_address",
        "_required_": false,
        "type": "string"
       },
       "default_gateway_mac_address": {
        "_name_": "default_gateway_mac_address",
        "title": "default_gateway_mac_address",
        "_required_": false,
        "type": "string"
       },
       "backup_gateway_ip_address": {
        "_name_": "backup_gateway_ip_address",
        "title": "backup_gateway_ip_address",
        "_required_": false,
        "type": "string"
       },
       "backup_gateway_mac_address": {
        "_name_": "backup_gateway_mac_address",
        "title": "backup_gateway_mac_address",
        "_required_": false,
        "type": "string"
       },
       "vlan_id": {
        "type": "integer",
        "_name_": "vlan_id",
        "title": "vlan_id",
        "_required_": false
       },
       "vlan_id_enable": {
        "type": "boolean",
        "_name_": "vlan_id_enable",
        "title": "vlan_id_enable",
        "_required_": false
       },
       "vlan_priority": {
        "type": "integer",
        "_name_": "vlan_priority",
        "title": "vlan_priority",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "ipmi_channel",
      "title": "ipmi_channel",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "channel",
       "id",
       "ip_address_source",
       "ip_address",
       "mac_address",
       "subnet_mask",
       "default_gateway_ip_address",
       "default_gateway_mac_address",
       "backup_gateway_ip_address",
       "backup_gateway_mac_address",
       "vlan_id",
       "vlan_id_enable",
       "vlan_priority"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "ipmi_lan_update": {
    "type": "object",
    "properties": {
     "ipaddress": {
      "_name_": "ipaddress",
      "title": "ipaddress",
      "type": "string",
      "description": "`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
     },
     "netmask": {
      "_name_": "netmask",
      "title": "netmask",
      "type": "string",
      "description": "`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
     },
     "gateway": {
      "_name_": "gateway",
      "title": "gateway",
      "type": "string",
      "description": "`ipaddress` is an IPv4 address to be assigned to channel number `id`.\n`netmask` is the subnet mask associated with `ipaddress`.\n`gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.\n`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`password` is a password to be assigned to channel number `id`"
     },
     "dhcp": {
      "type": "boolean",
      "_name_": "dhcp",
      "title": "dhcp",
      "description": "`dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set."
     },
     "vlan": {
      "type": "integer",
      "_name_": "vlan",
      "title": "vlan",
      "description": "`vlan` is an integer representing the vlan tag number.",
      "nullable": true
     },
     "apply_remote": {
      "type": "boolean",
      "_name_": "apply_remote",
      "title": "apply_remote",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "ipmi_update",
    "title": "ipmi_update",
    "default": {},
    "_attrs_order_": [
     "ipaddress",
     "netmask",
     "gateway",
     "password",
     "dhcp",
     "vlan",
     "apply_remote"
    ]
   },
   "return_schema_of_ipmi_lan_update": {
    "type": "object",
    "properties": {
     "channel": {
      "type": "integer",
      "_name_": "channel",
      "title": "channel"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update IPMI configuration on channel number `id`."
     },
     "ip_address_source": {
      "_name_": "ip_address_source",
      "title": "ip_address_source",
      "type": "string"
     },
     "ip_address": {
      "_name_": "ip_address",
      "title": "ip_address",
      "type": "string"
     },
     "mac_address": {
      "_name_": "mac_address",
      "title": "mac_address",
      "type": "string"
     },
     "subnet_mask": {
      "_name_": "subnet_mask",
      "title": "subnet_mask",
      "type": "string"
     },
     "default_gateway_ip_address": {
      "_name_": "default_gateway_ip_address",
      "title": "default_gateway_ip_address",
      "type": "string"
     },
     "default_gateway_mac_address": {
      "_name_": "default_gateway_mac_address",
      "title": "default_gateway_mac_address",
      "type": "string"
     },
     "backup_gateway_ip_address": {
      "_name_": "backup_gateway_ip_address",
      "title": "backup_gateway_ip_address",
      "type": "string"
     },
     "backup_gateway_mac_address": {
      "_name_": "backup_gateway_mac_address",
      "title": "backup_gateway_mac_address",
      "type": "string"
     },
     "vlan_id": {
      "type": "integer",
      "_name_": "vlan_id",
      "title": "vlan_id"
     },
     "vlan_id_enable": {
      "type": "boolean",
      "_name_": "vlan_id_enable",
      "title": "vlan_id_enable"
     },
     "vlan_priority": {
      "type": "integer",
      "_name_": "vlan_priority",
      "title": "vlan_priority"
     }
    },
    "additionalProperties": false,
    "_name_": "ipmi_lan_update_returns",
    "title": "ipmi_lan_update_returns",
    "default": {},
    "_attrs_order_": [
     "channel",
     "id",
     "ip_address_source",
     "ip_address",
     "mac_address",
     "subnet_mask",
     "default_gateway_ip_address",
     "default_gateway_mac_address",
     "backup_gateway_ip_address",
     "backup_gateway_mac_address",
     "vlan_id",
     "vlan_id_enable",
     "vlan_priority"
    ]
   },
   "return_schema_of_ipmi_lan_channels": {
    "_name_": "lan_channels",
    "title": "lan_channels",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "lan_channel",
     "title": "lan_channel",
     "_required_": false
    }
   },
   "ipmi_lan_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "ipmi_lan_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "ipmi_lan_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/ipmi_lan_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/ipmi_lan_get_instance_1"
     }
    }
   },
   "return_schema_of_ipmi_lan_get_instance": {
    "type": "object",
    "properties": {
     "channel": {
      "type": "integer",
      "_name_": "channel",
      "title": "channel"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "ip_address_source": {
      "_name_": "ip_address_source",
      "title": "ip_address_source",
      "type": "string"
     },
     "ip_address": {
      "_name_": "ip_address",
      "title": "ip_address",
      "type": "string"
     },
     "mac_address": {
      "_name_": "mac_address",
      "title": "mac_address",
      "type": "string"
     },
     "subnet_mask": {
      "_name_": "subnet_mask",
      "title": "subnet_mask",
      "type": "string"
     },
     "default_gateway_ip_address": {
      "_name_": "default_gateway_ip_address",
      "title": "default_gateway_ip_address",
      "type": "string"
     },
     "default_gateway_mac_address": {
      "_name_": "default_gateway_mac_address",
      "title": "default_gateway_mac_address",
      "type": "string"
     },
     "backup_gateway_ip_address": {
      "_name_": "backup_gateway_ip_address",
      "title": "backup_gateway_ip_address",
      "type": "string"
     },
     "backup_gateway_mac_address": {
      "_name_": "backup_gateway_mac_address",
      "title": "backup_gateway_mac_address",
      "type": "string"
     },
     "vlan_id": {
      "type": "integer",
      "_name_": "vlan_id",
      "title": "vlan_id"
     },
     "vlan_id_enable": {
      "type": "boolean",
      "_name_": "vlan_id_enable",
      "title": "vlan_id_enable"
     },
     "vlan_priority": {
      "type": "integer",
      "_name_": "vlan_priority",
      "title": "vlan_priority"
     }
    },
    "additionalProperties": false,
    "_name_": "ipmi_channel",
    "title": "ipmi_channel",
    "default": {},
    "_attrs_order_": [
     "channel",
     "id",
     "ip_address_source",
     "ip_address",
     "mac_address",
     "subnet_mask",
     "default_gateway_ip_address",
     "default_gateway_mac_address",
     "backup_gateway_ip_address",
     "backup_gateway_mac_address",
     "vlan_id",
     "vlan_id_enable",
     "vlan_priority"
    ]
   },
   "return_schema_of_ipmi_mc_info": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "mc_info",
    "title": "mc_info",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_ipmi_sel_elist": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "ipmi_elist",
      "title": "ipmi_elist",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "ipmi_elist",
        "title": "ipmi_elist",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_ipmi_sel_info": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "ipmi_sel_info",
    "title": "ipmi_sel_info",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_ipmi_sensors_query": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "_name_": "sensors",
      "title": "sensors",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "sensor",
        "title": "sensor",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "_name_": "sensors",
        "title": "sensors",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "sensor",
          "title": "sensor",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_iscsi_auth_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "tag": {
          "type": "integer",
          "_name_": "tag",
          "title": "tag",
          "_required_": true
         },
         "user": {
          "_name_": "user",
          "title": "user",
          "_required_": true,
          "type": "string"
         },
         "secret": {
          "_name_": "secret",
          "title": "secret",
          "_required_": true,
          "type": "string"
         },
         "peeruser": {
          "_name_": "peeruser",
          "title": "peeruser",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "peersecret": {
          "_name_": "peersecret",
          "title": "peersecret",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "iscsi_auth_entry",
        "title": "iscsi_auth_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "tag",
         "user",
         "secret",
         "peeruser",
         "peersecret",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "tag": {
        "type": "integer",
        "_name_": "tag",
        "title": "tag",
        "_required_": true
       },
       "user": {
        "_name_": "user",
        "title": "user",
        "_required_": true,
        "type": "string"
       },
       "secret": {
        "_name_": "secret",
        "title": "secret",
        "_required_": true,
        "type": "string"
       },
       "peeruser": {
        "_name_": "peeruser",
        "title": "peeruser",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "peersecret": {
        "_name_": "peersecret",
        "title": "peersecret",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "iscsi_auth_entry",
      "title": "iscsi_auth_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "tag",
       "user",
       "secret",
       "peeruser",
       "peersecret",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "tag": {
        "type": "integer",
        "_name_": "tag",
        "title": "tag",
        "_required_": true
       },
       "user": {
        "_name_": "user",
        "title": "user",
        "_required_": true,
        "type": "string"
       },
       "secret": {
        "_name_": "secret",
        "title": "secret",
        "_required_": true,
        "type": "string"
       },
       "peeruser": {
        "_name_": "peeruser",
        "title": "peeruser",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "peersecret": {
        "_name_": "peersecret",
        "title": "peersecret",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "iscsi_auth_entry",
      "title": "iscsi_auth_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "tag",
       "user",
       "secret",
       "peeruser",
       "peersecret",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_auth_create": {
    "type": "object",
    "properties": {
     "tag": {
      "type": "integer",
      "_name_": "tag",
      "title": "tag",
      "description": "`tag` should be unique among all configured iSCSI Authorized Accesses."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "secret": {
      "_name_": "secret",
      "title": "secret",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     },
     "peeruser": {
      "_name_": "peeruser",
      "title": "peeruser",
      "default": "",
      "type": "string"
     },
     "peersecret": {
      "_name_": "peersecret",
      "title": "peersecret",
      "default": "",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_auth_create",
    "title": "iscsi_auth_create",
    "default": {},
    "_attrs_order_": [
     "tag",
     "user",
     "secret",
     "peeruser",
     "peersecret"
    ]
   },
   "return_schema_of_iscsi_auth_create": {
    "type": "object",
    "properties": {
     "tag": {
      "type": "integer",
      "_name_": "tag",
      "title": "tag",
      "description": "`tag` should be unique among all configured iSCSI Authorized Accesses."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "secret": {
      "_name_": "secret",
      "title": "secret",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     },
     "peeruser": {
      "_name_": "peeruser",
      "title": "peeruser",
      "default": "",
      "type": "string"
     },
     "peersecret": {
      "_name_": "peersecret",
      "title": "peersecret",
      "default": "",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_auth_create_returns",
    "title": "iscsi_auth_create_returns",
    "default": {},
    "_attrs_order_": [
     "tag",
     "user",
     "secret",
     "peeruser",
     "peersecret",
     "id"
    ]
   },
   "return_schema_of_iscsi_auth_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_auth_update": {
    "type": "object",
    "properties": {
     "tag": {
      "type": "integer",
      "_name_": "tag",
      "title": "tag",
      "description": "`tag` should be unique among all configured iSCSI Authorized Accesses."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "secret": {
      "_name_": "secret",
      "title": "secret",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     },
     "peeruser": {
      "_name_": "peeruser",
      "title": "peeruser",
      "default": "",
      "type": "string"
     },
     "peersecret": {
      "_name_": "peersecret",
      "title": "peersecret",
      "default": "",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_auth_update",
    "title": "iscsi_auth_update",
    "default": {},
    "_attrs_order_": [
     "tag",
     "user",
     "secret",
     "peeruser",
     "peersecret"
    ]
   },
   "return_schema_of_iscsi_auth_update": {
    "type": "object",
    "properties": {
     "tag": {
      "type": "integer",
      "_name_": "tag",
      "title": "tag",
      "description": "`tag` should be unique among all configured iSCSI Authorized Accesses."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "secret": {
      "_name_": "secret",
      "title": "secret",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     },
     "peeruser": {
      "_name_": "peeruser",
      "title": "peeruser",
      "default": "",
      "type": "string"
     },
     "peersecret": {
      "_name_": "peersecret",
      "title": "peersecret",
      "default": "",
      "type": "string",
      "description": "`secret` and `peersecret` should have length between 12-16 letters inclusive."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update iSCSI Authorized Access of `id`.\nCreate an iSCSI Authorized Access."
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_auth_update_returns",
    "title": "iscsi_auth_update_returns",
    "default": {},
    "_attrs_order_": [
     "tag",
     "user",
     "secret",
     "peeruser",
     "peersecret",
     "id"
    ]
   },
   "iscsi_auth_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_auth_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_auth_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_auth_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_auth_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_auth_get_instance": {
    "type": "object",
    "properties": {
     "tag": {
      "type": "integer",
      "_name_": "tag",
      "title": "tag"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "secret": {
      "_name_": "secret",
      "title": "secret",
      "type": "string"
     },
     "peeruser": {
      "_name_": "peeruser",
      "title": "peeruser",
      "default": "",
      "type": "string"
     },
     "peersecret": {
      "_name_": "peersecret",
      "title": "peersecret",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_auth_entry",
    "title": "iscsi_auth_entry",
    "default": {},
    "_attrs_order_": [
     "tag",
     "user",
     "secret",
     "peeruser",
     "peersecret",
     "id"
    ]
   },
   "return_schema_of_iscsi_extent_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "iscsi_extent_entry",
        "title": "iscsi_extent_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_extent_entry",
      "title": "iscsi_extent_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_extent_entry",
      "title": "iscsi_extent_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_extent_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "DISK",
      "type": "string",
      "enum": [
       "DISK",
       "FILE"
      ],
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.\nWith `type` being set to DISK, a valid ZFS volume is required."
     },
     "disk": {
      "_name_": "disk",
      "title": "disk",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "serial": {
      "_name_": "serial",
      "title": "serial",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "default": null,
      "type": "string",
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.",
      "nullable": true
     },
     "filesize": {
      "type": "integer",
      "_name_": "filesize",
      "title": "filesize",
      "default": 0,
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE."
     },
     "blocksize": {
      "type": "integer",
      "_name_": "blocksize",
      "title": "blocksize",
      "default": 512,
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE."
     },
     "pblocksize": {
      "type": "boolean",
      "_name_": "pblocksize",
      "title": "pblocksize"
     },
     "avail_threshold": {
      "type": "integer",
      "_name_": "avail_threshold",
      "title": "avail_threshold",
      "nullable": true
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "insecure_tpc": {
      "type": "boolean",
      "_name_": "insecure_tpc",
      "title": "insecure_tpc",
      "default": true,
      "description": "`insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable\ntarget. This allows xcopy operations otherwise blocked by access control."
     },
     "xen": {
      "type": "boolean",
      "_name_": "xen",
      "title": "xen",
      "description": "`xen` is a boolean value which is set to true if Xen is being used as the iSCSI initiator."
     },
     "rpm": {
      "_name_": "rpm",
      "title": "rpm",
      "default": "SSD",
      "type": "string",
      "enum": [
       "UNKNOWN",
       "SSD",
       "5400",
       "7200",
       "10000",
       "15000"
      ]
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_extent_create",
    "title": "iscsi_extent_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "disk",
     "serial",
     "path",
     "filesize",
     "blocksize",
     "pblocksize",
     "avail_threshold",
     "comment",
     "insecure_tpc",
     "xen",
     "rpm",
     "ro",
     "enabled"
    ]
   },
   "return_schema_of_iscsi_extent_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_extent_create_returns",
    "title": "iscsi_extent_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_extent_delete_1": {
    "type": "boolean",
    "_name_": "remove",
    "title": "remove",
    "default": false
   },
   "iscsi_extent_delete_2": {
    "type": "boolean",
    "_name_": "force",
    "title": "force",
    "default": false
   },
   "iscsi_extent_delete": {
    "type": "object",
    "properties": {
     "remove": {
      "$ref": "#/components/schemas/iscsi_extent_delete_1"
     },
     "force": {
      "$ref": "#/components/schemas/iscsi_extent_delete_2"
     }
    }
   },
   "return_schema_of_iscsi_extent_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_extent_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "DISK",
      "type": "string",
      "enum": [
       "DISK",
       "FILE"
      ],
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.\nWith `type` being set to DISK, a valid ZFS volume is required."
     },
     "disk": {
      "_name_": "disk",
      "title": "disk",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "serial": {
      "_name_": "serial",
      "title": "serial",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "default": null,
      "type": "string",
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.",
      "nullable": true
     },
     "filesize": {
      "type": "integer",
      "_name_": "filesize",
      "title": "filesize",
      "default": 0,
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE."
     },
     "blocksize": {
      "type": "integer",
      "_name_": "blocksize",
      "title": "blocksize",
      "default": 512,
      "description": "When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if\nnot zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE."
     },
     "pblocksize": {
      "type": "boolean",
      "_name_": "pblocksize",
      "title": "pblocksize"
     },
     "avail_threshold": {
      "type": "integer",
      "_name_": "avail_threshold",
      "title": "avail_threshold",
      "nullable": true
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "insecure_tpc": {
      "type": "boolean",
      "_name_": "insecure_tpc",
      "title": "insecure_tpc",
      "default": true,
      "description": "`insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable\ntarget. This allows xcopy operations otherwise blocked by access control."
     },
     "xen": {
      "type": "boolean",
      "_name_": "xen",
      "title": "xen",
      "description": "`xen` is a boolean value which is set to true if Xen is being used as the iSCSI initiator."
     },
     "rpm": {
      "_name_": "rpm",
      "title": "rpm",
      "default": "SSD",
      "type": "string",
      "enum": [
       "UNKNOWN",
       "SSD",
       "5400",
       "7200",
       "10000",
       "15000"
      ]
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_extent_update",
    "title": "iscsi_extent_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "disk",
     "serial",
     "path",
     "filesize",
     "blocksize",
     "pblocksize",
     "avail_threshold",
     "comment",
     "insecure_tpc",
     "xen",
     "rpm",
     "ro",
     "enabled"
    ]
   },
   "return_schema_of_iscsi_extent_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_extent_update_returns",
    "title": "iscsi_extent_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_extent_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_extent_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_extent_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_extent_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_extent_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_extent_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_extent_entry",
    "title": "iscsi_extent_entry",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_global_config": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_global_entry",
    "title": "iscsi_global_entry",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_global_update": {
    "type": "object",
    "properties": {
     "basename": {
      "_name_": "basename",
      "title": "basename",
      "type": "string"
     },
     "isns_servers": {
      "_name_": "isns_servers",
      "title": "isns_servers",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "server",
       "title": "server",
       "_required_": false,
       "type": "string"
      }
     },
     "listen_port": {
      "type": "integer",
      "_name_": "listen_port",
      "title": "listen_port",
      "default": 3260
     },
     "pool_avail_threshold": {
      "type": "integer",
      "_name_": "pool_avail_threshold",
      "title": "pool_avail_threshold",
      "nullable": true
     },
     "alua": {
      "type": "boolean",
      "_name_": "alua",
      "title": "alua"
     }
    },
    "additionalProperties": false,
    "_name_": "iscsiglobal_update",
    "title": "iscsiglobal_update",
    "default": {},
    "_attrs_order_": [
     "basename",
     "isns_servers",
     "listen_port",
     "pool_avail_threshold",
     "alua"
    ]
   },
   "return_schema_of_iscsi_global_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_global_update_returns",
    "title": "iscsi_global_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_global_sessions": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "initiator": {
        "_name_": "initiator",
        "title": "initiator",
        "_required_": false,
        "type": "string"
       },
       "initiator_addr": {
        "_name_": "initiator_addr",
        "title": "initiator_addr",
        "_required_": false,
        "type": "string"
       },
       "initiator_alias": {
        "_name_": "initiator_alias",
        "title": "initiator_alias",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "target": {
        "_name_": "target",
        "title": "target",
        "_required_": false,
        "type": "string"
       },
       "target_alias": {
        "_name_": "target_alias",
        "title": "target_alias",
        "_required_": false,
        "type": "string"
       },
       "header_digest": {
        "_name_": "header_digest",
        "title": "header_digest",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "data_digest": {
        "_name_": "data_digest",
        "title": "data_digest",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "max_data_segment_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "max_data_segment_length",
        "title": "max_data_segment_length",
        "_required_": false
       },
       "max_receive_data_segment_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "max_receive_data_segment_length",
        "title": "max_receive_data_segment_length",
        "_required_": false
       },
       "max_burst_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "max_burst_length",
        "title": "max_burst_length",
        "_required_": false
       },
       "first_burst_length": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "first_burst_length",
        "title": "first_burst_length",
        "_required_": false
       },
       "immediate_data": {
        "type": "boolean",
        "_name_": "immediate_data",
        "title": "immediate_data",
        "_required_": false
       },
       "iser": {
        "type": "boolean",
        "_name_": "iser",
        "title": "iser",
        "_required_": false
       },
       "offload": {
        "type": "boolean",
        "_name_": "offload",
        "title": "offload",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "session",
      "title": "session",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "initiator",
       "initiator_addr",
       "initiator_alias",
       "target",
       "target_alias",
       "header_digest",
       "data_digest",
       "max_data_segment_length",
       "max_receive_data_segment_length",
       "max_burst_length",
       "first_burst_length",
       "immediate_data",
       "iser",
       "offload"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "initiator": {
          "_name_": "initiator",
          "title": "initiator",
          "_required_": false,
          "type": "string"
         },
         "initiator_addr": {
          "_name_": "initiator_addr",
          "title": "initiator_addr",
          "_required_": false,
          "type": "string"
         },
         "initiator_alias": {
          "_name_": "initiator_alias",
          "title": "initiator_alias",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "target": {
          "_name_": "target",
          "title": "target",
          "_required_": false,
          "type": "string"
         },
         "target_alias": {
          "_name_": "target_alias",
          "title": "target_alias",
          "_required_": false,
          "type": "string"
         },
         "header_digest": {
          "_name_": "header_digest",
          "title": "header_digest",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "data_digest": {
          "_name_": "data_digest",
          "title": "data_digest",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "max_data_segment_length": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "max_data_segment_length",
          "title": "max_data_segment_length",
          "_required_": false
         },
         "max_receive_data_segment_length": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "max_receive_data_segment_length",
          "title": "max_receive_data_segment_length",
          "_required_": false
         },
         "max_burst_length": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "max_burst_length",
          "title": "max_burst_length",
          "_required_": false
         },
         "first_burst_length": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "first_burst_length",
          "title": "first_burst_length",
          "_required_": false
         },
         "immediate_data": {
          "type": "boolean",
          "_name_": "immediate_data",
          "title": "immediate_data",
          "_required_": false
         },
         "iser": {
          "type": "boolean",
          "_name_": "iser",
          "title": "iser",
          "_required_": false
         },
         "offload": {
          "type": "boolean",
          "_name_": "offload",
          "title": "offload",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "session",
        "title": "session",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "initiator",
         "initiator_addr",
         "initiator_alias",
         "target",
         "target_alias",
         "header_digest",
         "data_digest",
         "max_data_segment_length",
         "max_receive_data_segment_length",
         "max_burst_length",
         "first_burst_length",
         "immediate_data",
         "iser",
         "offload"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_iscsi_host_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "iscsi_host_entry",
        "title": "iscsi_host_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_host_entry",
      "title": "iscsi_host_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_host_entry",
      "title": "iscsi_host_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_host_create": {
    "type": "object",
    "properties": {
     "ip": {
      "_name_": "ip",
      "title": "ip",
      "type": "string",
      "description": "`ip` indicates an IP address of the host."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string",
      "description": "`description` is a human-readable name for the host."
     },
     "iqns": {
      "_name_": "iqns",
      "title": "iqns",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "iqn",
       "title": "iqn",
       "_required_": false,
       "type": "string"
      }
     },
     "added_automatically": {
      "type": "boolean",
      "_name_": "added_automatically",
      "title": "added_automatically",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_host_create",
    "title": "iscsi_host_create",
    "default": {},
    "_attrs_order_": [
     "ip",
     "description",
     "iqns",
     "added_automatically"
    ]
   },
   "return_schema_of_iscsi_host_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_host_create_returns",
    "title": "iscsi_host_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_host_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_host_update": {
    "type": "object",
    "properties": {
     "ip": {
      "_name_": "ip",
      "title": "ip",
      "type": "string",
      "description": "`ip` indicates an IP address of the host."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string",
      "description": "`description` is a human-readable name for the host."
     },
     "iqns": {
      "_name_": "iqns",
      "title": "iqns",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "iqn",
       "title": "iqn",
       "_required_": false,
       "type": "string"
      }
     },
     "added_automatically": {
      "type": "boolean",
      "_name_": "added_automatically",
      "title": "added_automatically",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_host_update",
    "title": "iscsi_host_update",
    "default": {},
    "_attrs_order_": [
     "ip",
     "description",
     "iqns",
     "added_automatically"
    ]
   },
   "return_schema_of_iscsi_host_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_host_update_returns",
    "title": "iscsi_host_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_host_get_initiators": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "iscsi_host_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_host_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_host_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_host_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_host_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_host_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_host_entry",
    "title": "iscsi_host_entry",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_host_get_targets": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "iscsi_host_set_initiators_0": {
    "type": "integer",
    "_name_": "id",
    "title": "id",
    "description": "Associates initiator groups `ids` with host `id`."
   },
   "iscsi_host_set_initiators_1": {
    "_name_": "ids",
    "title": "ids",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "id",
     "title": "id",
     "_required_": false
    },
    "description": "Associates initiator groups `ids` with host `id`."
   },
   "iscsi_host_set_initiators_2": {
    "type": "boolean",
    "_name_": "force",
    "title": "force",
    "default": false
   },
   "iscsi_host_set_initiators": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_host_set_initiators_0"
     },
     "ids": {
      "$ref": "#/components/schemas/iscsi_host_set_initiators_1"
     },
     "force": {
      "$ref": "#/components/schemas/iscsi_host_set_initiators_2"
     }
    }
   },
   "iscsi_host_set_targets_0": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "iscsi_host_set_targets_1": {
    "_name_": "ids",
    "title": "ids",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "id",
     "title": "id",
     "_required_": false
    }
   },
   "iscsi_host_set_targets": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_host_set_targets_0"
     },
     "ids": {
      "$ref": "#/components/schemas/iscsi_host_set_targets_1"
     }
    }
   },
   "return_schema_of_iscsi_initiator_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "iscsi_initiator_entry",
        "title": "iscsi_initiator_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_initiator_entry",
      "title": "iscsi_initiator_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_initiator_entry",
      "title": "iscsi_initiator_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_initiator_create": {
    "type": "object",
    "properties": {
     "initiators": {
      "_name_": "initiators",
      "title": "initiators",
      "default": [],
      "type": "array",
      "items": {}
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_initiator_create",
    "title": "iscsi_initiator_create",
    "default": {},
    "_attrs_order_": [
     "initiators",
     "comment"
    ]
   },
   "return_schema_of_iscsi_initiator_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_initiator_create_returns",
    "title": "iscsi_initiator_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_initiator_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_initiator_update": {
    "type": "object",
    "properties": {
     "initiators": {
      "_name_": "initiators",
      "title": "initiators",
      "default": [],
      "type": "array",
      "items": {}
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_initiator_update",
    "title": "iscsi_initiator_update",
    "default": {},
    "_attrs_order_": [
     "initiators",
     "comment"
    ]
   },
   "return_schema_of_iscsi_initiator_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_initiator_update_returns",
    "title": "iscsi_initiator_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_initiator_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_initiator_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_initiator_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_initiator_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_initiator_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_initiator_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_initiator_entry",
    "title": "iscsi_initiator_entry",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_portal_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "iscsi_portal_entry",
        "title": "iscsi_portal_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_portal_entry",
      "title": "iscsi_portal_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_portal_entry",
      "title": "iscsi_portal_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_portal_create": {
    "type": "object",
    "properties": {
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "discovery_authmethod": {
      "_name_": "discovery_authmethod",
      "title": "discovery_authmethod",
      "default": "NONE",
      "type": "string",
      "enum": [
       "NONE",
       "CHAP",
       "CHAP_MUTUAL"
      ]
     },
     "discovery_authgroup": {
      "type": "integer",
      "_name_": "discovery_authgroup",
      "title": "discovery_authgroup",
      "default": null,
      "nullable": true
     },
     "listen": {
      "_name_": "listen",
      "title": "listen",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "ip": {
         "_name_": "ip",
         "title": "ip",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "listen",
       "title": "listen",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "ip"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "iscsiportal_create",
    "title": "iscsiportal_create",
    "default": {},
    "_attrs_order_": [
     "comment",
     "discovery_authmethod",
     "discovery_authgroup",
     "listen"
    ]
   },
   "return_schema_of_iscsi_portal_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_portal_create_returns",
    "title": "iscsi_portal_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_portal_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_portal_update": {
    "type": "object",
    "properties": {
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "type": "string"
     },
     "discovery_authmethod": {
      "_name_": "discovery_authmethod",
      "title": "discovery_authmethod",
      "default": "NONE",
      "type": "string",
      "enum": [
       "NONE",
       "CHAP",
       "CHAP_MUTUAL"
      ]
     },
     "discovery_authgroup": {
      "type": "integer",
      "_name_": "discovery_authgroup",
      "title": "discovery_authgroup",
      "default": null,
      "nullable": true
     },
     "listen": {
      "_name_": "listen",
      "title": "listen",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "ip": {
         "_name_": "ip",
         "title": "ip",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "listen",
       "title": "listen",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "ip"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "iscsiportal_update",
    "title": "iscsiportal_update",
    "default": {},
    "_attrs_order_": [
     "comment",
     "discovery_authmethod",
     "discovery_authgroup",
     "listen"
    ]
   },
   "return_schema_of_iscsi_portal_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_portal_update_returns",
    "title": "iscsi_portal_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_portal_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_portal_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_portal_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_portal_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_portal_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_portal_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_portal_entry",
    "title": "iscsi_portal_entry",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_iscsi_target_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "iscsi_target_entry",
        "title": "iscsi_target_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_target_entry",
      "title": "iscsi_target_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_target_entry",
      "title": "iscsi_target_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_target_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "alias": {
      "_name_": "alias",
      "title": "alias",
      "type": "string",
      "nullable": true
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "ISCSI",
      "type": "string",
      "enum": [
       "ISCSI",
       "FC",
       "BOTH"
      ]
     },
     "groups": {
      "_name_": "groups",
      "title": "groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "portal": {
         "type": "integer",
         "_name_": "portal",
         "title": "portal",
         "_required_": true
        },
        "initiator": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "initiator",
         "title": "initiator",
         "default": null,
         "_required_": false
        },
        "authmethod": {
         "_name_": "authmethod",
         "title": "authmethod",
         "default": "NONE",
         "_required_": false,
         "type": "string",
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ]
        },
        "auth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "auth",
         "title": "auth",
         "default": null,
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "group",
       "title": "group",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "portal",
        "initiator",
        "authmethod",
        "auth"
       ]
      },
      "description": "`groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,\n`authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to\nnull."
     },
     "auth_networks": {
      "_name_": "auth_networks",
      "title": "auth_networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "ip",
       "title": "ip",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_target_create",
    "title": "iscsi_target_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "alias",
     "mode",
     "groups",
     "auth_networks"
    ]
   },
   "return_schema_of_iscsi_target_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_target_create_returns",
    "title": "iscsi_target_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_target_delete": {
    "type": "boolean",
    "_name_": "force",
    "title": "force",
    "default": false
   },
   "return_schema_of_iscsi_target_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_target_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "alias": {
      "_name_": "alias",
      "title": "alias",
      "type": "string",
      "nullable": true
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "ISCSI",
      "type": "string",
      "enum": [
       "ISCSI",
       "FC",
       "BOTH"
      ]
     },
     "groups": {
      "_name_": "groups",
      "title": "groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "portal": {
         "type": "integer",
         "_name_": "portal",
         "title": "portal",
         "_required_": true
        },
        "initiator": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "initiator",
         "title": "initiator",
         "default": null,
         "_required_": false
        },
        "authmethod": {
         "_name_": "authmethod",
         "title": "authmethod",
         "default": "NONE",
         "_required_": false,
         "type": "string",
         "enum": [
          "NONE",
          "CHAP",
          "CHAP_MUTUAL"
         ]
        },
        "auth": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "auth",
         "title": "auth",
         "default": null,
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "group",
       "title": "group",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "portal",
        "initiator",
        "authmethod",
        "auth"
       ]
      },
      "description": "`groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,\n`authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to\nnull."
     },
     "auth_networks": {
      "_name_": "auth_networks",
      "title": "auth_networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "ip",
       "title": "ip",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_target_update",
    "title": "iscsi_target_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "alias",
     "mode",
     "groups",
     "auth_networks"
    ]
   },
   "return_schema_of_iscsi_target_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_target_update_returns",
    "title": "iscsi_target_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_target_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_target_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_target_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_target_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_target_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_target_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_target_entry",
    "title": "iscsi_target_entry",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_target_validate_name_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "iscsi_target_validate_name_1": {
    "type": "integer",
    "_name_": "existing_id",
    "title": "existing_id",
    "default": null,
    "nullable": true
   },
   "iscsi_target_validate_name": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/iscsi_target_validate_name_0"
     },
     "existing_id": {
      "$ref": "#/components/schemas/iscsi_target_validate_name_1"
     }
    }
   },
   "return_schema_of_iscsi_targetextent_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "iscsi_targetextent_entry",
        "title": "iscsi_targetextent_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_targetextent_entry",
      "title": "iscsi_targetextent_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "iscsi_targetextent_entry",
      "title": "iscsi_targetextent_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "iscsi_targetextent_create": {
    "type": "object",
    "properties": {
     "target": {
      "type": "integer",
      "_name_": "target",
      "title": "target"
     },
     "lunid": {
      "type": "integer",
      "_name_": "lunid",
      "title": "lunid",
      "nullable": true
     },
     "extent": {
      "type": "integer",
      "_name_": "extent",
      "title": "extent"
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_targetextent_create",
    "title": "iscsi_targetextent_create",
    "default": {},
    "_attrs_order_": [
     "target",
     "lunid",
     "extent"
    ]
   },
   "return_schema_of_iscsi_targetextent_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_targetextent_create_returns",
    "title": "iscsi_targetextent_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_targetextent_delete": {
    "type": "boolean",
    "_name_": "force",
    "title": "force",
    "default": false
   },
   "return_schema_of_iscsi_targetextent_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "iscsi_targetextent_update": {
    "type": "object",
    "properties": {
     "target": {
      "type": "integer",
      "_name_": "target",
      "title": "target"
     },
     "lunid": {
      "type": "integer",
      "_name_": "lunid",
      "title": "lunid"
     },
     "extent": {
      "type": "integer",
      "_name_": "extent",
      "title": "extent"
     }
    },
    "additionalProperties": false,
    "_name_": "iscsi_targetextent_update",
    "title": "iscsi_targetextent_update",
    "default": {},
    "_attrs_order_": [
     "target",
     "lunid",
     "extent"
    ]
   },
   "return_schema_of_iscsi_targetextent_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_targetextent_update_returns",
    "title": "iscsi_targetextent_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "iscsi_targetextent_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "iscsi_targetextent_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "iscsi_targetextent_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/iscsi_targetextent_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/iscsi_targetextent_get_instance_1"
     }
    }
   },
   "return_schema_of_iscsi_targetextent_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "iscsi_targetextent_entry",
    "title": "iscsi_targetextent_entry",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_jbof_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": "string"
         },
         "mgmt_ip1": {
          "_name_": "mgmt_ip1",
          "title": "mgmt_ip1",
          "_required_": true,
          "type": "string"
         },
         "mgmt_ip2": {
          "_name_": "mgmt_ip2",
          "title": "mgmt_ip2",
          "_required_": false,
          "type": "string"
         },
         "mgmt_username": {
          "_name_": "mgmt_username",
          "title": "mgmt_username",
          "_required_": true,
          "type": "string"
         },
         "mgmt_password": {
          "_name_": "mgmt_password",
          "title": "mgmt_password",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "jbof_entry",
        "title": "jbof_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "description",
         "mgmt_ip1",
         "mgmt_ip2",
         "mgmt_username",
         "mgmt_password"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": "string"
       },
       "mgmt_ip1": {
        "_name_": "mgmt_ip1",
        "title": "mgmt_ip1",
        "_required_": true,
        "type": "string"
       },
       "mgmt_ip2": {
        "_name_": "mgmt_ip2",
        "title": "mgmt_ip2",
        "_required_": false,
        "type": "string"
       },
       "mgmt_username": {
        "_name_": "mgmt_username",
        "title": "mgmt_username",
        "_required_": true,
        "type": "string"
       },
       "mgmt_password": {
        "_name_": "mgmt_password",
        "title": "mgmt_password",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "jbof_entry",
      "title": "jbof_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "description",
       "mgmt_ip1",
       "mgmt_ip2",
       "mgmt_username",
       "mgmt_password"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": "string"
       },
       "mgmt_ip1": {
        "_name_": "mgmt_ip1",
        "title": "mgmt_ip1",
        "_required_": true,
        "type": "string"
       },
       "mgmt_ip2": {
        "_name_": "mgmt_ip2",
        "title": "mgmt_ip2",
        "_required_": false,
        "type": "string"
       },
       "mgmt_username": {
        "_name_": "mgmt_username",
        "title": "mgmt_username",
        "_required_": true,
        "type": "string"
       },
       "mgmt_password": {
        "_name_": "mgmt_password",
        "title": "mgmt_password",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "jbof_entry",
      "title": "jbof_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "description",
       "mgmt_ip1",
       "mgmt_ip2",
       "mgmt_username",
       "mgmt_password"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "jbof_create": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string",
      "description": "`description` Optional description of the JBOF."
     },
     "mgmt_ip1": {
      "_name_": "mgmt_ip1",
      "title": "mgmt_ip1",
      "type": "string",
      "description": "`mgmt_ip1` IP of 1st Redfish management interface."
     },
     "mgmt_ip2": {
      "_name_": "mgmt_ip2",
      "title": "mgmt_ip2",
      "type": "string",
      "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
     },
     "mgmt_username": {
      "_name_": "mgmt_username",
      "title": "mgmt_username",
      "type": "string",
      "description": "`mgmt_username` Redfish administrative username."
     },
     "mgmt_password": {
      "_name_": "mgmt_password",
      "title": "mgmt_password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "jbof_create",
    "title": "jbof_create",
    "default": {},
    "_attrs_order_": [
     "description",
     "mgmt_ip1",
     "mgmt_ip2",
     "mgmt_username",
     "mgmt_password"
    ]
   },
   "return_schema_of_jbof_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string",
      "description": "`description` Optional description of the JBOF."
     },
     "mgmt_ip1": {
      "_name_": "mgmt_ip1",
      "title": "mgmt_ip1",
      "type": "string",
      "description": "`mgmt_ip1` IP of 1st Redfish management interface."
     },
     "mgmt_ip2": {
      "_name_": "mgmt_ip2",
      "title": "mgmt_ip2",
      "type": "string",
      "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
     },
     "mgmt_username": {
      "_name_": "mgmt_username",
      "title": "mgmt_username",
      "type": "string",
      "description": "`mgmt_username` Redfish administrative username."
     },
     "mgmt_password": {
      "_name_": "mgmt_password",
      "title": "mgmt_password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "jbof_create_returns",
    "title": "jbof_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "description",
     "mgmt_ip1",
     "mgmt_ip2",
     "mgmt_username",
     "mgmt_password"
    ]
   },
   "jbof_delete": {
    "type": "boolean",
    "_name_": "force",
    "title": "force",
    "default": false
   },
   "return_schema_of_jbof_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "jbof_update": {
    "type": "object",
    "properties": {
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string",
      "description": "`description` Optional description of the JBOF."
     },
     "mgmt_ip1": {
      "_name_": "mgmt_ip1",
      "title": "mgmt_ip1",
      "type": "string",
      "description": "`mgmt_ip1` IP of 1st Redfish management interface."
     },
     "mgmt_ip2": {
      "_name_": "mgmt_ip2",
      "title": "mgmt_ip2",
      "type": "string",
      "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
     },
     "mgmt_username": {
      "_name_": "mgmt_username",
      "title": "mgmt_username",
      "type": "string",
      "description": "`mgmt_username` Redfish administrative username."
     },
     "mgmt_password": {
      "_name_": "mgmt_password",
      "title": "mgmt_password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "jbof_update",
    "title": "jbof_update",
    "default": {},
    "_attrs_order_": [
     "description",
     "mgmt_ip1",
     "mgmt_ip2",
     "mgmt_username",
     "mgmt_password"
    ]
   },
   "return_schema_of_jbof_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update JBOF of `id`\nCreate a new JBOF."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string",
      "description": "`description` Optional description of the JBOF."
     },
     "mgmt_ip1": {
      "_name_": "mgmt_ip1",
      "title": "mgmt_ip1",
      "type": "string",
      "description": "`mgmt_ip1` IP of 1st Redfish management interface."
     },
     "mgmt_ip2": {
      "_name_": "mgmt_ip2",
      "title": "mgmt_ip2",
      "type": "string",
      "description": "`mgmt_ip2` Optional IP of 2nd Redfish management interface."
     },
     "mgmt_username": {
      "_name_": "mgmt_username",
      "title": "mgmt_username",
      "type": "string",
      "description": "`mgmt_username` Redfish administrative username."
     },
     "mgmt_password": {
      "_name_": "mgmt_password",
      "title": "mgmt_password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "jbof_update_returns",
    "title": "jbof_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "description",
     "mgmt_ip1",
     "mgmt_ip2",
     "mgmt_username",
     "mgmt_password"
    ]
   },
   "jbof_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "jbof_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "jbof_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/jbof_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/jbof_get_instance_1"
     }
    }
   },
   "return_schema_of_jbof_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "mgmt_ip1": {
      "_name_": "mgmt_ip1",
      "title": "mgmt_ip1",
      "type": "string"
     },
     "mgmt_ip2": {
      "_name_": "mgmt_ip2",
      "title": "mgmt_ip2",
      "type": "string"
     },
     "mgmt_username": {
      "_name_": "mgmt_username",
      "title": "mgmt_username",
      "type": "string"
     },
     "mgmt_password": {
      "_name_": "mgmt_password",
      "title": "mgmt_password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "jbof_entry",
    "title": "jbof_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "description",
     "mgmt_ip1",
     "mgmt_ip2",
     "mgmt_username",
     "mgmt_password"
    ]
   },
   "return_schema_of_jbof_licensed": {
    "type": "integer",
    "_name_": "licensed",
    "title": "licensed"
   },
   "return_schema_of_kerberos_config": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "kerberos_entry",
    "title": "kerberos_entry",
    "default": {},
    "_attrs_order_": []
   },
   "kerberos_update": {
    "type": "object",
    "properties": {
     "appdefaults_aux": {
      "_name_": "appdefaults_aux",
      "title": "appdefaults_aux",
      "type": "string",
      "description": "`appdefaults_aux` add parameters to \"appdefaults\" section of the krb5.conf file."
     },
     "libdefaults_aux": {
      "_name_": "libdefaults_aux",
      "title": "libdefaults_aux",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_settings_update",
    "title": "kerberos_settings_update",
    "default": {},
    "_attrs_order_": [
     "appdefaults_aux",
     "libdefaults_aux"
    ]
   },
   "return_schema_of_kerberos_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "kerberos_update_returns",
    "title": "kerberos_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_kerberos_keytab_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "file": {
          "_name_": "file",
          "title": "file",
          "_required_": false,
          "type": "string"
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "kerberos_keytab_entry",
        "title": "kerberos_keytab_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "file",
         "name",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "file": {
        "_name_": "file",
        "title": "file",
        "_required_": false,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "kerberos_keytab_entry",
      "title": "kerberos_keytab_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "file",
       "name",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "file": {
        "_name_": "file",
        "title": "file",
        "_required_": false,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "kerberos_keytab_entry",
      "title": "kerberos_keytab_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "file",
       "name",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "kerberos_keytab_create": {
    "type": "object",
    "properties": {
     "file": {
      "_name_": "file",
      "title": "file",
      "type": "string",
      "description": "`file` b64encoded kerberos keytab"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_keytab_create",
    "title": "kerberos_keytab_create",
    "default": {},
    "_attrs_order_": [
     "file",
     "name"
    ]
   },
   "return_schema_of_kerberos_keytab_create": {
    "type": "object",
    "properties": {
     "file": {
      "_name_": "file",
      "title": "file",
      "type": "string",
      "description": "`file` b64encoded kerberos keytab"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_keytab_create_returns",
    "title": "kerberos_keytab_create_returns",
    "default": {},
    "_attrs_order_": [
     "file",
     "name",
     "id"
    ]
   },
   "return_schema_of_kerberos_keytab_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "kerberos_keytab_update": {
    "type": "object",
    "properties": {
     "file": {
      "_name_": "file",
      "title": "file",
      "type": "string",
      "description": "`file` b64encoded kerberos keytab"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_keytab_update",
    "title": "kerberos_keytab_update",
    "default": {},
    "_attrs_order_": [
     "file",
     "name"
    ]
   },
   "return_schema_of_kerberos_keytab_update": {
    "type": "object",
    "properties": {
     "file": {
      "_name_": "file",
      "title": "file",
      "type": "string",
      "description": "`file` b64encoded kerberos keytab"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_keytab_update_returns",
    "title": "kerberos_keytab_update_returns",
    "default": {},
    "_attrs_order_": [
     "file",
     "name",
     "id"
    ]
   },
   "kerberos_keytab_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "kerberos_keytab_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "kerberos_keytab_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/kerberos_keytab_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/kerberos_keytab_get_instance_1"
     }
    }
   },
   "return_schema_of_kerberos_keytab_get_instance": {
    "type": "object",
    "properties": {
     "file": {
      "_name_": "file",
      "title": "file",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_keytab_entry",
    "title": "kerberos_keytab_entry",
    "default": {},
    "_attrs_order_": [
     "file",
     "name",
     "id"
    ]
   },
   "return_schema_of_kerberos_keytab_system_keytab_list": {
    "_name_": "system-keytab",
    "title": "system-keytab",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "slot": {
       "type": "integer",
       "_name_": "slot",
       "title": "slot",
       "_required_": false
      },
      "kvno": {
       "type": "integer",
       "_name_": "kvno",
       "title": "kvno",
       "_required_": false
      },
      "principal": {
       "_name_": "principal",
       "title": "principal",
       "_required_": false,
       "type": "string"
      },
      "etype": {
       "_name_": "etype",
       "title": "etype",
       "_required_": false,
       "type": "string"
      },
      "etype_deprecated": {
       "type": "boolean",
       "_name_": "etype_deprecated",
       "title": "etype_deprecated",
       "_required_": false
      },
      "date": {
       "_name_": "date",
       "title": "date",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "keytab-entry",
     "title": "keytab-entry",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "slot",
      "kvno",
      "principal",
      "etype",
      "etype_deprecated",
      "date"
     ]
    }
   },
   "kerberos_keytab_upload_keytab": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "keytab_data",
    "title": "keytab_data",
    "default": {},
    "_attrs_order_": [
     "name"
    ]
   },
   "return_schema_of_kerberos_keytab_upload_keytab": {
    "type": "object",
    "properties": {
     "file": {
      "_name_": "file",
      "title": "file",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_keytab_entry",
    "title": "kerberos_keytab_entry",
    "default": {},
    "_attrs_order_": [
     "file",
     "name",
     "id"
    ]
   },
   "return_schema_of_kerberos_realm_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "realm": {
          "_name_": "realm",
          "title": "realm",
          "_required_": true,
          "type": "string"
         },
         "kdc": {
          "_name_": "kdc",
          "title": "kdc",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "admin_server": {
          "_name_": "admin_server",
          "title": "admin_server",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "kpasswd_server": {
          "_name_": "kpasswd_server",
          "title": "kpasswd_server",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "kerberos_realm_entry",
        "title": "kerberos_realm_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "realm",
         "kdc",
         "admin_server",
         "kpasswd_server",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "realm": {
        "_name_": "realm",
        "title": "realm",
        "_required_": true,
        "type": "string"
       },
       "kdc": {
        "_name_": "kdc",
        "title": "kdc",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "admin_server": {
        "_name_": "admin_server",
        "title": "admin_server",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "kpasswd_server": {
        "_name_": "kpasswd_server",
        "title": "kpasswd_server",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "kerberos_realm_entry",
      "title": "kerberos_realm_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "realm",
       "kdc",
       "admin_server",
       "kpasswd_server",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "realm": {
        "_name_": "realm",
        "title": "realm",
        "_required_": true,
        "type": "string"
       },
       "kdc": {
        "_name_": "kdc",
        "title": "kdc",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "admin_server": {
        "_name_": "admin_server",
        "title": "admin_server",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "kpasswd_server": {
        "_name_": "kpasswd_server",
        "title": "kpasswd_server",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "kerberos_realm_entry",
      "title": "kerberos_realm_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "realm",
       "kdc",
       "admin_server",
       "kpasswd_server",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "kerberos_realm_create": {
    "type": "object",
    "properties": {
     "realm": {
      "_name_": "realm",
      "title": "realm",
      "type": "string"
     },
     "kdc": {
      "_name_": "kdc",
      "title": "kdc",
      "default": [],
      "type": "array",
      "items": {}
     },
     "admin_server": {
      "_name_": "admin_server",
      "title": "admin_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "kpasswd_server": {
      "_name_": "kpasswd_server",
      "title": "kpasswd_server",
      "default": [],
      "type": "array",
      "items": {}
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_realm_create",
    "title": "kerberos_realm_create",
    "default": {},
    "_attrs_order_": [
     "realm",
     "kdc",
     "admin_server",
     "kpasswd_server"
    ]
   },
   "return_schema_of_kerberos_realm_create": {
    "type": "object",
    "properties": {
     "realm": {
      "_name_": "realm",
      "title": "realm",
      "type": "string"
     },
     "kdc": {
      "_name_": "kdc",
      "title": "kdc",
      "default": [],
      "type": "array",
      "items": {}
     },
     "admin_server": {
      "_name_": "admin_server",
      "title": "admin_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "kpasswd_server": {
      "_name_": "kpasswd_server",
      "title": "kpasswd_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_realm_create_returns",
    "title": "kerberos_realm_create_returns",
    "default": {},
    "_attrs_order_": [
     "realm",
     "kdc",
     "admin_server",
     "kpasswd_server",
     "id"
    ]
   },
   "return_schema_of_kerberos_realm_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "kerberos_realm_update": {
    "type": "object",
    "properties": {
     "realm": {
      "_name_": "realm",
      "title": "realm",
      "type": "string"
     },
     "kdc": {
      "_name_": "kdc",
      "title": "kdc",
      "default": [],
      "type": "array",
      "items": {}
     },
     "admin_server": {
      "_name_": "admin_server",
      "title": "admin_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "kpasswd_server": {
      "_name_": "kpasswd_server",
      "title": "kpasswd_server",
      "default": [],
      "type": "array",
      "items": {}
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_realm_update",
    "title": "kerberos_realm_update",
    "default": {},
    "_attrs_order_": [
     "realm",
     "kdc",
     "admin_server",
     "kpasswd_server"
    ]
   },
   "return_schema_of_kerberos_realm_update": {
    "type": "object",
    "properties": {
     "realm": {
      "_name_": "realm",
      "title": "realm",
      "type": "string"
     },
     "kdc": {
      "_name_": "kdc",
      "title": "kdc",
      "default": [],
      "type": "array",
      "items": {}
     },
     "admin_server": {
      "_name_": "admin_server",
      "title": "admin_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "kpasswd_server": {
      "_name_": "kpasswd_server",
      "title": "kpasswd_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_realm_update_returns",
    "title": "kerberos_realm_update_returns",
    "default": {},
    "_attrs_order_": [
     "realm",
     "kdc",
     "admin_server",
     "kpasswd_server",
     "id"
    ]
   },
   "kerberos_realm_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "kerberos_realm_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "kerberos_realm_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/kerberos_realm_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/kerberos_realm_get_instance_1"
     }
    }
   },
   "return_schema_of_kerberos_realm_get_instance": {
    "type": "object",
    "properties": {
     "realm": {
      "_name_": "realm",
      "title": "realm",
      "type": "string"
     },
     "kdc": {
      "_name_": "kdc",
      "title": "kdc",
      "default": [],
      "type": "array",
      "items": {}
     },
     "admin_server": {
      "_name_": "admin_server",
      "title": "admin_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "kpasswd_server": {
      "_name_": "kpasswd_server",
      "title": "kpasswd_server",
      "default": [],
      "type": "array",
      "items": {}
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_realm_entry",
    "title": "kerberos_realm_entry",
    "default": {},
    "_attrs_order_": [
     "realm",
     "kdc",
     "admin_server",
     "kpasswd_server",
     "id"
    ]
   },
   "return_schema_of_keychaincredential_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "keychain_credential_entry",
        "title": "keychain_credential_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "type",
         "attributes",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "keychain_credential_entry",
      "title": "keychain_credential_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "type",
       "attributes",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "keychain_credential_entry",
      "title": "keychain_credential_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "type",
       "attributes",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "keychaincredential_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Every Keychain Credential has a `name` which is used to distinguish it from others."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "The following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": [],
      "description": "The following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required.\n * `SSH_CREDENTIALS`\n   Which `attributes` are:\n   * `host`\n   * `port` (default 22)\n   * `username` (default root)\n   * `private_key` (Keychain Credential ID)\n   * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)\n   * `connect_timeout` (default 10)"
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_credential_create",
    "title": "keychain_credential_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes"
    ]
   },
   "return_schema_of_keychaincredential_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Every Keychain Credential has a `name` which is used to distinguish it from others."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "The following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": [],
      "description": "The following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required.\n * `SSH_CREDENTIALS`\n   Which `attributes` are:\n   * `host`\n   * `port` (default 22)\n   * `username` (default root)\n   * `private_key` (Keychain Credential ID)\n   * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)\n   * `connect_timeout` (default 10)"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "keychaincredential_create_returns",
    "title": "keychaincredential_create_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "id"
    ]
   },
   "keychaincredential_delete": {
    "type": "object",
    "properties": {
     "cascade": {
      "type": "boolean",
      "_name_": "cascade",
      "title": "cascade",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "cascade"
    ]
   },
   "keychaincredential_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Every Keychain Credential has a `name` which is used to distinguish it from others.\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": [],
      "description": "Also you must specify full `attributes` value\nEvery Keychain Credential has a `name` which is used to distinguish it from others.\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required.\n * `SSH_CREDENTIALS`\n   Which `attributes` are:\n   * `host`\n   * `port` (default 22)\n   * `username` (default root)\n   * `private_key` (Keychain Credential ID)\n   * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)\n   * `connect_timeout` (default 10)"
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_credential_update",
    "title": "keychain_credential_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "attributes"
    ]
   },
   "return_schema_of_keychaincredential_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Every Keychain Credential has a `name` which is used to distinguish it from others."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "description": "Please note that you can't change `type`\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": [],
      "description": "Also you must specify full `attributes` value\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which can be omitted and thus automatically derived from private key)\n   At least one attribute is required.\n * `SSH_CREDENTIALS`\n   Which `attributes` are:\n   * `host`\n   * `port` (default 22)\n   * `username` (default root)\n   * `private_key` (Keychain Credential ID)\n   * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)\n   * `connect_timeout` (default 10)"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update a Keychain Credential with specific `id`"
     }
    },
    "additionalProperties": false,
    "_name_": "keychaincredential_update_returns",
    "title": "keychaincredential_update_returns",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "id"
    ]
   },
   "return_schema_of_keychaincredential_generate_ssh_key_pair": {
    "type": "object",
    "properties": {
     "private_key": {
      "_name_": "private_key",
      "title": "private_key",
      "type": "string"
     },
     "public_key": {
      "_name_": "public_key",
      "title": "public_key",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "ssh_key_pair",
    "title": "ssh_key_pair",
    "default": {},
    "_attrs_order_": [
     "private_key",
     "public_key"
    ]
   },
   "keychaincredential_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "keychaincredential_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "keychaincredential_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/keychaincredential_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/keychaincredential_get_instance_1"
     }
    }
   },
   "return_schema_of_keychaincredential_get_instance": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_credential_entry",
    "title": "keychain_credential_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "id"
    ]
   },
   "keychaincredential_remote_ssh_host_key_scan": {
    "type": "object",
    "properties": {
     "host": {
      "_name_": "host",
      "title": "host",
      "type": "string"
     },
     "port": {
      "_name_": "port",
      "title": "port",
      "default": 22,
      "type": "string"
     },
     "connect_timeout": {
      "type": "integer",
      "_name_": "connect_timeout",
      "title": "connect_timeout",
      "default": 10
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_remote_ssh_host_key_scan",
    "title": "keychain_remote_ssh_host_key_scan",
    "default": {},
    "_attrs_order_": [
     "host",
     "port",
     "connect_timeout"
    ]
   },
   "return_schema_of_keychaincredential_remote_ssh_host_key_scan": {
    "_name_": "remove_ssh_host_key",
    "title": "remove_ssh_host_key",
    "type": "string"
   },
   "keychaincredential_remote_ssh_semiautomatic_setup": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other"
     },
     "url": {
      "_name_": "url",
      "title": "url",
      "type": "string",
      "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other"
     },
     "verify_ssl": {
      "type": "boolean",
      "_name_": "verify_ssl",
      "title": "verify_ssl",
      "default": true
     },
     "token": {
      "_name_": "token",
      "title": "token",
      "type": "string",
      "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other"
     },
     "admin_username": {
      "_name_": "admin_username",
      "title": "admin_username",
      "default": "root",
      "type": "string"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     },
     "otp_token": {
      "_name_": "otp_token",
      "title": "otp_token",
      "type": "string"
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "default": "root",
      "type": "string",
      "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other"
     },
     "private_key": {
      "type": "integer",
      "_name_": "private_key",
      "title": "private_key",
      "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other"
     },
     "connect_timeout": {
      "type": "integer",
      "_name_": "connect_timeout",
      "title": "connect_timeout",
      "default": 10,
      "description": "`SSH_CREDENTIALS` attributes such as `connect_timeout` can be specified as well."
     },
     "sudo": {
      "type": "boolean",
      "_name_": "sudo",
      "title": "sudo",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_remote_ssh_semiautomatic_setup",
    "title": "keychain_remote_ssh_semiautomatic_setup",
    "default": {},
    "_attrs_order_": [
     "name",
     "url",
     "verify_ssl",
     "token",
     "admin_username",
     "password",
     "otp_token",
     "username",
     "private_key",
     "connect_timeout",
     "sudo"
    ]
   },
   "return_schema_of_keychaincredential_remote_ssh_semiautomatic_setup": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`\ncredential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and\ntemporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other\n`SSH_CREDENTIALS` attributes such as `connect_timeout` can be specified as well."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_credential_entry",
    "title": "keychain_credential_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "id"
    ]
   },
   "keychaincredential_setup_ssh_connection": {
    "type": "object",
    "properties": {
     "private_key": {
      "type": "object",
      "properties": {
       "generate_key": {
        "type": "boolean",
        "_name_": "generate_key",
        "title": "generate_key",
        "default": true
       },
       "existing_key_id": {
        "type": "integer",
        "_name_": "existing_key_id",
        "title": "existing_key_id"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "private_key",
      "title": "private_key",
      "default": {},
      "_attrs_order_": [
       "generate_key",
       "existing_key_id",
       "name"
      ]
     },
     "connection_name": {
      "_name_": "connection_name",
      "title": "connection_name",
      "type": "string"
     },
     "setup_type": {
      "_name_": "setup_type",
      "title": "setup_type",
      "default": "MANUAL",
      "type": "string",
      "enum": [
       "SEMI-AUTOMATIC",
       "MANUAL"
      ],
      "description": "1) Generating SSH Key Pair if required\n2) Setting up SSH Credentials based on `setup_type`"
     },
     "semi_automatic_setup": {
      "type": "object",
      "properties": {
       "url": {
        "_name_": "url",
        "title": "url",
        "type": "string"
       },
       "verify_ssl": {
        "type": "boolean",
        "_name_": "verify_ssl",
        "title": "verify_ssl",
        "default": true
       },
       "token": {
        "_name_": "token",
        "title": "token",
        "type": "string"
       },
       "admin_username": {
        "_name_": "admin_username",
        "title": "admin_username",
        "default": "root",
        "type": "string"
       },
       "password": {
        "_name_": "password",
        "title": "password",
        "type": "string"
       },
       "otp_token": {
        "_name_": "otp_token",
        "title": "otp_token",
        "type": "string"
       },
       "username": {
        "_name_": "username",
        "title": "username",
        "default": "root",
        "type": "string"
       },
       "connect_timeout": {
        "type": "integer",
        "_name_": "connect_timeout",
        "title": "connect_timeout",
        "default": 10
       },
       "sudo": {
        "type": "boolean",
        "_name_": "sudo",
        "title": "sudo",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "semi_automatic_setup",
      "title": "semi_automatic_setup",
      "default": null,
      "_attrs_order_": [
       "url",
       "verify_ssl",
       "token",
       "admin_username",
       "password",
       "otp_token",
       "username",
       "connect_timeout",
       "sudo"
      ]
     },
     "manual_setup": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "manual_setup",
      "title": "manual_setup",
      "default": null,
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "setup_ssh_connection",
    "title": "setup_ssh_connection",
    "default": {},
    "_attrs_order_": [
     "private_key",
     "connection_name",
     "setup_type",
     "semi_automatic_setup",
     "manual_setup"
    ]
   },
   "return_schema_of_keychaincredential_setup_ssh_connection": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "keychain_credential_entry",
    "title": "keychain_credential_entry",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "attributes",
     "id"
    ]
   },
   "keychaincredential_used_by": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "return_schema_of_keychaincredential_used_by": {
    "_name_": "credential_results",
    "title": "credential_results",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "title": {
       "_name_": "title",
       "title": "title",
       "_required_": false,
       "type": "string"
      },
      "unbind_method": {
       "_name_": "unbind_method",
       "title": "unbind_method",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "credential_result",
     "title": "credential_result",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "title",
      "unbind_method"
     ]
    }
   },
   "return_schema_of_kmip_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "manage_sed_disks": {
      "type": "boolean",
      "_name_": "manage_sed_disks",
      "title": "manage_sed_disks"
     },
     "manage_zfs_keys": {
      "type": "boolean",
      "_name_": "manage_zfs_keys",
      "title": "manage_zfs_keys"
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "certificate_authority": {
      "type": "integer",
      "_name_": "certificate_authority",
      "title": "certificate_authority",
      "nullable": true
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "server": {
      "_name_": "server",
      "title": "server",
      "type": "string",
      "nullable": true
     },
     "ssl_version": {
      "_name_": "ssl_version",
      "title": "ssl_version",
      "type": "string",
      "enum": [
       "PROTOCOL_TLSv1",
       "PROTOCOL_TLSv1_1",
       "PROTOCOL_TLSv1_2"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "kmip_entry",
    "title": "kmip_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "enabled",
     "manage_sed_disks",
     "manage_zfs_keys",
     "certificate",
     "certificate_authority",
     "port",
     "server",
     "ssl_version"
    ]
   },
   "kmip_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "description": "`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`."
     },
     "manage_sed_disks": {
      "type": "boolean",
      "_name_": "manage_sed_disks",
      "title": "manage_sed_disks",
      "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
     },
     "manage_zfs_keys": {
      "type": "boolean",
      "_name_": "manage_zfs_keys",
      "title": "manage_zfs_keys",
      "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "description": "System currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and",
      "nullable": true
     },
     "certificate_authority": {
      "type": "integer",
      "_name_": "certificate_authority",
      "title": "certificate_authority",
      "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.",
      "nullable": true
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "server": {
      "_name_": "server",
      "title": "server",
      "type": "string",
      "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.\n`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable.",
      "nullable": true
     },
     "ssl_version": {
      "_name_": "ssl_version",
      "title": "ssl_version",
      "type": "string",
      "enum": [
       "PROTOCOL_TLSv1",
       "PROTOCOL_TLSv1_1",
       "PROTOCOL_TLSv1_2"
      ],
      "description": "`ssl_version` can be specified to match the ssl configuration being used by KMIP server."
     },
     "force_clear": {
      "type": "boolean",
      "_name_": "force_clear",
      "title": "force_clear",
      "description": "`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`.\n`change_server` is a boolean field which allows users to migrate data between two KMIP servers. System\nwill first migrate keys from old KMIP server to local database and then migrate the keys from local database\nto new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass\nthis by enabling `force_clear`."
     },
     "change_server": {
      "type": "boolean",
      "_name_": "change_server",
      "title": "change_server",
      "description": "`change_server` is a boolean field which allows users to migrate data between two KMIP servers. System\nwill first migrate keys from old KMIP server to local database and then migrate the keys from local database\nto new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass\nthis by enabling `force_clear`."
     },
     "validate": {
      "type": "boolean",
      "_name_": "validate",
      "title": "validate",
      "description": "`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable."
     }
    },
    "additionalProperties": false,
    "_name_": "kmip_update",
    "title": "kmip_update",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "manage_sed_disks",
     "manage_zfs_keys",
     "certificate",
     "certificate_authority",
     "port",
     "server",
     "ssl_version",
     "force_clear",
     "change_server",
     "validate"
    ]
   },
   "return_schema_of_kmip_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "description": "`enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users\ncan still perform this action by enabling `force_clear`."
     },
     "manage_sed_disks": {
      "type": "boolean",
      "_name_": "manage_sed_disks",
      "title": "manage_sed_disks",
      "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
     },
     "manage_zfs_keys": {
      "type": "boolean",
      "_name_": "manage_zfs_keys",
      "title": "manage_zfs_keys",
      "description": "`manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.\nWhen disabled, if there are any keys left to be retrieved from the KMIP server,\nit will sync them back to local database."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "description": "System currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and",
      "nullable": true
     },
     "certificate_authority": {
      "type": "integer",
      "_name_": "certificate_authority",
      "title": "certificate_authority",
      "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.",
      "nullable": true
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "server": {
      "_name_": "server",
      "title": "server",
      "type": "string",
      "description": "`certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.\n`validate` is enabled by default. When enabled, system will test connection to `server` making sure\nit's reachable.",
      "nullable": true
     },
     "ssl_version": {
      "_name_": "ssl_version",
      "title": "ssl_version",
      "type": "string",
      "enum": [
       "PROTOCOL_TLSv1",
       "PROTOCOL_TLSv1_1",
       "PROTOCOL_TLSv1_2"
      ],
      "description": "`ssl_version` can be specified to match the ssl configuration being used by KMIP server."
     }
    },
    "additionalProperties": false,
    "_name_": "kmip_update_returns",
    "title": "kmip_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "enabled",
     "manage_sed_disks",
     "manage_zfs_keys",
     "certificate",
     "certificate_authority",
     "port",
     "server",
     "ssl_version"
    ]
   },
   "return_schema_of_kmip_kmip_sync_pending": {
    "type": "boolean",
    "_name_": "pending_kmip_sync",
    "title": "pending_kmip_sync"
   },
   "return_schema_of_kmip_ssl_version_choices": {
    "type": "object",
    "properties": {
     "PROTOCOL_TLSv1": {
      "_name_": "PROTOCOL_TLSv1",
      "title": "PROTOCOL_TLSv1",
      "type": "string",
      "enum": [
       "PROTOCOL_TLSv1"
      ]
     },
     "PROTOCOL_TLSv1_1": {
      "_name_": "PROTOCOL_TLSv1_1",
      "title": "PROTOCOL_TLSv1_1",
      "type": "string",
      "enum": [
       "PROTOCOL_TLSv1_1"
      ]
     },
     "PROTOCOL_TLSv1_2": {
      "_name_": "PROTOCOL_TLSv1_2",
      "title": "PROTOCOL_TLSv1_2",
      "type": "string",
      "enum": [
       "PROTOCOL_TLSv1_2"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "ssl_version_choices",
    "title": "ssl_version_choices",
    "default": {},
    "_attrs_order_": [
     "PROTOCOL_TLSv1",
     "PROTOCOL_TLSv1_1",
     "PROTOCOL_TLSv1_2"
    ]
   },
   "return_schema_of_kubernetes_config": {
    "type": "object",
    "properties": {
     "servicelb": {
      "type": "boolean",
      "_name_": "servicelb",
      "title": "servicelb"
     },
     "configure_gpus": {
      "type": "boolean",
      "_name_": "configure_gpus",
      "title": "configure_gpus"
     },
     "metrics_server": {
      "type": "boolean",
      "_name_": "metrics_server",
      "title": "metrics_server"
     },
     "passthrough_mode": {
      "type": "boolean",
      "_name_": "passthrough_mode",
      "title": "passthrough_mode"
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "nullable": true
     },
     "cluster_cidr": {
      "_name_": "cluster_cidr",
      "title": "cluster_cidr",
      "type": "string"
     },
     "service_cidr": {
      "_name_": "service_cidr",
      "title": "service_cidr",
      "type": "string"
     },
     "cluster_dns_ip": {
      "_name_": "cluster_dns_ip",
      "title": "cluster_dns_ip",
      "type": "string"
     },
     "node_ip": {
      "_name_": "node_ip",
      "title": "node_ip",
      "type": "string"
     },
     "route_v4_interface": {
      "_name_": "route_v4_interface",
      "title": "route_v4_interface",
      "type": "string",
      "nullable": true
     },
     "route_v4_gateway": {
      "_name_": "route_v4_gateway",
      "title": "route_v4_gateway",
      "type": "string",
      "nullable": true
     },
     "route_v6_interface": {
      "_name_": "route_v6_interface",
      "title": "route_v6_interface",
      "type": "string",
      "nullable": true
     },
     "route_v6_gateway": {
      "_name_": "route_v6_gateway",
      "title": "route_v6_gateway",
      "type": "string",
      "nullable": true
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string",
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kubernetes_entry",
    "title": "kubernetes_entry",
    "default": {},
    "_attrs_order_": [
     "servicelb",
     "configure_gpus",
     "metrics_server",
     "passthrough_mode",
     "pool",
     "cluster_cidr",
     "service_cidr",
     "cluster_dns_ip",
     "node_ip",
     "route_v4_interface",
     "route_v4_gateway",
     "route_v6_interface",
     "route_v6_gateway",
     "dataset",
     "id"
    ]
   },
   "kubernetes_update": {
    "type": "object",
    "properties": {
     "servicelb": {
      "type": "boolean",
      "_name_": "servicelb",
      "title": "servicelb",
      "description": "`servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called \"Klipper\".\nThis can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all."
     },
     "configure_gpus": {
      "type": "boolean",
      "_name_": "configure_gpus",
      "title": "configure_gpus",
      "description": "`configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support\ninto kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support."
     },
     "metrics_server": {
      "type": "boolean",
      "_name_": "metrics_server",
      "title": "metrics_server"
     },
     "passthrough_mode": {
      "type": "boolean",
      "_name_": "passthrough_mode",
      "title": "passthrough_mode"
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "description": "`pool` must be a valid ZFS pool configured in the system. Kubernetes service will initialise the pool by\ncreating datasets under `pool_name/ix-applications`.",
      "nullable": true
     },
     "cluster_cidr": {
      "_name_": "cluster_cidr",
      "title": "cluster_cidr",
      "type": "string",
      "description": "`cluster_cidr` is the CIDR to be used for default NAT network between workloads.\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change."
     },
     "service_cidr": {
      "_name_": "service_cidr",
      "title": "service_cidr",
      "type": "string",
      "description": "`service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a\nlogically set of kubernetes pods.\n`cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range\nof `service_cidr`.\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change."
     },
     "cluster_dns_ip": {
      "_name_": "cluster_dns_ip",
      "title": "cluster_dns_ip",
      "type": "string",
      "description": "`cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range\nof `service_cidr`.\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change."
     },
     "node_ip": {
      "_name_": "node_ip",
      "title": "node_ip",
      "type": "string",
      "description": "`node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to\n0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic\nfor default NAT network."
     },
     "route_v4_interface": {
      "_name_": "route_v4_interface",
      "title": "route_v4_interface",
      "type": "string",
      "description": "If users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.",
      "nullable": true
     },
     "route_v4_gateway": {
      "_name_": "route_v4_gateway",
      "title": "route_v4_gateway",
      "type": "string",
      "description": "If users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.",
      "nullable": true
     },
     "route_v6_interface": {
      "_name_": "route_v6_interface",
      "title": "route_v6_interface",
      "type": "string",
      "description": "If users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.",
      "nullable": true
     },
     "route_v6_gateway": {
      "_name_": "route_v6_gateway",
      "title": "route_v6_gateway",
      "type": "string",
      "nullable": true
     },
     "migrate_applications": {
      "type": "boolean",
      "_name_": "migrate_applications",
      "title": "migrate_applications",
      "description": "In case user is switching pools and the new desired pool has not been configured for kubernetes before, it\nis possible to replicate data from old pool to new pool with setting `migrate_applications` attribute. This\nwill replicate contents of old pool's ix-applications dataset to the new pool."
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "description": "`force` is a boolean which can be set to bypass validation which does not allow users to select a pool which\nis potentially corrupt by having a partially initialized ix-applications dataset. In that case the cluster\nwould be re-initialized and user would still be able to select such a pool."
     },
     "migration_options": {
      "type": "object",
      "properties": {
       "passphrase": {
        "_name_": "passphrase",
        "title": "passphrase",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "migration_options",
      "title": "migration_options",
      "default": {},
      "_attrs_order_": [
       "passphrase"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "kubernetes_update",
    "title": "kubernetes_update",
    "default": {},
    "_attrs_order_": [
     "servicelb",
     "configure_gpus",
     "metrics_server",
     "passthrough_mode",
     "pool",
     "cluster_cidr",
     "service_cidr",
     "cluster_dns_ip",
     "node_ip",
     "route_v4_interface",
     "route_v4_gateway",
     "route_v6_interface",
     "route_v6_gateway",
     "migrate_applications",
     "force",
     "migration_options"
    ]
   },
   "return_schema_of_kubernetes_update": {
    "type": "object",
    "properties": {
     "servicelb": {
      "type": "boolean",
      "_name_": "servicelb",
      "title": "servicelb",
      "description": "`servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called \"Klipper\".\nThis can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all."
     },
     "configure_gpus": {
      "type": "boolean",
      "_name_": "configure_gpus",
      "title": "configure_gpus",
      "description": "`configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support\ninto kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support."
     },
     "metrics_server": {
      "type": "boolean",
      "_name_": "metrics_server",
      "title": "metrics_server"
     },
     "passthrough_mode": {
      "type": "boolean",
      "_name_": "passthrough_mode",
      "title": "passthrough_mode"
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "description": "`pool` must be a valid ZFS pool configured in the system. Kubernetes service will initialise the pool by\ncreating datasets under `pool_name/ix-applications`.",
      "nullable": true
     },
     "cluster_cidr": {
      "_name_": "cluster_cidr",
      "title": "cluster_cidr",
      "type": "string",
      "description": "`cluster_cidr` is the CIDR to be used for default NAT network between workloads.\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change."
     },
     "service_cidr": {
      "_name_": "service_cidr",
      "title": "service_cidr",
      "type": "string",
      "description": "`service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a\nlogically set of kubernetes pods.\n`cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range\nof `service_cidr`.\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change."
     },
     "cluster_dns_ip": {
      "_name_": "cluster_dns_ip",
      "title": "cluster_dns_ip",
      "type": "string",
      "description": "`cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range\nof `service_cidr`.\nSpecifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change\nrequires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset\nand any data within it when any of the values for the above configuration change."
     },
     "node_ip": {
      "_name_": "node_ip",
      "title": "node_ip",
      "type": "string",
      "description": "`node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to\n0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic\nfor default NAT network."
     },
     "route_v4_interface": {
      "_name_": "route_v4_interface",
      "title": "route_v4_interface",
      "type": "string",
      "description": "If users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.",
      "nullable": true
     },
     "route_v4_gateway": {
      "_name_": "route_v4_gateway",
      "title": "route_v4_gateway",
      "type": "string",
      "description": "If users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.",
      "nullable": true
     },
     "route_v6_interface": {
      "_name_": "route_v6_interface",
      "title": "route_v6_interface",
      "type": "string",
      "description": "If users want to restrict traffic over a certain gateway / interface, they can specify a default route\nfor the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes\ncluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default\nroute for IPv6 traffic.",
      "nullable": true
     },
     "route_v6_gateway": {
      "_name_": "route_v6_gateway",
      "title": "route_v6_gateway",
      "type": "string",
      "nullable": true
     },
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string",
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "kubernetes_update_returns",
    "title": "kubernetes_update_returns",
    "default": {},
    "_attrs_order_": [
     "servicelb",
     "configure_gpus",
     "metrics_server",
     "passthrough_mode",
     "pool",
     "cluster_cidr",
     "service_cidr",
     "cluster_dns_ip",
     "node_ip",
     "route_v4_interface",
     "route_v4_gateway",
     "route_v6_interface",
     "route_v6_gateway",
     "dataset",
     "id"
    ]
   },
   "kubernetes_backup_chart_releases": {
    "_name_": "backup_name",
    "title": "backup_name",
    "default": null,
    "type": "string",
    "nullable": true
   },
   "return_schema_of_kubernetes_backup_chart_releases": {
    "_name_": "backup_name",
    "title": "backup_name",
    "type": "string"
   },
   "return_schema_of_kubernetes_bindip_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "kubernetes_bind_ip_choices",
    "title": "kubernetes_bind_ip_choices",
    "default": {},
    "_attrs_order_": []
   },
   "kubernetes_delete_backup": {
    "_name_": "backup_name",
    "title": "backup_name",
    "type": "string"
   },
   "return_schema_of_kubernetes_events": {
    "_name_": "kubernetes_node_events",
    "title": "kubernetes_node_events",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "metadata": {
       "type": "object",
       "properties": {
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": false,
         "type": "string"
        }
       },
       "additionalProperties": true,
       "_name_": "metadata",
       "title": "metadata",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "name"
       ]
      },
      "message": {
       "_name_": "message",
       "title": "message",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": true,
     "_name_": "event",
     "title": "event",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "metadata",
      "message"
     ]
    }
   },
   "return_schema_of_kubernetes_list_backups": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "backups",
    "title": "backups",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_kubernetes_node_ip": {
    "_name_": "kubernetes_node_ip",
    "title": "kubernetes_node_ip",
    "type": "string",
    "nullable": true
   },
   "kubernetes_restore_backup": {
    "_name_": "backup_name",
    "title": "backup_name",
    "type": "string",
    "description": "Restore `backup_name` chart releases backup."
   },
   "return_schema_of_kubernetes_route_interface_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "route_interface_choices",
    "title": "route_interface_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_kubernetes_status": {
    "type": "object",
    "properties": {
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string",
      "enum": [
       "PENDING",
       "RUNNING",
       "INITIALIZING",
       "STOPPING",
       "STOPPED",
       "UNCONFIGURED",
       "FAILED"
      ]
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "status",
    "title": "status",
    "default": {},
    "_attrs_order_": [
     "status",
     "description"
    ]
   },
   "return_schema_of_ldap_config": {
    "type": "object",
    "properties": {
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "default": null,
      "type": "array",
      "items": {}
     },
     "basedn": {
      "_name_": "basedn",
      "title": "basedn",
      "type": "string"
     },
     "binddn": {
      "_name_": "binddn",
      "title": "binddn",
      "type": "string"
     },
     "bindpw": {
      "_name_": "bindpw",
      "title": "bindpw",
      "type": "string"
     },
     "anonbind": {
      "type": "boolean",
      "_name_": "anonbind",
      "title": "anonbind",
      "default": false
     },
     "ssl": {
      "_name_": "ssl",
      "title": "ldap_ssl_choice",
      "default": "ON",
      "type": "string",
      "enum": [
       "OFF",
       "ON",
       "START_TLS"
      ]
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "nullable": true
     },
     "validate_certificates": {
      "type": "boolean",
      "_name_": "validate_certificates",
      "title": "validate_certificates",
      "default": true
     },
     "disable_freenas_cache": {
      "type": "boolean",
      "_name_": "disable_freenas_cache",
      "title": "disable_freenas_cache"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 30
     },
     "dns_timeout": {
      "type": "integer",
      "_name_": "dns_timeout",
      "title": "dns_timeout",
      "default": 5
     },
     "kerberos_realm": {
      "type": "integer",
      "_name_": "kerberos_realm",
      "title": "kerberos_realm",
      "nullable": true
     },
     "kerberos_principal": {
      "_name_": "kerberos_principal",
      "title": "kerberos_principal",
      "type": "string"
     },
     "has_samba_schema": {
      "type": "boolean",
      "_name_": "has_samba_schema",
      "title": "has_samba_schema",
      "default": false
     },
     "auxiliary_parameters": {
      "_name_": "auxiliary_parameters",
      "title": "auxiliary_parameters",
      "type": "string"
     },
     "schema": {
      "_name_": "schema",
      "title": "nss_info_ldap",
      "default": "RFC2307",
      "type": "string",
      "enum": [
       "RFC2307",
       "RFC2307BIS"
      ]
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable"
     },
     "search_bases": {
      "type": "object",
      "properties": {
       "base_user": {
        "_name_": "base_user",
        "title": "base_user",
        "type": "string",
        "nullable": true
       },
       "base_group": {
        "_name_": "base_group",
        "title": "base_group",
        "type": "string",
        "nullable": true
       },
       "base_netgroup": {
        "_name_": "base_netgroup",
        "title": "base_netgroup",
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "search_bases",
      "title": "search_bases",
      "default": {},
      "_attrs_order_": [
       "base_user",
       "base_group",
       "base_netgroup"
      ]
     },
     "attribute_maps": {
      "type": "object",
      "properties": {
       "passwd": {
        "type": "object",
        "properties": {
         "user_object_class": {
          "_name_": "user_object_class",
          "title": "user_object_class",
          "type": "string",
          "nullable": true
         },
         "user_name": {
          "_name_": "user_name",
          "title": "user_name",
          "type": "string",
          "nullable": true
         },
         "user_uid": {
          "_name_": "user_uid",
          "title": "user_uid",
          "type": "string",
          "nullable": true
         },
         "user_gid": {
          "_name_": "user_gid",
          "title": "user_gid",
          "type": "string",
          "nullable": true
         },
         "user_gecos": {
          "_name_": "user_gecos",
          "title": "user_gecos",
          "type": "string",
          "nullable": true
         },
         "user_home_directory": {
          "_name_": "user_home_directory",
          "title": "user_home_directory",
          "type": "string",
          "nullable": true
         },
         "user_shell": {
          "_name_": "user_shell",
          "title": "user_shell",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "passwd",
        "title": "passwd",
        "default": {},
        "_attrs_order_": [
         "user_object_class",
         "user_name",
         "user_uid",
         "user_gid",
         "user_gecos",
         "user_home_directory",
         "user_shell"
        ]
       },
       "shadow": {
        "type": "object",
        "properties": {
         "shadow_object_class": {
          "_name_": "shadow_object_class",
          "title": "shadow_object_class",
          "type": "string",
          "nullable": true
         },
         "shadow_last_change": {
          "_name_": "shadow_last_change",
          "title": "shadow_last_change",
          "type": "string",
          "nullable": true
         },
         "shadow_min": {
          "_name_": "shadow_min",
          "title": "shadow_min",
          "type": "string",
          "nullable": true
         },
         "shadow_max": {
          "_name_": "shadow_max",
          "title": "shadow_max",
          "type": "string",
          "nullable": true
         },
         "shadow_warning": {
          "_name_": "shadow_warning",
          "title": "shadow_warning",
          "type": "string",
          "nullable": true
         },
         "shadow_inactive": {
          "_name_": "shadow_inactive",
          "title": "shadow_inactive",
          "type": "string",
          "nullable": true
         },
         "shadow_expire": {
          "_name_": "shadow_expire",
          "title": "shadow_expire",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "shadow",
        "title": "shadow",
        "default": {},
        "_attrs_order_": [
         "shadow_object_class",
         "shadow_last_change",
         "shadow_min",
         "shadow_max",
         "shadow_warning",
         "shadow_inactive",
         "shadow_expire"
        ]
       },
       "group": {
        "type": "object",
        "properties": {
         "group_object_class": {
          "_name_": "group_object_class",
          "title": "group_object_class",
          "type": "string",
          "nullable": true
         },
         "group_gid": {
          "_name_": "group_gid",
          "title": "group_gid",
          "type": "string",
          "nullable": true
         },
         "group_member": {
          "_name_": "group_member",
          "title": "group_member",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "group",
        "title": "group",
        "default": {},
        "_attrs_order_": [
         "group_object_class",
         "group_gid",
         "group_member"
        ]
       },
       "netgroup": {
        "type": "object",
        "properties": {
         "netgroup_object_class": {
          "_name_": "netgroup_object_class",
          "title": "netgroup_object_class",
          "type": "string",
          "nullable": true
         },
         "netgroup_member": {
          "_name_": "netgroup_member",
          "title": "netgroup_member",
          "type": "string",
          "nullable": true
         },
         "netgroup_triple": {
          "_name_": "netgroup_triple",
          "title": "netgroup_triple",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "netgroup",
        "title": "netgroup",
        "default": {},
        "_attrs_order_": [
         "netgroup_object_class",
         "netgroup_member",
         "netgroup_triple"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "attribute_maps",
      "title": "attribute_maps",
      "default": {},
      "_attrs_order_": [
       "passwd",
       "shadow",
       "group",
       "netgroup"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "ldap_update",
    "title": "ldap_update",
    "default": {},
    "_attrs_order_": [
     "hostname",
     "basedn",
     "binddn",
     "bindpw",
     "anonbind",
     "ssl",
     "certificate",
     "validate_certificates",
     "disable_freenas_cache",
     "timeout",
     "dns_timeout",
     "kerberos_realm",
     "kerberos_principal",
     "has_samba_schema",
     "auxiliary_parameters",
     "schema",
     "enable",
     "search_bases",
     "attribute_maps"
    ]
   },
   "ldap_update": {
    "type": "object",
    "properties": {
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "default": null,
      "type": "array",
      "items": {},
      "description": "`hostname` list of ip addresses or hostnames of LDAP servers with\nwhich to communicate in order of preference. Failover only occurs\nif the current LDAP server is unresponsive."
     },
     "basedn": {
      "_name_": "basedn",
      "title": "basedn",
      "type": "string",
      "description": "`basedn` specifies the default base DN to use when performing ldap\noperations. The base must be specified as a Distinguished Name in LDAP\nformat."
     },
     "binddn": {
      "_name_": "binddn",
      "title": "binddn",
      "type": "string",
      "description": "`binddn` specifies the default bind DN to use when performing ldap\noperations. The bind DN must be specified as a Distinguished Name in\nLDAP format.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
     },
     "bindpw": {
      "_name_": "bindpw",
      "title": "bindpw",
      "type": "string",
      "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
     },
     "anonbind": {
      "type": "boolean",
      "_name_": "anonbind",
      "title": "anonbind",
      "default": false,
      "description": "`anonbind` use anonymous authentication."
     },
     "ssl": {
      "_name_": "ssl",
      "title": "ldap_ssl_choice",
      "default": "ON",
      "type": "string",
      "enum": [
       "OFF",
       "ON",
       "START_TLS"
      ],
      "description": "`ssl` establish SSL/TLS-protected connections to the LDAP server(s).\nGSSAPI signing is disabled on SSL/TLS-protected connections if\nkerberos authentication is used."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "description": "`certificate` LDAPs client certificate to be used for certificate-\nbased authentication.",
      "nullable": true
     },
     "validate_certificates": {
      "type": "boolean",
      "_name_": "validate_certificates",
      "title": "validate_certificates",
      "default": true,
      "description": "`validate_certificates` specifies whether to perform checks on server\ncertificates in a TLS session. If enabled, TLS_REQCERT demand is set.\nThe server certificate is requested. If no certificate is provided or\nif a bad certificate is provided, the session is immediately terminated.\nIf disabled, TLS_REQCERT allow is set. The server certificate is\nrequested, but all errors are ignored."
     },
     "disable_freenas_cache": {
      "type": "boolean",
      "_name_": "disable_freenas_cache",
      "title": "disable_freenas_cache"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 30,
      "description": "`timeout` specifies  a  timeout  (in  seconds) after which calls to\nsynchronous LDAP APIs will abort if no response is received."
     },
     "dns_timeout": {
      "type": "integer",
      "_name_": "dns_timeout",
      "title": "dns_timeout",
      "default": 5,
      "description": "`dns_timeout` specifies the timeout (in seconds) after which the\npoll(2)/select(2) following a connect(2) returns in case of no activity\nfor openldap. For nslcd this specifies the time limit (in seconds) to\nuse when connecting to the directory server. This directly impacts the\nlength of time that the LDAP service tries before failing over to\na secondary LDAP URI."
     },
     "kerberos_realm": {
      "type": "integer",
      "_name_": "kerberos_realm",
      "title": "kerberos_realm",
      "description": "`kerberos_realm` in which the server is located. This parameter is\nonly required for SASL GSSAPI authentication to the remote LDAP server.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication.",
      "nullable": true
     },
     "kerberos_principal": {
      "_name_": "kerberos_principal",
      "title": "kerberos_principal",
      "type": "string",
      "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
     },
     "has_samba_schema": {
      "type": "boolean",
      "_name_": "has_samba_schema",
      "title": "has_samba_schema",
      "default": false,
      "description": "`has_samba_schema` determines whether to configure samba to use the\nldapsam passdb backend to provide SMB access to LDAP users. This feature\nrequires the presence of Samba LDAP schema extensions on the remote\nLDAP server."
     },
     "auxiliary_parameters": {
      "_name_": "auxiliary_parameters",
      "title": "auxiliary_parameters",
      "type": "string"
     },
     "schema": {
      "_name_": "schema",
      "title": "nss_info_ldap",
      "default": "RFC2307",
      "type": "string",
      "enum": [
       "RFC2307",
       "RFC2307BIS"
      ]
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable"
     },
     "search_bases": {
      "type": "object",
      "properties": {
       "base_user": {
        "_name_": "base_user",
        "title": "base_user",
        "type": "string",
        "nullable": true
       },
       "base_group": {
        "_name_": "base_group",
        "title": "base_group",
        "type": "string",
        "nullable": true
       },
       "base_netgroup": {
        "_name_": "base_netgroup",
        "title": "base_netgroup",
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "search_bases",
      "title": "search_bases",
      "default": {},
      "_attrs_order_": [
       "base_user",
       "base_group",
       "base_netgroup"
      ],
      "description": "`search_bases` - these parameters allow specifying a non-standard\nsearch base for users (`base_user`), groups (`base_group`), and\nnetgroups (`base_netgroup`). Must be a valid LDAP DN. No remote\nvalidation is performed that the search base exists or contains\nexpected objects."
     },
     "attribute_maps": {
      "type": "object",
      "properties": {
       "passwd": {
        "type": "object",
        "properties": {
         "user_object_class": {
          "_name_": "user_object_class",
          "title": "user_object_class",
          "type": "string",
          "nullable": true
         },
         "user_name": {
          "_name_": "user_name",
          "title": "user_name",
          "type": "string",
          "nullable": true
         },
         "user_uid": {
          "_name_": "user_uid",
          "title": "user_uid",
          "type": "string",
          "nullable": true
         },
         "user_gid": {
          "_name_": "user_gid",
          "title": "user_gid",
          "type": "string",
          "nullable": true
         },
         "user_gecos": {
          "_name_": "user_gecos",
          "title": "user_gecos",
          "type": "string",
          "nullable": true
         },
         "user_home_directory": {
          "_name_": "user_home_directory",
          "title": "user_home_directory",
          "type": "string",
          "nullable": true
         },
         "user_shell": {
          "_name_": "user_shell",
          "title": "user_shell",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "passwd",
        "title": "passwd",
        "default": {},
        "_attrs_order_": [
         "user_object_class",
         "user_name",
         "user_uid",
         "user_gid",
         "user_gecos",
         "user_home_directory",
         "user_shell"
        ]
       },
       "shadow": {
        "type": "object",
        "properties": {
         "shadow_object_class": {
          "_name_": "shadow_object_class",
          "title": "shadow_object_class",
          "type": "string",
          "nullable": true
         },
         "shadow_last_change": {
          "_name_": "shadow_last_change",
          "title": "shadow_last_change",
          "type": "string",
          "nullable": true
         },
         "shadow_min": {
          "_name_": "shadow_min",
          "title": "shadow_min",
          "type": "string",
          "nullable": true
         },
         "shadow_max": {
          "_name_": "shadow_max",
          "title": "shadow_max",
          "type": "string",
          "nullable": true
         },
         "shadow_warning": {
          "_name_": "shadow_warning",
          "title": "shadow_warning",
          "type": "string",
          "nullable": true
         },
         "shadow_inactive": {
          "_name_": "shadow_inactive",
          "title": "shadow_inactive",
          "type": "string",
          "nullable": true
         },
         "shadow_expire": {
          "_name_": "shadow_expire",
          "title": "shadow_expire",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "shadow",
        "title": "shadow",
        "default": {},
        "_attrs_order_": [
         "shadow_object_class",
         "shadow_last_change",
         "shadow_min",
         "shadow_max",
         "shadow_warning",
         "shadow_inactive",
         "shadow_expire"
        ]
       },
       "group": {
        "type": "object",
        "properties": {
         "group_object_class": {
          "_name_": "group_object_class",
          "title": "group_object_class",
          "type": "string",
          "nullable": true
         },
         "group_gid": {
          "_name_": "group_gid",
          "title": "group_gid",
          "type": "string",
          "nullable": true
         },
         "group_member": {
          "_name_": "group_member",
          "title": "group_member",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "group",
        "title": "group",
        "default": {},
        "_attrs_order_": [
         "group_object_class",
         "group_gid",
         "group_member"
        ]
       },
       "netgroup": {
        "type": "object",
        "properties": {
         "netgroup_object_class": {
          "_name_": "netgroup_object_class",
          "title": "netgroup_object_class",
          "type": "string",
          "nullable": true
         },
         "netgroup_member": {
          "_name_": "netgroup_member",
          "title": "netgroup_member",
          "type": "string",
          "nullable": true
         },
         "netgroup_triple": {
          "_name_": "netgroup_triple",
          "title": "netgroup_triple",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "netgroup",
        "title": "netgroup",
        "default": {},
        "_attrs_order_": [
         "netgroup_object_class",
         "netgroup_member",
         "netgroup_triple"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "attribute_maps",
      "title": "attribute_maps",
      "default": {},
      "_attrs_order_": [
       "passwd",
       "shadow",
       "group",
       "netgroup"
      ],
      "description": "`attribute_maps` - allow specifying alternate non-RFC-compliant\nattribute names for `passwd`, `shadow`, `group`, and `netgroup` object\nclasses as specified in RFC 2307. Setting key to `null` has special\nmeaning that RFC defaults for the configure `nss_info_schema` will\nbe used."
     }
    },
    "additionalProperties": false,
    "_name_": "ldap_update",
    "title": "ldap_update",
    "default": {},
    "_attrs_order_": [
     "hostname",
     "basedn",
     "binddn",
     "bindpw",
     "anonbind",
     "ssl",
     "certificate",
     "validate_certificates",
     "disable_freenas_cache",
     "timeout",
     "dns_timeout",
     "kerberos_realm",
     "kerberos_principal",
     "has_samba_schema",
     "auxiliary_parameters",
     "schema",
     "enable",
     "search_bases",
     "attribute_maps"
    ]
   },
   "return_schema_of_ldap_update": {
    "type": "object",
    "properties": {
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "default": null,
      "type": "array",
      "items": {},
      "description": "`hostname` list of ip addresses or hostnames of LDAP servers with\nwhich to communicate in order of preference. Failover only occurs\nif the current LDAP server is unresponsive."
     },
     "basedn": {
      "_name_": "basedn",
      "title": "basedn",
      "type": "string",
      "description": "`basedn` specifies the default base DN to use when performing ldap\noperations. The base must be specified as a Distinguished Name in LDAP\nformat."
     },
     "binddn": {
      "_name_": "binddn",
      "title": "binddn",
      "type": "string",
      "description": "`binddn` specifies the default bind DN to use when performing ldap\noperations. The bind DN must be specified as a Distinguished Name in\nLDAP format.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
     },
     "bindpw": {
      "_name_": "bindpw",
      "title": "bindpw",
      "type": "string",
      "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
     },
     "anonbind": {
      "type": "boolean",
      "_name_": "anonbind",
      "title": "anonbind",
      "default": false,
      "description": "`anonbind` use anonymous authentication."
     },
     "ssl": {
      "_name_": "ssl",
      "title": "ldap_ssl_choice",
      "default": "ON",
      "type": "string",
      "enum": [
       "OFF",
       "ON",
       "START_TLS"
      ],
      "description": "`ssl` establish SSL/TLS-protected connections to the LDAP server(s).\nGSSAPI signing is disabled on SSL/TLS-protected connections if\nkerberos authentication is used."
     },
     "certificate": {
      "type": "integer",
      "_name_": "certificate",
      "title": "certificate",
      "description": "`certificate` LDAPs client certificate to be used for certificate-\nbased authentication.",
      "nullable": true
     },
     "validate_certificates": {
      "type": "boolean",
      "_name_": "validate_certificates",
      "title": "validate_certificates",
      "default": true,
      "description": "`validate_certificates` specifies whether to perform checks on server\ncertificates in a TLS session. If enabled, TLS_REQCERT demand is set.\nThe server certificate is requested. If no certificate is provided or\nif a bad certificate is provided, the session is immediately terminated.\nIf disabled, TLS_REQCERT allow is set. The server certificate is\nrequested, but all errors are ignored."
     },
     "disable_freenas_cache": {
      "type": "boolean",
      "_name_": "disable_freenas_cache",
      "title": "disable_freenas_cache"
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 30,
      "description": "`timeout` specifies  a  timeout  (in  seconds) after which calls to\nsynchronous LDAP APIs will abort if no response is received."
     },
     "dns_timeout": {
      "type": "integer",
      "_name_": "dns_timeout",
      "title": "dns_timeout",
      "default": 5,
      "description": "`dns_timeout` specifies the timeout (in seconds) after which the\npoll(2)/select(2) following a connect(2) returns in case of no activity\nfor openldap. For nslcd this specifies the time limit (in seconds) to\nuse when connecting to the directory server. This directly impacts the\nlength of time that the LDAP service tries before failing over to\na secondary LDAP URI."
     },
     "kerberos_realm": {
      "type": "integer",
      "_name_": "kerberos_realm",
      "title": "kerberos_realm",
      "description": "`kerberos_realm` in which the server is located. This parameter is\nonly required for SASL GSSAPI authentication to the remote LDAP server.\n`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication.",
      "nullable": true
     },
     "kerberos_principal": {
      "_name_": "kerberos_principal",
      "title": "kerberos_principal",
      "type": "string",
      "description": "`kerberos_principal` kerberos principal to use for SASL GSSAPI\nauthentication to the remote server. If `kerberos_realm` is specified\nwithout a keytab, then the `binddn` and `bindpw` are used to\nperform to obtain the ticket necessary for GSSAPI authentication."
     },
     "has_samba_schema": {
      "type": "boolean",
      "_name_": "has_samba_schema",
      "title": "has_samba_schema",
      "default": false,
      "description": "`has_samba_schema` determines whether to configure samba to use the\nldapsam passdb backend to provide SMB access to LDAP users. This feature\nrequires the presence of Samba LDAP schema extensions on the remote\nLDAP server."
     },
     "auxiliary_parameters": {
      "_name_": "auxiliary_parameters",
      "title": "auxiliary_parameters",
      "type": "string"
     },
     "schema": {
      "_name_": "schema",
      "title": "nss_info_ldap",
      "default": "RFC2307",
      "type": "string",
      "enum": [
       "RFC2307",
       "RFC2307BIS"
      ]
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable"
     },
     "search_bases": {
      "type": "object",
      "properties": {
       "base_user": {
        "_name_": "base_user",
        "title": "base_user",
        "type": "string",
        "nullable": true
       },
       "base_group": {
        "_name_": "base_group",
        "title": "base_group",
        "type": "string",
        "nullable": true
       },
       "base_netgroup": {
        "_name_": "base_netgroup",
        "title": "base_netgroup",
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "search_bases",
      "title": "search_bases",
      "default": {},
      "_attrs_order_": [
       "base_user",
       "base_group",
       "base_netgroup"
      ],
      "description": "`search_bases` - these parameters allow specifying a non-standard\nsearch base for users (`base_user`), groups (`base_group`), and\nnetgroups (`base_netgroup`). Must be a valid LDAP DN. No remote\nvalidation is performed that the search base exists or contains\nexpected objects."
     },
     "attribute_maps": {
      "type": "object",
      "properties": {
       "passwd": {
        "type": "object",
        "properties": {
         "user_object_class": {
          "_name_": "user_object_class",
          "title": "user_object_class",
          "type": "string",
          "nullable": true
         },
         "user_name": {
          "_name_": "user_name",
          "title": "user_name",
          "type": "string",
          "nullable": true
         },
         "user_uid": {
          "_name_": "user_uid",
          "title": "user_uid",
          "type": "string",
          "nullable": true
         },
         "user_gid": {
          "_name_": "user_gid",
          "title": "user_gid",
          "type": "string",
          "nullable": true
         },
         "user_gecos": {
          "_name_": "user_gecos",
          "title": "user_gecos",
          "type": "string",
          "nullable": true
         },
         "user_home_directory": {
          "_name_": "user_home_directory",
          "title": "user_home_directory",
          "type": "string",
          "nullable": true
         },
         "user_shell": {
          "_name_": "user_shell",
          "title": "user_shell",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "passwd",
        "title": "passwd",
        "default": {},
        "_attrs_order_": [
         "user_object_class",
         "user_name",
         "user_uid",
         "user_gid",
         "user_gecos",
         "user_home_directory",
         "user_shell"
        ]
       },
       "shadow": {
        "type": "object",
        "properties": {
         "shadow_object_class": {
          "_name_": "shadow_object_class",
          "title": "shadow_object_class",
          "type": "string",
          "nullable": true
         },
         "shadow_last_change": {
          "_name_": "shadow_last_change",
          "title": "shadow_last_change",
          "type": "string",
          "nullable": true
         },
         "shadow_min": {
          "_name_": "shadow_min",
          "title": "shadow_min",
          "type": "string",
          "nullable": true
         },
         "shadow_max": {
          "_name_": "shadow_max",
          "title": "shadow_max",
          "type": "string",
          "nullable": true
         },
         "shadow_warning": {
          "_name_": "shadow_warning",
          "title": "shadow_warning",
          "type": "string",
          "nullable": true
         },
         "shadow_inactive": {
          "_name_": "shadow_inactive",
          "title": "shadow_inactive",
          "type": "string",
          "nullable": true
         },
         "shadow_expire": {
          "_name_": "shadow_expire",
          "title": "shadow_expire",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "shadow",
        "title": "shadow",
        "default": {},
        "_attrs_order_": [
         "shadow_object_class",
         "shadow_last_change",
         "shadow_min",
         "shadow_max",
         "shadow_warning",
         "shadow_inactive",
         "shadow_expire"
        ]
       },
       "group": {
        "type": "object",
        "properties": {
         "group_object_class": {
          "_name_": "group_object_class",
          "title": "group_object_class",
          "type": "string",
          "nullable": true
         },
         "group_gid": {
          "_name_": "group_gid",
          "title": "group_gid",
          "type": "string",
          "nullable": true
         },
         "group_member": {
          "_name_": "group_member",
          "title": "group_member",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "group",
        "title": "group",
        "default": {},
        "_attrs_order_": [
         "group_object_class",
         "group_gid",
         "group_member"
        ]
       },
       "netgroup": {
        "type": "object",
        "properties": {
         "netgroup_object_class": {
          "_name_": "netgroup_object_class",
          "title": "netgroup_object_class",
          "type": "string",
          "nullable": true
         },
         "netgroup_member": {
          "_name_": "netgroup_member",
          "title": "netgroup_member",
          "type": "string",
          "nullable": true
         },
         "netgroup_triple": {
          "_name_": "netgroup_triple",
          "title": "netgroup_triple",
          "type": "string",
          "nullable": true
         }
        },
        "additionalProperties": false,
        "_name_": "netgroup",
        "title": "netgroup",
        "default": {},
        "_attrs_order_": [
         "netgroup_object_class",
         "netgroup_member",
         "netgroup_triple"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "attribute_maps",
      "title": "attribute_maps",
      "default": {},
      "_attrs_order_": [
       "passwd",
       "shadow",
       "group",
       "netgroup"
      ],
      "description": "`attribute_maps` - allow specifying alternate non-RFC-compliant\nattribute names for `passwd`, `shadow`, `group`, and `netgroup` object\nclasses as specified in RFC 2307. Setting key to `null` has special\nmeaning that RFC defaults for the configure `nss_info_schema` will\nbe used."
     }
    },
    "additionalProperties": false,
    "_name_": "ldap_update_returns",
    "title": "ldap_update_returns",
    "default": {},
    "_attrs_order_": [
     "hostname",
     "basedn",
     "binddn",
     "bindpw",
     "anonbind",
     "ssl",
     "certificate",
     "validate_certificates",
     "disable_freenas_cache",
     "timeout",
     "dns_timeout",
     "kerberos_realm",
     "kerberos_principal",
     "has_samba_schema",
     "auxiliary_parameters",
     "schema",
     "enable",
     "search_bases",
     "attribute_maps"
    ]
   },
   "return_schema_of_ldap_get_state": {
    "_name_": "directoryservice_state",
    "title": "directoryservice_state",
    "type": "string",
    "enum": [
     "DISABLED",
     "FAULTED",
     "LEAVING",
     "JOINING",
     "HEALTHY"
    ]
   },
   "return_schema_of_ldap_schema_choices": {
    "_name_": "schema_choices",
    "title": "schema_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "nss_info_ldap",
     "title": "nss_info_ldap",
     "default": "RFC2307",
     "_required_": false,
     "type": "string",
     "enum": [
      "RFC2307",
      "RFC2307BIS"
     ]
    }
   },
   "return_schema_of_ldap_ssl_choices": {
    "_name_": "ssl_choices",
    "title": "ssl_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "ssl",
     "title": "ldap_ssl_choice",
     "default": "ON",
     "_required_": false,
     "type": "string",
     "enum": [
      "OFF",
      "ON",
      "START_TLS"
     ]
    }
   },
   "return_schema_of_mail_config": {
    "type": "object",
    "properties": {
     "fromemail": {
      "_name_": "fromemail",
      "title": "fromemail",
      "type": "string"
     },
     "fromname": {
      "_name_": "fromname",
      "title": "fromname",
      "type": "string"
     },
     "outgoingserver": {
      "_name_": "outgoingserver",
      "title": "outgoingserver",
      "type": "string"
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "type": "string",
      "enum": [
       "PLAIN",
       "SSL",
       "TLS"
      ]
     },
     "smtp": {
      "type": "boolean",
      "_name_": "smtp",
      "title": "smtp"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "nullable": true
     },
     "pass": {
      "_name_": "pass",
      "title": "pass",
      "type": "string",
      "nullable": true
     },
     "oauth": {
      "type": "object",
      "properties": {
       "client_id": {
        "_name_": "client_id",
        "title": "client_id",
        "type": "string"
       },
       "client_secret": {
        "_name_": "client_secret",
        "title": "client_secret",
        "type": "string"
       },
       "refresh_token": {
        "_name_": "refresh_token",
        "title": "refresh_token",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "oauth",
      "title": "oauth",
      "default": {},
      "_attrs_order_": [
       "client_id",
       "client_secret",
       "refresh_token"
      ]
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "mail_entry",
    "title": "mail_entry",
    "default": {},
    "_attrs_order_": [
     "fromemail",
     "fromname",
     "outgoingserver",
     "port",
     "security",
     "smtp",
     "user",
     "pass",
     "oauth",
     "id"
    ]
   },
   "mail_update": {
    "type": "object",
    "properties": {
     "fromemail": {
      "_name_": "fromemail",
      "title": "fromemail",
      "type": "string",
      "description": "`fromemail` is used as a sending address which the mail server will use for sending emails."
     },
     "fromname": {
      "_name_": "fromname",
      "title": "fromname",
      "type": "string"
     },
     "outgoingserver": {
      "_name_": "outgoingserver",
      "title": "outgoingserver",
      "type": "string",
      "description": "`outgoingserver` is the hostname or IP address of SMTP server used for sending an email."
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "type": "string",
      "enum": [
       "PLAIN",
       "SSL",
       "TLS"
      ],
      "description": "`security` is type of encryption desired."
     },
     "smtp": {
      "type": "boolean",
      "_name_": "smtp",
      "title": "smtp"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "nullable": true
     },
     "pass": {
      "_name_": "pass",
      "title": "pass",
      "type": "string",
      "nullable": true
     },
     "oauth": {
      "type": "object",
      "properties": {
       "client_id": {
        "_name_": "client_id",
        "title": "client_id",
        "type": "string"
       },
       "client_secret": {
        "_name_": "client_secret",
        "title": "client_secret",
        "type": "string"
       },
       "refresh_token": {
        "_name_": "refresh_token",
        "title": "refresh_token",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "oauth",
      "title": "oauth",
      "default": {},
      "_attrs_order_": [
       "client_id",
       "client_secret",
       "refresh_token"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "mail_update",
    "title": "mail_update",
    "default": {},
    "_attrs_order_": [
     "fromemail",
     "fromname",
     "outgoingserver",
     "port",
     "security",
     "smtp",
     "user",
     "pass",
     "oauth"
    ]
   },
   "return_schema_of_mail_update": {
    "type": "object",
    "properties": {
     "fromemail": {
      "_name_": "fromemail",
      "title": "fromemail",
      "type": "string",
      "description": "`fromemail` is used as a sending address which the mail server will use for sending emails."
     },
     "fromname": {
      "_name_": "fromname",
      "title": "fromname",
      "type": "string"
     },
     "outgoingserver": {
      "_name_": "outgoingserver",
      "title": "outgoingserver",
      "type": "string",
      "description": "`outgoingserver` is the hostname or IP address of SMTP server used for sending an email."
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "type": "string",
      "enum": [
       "PLAIN",
       "SSL",
       "TLS"
      ],
      "description": "`security` is type of encryption desired."
     },
     "smtp": {
      "type": "boolean",
      "_name_": "smtp",
      "title": "smtp"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "nullable": true
     },
     "pass": {
      "_name_": "pass",
      "title": "pass",
      "type": "string",
      "nullable": true
     },
     "oauth": {
      "type": "object",
      "properties": {
       "client_id": {
        "_name_": "client_id",
        "title": "client_id",
        "type": "string"
       },
       "client_secret": {
        "_name_": "client_secret",
        "title": "client_secret",
        "type": "string"
       },
       "refresh_token": {
        "_name_": "refresh_token",
        "title": "refresh_token",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "oauth",
      "title": "oauth",
      "default": {},
      "_attrs_order_": [
       "client_id",
       "client_secret",
       "refresh_token"
      ]
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "mail_update_returns",
    "title": "mail_update_returns",
    "default": {},
    "_attrs_order_": [
     "fromemail",
     "fromname",
     "outgoingserver",
     "port",
     "security",
     "smtp",
     "user",
     "pass",
     "oauth",
     "id"
    ]
   },
   "mail_send_0": {
    "type": "object",
    "properties": {
     "subject": {
      "_name_": "subject",
      "title": "subject",
      "type": "string"
     },
     "text": {
      "_name_": "text",
      "title": "text",
      "type": "string",
      "description": "`text` will be formatted to HTML using Markdown and rendered using default E-Mail template."
     },
     "html": {
      "_name_": "html",
      "title": "html",
      "type": "string",
      "description": "You can put your own HTML using `html`. If `html` is null, no HTML MIME part will be added to E-Mail.",
      "nullable": true
     },
     "to": {
      "_name_": "to",
      "title": "to",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "email",
       "title": "email",
       "_required_": false,
       "type": "string"
      }
     },
     "cc": {
      "_name_": "cc",
      "title": "cc",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "email",
       "title": "email",
       "_required_": false,
       "type": "string"
      }
     },
     "interval": {
      "type": "integer",
      "_name_": "interval",
      "title": "interval",
      "nullable": true
     },
     "channel": {
      "_name_": "channel",
      "title": "channel",
      "type": "string",
      "nullable": true
     },
     "timeout": {
      "type": "integer",
      "_name_": "timeout",
      "title": "timeout",
      "default": 300
     },
     "attachments": {
      "type": "boolean",
      "_name_": "attachments",
      "title": "attachments",
      "default": false,
      "description": "If `attachments` is true, a list compromised of the following dict is required\nvia HTTP upload:\n  - headers(list)\n    - name(str)\n    - value(str)\n    - params(dict)\n  - content (str)"
     },
     "queue": {
      "type": "boolean",
      "_name_": "queue",
      "title": "queue",
      "default": true
     },
     "extra_headers": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra_headers",
      "title": "extra_headers",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "mail_message",
    "title": "mail_message",
    "default": {},
    "_attrs_order_": [
     "subject",
     "text",
     "html",
     "to",
     "cc",
     "interval",
     "channel",
     "timeout",
     "attachments",
     "queue",
     "extra_headers"
    ]
   },
   "mail_send_1": {
    "type": "object",
    "properties": {
     "fromemail": {
      "_name_": "fromemail",
      "title": "fromemail",
      "type": "string"
     },
     "fromname": {
      "_name_": "fromname",
      "title": "fromname",
      "type": "string"
     },
     "outgoingserver": {
      "_name_": "outgoingserver",
      "title": "outgoingserver",
      "type": "string"
     },
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port"
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "type": "string",
      "enum": [
       "PLAIN",
       "SSL",
       "TLS"
      ]
     },
     "smtp": {
      "type": "boolean",
      "_name_": "smtp",
      "title": "smtp"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "nullable": true
     },
     "pass": {
      "_name_": "pass",
      "title": "pass",
      "type": "string",
      "nullable": true
     },
     "oauth": {
      "type": "object",
      "properties": {
       "client_id": {
        "_name_": "client_id",
        "title": "client_id",
        "type": "string"
       },
       "client_secret": {
        "_name_": "client_secret",
        "title": "client_secret",
        "type": "string"
       },
       "refresh_token": {
        "_name_": "refresh_token",
        "title": "refresh_token",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "oauth",
      "title": "oauth",
      "default": {},
      "_attrs_order_": [
       "client_id",
       "client_secret",
       "refresh_token"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "mail_update",
    "title": "mail_update",
    "default": {},
    "_attrs_order_": [
     "fromemail",
     "fromname",
     "outgoingserver",
     "port",
     "security",
     "smtp",
     "user",
     "pass",
     "oauth"
    ]
   },
   "mail_send": {
    "type": "object",
    "properties": {
     "mail_message": {
      "$ref": "#/components/schemas/mail_send_0"
     },
     "mail_update": {
      "$ref": "#/components/schemas/mail_send_1"
     }
    }
   },
   "return_schema_of_mail_send": {
    "type": "boolean",
    "_name_": "successfully_sent",
    "title": "successfully_sent"
   },
   "return_schema_of_network_configuration_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "domain": {
      "_name_": "domain",
      "title": "domain",
      "type": "string"
     },
     "ipv4gateway": {
      "_name_": "ipv4gateway",
      "title": "ipv4gateway",
      "type": "string"
     },
     "ipv6gateway": {
      "_name_": "ipv6gateway",
      "title": "ipv6gateway",
      "type": "string"
     },
     "nameserver1": {
      "_name_": "nameserver1",
      "title": "nameserver1",
      "type": "string"
     },
     "nameserver2": {
      "_name_": "nameserver2",
      "title": "nameserver2",
      "type": "string"
     },
     "nameserver3": {
      "_name_": "nameserver3",
      "title": "nameserver3",
      "type": "string"
     },
     "httpproxy": {
      "_name_": "httpproxy",
      "title": "httpproxy",
      "type": "string"
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "domains": {
      "_name_": "domains",
      "title": "domains",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "domain",
       "title": "domain",
       "_required_": false,
       "type": "string"
      }
     },
     "service_announcement": {
      "type": "object",
      "properties": {
       "netbios": {
        "type": "boolean",
        "_name_": "netbios",
        "title": "netbios"
       },
       "mdns": {
        "type": "boolean",
        "_name_": "mdns",
        "title": "mdns"
       },
       "wsd": {
        "type": "boolean",
        "_name_": "wsd",
        "title": "wsd"
       }
      },
      "additionalProperties": false,
      "_name_": "service_announcement",
      "title": "service_announcement",
      "default": {},
      "_attrs_order_": [
       "netbios",
       "mdns",
       "wsd"
      ]
     },
     "activity": {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "type": "string",
        "enum": [
         "ALLOW",
         "DENY"
        ]
       },
       "activities": {
        "_name_": "activities",
        "title": "activities",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "activity",
         "title": "activity",
         "_required_": false,
         "type": "string"
        }
       }
      },
      "additionalProperties": false,
      "_name_": "activity",
      "title": "activity",
      "default": {},
      "_attrs_order_": [
       "type",
       "activities"
      ]
     },
     "hostname_local": {
      "_name_": "hostname_local",
      "title": "hostname_local",
      "type": "string"
     },
     "hostname_b": {
      "_name_": "hostname_b",
      "title": "hostname_b",
      "type": "string",
      "nullable": true
     },
     "hostname_virtual": {
      "_name_": "hostname_virtual",
      "title": "hostname_virtual",
      "type": "string",
      "nullable": true
     },
     "state": {
      "type": "object",
      "properties": {
       "ipv4gateway": {
        "_name_": "ipv4gateway",
        "title": "ipv4gateway",
        "type": "string"
       },
       "ipv6gateway": {
        "_name_": "ipv6gateway",
        "title": "ipv6gateway",
        "type": "string"
       },
       "nameserver1": {
        "_name_": "nameserver1",
        "title": "nameserver1",
        "type": "string"
       },
       "nameserver2": {
        "_name_": "nameserver2",
        "title": "nameserver2",
        "type": "string"
       },
       "nameserver3": {
        "_name_": "nameserver3",
        "title": "nameserver3",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": [
       "ipv4gateway",
       "ipv6gateway",
       "nameserver1",
       "nameserver2",
       "nameserver3"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "network_configuration_entry",
    "title": "network_configuration_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "hostname",
     "domain",
     "ipv4gateway",
     "ipv6gateway",
     "nameserver1",
     "nameserver2",
     "nameserver3",
     "httpproxy",
     "hosts",
     "domains",
     "service_announcement",
     "activity",
     "hostname_local",
     "hostname_b",
     "hostname_virtual",
     "state"
    ]
   },
   "network_configuration_update": {
    "type": "object",
    "properties": {
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "domain": {
      "_name_": "domain",
      "title": "domain",
      "type": "string"
     },
     "ipv4gateway": {
      "_name_": "ipv4gateway",
      "title": "ipv4gateway",
      "type": "string",
      "description": "`ipv4gateway` if set is used instead of the default gateway provided by DHCP."
     },
     "ipv6gateway": {
      "_name_": "ipv6gateway",
      "title": "ipv6gateway",
      "type": "string"
     },
     "nameserver1": {
      "_name_": "nameserver1",
      "title": "nameserver1",
      "type": "string",
      "description": "`nameserver1` is primary DNS server."
     },
     "nameserver2": {
      "_name_": "nameserver2",
      "title": "nameserver2",
      "type": "string",
      "description": "`nameserver2` is secondary DNS server."
     },
     "nameserver3": {
      "_name_": "nameserver3",
      "title": "nameserver3",
      "type": "string",
      "description": "`nameserver3` is tertiary DNS server."
     },
     "httpproxy": {
      "_name_": "httpproxy",
      "title": "httpproxy",
      "type": "string",
      "description": "`httpproxy` attribute must be provided if a proxy is to be used for network operations."
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "domains": {
      "_name_": "domains",
      "title": "domains",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "domain",
       "title": "domain",
       "_required_": false,
       "type": "string"
      }
     },
     "service_announcement": {
      "type": "object",
      "properties": {
       "netbios": {
        "type": "boolean",
        "_name_": "netbios",
        "title": "netbios"
       },
       "mdns": {
        "type": "boolean",
        "_name_": "mdns",
        "title": "mdns"
       },
       "wsd": {
        "type": "boolean",
        "_name_": "wsd",
        "title": "wsd"
       }
      },
      "additionalProperties": false,
      "_name_": "service_announcement",
      "title": "service_announcement",
      "default": {},
      "_attrs_order_": [
       "netbios",
       "mdns",
       "wsd"
      ]
     },
     "activity": {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "type": "string",
        "enum": [
         "ALLOW",
         "DENY"
        ]
       },
       "activities": {
        "_name_": "activities",
        "title": "activities",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "activity",
         "title": "activity",
         "_required_": false,
         "type": "string"
        }
       }
      },
      "additionalProperties": false,
      "_name_": "activity",
      "title": "activity",
      "default": {},
      "_attrs_order_": [
       "type",
       "activities"
      ]
     },
     "hostname_b": {
      "_name_": "hostname_b",
      "title": "hostname_b",
      "type": "string",
      "nullable": true
     },
     "hostname_virtual": {
      "_name_": "hostname_virtual",
      "title": "hostname_virtual",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "global_configuration_update",
    "title": "global_configuration_update",
    "default": {},
    "_attrs_order_": [
     "hostname",
     "domain",
     "ipv4gateway",
     "ipv6gateway",
     "nameserver1",
     "nameserver2",
     "nameserver3",
     "httpproxy",
     "hosts",
     "domains",
     "service_announcement",
     "activity",
     "hostname_b",
     "hostname_virtual"
    ]
   },
   "return_schema_of_network_configuration_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "domain": {
      "_name_": "domain",
      "title": "domain",
      "type": "string"
     },
     "ipv4gateway": {
      "_name_": "ipv4gateway",
      "title": "ipv4gateway",
      "type": "string",
      "description": "`ipv4gateway` if set is used instead of the default gateway provided by DHCP."
     },
     "ipv6gateway": {
      "_name_": "ipv6gateway",
      "title": "ipv6gateway",
      "type": "string"
     },
     "nameserver1": {
      "_name_": "nameserver1",
      "title": "nameserver1",
      "type": "string",
      "description": "`nameserver1` is primary DNS server."
     },
     "nameserver2": {
      "_name_": "nameserver2",
      "title": "nameserver2",
      "type": "string",
      "description": "`nameserver2` is secondary DNS server."
     },
     "nameserver3": {
      "_name_": "nameserver3",
      "title": "nameserver3",
      "type": "string",
      "description": "`nameserver3` is tertiary DNS server."
     },
     "httpproxy": {
      "_name_": "httpproxy",
      "title": "httpproxy",
      "type": "string",
      "description": "`httpproxy` attribute must be provided if a proxy is to be used for network operations."
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "domains": {
      "_name_": "domains",
      "title": "domains",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "domain",
       "title": "domain",
       "_required_": false,
       "type": "string"
      }
     },
     "service_announcement": {
      "type": "object",
      "properties": {
       "netbios": {
        "type": "boolean",
        "_name_": "netbios",
        "title": "netbios"
       },
       "mdns": {
        "type": "boolean",
        "_name_": "mdns",
        "title": "mdns"
       },
       "wsd": {
        "type": "boolean",
        "_name_": "wsd",
        "title": "wsd"
       }
      },
      "additionalProperties": false,
      "_name_": "service_announcement",
      "title": "service_announcement",
      "default": {},
      "_attrs_order_": [
       "netbios",
       "mdns",
       "wsd"
      ]
     },
     "activity": {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "type": "string",
        "enum": [
         "ALLOW",
         "DENY"
        ]
       },
       "activities": {
        "_name_": "activities",
        "title": "activities",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "activity",
         "title": "activity",
         "_required_": false,
         "type": "string"
        }
       }
      },
      "additionalProperties": false,
      "_name_": "activity",
      "title": "activity",
      "default": {},
      "_attrs_order_": [
       "type",
       "activities"
      ]
     },
     "hostname_local": {
      "_name_": "hostname_local",
      "title": "hostname_local",
      "type": "string"
     },
     "hostname_b": {
      "_name_": "hostname_b",
      "title": "hostname_b",
      "type": "string",
      "nullable": true
     },
     "hostname_virtual": {
      "_name_": "hostname_virtual",
      "title": "hostname_virtual",
      "type": "string",
      "nullable": true
     },
     "state": {
      "type": "object",
      "properties": {
       "ipv4gateway": {
        "_name_": "ipv4gateway",
        "title": "ipv4gateway",
        "type": "string"
       },
       "ipv6gateway": {
        "_name_": "ipv6gateway",
        "title": "ipv6gateway",
        "type": "string"
       },
       "nameserver1": {
        "_name_": "nameserver1",
        "title": "nameserver1",
        "type": "string"
       },
       "nameserver2": {
        "_name_": "nameserver2",
        "title": "nameserver2",
        "type": "string"
       },
       "nameserver3": {
        "_name_": "nameserver3",
        "title": "nameserver3",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": [
       "ipv4gateway",
       "ipv6gateway",
       "nameserver1",
       "nameserver2",
       "nameserver3"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "network_configuration_update_returns",
    "title": "network_configuration_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "hostname",
     "domain",
     "ipv4gateway",
     "ipv6gateway",
     "nameserver1",
     "nameserver2",
     "nameserver3",
     "httpproxy",
     "hosts",
     "domains",
     "service_announcement",
     "activity",
     "hostname_local",
     "hostname_b",
     "hostname_virtual",
     "state"
    ]
   },
   "return_schema_of_network_configuration_activity_choices": {
    "_name_": "activity_choices",
    "title": "activity_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "activity_choice",
     "title": "activity_choice",
     "default": [],
     "_required_": false,
     "type": "array",
     "items": [
      {
       "_name_": "activity",
       "title": "activity",
       "_required_": false,
       "type": "string"
      }
     ]
    }
   },
   "return_schema_of_network_general_summary": {
    "type": "object",
    "properties": {
     "ips": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "ips",
      "title": "ips",
      "default": {},
      "_attrs_order_": []
     },
     "default_routes": {
      "_name_": "default_routes",
      "title": "default_routes",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "default_route",
       "title": "default_route",
       "_required_": false,
       "type": "string"
      }
     },
     "nameservers": {
      "_name_": "nameservers",
      "title": "nameservers",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "nameserver",
       "title": "nameserver",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "network_summary",
    "title": "network_summary",
    "default": {},
    "_attrs_order_": [
     "ips",
     "default_routes",
     "nameservers"
    ]
   },
   "return_schema_of_nfs_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "servers": {
      "type": "integer",
      "_name_": "servers",
      "title": "servers",
      "nullable": true
     },
     "allow_nonroot": {
      "type": "boolean",
      "_name_": "allow_nonroot",
      "title": "allow_nonroot"
     },
     "protocols": {
      "_name_": "protocols",
      "title": "protocols",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "protocol",
       "title": "protocol",
       "_required_": false,
       "type": "string",
       "enum": [
        "NFSV3",
        "NFSV4"
       ]
      }
     },
     "v4_v3owner": {
      "type": "boolean",
      "_name_": "v4_v3owner",
      "title": "v4_v3owner"
     },
     "v4_krb": {
      "type": "boolean",
      "_name_": "v4_krb",
      "title": "v4_krb"
     },
     "v4_domain": {
      "_name_": "v4_domain",
      "title": "v4_domain",
      "type": "string"
     },
     "bindip": {
      "_name_": "bindip",
      "title": "bindip",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "ip",
       "title": "ip",
       "_required_": false,
       "type": "string"
      }
     },
     "mountd_port": {
      "type": "integer",
      "_name_": "mountd_port",
      "title": "mountd_port",
      "nullable": true
     },
     "rpcstatd_port": {
      "type": "integer",
      "_name_": "rpcstatd_port",
      "title": "rpcstatd_port",
      "nullable": true
     },
     "rpclockd_port": {
      "type": "integer",
      "_name_": "rpclockd_port",
      "title": "rpclockd_port",
      "nullable": true
     },
     "mountd_log": {
      "type": "boolean",
      "_name_": "mountd_log",
      "title": "mountd_log"
     },
     "statd_lockd_log": {
      "type": "boolean",
      "_name_": "statd_lockd_log",
      "title": "statd_lockd_log"
     },
     "v4_krb_enabled": {
      "type": "boolean",
      "_name_": "v4_krb_enabled",
      "title": "v4_krb_enabled"
     },
     "userd_manage_gids": {
      "type": "boolean",
      "_name_": "userd_manage_gids",
      "title": "userd_manage_gids"
     },
     "keytab_has_nfs_spn": {
      "type": "boolean",
      "_name_": "keytab_has_nfs_spn",
      "title": "keytab_has_nfs_spn"
     },
     "managed_nfsd": {
      "type": "boolean",
      "_name_": "managed_nfsd",
      "title": "managed_nfsd",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "nfs_entry",
    "title": "nfs_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "servers",
     "allow_nonroot",
     "protocols",
     "v4_v3owner",
     "v4_krb",
     "v4_domain",
     "bindip",
     "mountd_port",
     "rpcstatd_port",
     "rpclockd_port",
     "mountd_log",
     "statd_lockd_log",
     "v4_krb_enabled",
     "userd_manage_gids",
     "keytab_has_nfs_spn",
     "managed_nfsd"
    ]
   },
   "nfs_update": {
    "type": "object",
    "properties": {
     "servers": {
      "type": "integer",
      "_name_": "servers",
      "title": "servers",
      "description": "`servers` - Represents number of servers to create.\n            By default, the number of nfsd is determined by the capabilities of the system.\n            To specify the number of nfsd, set a value between 1 and 256.\n            'Unset' the field to return to default.\n            This field will always report the number of nfsd to start.",
      "nullable": true
     },
     "allow_nonroot": {
      "type": "boolean",
      "_name_": "allow_nonroot",
      "title": "allow_nonroot",
      "description": "`allow_nonroot` - If 'enabled' it allows non-root mount requests to be served."
     },
     "protocols": {
      "_name_": "protocols",
      "title": "protocols",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "protocol",
       "title": "protocol",
       "_required_": false,
       "type": "string",
       "enum": [
        "NFSV3",
        "NFSV4"
       ]
      },
      "description": "`protocols` - enable/disable NFSv3, NFSv4\n            Both can be enabled or NFSv4 or NFSv4 by themselves.  At least one must be enabled.\n            Note:  The 'showmount' command is available only if NFSv3 is enabled."
     },
     "v4_v3owner": {
      "type": "boolean",
      "_name_": "v4_v3owner",
      "title": "v4_v3owner",
      "description": "`v4_v3owner` - when set means that system will use NFSv3 ownership model for NFSv4.\n            (Deprecated)"
     },
     "v4_krb": {
      "type": "boolean",
      "_name_": "v4_krb",
      "title": "v4_krb",
      "description": "`v4_krb` -  Force Kerberos authentication on NFS shares\n            If enabled, NFS shares will fail if the Kerberos ticket is unavilable"
     },
     "v4_domain": {
      "_name_": "v4_domain",
      "title": "v4_domain",
      "type": "string",
      "description": "`v4_domain` -   Specify a DNS domain (NFSv4 only)\n            If set, the value will be used to override the default DNS domain name for NFSv4.\n            Specifies the 'Domain' idmapd.conf setting."
     },
     "bindip": {
      "_name_": "bindip",
      "title": "bindip",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "ip",
       "title": "ip",
       "_required_": false,
       "type": "string"
      },
      "description": "`bindip` -  Limit the server IP addresses available for NFS\n            By default, NFS will listen on all IP addresses that are active on the server.\n            To specify the server interface or a set of interfaces provide a list of IP's.\n            If the field is unset/empty, NFS listens on all available server addresses."
     },
     "mountd_port": {
      "type": "integer",
      "_name_": "mountd_port",
      "title": "mountd_port",
      "description": "`mountd_port` - mountd port binding\n            The value set specifies the port mountd(8) binds to.",
      "nullable": true
     },
     "rpcstatd_port": {
      "type": "integer",
      "_name_": "rpcstatd_port",
      "title": "rpcstatd_port",
      "description": "`rpcstatd_port` - statd port binding\n            The value set specifies the port rpc.statd(8) binds to.",
      "nullable": true
     },
     "rpclockd_port": {
      "type": "integer",
      "_name_": "rpclockd_port",
      "title": "rpclockd_port",
      "description": "`rpclockd_port` - lockd port binding\n            The value set specifies the port rpclockd_port(8) binds to.",
      "nullable": true
     },
     "mountd_log": {
      "type": "boolean",
      "_name_": "mountd_log",
      "title": "mountd_log"
     },
     "statd_lockd_log": {
      "type": "boolean",
      "_name_": "statd_lockd_log",
      "title": "statd_lockd_log"
     },
     "userd_manage_gids": {
      "type": "boolean",
      "_name_": "userd_manage_gids",
      "title": "userd_manage_gids"
     }
    },
    "additionalProperties": false,
    "_name_": "nfs_update",
    "title": "nfs_update",
    "default": {},
    "_attrs_order_": [
     "servers",
     "allow_nonroot",
     "protocols",
     "v4_v3owner",
     "v4_krb",
     "v4_domain",
     "bindip",
     "mountd_port",
     "rpcstatd_port",
     "rpclockd_port",
     "mountd_log",
     "statd_lockd_log",
     "userd_manage_gids"
    ]
   },
   "return_schema_of_nfs_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "servers": {
      "type": "integer",
      "_name_": "servers",
      "title": "servers",
      "description": "`servers` - Represents number of servers to create.\n            By default, the number of nfsd is determined by the capabilities of the system.\n            To specify the number of nfsd, set a value between 1 and 256.\n            'Unset' the field to return to default.\n            This field will always report the number of nfsd to start.",
      "nullable": true
     },
     "allow_nonroot": {
      "type": "boolean",
      "_name_": "allow_nonroot",
      "title": "allow_nonroot",
      "description": "`allow_nonroot` - If 'enabled' it allows non-root mount requests to be served."
     },
     "protocols": {
      "_name_": "protocols",
      "title": "protocols",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "protocol",
       "title": "protocol",
       "_required_": false,
       "type": "string",
       "enum": [
        "NFSV3",
        "NFSV4"
       ]
      },
      "description": "`protocols` - enable/disable NFSv3, NFSv4\n            Both can be enabled or NFSv4 or NFSv4 by themselves.  At least one must be enabled.\n            Note:  The 'showmount' command is available only if NFSv3 is enabled."
     },
     "v4_v3owner": {
      "type": "boolean",
      "_name_": "v4_v3owner",
      "title": "v4_v3owner",
      "description": "`v4_v3owner` - when set means that system will use NFSv3 ownership model for NFSv4.\n            (Deprecated)"
     },
     "v4_krb": {
      "type": "boolean",
      "_name_": "v4_krb",
      "title": "v4_krb",
      "description": "`v4_krb` -  Force Kerberos authentication on NFS shares\n            If enabled, NFS shares will fail if the Kerberos ticket is unavilable"
     },
     "v4_domain": {
      "_name_": "v4_domain",
      "title": "v4_domain",
      "type": "string",
      "description": "`v4_domain` -   Specify a DNS domain (NFSv4 only)\n            If set, the value will be used to override the default DNS domain name for NFSv4.\n            Specifies the 'Domain' idmapd.conf setting."
     },
     "bindip": {
      "_name_": "bindip",
      "title": "bindip",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "ip",
       "title": "ip",
       "_required_": false,
       "type": "string"
      },
      "description": "`bindip` -  Limit the server IP addresses available for NFS\n            By default, NFS will listen on all IP addresses that are active on the server.\n            To specify the server interface or a set of interfaces provide a list of IP's.\n            If the field is unset/empty, NFS listens on all available server addresses."
     },
     "mountd_port": {
      "type": "integer",
      "_name_": "mountd_port",
      "title": "mountd_port",
      "description": "`mountd_port` - mountd port binding\n            The value set specifies the port mountd(8) binds to.",
      "nullable": true
     },
     "rpcstatd_port": {
      "type": "integer",
      "_name_": "rpcstatd_port",
      "title": "rpcstatd_port",
      "description": "`rpcstatd_port` - statd port binding\n            The value set specifies the port rpc.statd(8) binds to.",
      "nullable": true
     },
     "rpclockd_port": {
      "type": "integer",
      "_name_": "rpclockd_port",
      "title": "rpclockd_port",
      "description": "`rpclockd_port` - lockd port binding\n            The value set specifies the port rpclockd_port(8) binds to.",
      "nullable": true
     },
     "mountd_log": {
      "type": "boolean",
      "_name_": "mountd_log",
      "title": "mountd_log"
     },
     "statd_lockd_log": {
      "type": "boolean",
      "_name_": "statd_lockd_log",
      "title": "statd_lockd_log"
     },
     "v4_krb_enabled": {
      "type": "boolean",
      "_name_": "v4_krb_enabled",
      "title": "v4_krb_enabled"
     },
     "userd_manage_gids": {
      "type": "boolean",
      "_name_": "userd_manage_gids",
      "title": "userd_manage_gids"
     },
     "keytab_has_nfs_spn": {
      "type": "boolean",
      "_name_": "keytab_has_nfs_spn",
      "title": "keytab_has_nfs_spn"
     },
     "managed_nfsd": {
      "type": "boolean",
      "_name_": "managed_nfsd",
      "title": "managed_nfsd",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "nfs_update_returns",
    "title": "nfs_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "servers",
     "allow_nonroot",
     "protocols",
     "v4_v3owner",
     "v4_krb",
     "v4_domain",
     "bindip",
     "mountd_port",
     "rpcstatd_port",
     "rpclockd_port",
     "mountd_log",
     "statd_lockd_log",
     "v4_krb_enabled",
     "userd_manage_gids",
     "keytab_has_nfs_spn",
     "managed_nfsd"
    ]
   },
   "nfs_add_principal": {
    "type": "object",
    "properties": {
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "kerberos_username_password",
    "title": "kerberos_username_password",
    "default": {},
    "_attrs_order_": [
     "username",
     "password"
    ]
   },
   "return_schema_of_nfs_add_principal": {
    "type": "boolean",
    "_name_": "principal_add_status",
    "title": "principal_add_status"
   },
   "return_schema_of_nfs_bindip_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "bindip_choices",
    "title": "bindip_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_nfs_client_count": {
    "type": "integer",
    "_name_": "number_of_clients",
    "title": "number_of_clients"
   },
   "return_schema_of_nfs_get_nfs4_clients": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": false,
        "type": "string"
       },
       "info": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "info",
        "title": "info",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "state": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "state",
        "title": "state",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "client",
      "title": "client",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "info",
       "state"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": false,
          "type": "string"
         },
         "info": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "info",
          "title": "info",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "state": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "state",
          "title": "state",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "client",
        "title": "client",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "info",
         "state"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_pool_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "guid": {
          "_name_": "guid",
          "title": "guid",
          "_required_": true,
          "type": "string"
         },
         "status": {
          "_name_": "status",
          "title": "status",
          "_required_": true,
          "type": "string"
         },
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "scan": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "scan",
          "title": "scan",
          "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "is_upgraded": {
          "type": "boolean",
          "_name_": "is_upgraded",
          "title": "is_upgraded",
          "_required_": false
         },
         "healthy": {
          "type": "boolean",
          "_name_": "healthy",
          "title": "healthy",
          "_required_": true
         },
         "warning": {
          "type": "boolean",
          "_name_": "warning",
          "title": "warning",
          "_required_": true
         },
         "status_code": {
          "_name_": "status_code",
          "title": "status_code",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "status_detail": {
          "_name_": "status_detail",
          "title": "status_detail",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "size",
          "title": "size",
          "_required_": true
         },
         "allocated": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "allocated",
          "title": "allocated",
          "_required_": true
         },
         "free": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "free",
          "title": "free",
          "_required_": true
         },
         "freeing": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "freeing",
          "title": "freeing",
          "_required_": true
         },
         "fragmentation": {
          "_name_": "fragmentation",
          "title": "fragmentation",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "size_str": {
          "_name_": "size_str",
          "title": "size_str",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "allocated_str": {
          "_name_": "allocated_str",
          "title": "allocated_str",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "free_str": {
          "_name_": "free_str",
          "title": "free_str",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "freeing_str": {
          "_name_": "freeing_str",
          "title": "freeing_str",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "autotrim": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "autotrim",
          "title": "autotrim",
          "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "topology": {
          "type": "object",
          "properties": {
           "data": {
            "_name_": "data",
            "title": "data",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "log": {
            "_name_": "log",
            "title": "log",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "cache": {
            "_name_": "cache",
            "title": "cache",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "spare": {
            "_name_": "spare",
            "title": "spare",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "special": {
            "_name_": "special",
            "title": "special",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           },
           "dedup": {
            "_name_": "dedup",
            "title": "dedup",
            "default": [],
            "_required_": true,
            "type": "array",
            "items": []
           }
          },
          "additionalProperties": false,
          "_name_": "topology",
          "title": "topology",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "data",
           "log",
           "cache",
           "spare",
           "special",
           "dedup"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "pool_entry",
        "title": "pool_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "name",
         "guid",
         "status",
         "path",
         "scan",
         "is_upgraded",
         "healthy",
         "warning",
         "status_code",
         "status_detail",
         "size",
         "allocated",
         "free",
         "freeing",
         "fragmentation",
         "size_str",
         "allocated_str",
         "free_str",
         "freeing_str",
         "autotrim",
         "topology"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "guid": {
        "_name_": "guid",
        "title": "guid",
        "_required_": true,
        "type": "string"
       },
       "status": {
        "_name_": "status",
        "title": "status",
        "_required_": true,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "scan": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "scan",
        "title": "scan",
        "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "is_upgraded": {
        "type": "boolean",
        "_name_": "is_upgraded",
        "title": "is_upgraded",
        "_required_": false
       },
       "healthy": {
        "type": "boolean",
        "_name_": "healthy",
        "title": "healthy",
        "_required_": true
       },
       "warning": {
        "type": "boolean",
        "_name_": "warning",
        "title": "warning",
        "_required_": true
       },
       "status_code": {
        "_name_": "status_code",
        "title": "status_code",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "status_detail": {
        "_name_": "status_detail",
        "title": "status_detail",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "size": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "size",
        "title": "size",
        "_required_": true
       },
       "allocated": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "allocated",
        "title": "allocated",
        "_required_": true
       },
       "free": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "free",
        "title": "free",
        "_required_": true
       },
       "freeing": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "freeing",
        "title": "freeing",
        "_required_": true
       },
       "fragmentation": {
        "_name_": "fragmentation",
        "title": "fragmentation",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "size_str": {
        "_name_": "size_str",
        "title": "size_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "allocated_str": {
        "_name_": "allocated_str",
        "title": "allocated_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "free_str": {
        "_name_": "free_str",
        "title": "free_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "freeing_str": {
        "_name_": "freeing_str",
        "title": "freeing_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "autotrim": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "autotrim",
        "title": "autotrim",
        "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "topology": {
        "type": "object",
        "properties": {
         "data": {
          "_name_": "data",
          "title": "data",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "log": {
          "_name_": "log",
          "title": "log",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "cache": {
          "_name_": "cache",
          "title": "cache",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "spare": {
          "_name_": "spare",
          "title": "spare",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "special": {
          "_name_": "special",
          "title": "special",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "dedup": {
          "_name_": "dedup",
          "title": "dedup",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         }
        },
        "additionalProperties": false,
        "_name_": "topology",
        "title": "topology",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "data",
         "log",
         "cache",
         "spare",
         "special",
         "dedup"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "pool_entry",
      "title": "pool_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "name",
       "guid",
       "status",
       "path",
       "scan",
       "is_upgraded",
       "healthy",
       "warning",
       "status_code",
       "status_detail",
       "size",
       "allocated",
       "free",
       "freeing",
       "fragmentation",
       "size_str",
       "allocated_str",
       "free_str",
       "freeing_str",
       "autotrim",
       "topology"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "guid": {
        "_name_": "guid",
        "title": "guid",
        "_required_": true,
        "type": "string"
       },
       "status": {
        "_name_": "status",
        "title": "status",
        "_required_": true,
        "type": "string"
       },
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "scan": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "scan",
        "title": "scan",
        "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "is_upgraded": {
        "type": "boolean",
        "_name_": "is_upgraded",
        "title": "is_upgraded",
        "_required_": false
       },
       "healthy": {
        "type": "boolean",
        "_name_": "healthy",
        "title": "healthy",
        "_required_": true
       },
       "warning": {
        "type": "boolean",
        "_name_": "warning",
        "title": "warning",
        "_required_": true
       },
       "status_code": {
        "_name_": "status_code",
        "title": "status_code",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "status_detail": {
        "_name_": "status_detail",
        "title": "status_detail",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "size": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "size",
        "title": "size",
        "_required_": true
       },
       "allocated": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "allocated",
        "title": "allocated",
        "_required_": true
       },
       "free": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "free",
        "title": "free",
        "_required_": true
       },
       "freeing": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "freeing",
        "title": "freeing",
        "_required_": true
       },
       "fragmentation": {
        "_name_": "fragmentation",
        "title": "fragmentation",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "size_str": {
        "_name_": "size_str",
        "title": "size_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "allocated_str": {
        "_name_": "allocated_str",
        "title": "allocated_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "free_str": {
        "_name_": "free_str",
        "title": "free_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "freeing_str": {
        "_name_": "freeing_str",
        "title": "freeing_str",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "autotrim": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "autotrim",
        "title": "autotrim",
        "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "topology": {
        "type": "object",
        "properties": {
         "data": {
          "_name_": "data",
          "title": "data",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "log": {
          "_name_": "log",
          "title": "log",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "cache": {
          "_name_": "cache",
          "title": "cache",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "spare": {
          "_name_": "spare",
          "title": "spare",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "special": {
          "_name_": "special",
          "title": "special",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "dedup": {
          "_name_": "dedup",
          "title": "dedup",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         }
        },
        "additionalProperties": false,
        "_name_": "topology",
        "title": "topology",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "data",
         "log",
         "cache",
         "spare",
         "special",
         "dedup"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "pool_entry",
      "title": "pool_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "name",
       "guid",
       "status",
       "path",
       "scan",
       "is_upgraded",
       "healthy",
       "warning",
       "status_code",
       "status_detail",
       "size",
       "allocated",
       "free",
       "freeing",
       "fragmentation",
       "size_str",
       "allocated_str",
       "free_str",
       "freeing_str",
       "autotrim",
       "topology"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "pool_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false,
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool."
     },
     "deduplication": {
      "_name_": "deduplication",
      "title": "deduplication",
      "default": null,
      "type": "string",
      "enum": [
       null,
       "ON",
       "VERIFY",
       "OFF"
      ],
      "description": "`deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When\nVERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that\nthe blocks are identical. This should be used in special circumstances as it carries a significant overhead.",
      "nullable": true
     },
     "checksum": {
      "_name_": "checksum",
      "title": "checksum",
      "default": null,
      "type": "string",
      "enum": [
       null,
       "ON",
       "OFF",
       "FLETCHER2",
       "FLETCHER4",
       "SHA256",
       "SHA512",
       "SKEIN",
       "EDONR",
       "BLAKE3"
      ],
      "nullable": true
     },
     "encryption_options": {
      "type": "object",
      "properties": {
       "generate_key": {
        "type": "boolean",
        "_name_": "generate_key",
        "title": "generate_key",
        "default": false
       },
       "pbkdf2iters": {
        "type": "integer",
        "_name_": "pbkdf2iters",
        "title": "pbkdf2iters",
        "default": 350000
       },
       "algorithm": {
        "_name_": "algorithm",
        "title": "algorithm",
        "default": "AES-256-GCM",
        "type": "string",
        "enum": [
         "AES-128-CCM",
         "AES-192-CCM",
         "AES-256-CCM",
         "AES-128-GCM",
         "AES-192-GCM",
         "AES-256-GCM"
        ]
       },
       "passphrase": {
        "_name_": "passphrase",
        "title": "passphrase",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "key": {
        "_name_": "key",
        "title": "key",
        "default": null,
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "encryption_options",
      "title": "encryption_options",
      "default": {},
      "_attrs_order_": [
       "generate_key",
       "pbkdf2iters",
       "algorithm",
       "passphrase",
       "key"
      ],
      "description": "`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "DRAID1",
            "DRAID2",
            "DRAID3",
            "RAIDZ1",
            "RAIDZ2",
            "RAIDZ3",
            "MIRROR",
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "draid_data_disks": {
           "type": "integer",
           "_name_": "draid_data_disks",
           "title": "draid_data_disks",
           "_required_": false
          },
          "draid_spare_disks": {
           "type": "integer",
           "_name_": "draid_spare_disks",
           "title": "draid_spare_disks",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "datavdevs",
         "title": "datavdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks",
          "draid_data_disks",
          "draid_spare_disks"
         ]
        }
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "MIRROR",
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "specialvdevs",
         "title": "specialvdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "MIRROR",
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "dedupvdevs",
         "title": "dedupvdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "cachevdevs",
         "title": "cachevdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "STRIPE",
            "MIRROR"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "logvdevs",
         "title": "logvdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "spares": {
        "_name_": "spares",
        "title": "spares",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "disk",
         "title": "disk",
         "_required_": false,
         "type": "string"
        }
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "special",
       "dedup",
       "cache",
       "log",
       "spares"
      ],
      "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
     },
     "allow_duplicate_serials": {
      "type": "boolean",
      "_name_": "allow_duplicate_serials",
      "title": "allow_duplicate_serials",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "pool_create",
    "title": "pool_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "encryption",
     "deduplication",
     "checksum",
     "encryption_options",
     "topology",
     "allow_duplicate_serials"
    ]
   },
   "return_schema_of_pool_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "guid": {
      "_name_": "guid",
      "title": "guid",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "scan": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "scan",
      "title": "scan",
      "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "is_upgraded": {
      "type": "boolean",
      "_name_": "is_upgraded",
      "title": "is_upgraded"
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "warning": {
      "type": "boolean",
      "_name_": "warning",
      "title": "warning"
     },
     "status_code": {
      "_name_": "status_code",
      "title": "status_code",
      "type": "string",
      "nullable": true
     },
     "status_detail": {
      "_name_": "status_detail",
      "title": "status_detail",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size",
      "nullable": true
     },
     "allocated": {
      "type": "integer",
      "_name_": "allocated",
      "title": "allocated",
      "nullable": true
     },
     "free": {
      "type": "integer",
      "_name_": "free",
      "title": "free",
      "nullable": true
     },
     "freeing": {
      "type": "integer",
      "_name_": "freeing",
      "title": "freeing",
      "nullable": true
     },
     "fragmentation": {
      "_name_": "fragmentation",
      "title": "fragmentation",
      "type": "string",
      "nullable": true
     },
     "size_str": {
      "_name_": "size_str",
      "title": "size_str",
      "type": "string",
      "nullable": true
     },
     "allocated_str": {
      "_name_": "allocated_str",
      "title": "allocated_str",
      "type": "string",
      "nullable": true
     },
     "free_str": {
      "_name_": "free_str",
      "title": "free_str",
      "type": "string",
      "nullable": true
     },
     "freeing_str": {
      "_name_": "freeing_str",
      "title": "freeing_str",
      "type": "string",
      "nullable": true
     },
     "autotrim": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "autotrim",
      "title": "autotrim",
      "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {}
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {}
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {}
       },
       "spare": {
        "_name_": "spare",
        "title": "spare",
        "default": [],
        "type": "array",
        "items": {}
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {}
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "log",
       "cache",
       "spare",
       "special",
       "dedup"
      ],
      "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_create_returns",
    "title": "pool_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "guid",
     "status",
     "path",
     "scan",
     "is_upgraded",
     "healthy",
     "warning",
     "status_code",
     "status_detail",
     "size",
     "allocated",
     "free",
     "freeing",
     "fragmentation",
     "size_str",
     "allocated_str",
     "free_str",
     "freeing_str",
     "autotrim",
     "topology"
    ]
   },
   "pool_update": {
    "type": "object",
    "properties": {
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "DRAID1",
            "DRAID2",
            "DRAID3",
            "RAIDZ1",
            "RAIDZ2",
            "RAIDZ3",
            "MIRROR",
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          },
          "draid_data_disks": {
           "type": "integer",
           "_name_": "draid_data_disks",
           "title": "draid_data_disks",
           "_required_": false
          },
          "draid_spare_disks": {
           "type": "integer",
           "_name_": "draid_spare_disks",
           "title": "draid_spare_disks",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "datavdevs",
         "title": "datavdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks",
          "draid_data_disks",
          "draid_spare_disks"
         ]
        }
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "MIRROR",
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "specialvdevs",
         "title": "specialvdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "MIRROR",
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "dedupvdevs",
         "title": "dedupvdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "STRIPE"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "cachevdevs",
         "title": "cachevdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "type": {
           "_name_": "type",
           "title": "type",
           "_required_": true,
           "type": "string",
           "enum": [
            "STRIPE",
            "MIRROR"
           ]
          },
          "disks": {
           "_name_": "disks",
           "title": "disks",
           "default": [],
           "_required_": true,
           "type": "array",
           "items": [
            {
             "_name_": "disk",
             "title": "disk",
             "_required_": false,
             "type": "string"
            }
           ]
          }
         },
         "additionalProperties": false,
         "_name_": "logvdevs",
         "title": "logvdevs",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "type",
          "disks"
         ]
        }
       },
       "spares": {
        "_name_": "spares",
        "title": "spares",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "disk",
         "title": "disk",
         "_required_": false,
         "type": "string"
        }
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "special",
       "dedup",
       "cache",
       "log",
       "spares"
      ],
      "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
     },
     "allow_duplicate_serials": {
      "type": "boolean",
      "_name_": "allow_duplicate_serials",
      "title": "allow_duplicate_serials",
      "default": false
     },
     "autotrim": {
      "_name_": "autotrim",
      "title": "autotrim",
      "type": "string",
      "enum": [
       "ON",
       "OFF"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "pool_update",
    "title": "pool_update",
    "default": {},
    "_attrs_order_": [
     "topology",
     "allow_duplicate_serials",
     "autotrim"
    ]
   },
   "return_schema_of_pool_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update pool of `id`, adding the new topology."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n`encryption_options` specifies configuration for encryption of root dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "guid": {
      "_name_": "guid",
      "title": "guid",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "scan": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "scan",
      "title": "scan",
      "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "is_upgraded": {
      "type": "boolean",
      "_name_": "is_upgraded",
      "title": "is_upgraded"
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "warning": {
      "type": "boolean",
      "_name_": "warning",
      "title": "warning"
     },
     "status_code": {
      "_name_": "status_code",
      "title": "status_code",
      "type": "string",
      "nullable": true
     },
     "status_detail": {
      "_name_": "status_detail",
      "title": "status_detail",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size",
      "nullable": true
     },
     "allocated": {
      "type": "integer",
      "_name_": "allocated",
      "title": "allocated",
      "nullable": true
     },
     "free": {
      "type": "integer",
      "_name_": "free",
      "title": "free",
      "nullable": true
     },
     "freeing": {
      "type": "integer",
      "_name_": "freeing",
      "title": "freeing",
      "nullable": true
     },
     "fragmentation": {
      "_name_": "fragmentation",
      "title": "fragmentation",
      "type": "string",
      "nullable": true
     },
     "size_str": {
      "_name_": "size_str",
      "title": "size_str",
      "type": "string",
      "nullable": true
     },
     "allocated_str": {
      "_name_": "allocated_str",
      "title": "allocated_str",
      "type": "string",
      "nullable": true
     },
     "free_str": {
      "_name_": "free_str",
      "title": "free_str",
      "type": "string",
      "nullable": true
     },
     "freeing_str": {
      "_name_": "freeing_str",
      "title": "freeing_str",
      "type": "string",
      "nullable": true
     },
     "autotrim": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "autotrim",
      "title": "autotrim",
      "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {}
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {}
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {}
       },
       "spare": {
        "_name_": "spare",
        "title": "spare",
        "default": [],
        "type": "array",
        "items": {}
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {}
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "log",
       "cache",
       "spare",
       "special",
       "dedup"
      ],
      "description": "`topology` is a object which requires at least one `data` entry.\nAll of `data` entries (vdevs) require to be of the same type.\nExample of `topology`:"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_update_returns",
    "title": "pool_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "guid",
     "status",
     "path",
     "scan",
     "is_upgraded",
     "healthy",
     "warning",
     "status_code",
     "status_detail",
     "size",
     "allocated",
     "free",
     "freeing",
     "fragmentation",
     "size_str",
     "allocated_str",
     "free_str",
     "freeing_str",
     "autotrim",
     "topology"
    ]
   },
   "pool_attach_0": {
    "type": "integer",
    "_name_": "oid",
    "title": "oid"
   },
   "pool_attach_1": {
    "type": "object",
    "properties": {
     "target_vdev": {
      "_name_": "target_vdev",
      "title": "target_vdev",
      "type": "string"
     },
     "new_disk": {
      "_name_": "new_disk",
      "title": "new_disk",
      "type": "string"
     },
     "allow_duplicate_serials": {
      "type": "boolean",
      "_name_": "allow_duplicate_serials",
      "title": "allow_duplicate_serials",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "pool_attach",
    "title": "pool_attach",
    "default": {},
    "_attrs_order_": [
     "target_vdev",
     "new_disk",
     "allow_duplicate_serials"
    ]
   },
   "pool_attach": {
    "type": "object",
    "properties": {
     "oid": {
      "$ref": "#/components/schemas/pool_attach_0"
     },
     "pool_attach": {
      "$ref": "#/components/schemas/pool_attach_1"
     }
    }
   },
   "pool_attachments": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_attachments": {
    "_name_": "attachments",
    "title": "attachments",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "type": {
       "_name_": "type",
       "title": "type",
       "_required_": true,
       "type": "string"
      },
      "service": {
       "_name_": "service",
       "title": "service",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "attachments": {
       "_name_": "attachments",
       "title": "attachments",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "_name_": "attachment_name",
         "title": "attachment_name",
         "_required_": false,
         "type": "string"
        }
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "attachment",
     "title": "attachment",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "type",
      "service",
      "attachments"
     ]
    }
   },
   "pool_detach": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string",
      "description": "`label` is the vdev guid or device name."
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "label"
    ]
   },
   "return_schema_of_pool_detach": {
    "type": "boolean",
    "_name_": "detached",
    "title": "detached"
   },
   "pool_expand": {
    "type": "object",
    "properties": {}
   },
   "pool_export": {
    "type": "object",
    "properties": {
     "cascade": {
      "type": "boolean",
      "_name_": "cascade",
      "title": "cascade",
      "default": false,
      "description": "`cascade` will delete all attachments of the given pool (`pool.attachments`)."
     },
     "restart_services": {
      "type": "boolean",
      "_name_": "restart_services",
      "title": "restart_services",
      "default": false,
      "description": "`restart_services` will restart services that have open files on given pool."
     },
     "destroy": {
      "type": "boolean",
      "_name_": "destroy",
      "title": "destroy",
      "default": false,
      "description": "`destroy` will also PERMANENTLY destroy the pool/data."
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "cascade",
     "restart_services",
     "destroy"
    ]
   },
   "pool_filesystem_choices": {
    "_name_": "types",
    "title": "types",
    "default": [
     "FILESYSTEM",
     "VOLUME"
    ],
    "type": "array",
    "items": {
     "_name_": "type",
     "title": "type",
     "_required_": false,
     "type": "string",
     "enum": [
      "FILESYSTEM",
      "VOLUME"
     ]
    }
   },
   "return_schema_of_pool_filesystem_choices": {
    "_name_": "filesystem_choices",
    "title": "filesystem_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "filesystem_name",
     "title": "filesystem_name",
     "_required_": false,
     "type": "string"
    }
   },
   "pool_get_disks": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_get_disks": {
    "_name_": "pool_disks",
    "title": "pool_disks",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "disk",
     "title": "disk",
     "_required_": false,
     "type": "string"
    }
   },
   "pool_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "pool_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "pool_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/pool_get_instance_1"
     }
    }
   },
   "return_schema_of_pool_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "guid": {
      "_name_": "guid",
      "title": "guid",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "scan": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "scan",
      "title": "scan",
      "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "is_upgraded": {
      "type": "boolean",
      "_name_": "is_upgraded",
      "title": "is_upgraded"
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "warning": {
      "type": "boolean",
      "_name_": "warning",
      "title": "warning"
     },
     "status_code": {
      "_name_": "status_code",
      "title": "status_code",
      "type": "string",
      "nullable": true
     },
     "status_detail": {
      "_name_": "status_detail",
      "title": "status_detail",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size",
      "nullable": true
     },
     "allocated": {
      "type": "integer",
      "_name_": "allocated",
      "title": "allocated",
      "nullable": true
     },
     "free": {
      "type": "integer",
      "_name_": "free",
      "title": "free",
      "nullable": true
     },
     "freeing": {
      "type": "integer",
      "_name_": "freeing",
      "title": "freeing",
      "nullable": true
     },
     "fragmentation": {
      "_name_": "fragmentation",
      "title": "fragmentation",
      "type": "string",
      "nullable": true
     },
     "size_str": {
      "_name_": "size_str",
      "title": "size_str",
      "type": "string",
      "nullable": true
     },
     "allocated_str": {
      "_name_": "allocated_str",
      "title": "allocated_str",
      "type": "string",
      "nullable": true
     },
     "free_str": {
      "_name_": "free_str",
      "title": "free_str",
      "type": "string",
      "nullable": true
     },
     "freeing_str": {
      "_name_": "freeing_str",
      "title": "freeing_str",
      "type": "string",
      "nullable": true
     },
     "autotrim": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "autotrim",
      "title": "autotrim",
      "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {}
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {}
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {}
       },
       "spare": {
        "_name_": "spare",
        "title": "spare",
        "default": [],
        "type": "array",
        "items": {}
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {}
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "log",
       "cache",
       "spare",
       "special",
       "dedup"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "pool_entry",
    "title": "pool_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "guid",
     "status",
     "path",
     "scan",
     "is_upgraded",
     "healthy",
     "warning",
     "status_code",
     "status_detail",
     "size",
     "allocated",
     "free",
     "freeing",
     "fragmentation",
     "size_str",
     "allocated_str",
     "free_str",
     "freeing_str",
     "autotrim",
     "topology"
    ]
   },
   "pool_get_instance_by_name": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "return_schema_of_pool_get_instance_by_name": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "guid": {
      "_name_": "guid",
      "title": "guid",
      "type": "string"
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "scan": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "scan",
      "title": "scan",
      "description": "\n\nExample(s):\n```\n{\n    \"function\": null,\n    \"state\": null,\n    \"start_time\": null,\n    \"end_time\": null,\n    \"percentage\": null,\n    \"bytes_to_process\": null,\n    \"bytes_processed\": null,\n    \"bytes_issued\": null,\n    \"pause\": null,\n    \"errors\": null,\n    \"total_secs_left\": null\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "is_upgraded": {
      "type": "boolean",
      "_name_": "is_upgraded",
      "title": "is_upgraded"
     },
     "healthy": {
      "type": "boolean",
      "_name_": "healthy",
      "title": "healthy"
     },
     "warning": {
      "type": "boolean",
      "_name_": "warning",
      "title": "warning"
     },
     "status_code": {
      "_name_": "status_code",
      "title": "status_code",
      "type": "string",
      "nullable": true
     },
     "status_detail": {
      "_name_": "status_detail",
      "title": "status_detail",
      "type": "string",
      "nullable": true
     },
     "size": {
      "type": "integer",
      "_name_": "size",
      "title": "size",
      "nullable": true
     },
     "allocated": {
      "type": "integer",
      "_name_": "allocated",
      "title": "allocated",
      "nullable": true
     },
     "free": {
      "type": "integer",
      "_name_": "free",
      "title": "free",
      "nullable": true
     },
     "freeing": {
      "type": "integer",
      "_name_": "freeing",
      "title": "freeing",
      "nullable": true
     },
     "fragmentation": {
      "_name_": "fragmentation",
      "title": "fragmentation",
      "type": "string",
      "nullable": true
     },
     "size_str": {
      "_name_": "size_str",
      "title": "size_str",
      "type": "string",
      "nullable": true
     },
     "allocated_str": {
      "_name_": "allocated_str",
      "title": "allocated_str",
      "type": "string",
      "nullable": true
     },
     "free_str": {
      "_name_": "free_str",
      "title": "free_str",
      "type": "string",
      "nullable": true
     },
     "freeing_str": {
      "_name_": "freeing_str",
      "title": "freeing_str",
      "type": "string",
      "nullable": true
     },
     "autotrim": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "autotrim",
      "title": "autotrim",
      "description": "\n\nExample(s):\n```\n{\n    \"parsed\": \"off\",\n    \"rawvalue\": \"off\",\n    \"source\": \"DEFAULT\",\n    \"value\": \"off\"\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     },
     "topology": {
      "type": "object",
      "properties": {
       "data": {
        "_name_": "data",
        "title": "data",
        "default": [],
        "type": "array",
        "items": {}
       },
       "log": {
        "_name_": "log",
        "title": "log",
        "default": [],
        "type": "array",
        "items": {}
       },
       "cache": {
        "_name_": "cache",
        "title": "cache",
        "default": [],
        "type": "array",
        "items": {}
       },
       "spare": {
        "_name_": "spare",
        "title": "spare",
        "default": [],
        "type": "array",
        "items": {}
       },
       "special": {
        "_name_": "special",
        "title": "special",
        "default": [],
        "type": "array",
        "items": {}
       },
       "dedup": {
        "_name_": "dedup",
        "title": "dedup",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "topology",
      "title": "topology",
      "default": {},
      "_attrs_order_": [
       "data",
       "log",
       "cache",
       "spare",
       "special",
       "dedup"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "pool_entry",
    "title": "pool_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "guid",
     "status",
     "path",
     "scan",
     "is_upgraded",
     "healthy",
     "warning",
     "status_code",
     "status_detail",
     "size",
     "allocated",
     "free",
     "freeing",
     "fragmentation",
     "size_str",
     "allocated_str",
     "free_str",
     "freeing_str",
     "autotrim",
     "topology"
    ]
   },
   "return_schema_of_pool_import_find": {
    "_name_": "pools_available_for_import",
    "title": "Pools Available For Import",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "guid": {
       "_name_": "guid",
       "title": "guid",
       "_required_": true,
       "type": "string"
      },
      "status": {
       "_name_": "status",
       "title": "status",
       "_required_": true,
       "type": "string"
      },
      "hostname": {
       "_name_": "hostname",
       "title": "hostname",
       "_required_": true,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "pool_info",
     "title": "pool_info",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "guid",
      "status",
      "hostname"
     ]
    }
   },
   "pool_import_pool": {
    "type": "object",
    "properties": {
     "guid": {
      "_name_": "guid",
      "title": "guid",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "If a `name` is specified the pool will be imported using that new name."
     },
     "enable_attachments": {
      "type": "boolean",
      "_name_": "enable_attachments",
      "title": "enable_attachments",
      "description": "If `enable_attachments` is set to true, attachments that were disabled during pool export will be\nre-enabled."
     }
    },
    "additionalProperties": false,
    "_name_": "pool_import",
    "title": "pool_import",
    "default": {},
    "_attrs_order_": [
     "guid",
     "name",
     "enable_attachments"
    ]
   },
   "return_schema_of_pool_import_pool": {
    "type": "boolean",
    "_name_": "successful_import",
    "title": "successful_import"
   },
   "pool_is_upgraded": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_is_upgraded": {
    "type": "boolean",
    "_name_": "pool_is_upgraded",
    "title": "pool_is_upgraded"
   },
   "pool_offline": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string",
      "description": "`label` is the vdev guid or device name."
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "label"
    ]
   },
   "return_schema_of_pool_offline": {
    "type": "boolean",
    "_name_": "offline_successful",
    "title": "offline_successful"
   },
   "pool_online": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string",
      "description": "`label` is the vdev guid or device name."
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "label"
    ]
   },
   "return_schema_of_pool_online": {
    "type": "boolean",
    "_name_": "online_successful",
    "title": "online_successful"
   },
   "pool_processes": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_processes": {
    "_name_": "processes",
    "title": "processes",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "pid": {
       "type": "integer",
       "_name_": "pid",
       "title": "pid",
       "_required_": true
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "service": {
       "_name_": "service",
       "title": "service",
       "_required_": false,
       "type": "string"
      },
      "cmdline": {
       "_name_": "cmdline",
       "title": "cmdline",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "process",
     "title": "process",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "pid",
      "name",
      "service",
      "cmdline"
     ]
    }
   },
   "pool_remove": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string",
      "description": "`label` is the vdev guid or device name."
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "label"
    ]
   },
   "pool_replace": {
    "type": "object",
    "properties": {
     "label": {
      "_name_": "label",
      "title": "label",
      "type": "string",
      "description": "`label` is the ZFS guid or a device name"
     },
     "disk": {
      "_name_": "disk",
      "title": "disk",
      "type": "string",
      "description": "`disk` is the identifier of a disk"
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     },
     "preserve_settings": {
      "type": "boolean",
      "_name_": "preserve_settings",
      "title": "preserve_settings",
      "default": true,
      "description": "If `preserve_settings` is true, then settings (power management, S.M.A.R.T., etc.) of a disk being replaced\nwill be applied to a new disk."
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "label",
     "disk",
     "force",
     "preserve_settings"
    ]
   },
   "return_schema_of_pool_replace": {
    "type": "boolean",
    "_name_": "replaced_successfully",
    "title": "replaced_successfully"
   },
   "pool_scrub": {
    "_name_": "action",
    "title": "action",
    "type": "string",
    "enum": [
     "START",
     "STOP",
     "PAUSE"
    ],
    "description": "`action` can be either of \"START\", \"STOP\" or \"PAUSE\"."
   },
   "pool_upgrade": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_upgrade": {
    "type": "boolean",
    "_name_": "upgraded",
    "title": "upgraded"
   },
   "pool_validate_name": {
    "_name_": "pool_name",
    "title": "pool_name",
    "type": "string"
   },
   "return_schema_of_pool_dataset_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string"
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "pool": {
          "_name_": "pool",
          "title": "pool",
          "_required_": true,
          "type": "string"
         },
         "encrypted": {
          "type": "boolean",
          "_name_": "encrypted",
          "title": "encrypted",
          "_required_": false
         },
         "encryption_root": {
          "_name_": "encryption_root",
          "title": "encryption_root",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "key_loaded": {
          "type": [
           "boolean",
           "null"
          ],
          "_name_": "key_loaded",
          "title": "key_loaded",
          "_required_": false
         },
         "children": {
          "_name_": "children",
          "title": "children",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "user_properties": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "user_properties",
          "title": "user_properties",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "_required_": false
         },
         "comments": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "comments",
          "title": "comments",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "quota_warning": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "quota_warning",
          "title": "quota_warning",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "quota_critical": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "quota_critical",
          "title": "quota_critical",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "refquota_warning": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "refquota_warning",
          "title": "refquota_warning",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "refquota_critical": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "refquota_critical",
          "title": "refquota_critical",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "managedby": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "managedby",
          "title": "managedby",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "deduplication": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "deduplication",
          "title": "deduplication",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "aclmode": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "aclmode",
          "title": "aclmode",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "acltype": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "acltype",
          "title": "acltype",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "xattr": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "xattr",
          "title": "xattr",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "atime": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "atime",
          "title": "atime",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "casesensitivity": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "casesensitivity",
          "title": "casesensitivity",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "checksum": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "checksum",
          "title": "checksum",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "exec": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "exec",
          "title": "exec",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "sync": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "sync",
          "title": "sync",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "compression": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "compression",
          "title": "compression",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "compressratio": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "compressratio",
          "title": "compressratio",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "origin": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "origin",
          "title": "origin",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "quota": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "quota",
          "title": "quota",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "refquota": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "refquota",
          "title": "refquota",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "reservation": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "reservation",
          "title": "reservation",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "refreservation": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "refreservation",
          "title": "refreservation",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "copies": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "copies",
          "title": "copies",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "snapdir": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "snapdir",
          "title": "snapdir",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "readonly": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "readonly",
          "title": "readonly",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "recordsize": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "recordsize",
          "title": "recordsize",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "sparse": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "sparse",
          "title": "sparse",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "volsize": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "volsize",
          "title": "volsize",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "volblocksize": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "volblocksize",
          "title": "volblocksize",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "key_format": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "key_format",
          "title": "key_format",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "encryption_algorithm": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "encryption_algorithm",
          "title": "encryption_algorithm",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "used": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "used",
          "title": "used",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "usedbychildren": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "usedbychildren",
          "title": "usedbychildren",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "usedbydataset": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "usedbydataset",
          "title": "usedbydataset",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "usedbyrefreservation": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "usedbyrefreservation",
          "title": "usedbyrefreservation",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "usedbysnapshots": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "usedbysnapshots",
          "title": "usedbysnapshots",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "available": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "available",
          "title": "available",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "special_small_block_size": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "special_small_block_size",
          "title": "special_small_block_size",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "pbkdf2iters": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "pbkdf2iters",
          "title": "pbkdf2iters",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "creation": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "creation",
          "title": "creation",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "snapdev": {
          "type": "object",
          "properties": {
           "parsed": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "parsed",
            "title": "parsed",
            "_required_": false
           },
           "rawvalue": {
            "_name_": "rawvalue",
            "title": "rawvalue",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "value": {
            "_name_": "value",
            "title": "value",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source": {
            "_name_": "source",
            "title": "source",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "source_info": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "type": "integer"
             },
             {
              "type": "boolean"
             },
             {
              "type": "object"
             },
             {
              "type": "array"
             }
            ],
            "nullable": true,
            "_name_": "source_info",
            "title": "source_info",
            "_required_": false
           }
          },
          "additionalProperties": false,
          "_name_": "snapdev",
          "title": "snapdev",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "parsed",
           "rawvalue",
           "value",
           "source",
           "source_info"
          ]
         },
         "mountpoint": {
          "_name_": "mountpoint",
          "title": "mountpoint",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "pool_dataset_entry",
        "title": "pool_dataset_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "type",
         "name",
         "pool",
         "encrypted",
         "encryption_root",
         "key_loaded",
         "children",
         "user_properties",
         "locked",
         "comments",
         "quota_warning",
         "quota_critical",
         "refquota_warning",
         "refquota_critical",
         "managedby",
         "deduplication",
         "aclmode",
         "acltype",
         "xattr",
         "atime",
         "casesensitivity",
         "checksum",
         "exec",
         "sync",
         "compression",
         "compressratio",
         "origin",
         "quota",
         "refquota",
         "reservation",
         "refreservation",
         "copies",
         "snapdir",
         "readonly",
         "recordsize",
         "sparse",
         "volsize",
         "volblocksize",
         "key_format",
         "encryption_algorithm",
         "used",
         "usedbychildren",
         "usedbydataset",
         "usedbyrefreservation",
         "usedbysnapshots",
         "available",
         "special_small_block_size",
         "pbkdf2iters",
         "creation",
         "snapdev",
         "mountpoint"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "pool": {
        "_name_": "pool",
        "title": "pool",
        "_required_": true,
        "type": "string"
       },
       "encrypted": {
        "type": "boolean",
        "_name_": "encrypted",
        "title": "encrypted",
        "_required_": false
       },
       "encryption_root": {
        "_name_": "encryption_root",
        "title": "encryption_root",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "key_loaded": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "key_loaded",
        "title": "key_loaded",
        "_required_": false
       },
       "children": {
        "_name_": "children",
        "title": "children",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "user_properties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "user_properties",
        "title": "user_properties",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       },
       "comments": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "comments",
        "title": "comments",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "quota_warning": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "quota_warning",
        "title": "quota_warning",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "quota_critical": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "quota_critical",
        "title": "quota_critical",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refquota_warning": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refquota_warning",
        "title": "refquota_warning",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refquota_critical": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refquota_critical",
        "title": "refquota_critical",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "managedby": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "managedby",
        "title": "managedby",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "deduplication": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "deduplication",
        "title": "deduplication",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "aclmode": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "aclmode",
        "title": "aclmode",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "acltype": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "acltype",
        "title": "acltype",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "xattr": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "xattr",
        "title": "xattr",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "atime": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "atime",
        "title": "atime",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "casesensitivity": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "casesensitivity",
        "title": "casesensitivity",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "checksum": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "checksum",
        "title": "checksum",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "exec": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "exec",
        "title": "exec",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "sync": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "sync",
        "title": "sync",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "compression": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "compression",
        "title": "compression",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "compressratio": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "compressratio",
        "title": "compressratio",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "origin": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "origin",
        "title": "origin",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "quota": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "quota",
        "title": "quota",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refquota": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refquota",
        "title": "refquota",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "reservation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "reservation",
        "title": "reservation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refreservation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refreservation",
        "title": "refreservation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "copies": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "copies",
        "title": "copies",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "snapdir": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "snapdir",
        "title": "snapdir",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "readonly": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "readonly",
        "title": "readonly",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "recordsize": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "recordsize",
        "title": "recordsize",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "sparse": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "sparse",
        "title": "sparse",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "volsize": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "volsize",
        "title": "volsize",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "volblocksize": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "volblocksize",
        "title": "volblocksize",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "key_format": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "key_format",
        "title": "key_format",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "encryption_algorithm": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "encryption_algorithm",
        "title": "encryption_algorithm",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "used": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "used",
        "title": "used",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbychildren": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbychildren",
        "title": "usedbychildren",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbydataset": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbydataset",
        "title": "usedbydataset",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbyrefreservation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbyrefreservation",
        "title": "usedbyrefreservation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbysnapshots": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbysnapshots",
        "title": "usedbysnapshots",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "available": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "available",
        "title": "available",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "special_small_block_size": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "special_small_block_size",
        "title": "special_small_block_size",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "pbkdf2iters": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "pbkdf2iters",
        "title": "pbkdf2iters",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "creation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "creation",
        "title": "creation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "snapdev": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "snapdev",
        "title": "snapdev",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "mountpoint": {
        "_name_": "mountpoint",
        "title": "mountpoint",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "pool_dataset_entry",
      "title": "pool_dataset_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "pool",
       "encrypted",
       "encryption_root",
       "key_loaded",
       "children",
       "user_properties",
       "locked",
       "comments",
       "quota_warning",
       "quota_critical",
       "refquota_warning",
       "refquota_critical",
       "managedby",
       "deduplication",
       "aclmode",
       "acltype",
       "xattr",
       "atime",
       "casesensitivity",
       "checksum",
       "exec",
       "sync",
       "compression",
       "compressratio",
       "origin",
       "quota",
       "refquota",
       "reservation",
       "refreservation",
       "copies",
       "snapdir",
       "readonly",
       "recordsize",
       "sparse",
       "volsize",
       "volblocksize",
       "key_format",
       "encryption_algorithm",
       "used",
       "usedbychildren",
       "usedbydataset",
       "usedbyrefreservation",
       "usedbysnapshots",
       "available",
       "special_small_block_size",
       "pbkdf2iters",
       "creation",
       "snapdev",
       "mountpoint"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "pool": {
        "_name_": "pool",
        "title": "pool",
        "_required_": true,
        "type": "string"
       },
       "encrypted": {
        "type": "boolean",
        "_name_": "encrypted",
        "title": "encrypted",
        "_required_": false
       },
       "encryption_root": {
        "_name_": "encryption_root",
        "title": "encryption_root",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "key_loaded": {
        "type": [
         "boolean",
         "null"
        ],
        "_name_": "key_loaded",
        "title": "key_loaded",
        "_required_": false
       },
       "children": {
        "_name_": "children",
        "title": "children",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "user_properties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "user_properties",
        "title": "user_properties",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       },
       "comments": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "comments",
        "title": "comments",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "quota_warning": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "quota_warning",
        "title": "quota_warning",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "quota_critical": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "quota_critical",
        "title": "quota_critical",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refquota_warning": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refquota_warning",
        "title": "refquota_warning",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refquota_critical": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refquota_critical",
        "title": "refquota_critical",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "managedby": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "managedby",
        "title": "managedby",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "deduplication": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "deduplication",
        "title": "deduplication",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "aclmode": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "aclmode",
        "title": "aclmode",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "acltype": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "acltype",
        "title": "acltype",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "xattr": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "xattr",
        "title": "xattr",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "atime": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "atime",
        "title": "atime",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "casesensitivity": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "casesensitivity",
        "title": "casesensitivity",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "checksum": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "checksum",
        "title": "checksum",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "exec": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "exec",
        "title": "exec",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "sync": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "sync",
        "title": "sync",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "compression": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "compression",
        "title": "compression",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "compressratio": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "compressratio",
        "title": "compressratio",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "origin": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "origin",
        "title": "origin",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "quota": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "quota",
        "title": "quota",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refquota": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refquota",
        "title": "refquota",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "reservation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "reservation",
        "title": "reservation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "refreservation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "refreservation",
        "title": "refreservation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "copies": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "copies",
        "title": "copies",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "snapdir": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "snapdir",
        "title": "snapdir",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "readonly": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "readonly",
        "title": "readonly",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "recordsize": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "recordsize",
        "title": "recordsize",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "sparse": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "sparse",
        "title": "sparse",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "volsize": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "volsize",
        "title": "volsize",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "volblocksize": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "volblocksize",
        "title": "volblocksize",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "key_format": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "key_format",
        "title": "key_format",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "encryption_algorithm": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "encryption_algorithm",
        "title": "encryption_algorithm",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "used": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "used",
        "title": "used",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbychildren": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbychildren",
        "title": "usedbychildren",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbydataset": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbydataset",
        "title": "usedbydataset",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbyrefreservation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbyrefreservation",
        "title": "usedbyrefreservation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "usedbysnapshots": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "usedbysnapshots",
        "title": "usedbysnapshots",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "available": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "available",
        "title": "available",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "special_small_block_size": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "special_small_block_size",
        "title": "special_small_block_size",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "pbkdf2iters": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "pbkdf2iters",
        "title": "pbkdf2iters",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "creation": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "creation",
        "title": "creation",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "snapdev": {
        "type": "object",
        "properties": {
         "parsed": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "parsed",
          "title": "parsed",
          "_required_": false
         },
         "rawvalue": {
          "_name_": "rawvalue",
          "title": "rawvalue",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source": {
          "_name_": "source",
          "title": "source",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "source_info": {
          "anyOf": [
           {
            "type": "string"
           },
           {
            "type": "integer"
           },
           {
            "type": "boolean"
           },
           {
            "type": "object"
           },
           {
            "type": "array"
           }
          ],
          "nullable": true,
          "_name_": "source_info",
          "title": "source_info",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "snapdev",
        "title": "snapdev",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "parsed",
         "rawvalue",
         "value",
         "source",
         "source_info"
        ]
       },
       "mountpoint": {
        "_name_": "mountpoint",
        "title": "mountpoint",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "pool_dataset_entry",
      "title": "pool_dataset_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "pool",
       "encrypted",
       "encryption_root",
       "key_loaded",
       "children",
       "user_properties",
       "locked",
       "comments",
       "quota_warning",
       "quota_critical",
       "refquota_warning",
       "refquota_critical",
       "managedby",
       "deduplication",
       "aclmode",
       "acltype",
       "xattr",
       "atime",
       "casesensitivity",
       "checksum",
       "exec",
       "sync",
       "compression",
       "compressratio",
       "origin",
       "quota",
       "refquota",
       "reservation",
       "refreservation",
       "copies",
       "snapdir",
       "readonly",
       "recordsize",
       "sparse",
       "volsize",
       "volblocksize",
       "key_format",
       "encryption_algorithm",
       "used",
       "usedbychildren",
       "usedbydataset",
       "usedbyrefreservation",
       "usedbysnapshots",
       "available",
       "special_small_block_size",
       "pbkdf2iters",
       "creation",
       "snapdev",
       "mountpoint"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "pool_dataset_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "FILESYSTEM",
      "type": "string",
      "enum": [
       "FILESYSTEM",
       "VOLUME"
      ]
     },
     "volsize": {
      "type": "integer",
      "_name_": "volsize",
      "title": "volsize",
      "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size."
     },
     "volblocksize": {
      "_name_": "volblocksize",
      "title": "volblocksize",
      "type": "string",
      "enum": [
       "512",
       "512B",
       "1K",
       "2K",
       "4K",
       "8K",
       "16K",
       "32K",
       "64K",
       "128K"
      ],
      "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "sparse": {
      "type": "boolean",
      "_name_": "sparse",
      "title": "sparse",
      "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "force_size": {
      "type": "boolean",
      "_name_": "force_size",
      "title": "force_size"
     },
     "comments": {
      "_name_": "comments",
      "title": "comments",
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "sync": {
      "_name_": "sync",
      "title": "sync",
      "enum": [
       "STANDARD",
       "ALWAYS",
       "DISABLED"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "snapdev": {
      "_name_": "snapdev",
      "title": "snapdev",
      "enum": [
       "HIDDEN",
       "VISIBLE"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "compression": {
      "_name_": "compression",
      "title": "compression",
      "enum": [
       "ON",
       "OFF",
       "LZ4",
       "GZIP",
       "GZIP-1",
       "GZIP-9",
       "ZSTD",
       "ZSTD-FAST",
       "ZLE",
       "LZJB",
       "ZSTD-1",
       "ZSTD-2",
       "ZSTD-3",
       "ZSTD-4",
       "ZSTD-5",
       "ZSTD-6",
       "ZSTD-7",
       "ZSTD-8",
       "ZSTD-9",
       "ZSTD-10",
       "ZSTD-11",
       "ZSTD-12",
       "ZSTD-13",
       "ZSTD-14",
       "ZSTD-15",
       "ZSTD-16",
       "ZSTD-17",
       "ZSTD-18",
       "ZSTD-19",
       "ZSTD-FAST-1",
       "ZSTD-FAST-2",
       "ZSTD-FAST-3",
       "ZSTD-FAST-4",
       "ZSTD-FAST-5",
       "ZSTD-FAST-6",
       "ZSTD-FAST-7",
       "ZSTD-FAST-8",
       "ZSTD-FAST-9",
       "ZSTD-FAST-10",
       "ZSTD-FAST-20",
       "ZSTD-FAST-30",
       "ZSTD-FAST-40",
       "ZSTD-FAST-50",
       "ZSTD-FAST-60",
       "ZSTD-FAST-70",
       "ZSTD-FAST-80",
       "ZSTD-FAST-90",
       "ZSTD-FAST-100",
       "ZSTD-FAST-500",
       "ZSTD-FAST-1000"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "atime": {
      "_name_": "atime",
      "title": "atime",
      "enum": [
       "ON",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "exec": {
      "_name_": "exec",
      "title": "exec",
      "enum": [
       "ON",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "managedby": {
      "_name_": "managedby",
      "title": "managedby",
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "quota": {
      "type": "integer",
      "_name_": "quota",
      "title": "quota",
      "nullable": true
     },
     "quota_warning": {
      "_name_": "quota_warning",
      "title": "quota_warning",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "quota_critical": {
      "_name_": "quota_critical",
      "title": "quota_critical",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "refquota": {
      "type": "integer",
      "_name_": "refquota",
      "title": "refquota",
      "nullable": true
     },
     "refquota_warning": {
      "_name_": "refquota_warning",
      "title": "refquota_warning",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "refquota_critical": {
      "_name_": "refquota_critical",
      "title": "refquota_critical",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "reservation": {
      "type": "integer",
      "_name_": "reservation",
      "title": "reservation"
     },
     "refreservation": {
      "type": "integer",
      "_name_": "refreservation",
      "title": "refreservation"
     },
     "special_small_block_size": {
      "_name_": "special_small_block_size",
      "title": "special_small_block_size",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "copies": {
      "_name_": "copies",
      "title": "copies",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "snapdir": {
      "_name_": "snapdir",
      "title": "snapdir",
      "enum": [
       "VISIBLE",
       "HIDDEN"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "deduplication": {
      "_name_": "deduplication",
      "title": "deduplication",
      "enum": [
       "ON",
       "VERIFY",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "checksum": {
      "_name_": "checksum",
      "title": "checksum",
      "enum": [
       "ON",
       "OFF",
       "FLETCHER2",
       "FLETCHER4",
       "SHA256",
       "SHA512",
       "SKEIN",
       "EDONR",
       "BLAKE3"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "readonly": {
      "_name_": "readonly",
      "title": "readonly",
      "enum": [
       "ON",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "recordsize": {
      "_name_": "recordsize",
      "title": "recordsize",
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "casesensitivity": {
      "_name_": "casesensitivity",
      "title": "casesensitivity",
      "enum": [
       "SENSITIVE",
       "INSENSITIVE"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "aclmode": {
      "_name_": "aclmode",
      "title": "aclmode",
      "enum": [
       "PASSTHROUGH",
       "RESTRICTED",
       "DISCARD"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "enum": [
       "OFF",
       "NFSV4",
       "POSIX"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "share_type": {
      "_name_": "share_type",
      "title": "share_type",
      "default": "GENERIC",
      "type": "string",
      "enum": [
       "GENERIC",
       "MULTIPROTOCOL",
       "NFS",
       "SMB",
       "APPS"
      ]
     },
     "xattr": {
      "_name_": "xattr",
      "title": "xattr",
      "default": "SA",
      "enum": [
       "ON",
       "SA"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "encryption_options": {
      "type": "object",
      "properties": {
       "generate_key": {
        "type": "boolean",
        "_name_": "generate_key",
        "title": "generate_key",
        "default": false
       },
       "pbkdf2iters": {
        "type": "integer",
        "_name_": "pbkdf2iters",
        "title": "pbkdf2iters",
        "default": 350000
       },
       "algorithm": {
        "_name_": "algorithm",
        "title": "algorithm",
        "default": "AES-256-GCM",
        "type": "string",
        "enum": [
         "AES-128-CCM",
         "AES-192-CCM",
         "AES-256-CCM",
         "AES-128-GCM",
         "AES-192-GCM",
         "AES-256-GCM"
        ]
       },
       "passphrase": {
        "_name_": "passphrase",
        "title": "passphrase",
        "default": null,
        "type": "string",
        "nullable": true
       },
       "key": {
        "_name_": "key",
        "title": "key",
        "default": null,
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "encryption_options",
      "title": "encryption_options",
      "default": {},
      "_attrs_order_": [
       "generate_key",
       "pbkdf2iters",
       "algorithm",
       "passphrase",
       "key"
      ],
      "description": "`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false,
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset."
     },
     "inherit_encryption": {
      "type": "boolean",
      "_name_": "inherit_encryption",
      "title": "inherit_encryption",
      "default": true
     },
     "user_properties": {
      "_name_": "user_properties",
      "title": "user_properties",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "key": {
         "_name_": "key",
         "title": "key",
         "_required_": true,
         "type": "string"
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "user_property",
       "title": "user_property",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "key",
        "value"
       ]
      }
     },
     "create_ancestors": {
      "type": "boolean",
      "_name_": "create_ancestors",
      "title": "create_ancestors",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_create",
    "title": "pool_dataset_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "type",
     "volsize",
     "volblocksize",
     "sparse",
     "force_size",
     "comments",
     "sync",
     "snapdev",
     "compression",
     "atime",
     "exec",
     "managedby",
     "quota",
     "quota_warning",
     "quota_critical",
     "refquota",
     "refquota_warning",
     "refquota_critical",
     "reservation",
     "refreservation",
     "special_small_block_size",
     "copies",
     "snapdir",
     "deduplication",
     "checksum",
     "readonly",
     "recordsize",
     "casesensitivity",
     "aclmode",
     "acltype",
     "share_type",
     "xattr",
     "encryption_options",
     "encryption",
     "inherit_encryption",
     "user_properties",
     "create_ancestors"
    ]
   },
   "return_schema_of_pool_dataset_create": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string"
     },
     "encrypted": {
      "type": "boolean",
      "_name_": "encrypted",
      "title": "encrypted"
     },
     "encryption_root": {
      "_name_": "encryption_root",
      "title": "encryption_root",
      "type": "string",
      "nullable": true
     },
     "key_loaded": {
      "type": "boolean",
      "_name_": "key_loaded",
      "title": "key_loaded",
      "nullable": true
     },
     "children": {
      "_name_": "children",
      "title": "children",
      "default": [],
      "type": "array",
      "items": {}
     },
     "user_properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "user_properties",
      "title": "user_properties",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     },
     "comments": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "comments",
      "title": "comments",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota_warning": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota_warning",
      "title": "quota_warning",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota_critical": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota_critical",
      "title": "quota_critical",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota_warning": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota_warning",
      "title": "refquota_warning",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota_critical": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota_critical",
      "title": "refquota_critical",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "managedby": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "managedby",
      "title": "managedby",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "deduplication": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "deduplication",
      "title": "deduplication",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "aclmode": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "aclmode",
      "title": "aclmode",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "acltype": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "acltype",
      "title": "acltype",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "xattr": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "xattr",
      "title": "xattr",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "atime": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "atime",
      "title": "atime",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "casesensitivity": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "casesensitivity",
      "title": "casesensitivity",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "checksum": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "checksum",
      "title": "checksum",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "exec": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "exec",
      "title": "exec",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "sync": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "sync",
      "title": "sync",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "compression": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "compression",
      "title": "compression",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "compressratio": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "compressratio",
      "title": "compressratio",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "origin": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "origin",
      "title": "origin",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota",
      "title": "quota",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota",
      "title": "refquota",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "reservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "reservation",
      "title": "reservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refreservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refreservation",
      "title": "refreservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "copies": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "copies",
      "title": "copies",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "snapdir": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "snapdir",
      "title": "snapdir",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "readonly": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "readonly",
      "title": "readonly",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "recordsize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "recordsize",
      "title": "recordsize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "sparse": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "sparse",
      "title": "sparse",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ],
      "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "volsize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "volsize",
      "title": "volsize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ],
      "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size."
     },
     "volblocksize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "volblocksize",
      "title": "volblocksize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ],
      "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "key_format": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "key_format",
      "title": "key_format",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "encryption_algorithm": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "encryption_algorithm",
      "title": "encryption_algorithm",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "used": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "used",
      "title": "used",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbychildren": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbychildren",
      "title": "usedbychildren",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbydataset": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbydataset",
      "title": "usedbydataset",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbyrefreservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbyrefreservation",
      "title": "usedbyrefreservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbysnapshots": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbysnapshots",
      "title": "usedbysnapshots",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "available": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "available",
      "title": "available",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "special_small_block_size": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "special_small_block_size",
      "title": "special_small_block_size",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "pbkdf2iters": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "pbkdf2iters",
      "title": "pbkdf2iters",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "creation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "creation",
      "title": "creation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "snapdev": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "snapdev",
      "title": "snapdev",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "mountpoint": {
      "_name_": "mountpoint",
      "title": "mountpoint",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_create_returns",
    "title": "pool_dataset_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "pool",
     "encrypted",
     "encryption_root",
     "key_loaded",
     "children",
     "user_properties",
     "locked",
     "comments",
     "quota_warning",
     "quota_critical",
     "refquota_warning",
     "refquota_critical",
     "managedby",
     "deduplication",
     "aclmode",
     "acltype",
     "xattr",
     "atime",
     "casesensitivity",
     "checksum",
     "exec",
     "sync",
     "compression",
     "compressratio",
     "origin",
     "quota",
     "refquota",
     "reservation",
     "refreservation",
     "copies",
     "snapdir",
     "readonly",
     "recordsize",
     "sparse",
     "volsize",
     "volblocksize",
     "key_format",
     "encryption_algorithm",
     "used",
     "usedbychildren",
     "usedbydataset",
     "usedbyrefreservation",
     "usedbysnapshots",
     "available",
     "special_small_block_size",
     "pbkdf2iters",
     "creation",
     "snapdev",
     "mountpoint"
    ]
   },
   "pool_dataset_delete": {
    "type": "object",
    "properties": {
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false,
      "description": "`recursive` will also delete/destroy all children datasets.\nWhen root dataset is specified as `id` with `recursive`, it will destroy all the children of the\nroot dataset present leaving root dataset intact."
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false,
      "description": "`force` will force delete busy datasets."
     }
    },
    "additionalProperties": false,
    "_name_": "dataset_delete",
    "title": "dataset_delete",
    "default": {},
    "_attrs_order_": [
     "recursive",
     "force"
    ]
   },
   "return_schema_of_pool_dataset_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "pool_dataset_update": {
    "type": "object",
    "properties": {
     "volsize": {
      "type": "integer",
      "_name_": "volsize",
      "title": "volsize",
      "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.\n`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "force_size": {
      "type": "boolean",
      "_name_": "force_size",
      "title": "force_size"
     },
     "comments": {
      "_name_": "comments",
      "title": "comments",
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "sync": {
      "_name_": "sync",
      "title": "sync",
      "enum": [
       "STANDARD",
       "ALWAYS",
       "DISABLED"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "snapdev": {
      "_name_": "snapdev",
      "title": "snapdev",
      "enum": [
       "HIDDEN",
       "VISIBLE"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "compression": {
      "_name_": "compression",
      "title": "compression",
      "enum": [
       "ON",
       "OFF",
       "LZ4",
       "GZIP",
       "GZIP-1",
       "GZIP-9",
       "ZSTD",
       "ZSTD-FAST",
       "ZLE",
       "LZJB",
       "ZSTD-1",
       "ZSTD-2",
       "ZSTD-3",
       "ZSTD-4",
       "ZSTD-5",
       "ZSTD-6",
       "ZSTD-7",
       "ZSTD-8",
       "ZSTD-9",
       "ZSTD-10",
       "ZSTD-11",
       "ZSTD-12",
       "ZSTD-13",
       "ZSTD-14",
       "ZSTD-15",
       "ZSTD-16",
       "ZSTD-17",
       "ZSTD-18",
       "ZSTD-19",
       "ZSTD-FAST-1",
       "ZSTD-FAST-2",
       "ZSTD-FAST-3",
       "ZSTD-FAST-4",
       "ZSTD-FAST-5",
       "ZSTD-FAST-6",
       "ZSTD-FAST-7",
       "ZSTD-FAST-8",
       "ZSTD-FAST-9",
       "ZSTD-FAST-10",
       "ZSTD-FAST-20",
       "ZSTD-FAST-30",
       "ZSTD-FAST-40",
       "ZSTD-FAST-50",
       "ZSTD-FAST-60",
       "ZSTD-FAST-70",
       "ZSTD-FAST-80",
       "ZSTD-FAST-90",
       "ZSTD-FAST-100",
       "ZSTD-FAST-500",
       "ZSTD-FAST-1000"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "atime": {
      "_name_": "atime",
      "title": "atime",
      "enum": [
       "ON",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "exec": {
      "_name_": "exec",
      "title": "exec",
      "enum": [
       "ON",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "managedby": {
      "_name_": "managedby",
      "title": "managedby",
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "quota": {
      "type": "integer",
      "_name_": "quota",
      "title": "quota",
      "nullable": true
     },
     "quota_warning": {
      "_name_": "quota_warning",
      "title": "quota_warning",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "quota_critical": {
      "_name_": "quota_critical",
      "title": "quota_critical",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "refquota": {
      "type": "integer",
      "_name_": "refquota",
      "title": "refquota",
      "nullable": true
     },
     "refquota_warning": {
      "_name_": "refquota_warning",
      "title": "refquota_warning",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "refquota_critical": {
      "_name_": "refquota_critical",
      "title": "refquota_critical",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "reservation": {
      "type": "integer",
      "_name_": "reservation",
      "title": "reservation"
     },
     "refreservation": {
      "type": "integer",
      "_name_": "refreservation",
      "title": "refreservation"
     },
     "special_small_block_size": {
      "_name_": "special_small_block_size",
      "title": "special_small_block_size",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "copies": {
      "_name_": "copies",
      "title": "copies",
      "nullable": false,
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "snapdir": {
      "_name_": "snapdir",
      "title": "snapdir",
      "enum": [
       "VISIBLE",
       "HIDDEN"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "deduplication": {
      "_name_": "deduplication",
      "title": "deduplication",
      "enum": [
       "ON",
       "VERIFY",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "checksum": {
      "_name_": "checksum",
      "title": "checksum",
      "enum": [
       "ON",
       "OFF",
       "FLETCHER2",
       "FLETCHER4",
       "SHA256",
       "SHA512",
       "SKEIN",
       "EDONR",
       "BLAKE3"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "readonly": {
      "_name_": "readonly",
      "title": "readonly",
      "enum": [
       "ON",
       "OFF"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "recordsize": {
      "_name_": "recordsize",
      "title": "recordsize",
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "aclmode": {
      "_name_": "aclmode",
      "title": "aclmode",
      "enum": [
       "PASSTHROUGH",
       "RESTRICTED",
       "DISCARD"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "acltype": {
      "_name_": "acltype",
      "title": "acltype",
      "enum": [
       "OFF",
       "NFSV4",
       "POSIX"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "xattr": {
      "_name_": "xattr",
      "title": "xattr",
      "default": "SA",
      "enum": [
       "ON",
       "SA"
      ],
      "nullable": false,
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "string",
        "enum": [
         "INHERIT"
        ]
       }
      ]
     },
     "user_properties": {
      "_name_": "user_properties",
      "title": "user_properties",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "key": {
         "_name_": "key",
         "title": "key",
         "_required_": true,
         "type": "string"
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "user_property",
       "title": "user_property",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "key",
        "value"
       ]
      }
     },
     "create_ancestors": {
      "type": "boolean",
      "_name_": "create_ancestors",
      "title": "create_ancestors",
      "default": false
     },
     "user_properties_update": {
      "_name_": "user_properties_update",
      "title": "user_properties_update",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "key": {
         "_name_": "key",
         "title": "key",
         "_required_": true,
         "type": "string"
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "_required_": false,
         "type": "string"
        },
        "remove": {
         "type": "boolean",
         "_name_": "remove",
         "title": "remove",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "user_property",
       "title": "user_property",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "key",
        "value",
        "remove"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_update",
    "title": "pool_dataset_update",
    "default": {},
    "_attrs_order_": [
     "volsize",
     "force_size",
     "comments",
     "sync",
     "snapdev",
     "compression",
     "atime",
     "exec",
     "managedby",
     "quota",
     "quota_warning",
     "quota_critical",
     "refquota",
     "refquota_warning",
     "refquota_critical",
     "reservation",
     "refreservation",
     "special_small_block_size",
     "copies",
     "snapdir",
     "deduplication",
     "checksum",
     "readonly",
     "recordsize",
     "aclmode",
     "acltype",
     "xattr",
     "user_properties",
     "create_ancestors",
     "user_properties_update"
    ]
   },
   "return_schema_of_pool_dataset_update": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Updates a dataset/zvol `id`."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\nThere is 1 case where ZFS encryption is not allowed for a dataset:\n1) If the parent dataset is encrypted with a passphrase and `name` is being created\n   with a key for encrypting the dataset.\n`encryption_options` specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n`encryption_options.generate_key` when enabled automatically generates the key to be used\nfor dataset encryption."
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string"
     },
     "encrypted": {
      "type": "boolean",
      "_name_": "encrypted",
      "title": "encrypted"
     },
     "encryption_root": {
      "_name_": "encryption_root",
      "title": "encryption_root",
      "type": "string",
      "nullable": true
     },
     "key_loaded": {
      "type": "boolean",
      "_name_": "key_loaded",
      "title": "key_loaded",
      "nullable": true
     },
     "children": {
      "_name_": "children",
      "title": "children",
      "default": [],
      "type": "array",
      "items": {}
     },
     "user_properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "user_properties",
      "title": "user_properties",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     },
     "comments": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "comments",
      "title": "comments",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota_warning": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota_warning",
      "title": "quota_warning",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota_critical": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota_critical",
      "title": "quota_critical",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota_warning": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota_warning",
      "title": "refquota_warning",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota_critical": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota_critical",
      "title": "refquota_critical",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "managedby": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "managedby",
      "title": "managedby",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "deduplication": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "deduplication",
      "title": "deduplication",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "aclmode": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "aclmode",
      "title": "aclmode",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "acltype": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "acltype",
      "title": "acltype",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "xattr": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "xattr",
      "title": "xattr",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "atime": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "atime",
      "title": "atime",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "casesensitivity": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "casesensitivity",
      "title": "casesensitivity",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "checksum": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "checksum",
      "title": "checksum",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "exec": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "exec",
      "title": "exec",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "sync": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "sync",
      "title": "sync",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "compression": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "compression",
      "title": "compression",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "compressratio": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "compressratio",
      "title": "compressratio",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "origin": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "origin",
      "title": "origin",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota",
      "title": "quota",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota",
      "title": "refquota",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "reservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "reservation",
      "title": "reservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refreservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refreservation",
      "title": "refreservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "copies": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "copies",
      "title": "copies",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "snapdir": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "snapdir",
      "title": "snapdir",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "readonly": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "readonly",
      "title": "readonly",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "recordsize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "recordsize",
      "title": "recordsize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "sparse": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "sparse",
      "title": "sparse",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ],
      "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "volsize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "volsize",
      "title": "volsize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ],
      "description": "`volsize` is required for type=VOLUME and is supposed to be a multiple of the block size."
     },
     "volblocksize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "volblocksize",
      "title": "volblocksize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ],
      "description": "`sparse` and `volblocksize` are only used for type=VOLUME."
     },
     "key_format": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "key_format",
      "title": "key_format",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "encryption_algorithm": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "encryption_algorithm",
      "title": "encryption_algorithm",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "used": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "used",
      "title": "used",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbychildren": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbychildren",
      "title": "usedbychildren",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbydataset": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbydataset",
      "title": "usedbydataset",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbyrefreservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbyrefreservation",
      "title": "usedbyrefreservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbysnapshots": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbysnapshots",
      "title": "usedbysnapshots",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "available": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "available",
      "title": "available",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "special_small_block_size": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "special_small_block_size",
      "title": "special_small_block_size",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "pbkdf2iters": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "pbkdf2iters",
      "title": "pbkdf2iters",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "creation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "creation",
      "title": "creation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "snapdev": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "snapdev",
      "title": "snapdev",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "mountpoint": {
      "_name_": "mountpoint",
      "title": "mountpoint",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_update_returns",
    "title": "pool_dataset_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "pool",
     "encrypted",
     "encryption_root",
     "key_loaded",
     "children",
     "user_properties",
     "locked",
     "comments",
     "quota_warning",
     "quota_critical",
     "refquota_warning",
     "refquota_critical",
     "managedby",
     "deduplication",
     "aclmode",
     "acltype",
     "xattr",
     "atime",
     "casesensitivity",
     "checksum",
     "exec",
     "sync",
     "compression",
     "compressratio",
     "origin",
     "quota",
     "refquota",
     "reservation",
     "refreservation",
     "copies",
     "snapdir",
     "readonly",
     "recordsize",
     "sparse",
     "volsize",
     "volblocksize",
     "key_format",
     "encryption_algorithm",
     "used",
     "usedbychildren",
     "usedbydataset",
     "usedbyrefreservation",
     "usedbysnapshots",
     "available",
     "special_small_block_size",
     "pbkdf2iters",
     "creation",
     "snapdev",
     "mountpoint"
    ]
   },
   "pool_dataset_attachments": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_dataset_attachments": {
    "_name_": "attachments",
    "title": "attachments",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "type": {
       "_name_": "type",
       "title": "type",
       "_required_": true,
       "type": "string"
      },
      "service": {
       "_name_": "service",
       "title": "service",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "attachments": {
       "_name_": "attachments",
       "title": "attachments",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "_name_": "attachment_name",
         "title": "attachment_name",
         "_required_": false,
         "type": "string"
        }
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "attachment",
     "title": "attachment",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "type",
      "service",
      "attachments"
     ]
    }
   },
   "pool_dataset_change_key_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Change encryption properties for `id` encrypted dataset."
   },
   "pool_dataset_change_key_1": {
    "type": "object",
    "properties": {
     "generate_key": {
      "type": "boolean",
      "_name_": "generate_key",
      "title": "generate_key",
      "default": false
     },
     "key_file": {
      "type": "boolean",
      "_name_": "key_file",
      "title": "key_file",
      "default": false
     },
     "pbkdf2iters": {
      "type": "integer",
      "_name_": "pbkdf2iters",
      "title": "pbkdf2iters",
      "default": 350000
     },
     "passphrase": {
      "_name_": "passphrase",
      "title": "passphrase",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "key": {
      "_name_": "key",
      "title": "key",
      "default": null,
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "change_key_options",
    "title": "change_key_options",
    "default": {},
    "_attrs_order_": [
     "generate_key",
     "key_file",
     "pbkdf2iters",
     "passphrase",
     "key"
    ]
   },
   "pool_dataset_change_key": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_change_key_0"
     },
     "change_key_options": {
      "$ref": "#/components/schemas/pool_dataset_change_key_1"
     }
    }
   },
   "return_schema_of_pool_dataset_checksum_choices": {
    "type": "object",
    "properties": {
     "ON": {
      "_name_": "ON",
      "title": "ON",
      "type": "string",
      "enum": [
       "ON"
      ]
     },
     "FLETCHER2": {
      "_name_": "FLETCHER2",
      "title": "FLETCHER2",
      "type": "string",
      "enum": [
       "FLETCHER2"
      ]
     },
     "FLETCHER4": {
      "_name_": "FLETCHER4",
      "title": "FLETCHER4",
      "type": "string",
      "enum": [
       "FLETCHER4"
      ]
     },
     "SHA256": {
      "_name_": "SHA256",
      "title": "SHA256",
      "type": "string",
      "enum": [
       "SHA256"
      ]
     },
     "SHA512": {
      "_name_": "SHA512",
      "title": "SHA512",
      "type": "string",
      "enum": [
       "SHA512"
      ]
     },
     "SKEIN": {
      "_name_": "SKEIN",
      "title": "SKEIN",
      "type": "string",
      "enum": [
       "SKEIN"
      ]
     },
     "EDONR": {
      "_name_": "EDONR",
      "title": "EDONR",
      "type": "string",
      "enum": [
       "EDONR"
      ]
     },
     "BLAKE3": {
      "_name_": "BLAKE3",
      "title": "BLAKE3",
      "type": "string",
      "enum": [
       "BLAKE3"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "checksum_choices",
    "title": "checksum_choices",
    "default": {},
    "_attrs_order_": [
     "ON",
     "FLETCHER2",
     "FLETCHER4",
     "SHA256",
     "SHA512",
     "SKEIN",
     "EDONR",
     "BLAKE3"
    ]
   },
   "return_schema_of_pool_dataset_compression_choices": {
    "type": "object",
    "properties": {
     "ON": {
      "_name_": "ON",
      "title": "ON",
      "type": "string",
      "enum": [
       "ON"
      ]
     },
     "OFF": {
      "_name_": "OFF",
      "title": "OFF",
      "type": "string",
      "enum": [
       "OFF"
      ]
     },
     "LZ4": {
      "_name_": "LZ4",
      "title": "LZ4",
      "type": "string",
      "enum": [
       "LZ4"
      ]
     },
     "GZIP": {
      "_name_": "GZIP",
      "title": "GZIP",
      "type": "string",
      "enum": [
       "GZIP"
      ]
     },
     "GZIP-1": {
      "_name_": "GZIP-1",
      "title": "GZIP-1",
      "type": "string",
      "enum": [
       "GZIP-1"
      ]
     },
     "GZIP-9": {
      "_name_": "GZIP-9",
      "title": "GZIP-9",
      "type": "string",
      "enum": [
       "GZIP-9"
      ]
     },
     "ZSTD": {
      "_name_": "ZSTD",
      "title": "ZSTD",
      "type": "string",
      "enum": [
       "ZSTD"
      ]
     },
     "ZSTD-FAST": {
      "_name_": "ZSTD-FAST",
      "title": "ZSTD-FAST",
      "type": "string",
      "enum": [
       "ZSTD-FAST"
      ]
     },
     "ZLE": {
      "_name_": "ZLE",
      "title": "ZLE",
      "type": "string",
      "enum": [
       "ZLE"
      ]
     },
     "LZJB": {
      "_name_": "LZJB",
      "title": "LZJB",
      "type": "string",
      "enum": [
       "LZJB"
      ]
     },
     "ZSTD-1": {
      "_name_": "ZSTD-1",
      "title": "ZSTD-1",
      "type": "string",
      "enum": [
       "ZSTD-1"
      ]
     },
     "ZSTD-2": {
      "_name_": "ZSTD-2",
      "title": "ZSTD-2",
      "type": "string",
      "enum": [
       "ZSTD-2"
      ]
     },
     "ZSTD-3": {
      "_name_": "ZSTD-3",
      "title": "ZSTD-3",
      "type": "string",
      "enum": [
       "ZSTD-3"
      ]
     },
     "ZSTD-4": {
      "_name_": "ZSTD-4",
      "title": "ZSTD-4",
      "type": "string",
      "enum": [
       "ZSTD-4"
      ]
     },
     "ZSTD-5": {
      "_name_": "ZSTD-5",
      "title": "ZSTD-5",
      "type": "string",
      "enum": [
       "ZSTD-5"
      ]
     },
     "ZSTD-6": {
      "_name_": "ZSTD-6",
      "title": "ZSTD-6",
      "type": "string",
      "enum": [
       "ZSTD-6"
      ]
     },
     "ZSTD-7": {
      "_name_": "ZSTD-7",
      "title": "ZSTD-7",
      "type": "string",
      "enum": [
       "ZSTD-7"
      ]
     },
     "ZSTD-8": {
      "_name_": "ZSTD-8",
      "title": "ZSTD-8",
      "type": "string",
      "enum": [
       "ZSTD-8"
      ]
     },
     "ZSTD-9": {
      "_name_": "ZSTD-9",
      "title": "ZSTD-9",
      "type": "string",
      "enum": [
       "ZSTD-9"
      ]
     },
     "ZSTD-10": {
      "_name_": "ZSTD-10",
      "title": "ZSTD-10",
      "type": "string",
      "enum": [
       "ZSTD-10"
      ]
     },
     "ZSTD-11": {
      "_name_": "ZSTD-11",
      "title": "ZSTD-11",
      "type": "string",
      "enum": [
       "ZSTD-11"
      ]
     },
     "ZSTD-12": {
      "_name_": "ZSTD-12",
      "title": "ZSTD-12",
      "type": "string",
      "enum": [
       "ZSTD-12"
      ]
     },
     "ZSTD-13": {
      "_name_": "ZSTD-13",
      "title": "ZSTD-13",
      "type": "string",
      "enum": [
       "ZSTD-13"
      ]
     },
     "ZSTD-14": {
      "_name_": "ZSTD-14",
      "title": "ZSTD-14",
      "type": "string",
      "enum": [
       "ZSTD-14"
      ]
     },
     "ZSTD-15": {
      "_name_": "ZSTD-15",
      "title": "ZSTD-15",
      "type": "string",
      "enum": [
       "ZSTD-15"
      ]
     },
     "ZSTD-16": {
      "_name_": "ZSTD-16",
      "title": "ZSTD-16",
      "type": "string",
      "enum": [
       "ZSTD-16"
      ]
     },
     "ZSTD-17": {
      "_name_": "ZSTD-17",
      "title": "ZSTD-17",
      "type": "string",
      "enum": [
       "ZSTD-17"
      ]
     },
     "ZSTD-18": {
      "_name_": "ZSTD-18",
      "title": "ZSTD-18",
      "type": "string",
      "enum": [
       "ZSTD-18"
      ]
     },
     "ZSTD-19": {
      "_name_": "ZSTD-19",
      "title": "ZSTD-19",
      "type": "string",
      "enum": [
       "ZSTD-19"
      ]
     },
     "ZSTD-FAST-1": {
      "_name_": "ZSTD-FAST-1",
      "title": "ZSTD-FAST-1",
      "type": "string",
      "enum": [
       "ZSTD-FAST-1"
      ]
     },
     "ZSTD-FAST-2": {
      "_name_": "ZSTD-FAST-2",
      "title": "ZSTD-FAST-2",
      "type": "string",
      "enum": [
       "ZSTD-FAST-2"
      ]
     },
     "ZSTD-FAST-3": {
      "_name_": "ZSTD-FAST-3",
      "title": "ZSTD-FAST-3",
      "type": "string",
      "enum": [
       "ZSTD-FAST-3"
      ]
     },
     "ZSTD-FAST-4": {
      "_name_": "ZSTD-FAST-4",
      "title": "ZSTD-FAST-4",
      "type": "string",
      "enum": [
       "ZSTD-FAST-4"
      ]
     },
     "ZSTD-FAST-5": {
      "_name_": "ZSTD-FAST-5",
      "title": "ZSTD-FAST-5",
      "type": "string",
      "enum": [
       "ZSTD-FAST-5"
      ]
     },
     "ZSTD-FAST-6": {
      "_name_": "ZSTD-FAST-6",
      "title": "ZSTD-FAST-6",
      "type": "string",
      "enum": [
       "ZSTD-FAST-6"
      ]
     },
     "ZSTD-FAST-7": {
      "_name_": "ZSTD-FAST-7",
      "title": "ZSTD-FAST-7",
      "type": "string",
      "enum": [
       "ZSTD-FAST-7"
      ]
     },
     "ZSTD-FAST-8": {
      "_name_": "ZSTD-FAST-8",
      "title": "ZSTD-FAST-8",
      "type": "string",
      "enum": [
       "ZSTD-FAST-8"
      ]
     },
     "ZSTD-FAST-9": {
      "_name_": "ZSTD-FAST-9",
      "title": "ZSTD-FAST-9",
      "type": "string",
      "enum": [
       "ZSTD-FAST-9"
      ]
     },
     "ZSTD-FAST-10": {
      "_name_": "ZSTD-FAST-10",
      "title": "ZSTD-FAST-10",
      "type": "string",
      "enum": [
       "ZSTD-FAST-10"
      ]
     },
     "ZSTD-FAST-20": {
      "_name_": "ZSTD-FAST-20",
      "title": "ZSTD-FAST-20",
      "type": "string",
      "enum": [
       "ZSTD-FAST-20"
      ]
     },
     "ZSTD-FAST-30": {
      "_name_": "ZSTD-FAST-30",
      "title": "ZSTD-FAST-30",
      "type": "string",
      "enum": [
       "ZSTD-FAST-30"
      ]
     },
     "ZSTD-FAST-40": {
      "_name_": "ZSTD-FAST-40",
      "title": "ZSTD-FAST-40",
      "type": "string",
      "enum": [
       "ZSTD-FAST-40"
      ]
     },
     "ZSTD-FAST-50": {
      "_name_": "ZSTD-FAST-50",
      "title": "ZSTD-FAST-50",
      "type": "string",
      "enum": [
       "ZSTD-FAST-50"
      ]
     },
     "ZSTD-FAST-60": {
      "_name_": "ZSTD-FAST-60",
      "title": "ZSTD-FAST-60",
      "type": "string",
      "enum": [
       "ZSTD-FAST-60"
      ]
     },
     "ZSTD-FAST-70": {
      "_name_": "ZSTD-FAST-70",
      "title": "ZSTD-FAST-70",
      "type": "string",
      "enum": [
       "ZSTD-FAST-70"
      ]
     },
     "ZSTD-FAST-80": {
      "_name_": "ZSTD-FAST-80",
      "title": "ZSTD-FAST-80",
      "type": "string",
      "enum": [
       "ZSTD-FAST-80"
      ]
     },
     "ZSTD-FAST-90": {
      "_name_": "ZSTD-FAST-90",
      "title": "ZSTD-FAST-90",
      "type": "string",
      "enum": [
       "ZSTD-FAST-90"
      ]
     },
     "ZSTD-FAST-100": {
      "_name_": "ZSTD-FAST-100",
      "title": "ZSTD-FAST-100",
      "type": "string",
      "enum": [
       "ZSTD-FAST-100"
      ]
     },
     "ZSTD-FAST-500": {
      "_name_": "ZSTD-FAST-500",
      "title": "ZSTD-FAST-500",
      "type": "string",
      "enum": [
       "ZSTD-FAST-500"
      ]
     },
     "ZSTD-FAST-1000": {
      "_name_": "ZSTD-FAST-1000",
      "title": "ZSTD-FAST-1000",
      "type": "string",
      "enum": [
       "ZSTD-FAST-1000"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "compression_choices",
    "title": "compression_choices",
    "default": {},
    "_attrs_order_": [
     "ON",
     "OFF",
     "LZ4",
     "GZIP",
     "GZIP-1",
     "GZIP-9",
     "ZSTD",
     "ZSTD-FAST",
     "ZLE",
     "LZJB",
     "ZSTD-1",
     "ZSTD-2",
     "ZSTD-3",
     "ZSTD-4",
     "ZSTD-5",
     "ZSTD-6",
     "ZSTD-7",
     "ZSTD-8",
     "ZSTD-9",
     "ZSTD-10",
     "ZSTD-11",
     "ZSTD-12",
     "ZSTD-13",
     "ZSTD-14",
     "ZSTD-15",
     "ZSTD-16",
     "ZSTD-17",
     "ZSTD-18",
     "ZSTD-19",
     "ZSTD-FAST-1",
     "ZSTD-FAST-2",
     "ZSTD-FAST-3",
     "ZSTD-FAST-4",
     "ZSTD-FAST-5",
     "ZSTD-FAST-6",
     "ZSTD-FAST-7",
     "ZSTD-FAST-8",
     "ZSTD-FAST-9",
     "ZSTD-FAST-10",
     "ZSTD-FAST-20",
     "ZSTD-FAST-30",
     "ZSTD-FAST-40",
     "ZSTD-FAST-50",
     "ZSTD-FAST-60",
     "ZSTD-FAST-70",
     "ZSTD-FAST-80",
     "ZSTD-FAST-90",
     "ZSTD-FAST-100",
     "ZSTD-FAST-500",
     "ZSTD-FAST-1000"
    ]
   },
   "pool_dataset_destroy_snapshots_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "pool_dataset_destroy_snapshots_1": {
    "type": "object",
    "properties": {
     "all": {
      "type": "boolean",
      "_name_": "all",
      "title": "all",
      "default": true
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false
     },
     "snapshots": {
      "_name_": "snapshots",
      "title": "snapshots",
      "default": [],
      "type": "array",
      "items": {
       "oneOf": [
        {
         "type": "object",
         "properties": {
          "start": {
           "_name_": "start",
           "title": "start",
           "_required_": false,
           "type": "string"
          },
          "end": {
           "_name_": "end",
           "title": "end",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "snapshot_spec",
         "title": "snapshot_spec",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "start",
          "end"
         ]
        },
        {
         "_name_": "snapshot_name",
         "title": "snapshot_name",
         "_required_": false,
         "type": "string"
        }
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "snapshots",
    "title": "snapshots",
    "default": {},
    "_attrs_order_": [
     "all",
     "recursive",
     "snapshots"
    ]
   },
   "pool_dataset_destroy_snapshots": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/pool_dataset_destroy_snapshots_0"
     },
     "snapshots": {
      "$ref": "#/components/schemas/pool_dataset_destroy_snapshots_1"
     }
    }
   },
   "return_schema_of_pool_dataset_destroy_snapshots": {
    "_name_": "deleted_snapshots",
    "title": "deleted_snapshots",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "deleted_snapshot",
     "title": "deleted_snapshot",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_pool_dataset_details": {
    "_name_": "dataset_details",
    "title": "dataset_details",
    "description": "\n\nExample(s):\n```\n[\n    {\n        \"id\": \"tank\",\n        \"type\": \"FILESYSTEM\",\n        \"name\": \"tank\",\n        \"pool\": \"tank\",\n        \"encrypted\": false,\n        \"encryption_root\": null,\n        \"key_loaded\": false,\n        \"children\": [\n            {\n                \"id\": \"tank/soemthing\",\n                \"type\": \"VOLUME\",\n                \"name\": \"tank/soemthing\",\n                \"pool\": \"tank\",\n                \"encrypted\": false,\n                \"encryption_root\": null,\n                \"key_loaded\": false,\n                \"children\": [],\n                \"managed_by\": {\n                    \"value\": \"10.231.1.155\",\n                    \"rawvalue\": \"10.231.1.155\",\n                    \"source\": \"LOCAL\",\n                    \"parsed\": \"10.231.1.155\"\n                },\n                \"quota_warning\": {\n                    \"value\": \"80\",\n                    \"rawvalue\": \"80\",\n                    \"source\": \"LOCAL\",\n                    \"parsed\": \"80\"\n                },\n                \"quota_critical\": {\n                    \"value\": \"95\",\n                    \"rawvalue\": \"95\",\n                    \"source\": \"LOCAL\",\n                    \"parsed\": \"95\"\n                },\n                \"refquota_warning\": {\n                    \"value\": \"80\",\n                    \"rawvalue\": \"80\",\n                    \"source\": \"LOCAL\",\n                    \"parsed\": \"80\"\n                },\n                \"refquota_critical\": {\n                    \"value\": \"95\",\n                    \"rawvalue\": \"95\",\n                    \"source\": \"LOCAL\",\n                    \"parsed\": \"95\"\n                },\n                \"reservation\": {\n                    \"parsed\": null,\n                    \"rawvalue\": \"0\",\n                    \"value\": null,\n                    \"source\": \"DEFAULT\",\n                    \"source_info\": null\n                },\n                \"refreservation\": {\n                    \"parsed\": null,\n                    \"rawvalue\": \"0\",\n                    \"value\": null,\n                    \"source\": \"DEFAULT\",\n                    \"source_info\": null\n                },\n                \"key_format\": {\n                    \"parsed\": \"none\",\n                    \"rawvalue\": \"none\",\n                    \"value\": null,\n                    \"source\": \"DEFAULT\",\n                    \"source_info\": null\n                },\n                \"volsize\": {\n                    \"parsed\": 57344,\n                    \"rawvalue\": \"57344\",\n                    \"value\": \"56K\",\n                    \"source\": \"LOCAL\",\n                    \"source_info\": null\n                },\n                \"encryption_algorithm\": {\n                    \"parsed\": \"off\",\n                    \"rawvalue\": \"off\",\n                    \"value\": null,\n                    \"source\": \"DEFAULT\",\n                    \"source_info\": null\n                },\n                \"used\": {\n                    \"parsed\": 57344,\n                    \"rawvalue\": \"57344\",\n                    \"value\": \"56K\",\n                    \"source\": \"NONE\",\n                    \"source_info\": null\n                },\n                \"usedbychildren\": {\n                    \"parsed\": 0,\n                    \"rawvalue\": \"0\",\n                    \"value\": \"0B\",\n                    \"source\": \"NONE\",\n                    \"source_info\": null\n                },\n                \"usedbydataset\": {\n                    \"parsed\": 57344,\n                    \"rawvalue\": \"57344\",\n                    \"value\": \"56K\",\n                    \"source\": \"NONE\",\n                    \"source_info\": null\n                },\n                \"usedbysnapshots\": {\n                    \"parsed\": 0,\n                    \"rawvalue\": \"0\",\n                    \"value\": \"0B\",\n                    \"source\": \"NONE\",\n                    \"source_info\": null\n                },\n                \"available\": {\n                    \"parsed\": 14328811520,\n                    \"rawvalue\": \"14328811520\",\n                    \"value\": \"13.3G\",\n                    \"source\": \"NONE\",\n                    \"source_info\": null\n                },\n                \"mountpoint\": \"/mnt/tank/something\",\n                \"sync\": {\n                    \"parsed\": \"standard\",\n                    \"rawvalue\": \"standard\",\n                    \"value\": \"STANDARD\",\n                    \"source\": \"DEFAULT\",\n                    \"source_info\": null\n                },\n                \"compression\": {\n                    \"parsed\": \"lz4\",\n                    \"rawvalue\": \"lz4\",\n                    \"value\": \"LZ4\",\n                    \"source\": \"INHERITED\",\n                    \"source_info\": \"tank\"\n                },\n                \"deduplication\": {\n                    \"parsed\": \"on\",\n                    \"rawvalue\": \"on\",\n                    \"value\": \"ON\",\n                    \"source\": \"LOCAL\",\n                    \"source_info\": null\n                },\n                \"user_properties\": {},\n                \"snapshot_count\": 0,\n                \"locked\": false,\n                \"thick_provisioned\": true,\n                \"nfs_shares\": [\n                    {\n                        \"enabled\": true,\n                        \"path\": \"/mnt/tank/something\"\n                    }\n                ],\n                \"smb_shares\": [\n                    {\n                        \"enabled\": false,\n                        \"path\": \"/mnt/tank/something/smbshare01\",\n                        \"share_name\": \"Home Pictures\"\n                    }\n                ],\n                \"iscsi_shares\": [\n                    {\n                        \"enabled\": false,\n                        \"type\": \"DISK\",\n                        \"path\": \"/mnt/tank/something\"\n                    }\n                ],\n                \"vms\": [\n                    {\n                        \"name\": \"deb01\",\n                        \"path\": \"/dev/zvol/tank/something\"\n                    }\n                ],\n                \"apps\": [\n                    {\n                        \"name\": \"diskoverdata\",\n                        \"path\": \"/mnt/tank/something\"\n                    }\n                ],\n                \"replication_tasks_count\": 0,\n                \"snapshot_tasks_count\": 0,\n                \"cloudsync_tasks_count\": 0,\n                \"rsync_tasks_count\": 0\n            }\n        ],\n        \"mountpoint\": \"/mnt/tank\",\n        \"quota\": {\n            \"parsed\": null,\n            \"rawvalue\": \"0\",\n            \"value\": null,\n            \"source\": \"DEFAULT\",\n            \"source_info\": null\n        },\n        \"refquota\": {\n            \"parsed\": null,\n            \"rawvalue\": \"0\",\n            \"value\": null,\n            \"source\": \"DEFAULT\",\n            \"source_info\": null\n        },\n        \"reservation\": {\n            \"parsed\": null,\n            \"rawvalue\": \"0\",\n            \"value\": null,\n            \"source\": \"DEFAULT\",\n            \"source_info\": null\n        },\n        \"refreservation\": {\n            \"parsed\": null,\n            \"rawvalue\": \"0\",\n            \"value\": null,\n            \"source\": \"DEFAULT\",\n            \"source_info\": null\n        },\n        \"encryption_algorithm\": {\n            \"parsed\": \"off\",\n            \"rawvalue\": \"off\",\n            \"value\": null,\n            \"source\": \"DEFAULT\",\n            \"source_info\": null\n        },\n        \"origin\": {\n            \"parsed\": \"\",\n            \"rawvalue\": \"\",\n            \"value\": \"\",\n            \"source\": \"NONE\",\n            \"source_info\": null\n        },\n        \"used\": {\n            \"parsed\": 3874467840,\n            \"rawvalue\": \"3874467840\",\n            \"value\": \"3.61G\",\n            \"source\": \"NONE\",\n            \"source_info\": null\n        },\n        \"usedbychildren\": {\n            \"parsed\": 3874369536,\n            \"rawvalue\": \"3874369536\",\n            \"value\": \"3.61G\",\n            \"source\": \"NONE\",\n            \"source_info\": null\n        },\n        \"usedbydataset\": {\n            \"parsed\": 98304,\n            \"rawvalue\": \"98304\",\n            \"value\": \"96K\",\n            \"source\": \"NONE\",\n            \"source_info\": null\n        },\n        \"usedbysnapshots\": {\n            \"parsed\": 0,\n            \"rawvalue\": \"0\",\n            \"value\": \"0B\",\n            \"source\": \"NONE\",\n            \"source_info\": null\n        },\n        \"available\": {\n            \"parsed\": 14328811520,\n            \"rawvalue\": \"14328811520\",\n            \"value\": \"13.3G\",\n            \"source\": \"NONE\",\n            \"source_info\": null\n        },\n        \"user_properties\": {},\n        \"snapshot_count\": 0,\n        \"locked\": false,\n        \"atime\": false,\n        \"casesensitive\": true,\n        \"readonly\": false,\n        \"nfs_shares\": [],\n        \"smb_shares\": [],\n        \"iscsi_shares\": [],\n        \"vms\": [],\n        \"apps\": [\n            {\n                \"name\": \"plex\",\n                \"path\": \"/mnt/evo/data\"\n            }\n        ],\n        \"replication_tasks_count\": 0,\n        \"snapshot_tasks_count\": 0,\n        \"cloudsync_tasks_count\": 0,\n        \"rsync_tasks_count\": 0\n    }\n]\n```\n",
    "default": [],
    "type": "array",
    "items": {}
   },
   "return_schema_of_pool_dataset_encryption_algorithm_choices": {
    "type": "object",
    "properties": {
     "AES-128-CCM": {
      "_name_": "AES-128-CCM",
      "title": "AES-128-CCM",
      "type": "string",
      "enum": [
       "AES-128-CCM"
      ]
     },
     "AES-192-CCM": {
      "_name_": "AES-192-CCM",
      "title": "AES-192-CCM",
      "type": "string",
      "enum": [
       "AES-192-CCM"
      ]
     },
     "AES-256-CCM": {
      "_name_": "AES-256-CCM",
      "title": "AES-256-CCM",
      "type": "string",
      "enum": [
       "AES-256-CCM"
      ]
     },
     "AES-128-GCM": {
      "_name_": "AES-128-GCM",
      "title": "AES-128-GCM",
      "type": "string",
      "enum": [
       "AES-128-GCM"
      ]
     },
     "AES-192-GCM": {
      "_name_": "AES-192-GCM",
      "title": "AES-192-GCM",
      "type": "string",
      "enum": [
       "AES-192-GCM"
      ]
     },
     "AES-256-GCM": {
      "_name_": "AES-256-GCM",
      "title": "AES-256-GCM",
      "type": "string",
      "enum": [
       "AES-256-GCM"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "encryption_algorithm_choices",
    "title": "encryption_algorithm_choices",
    "default": {},
    "_attrs_order_": [
     "AES-128-CCM",
     "AES-192-CCM",
     "AES-256-CCM",
     "AES-128-GCM",
     "AES-192-GCM",
     "AES-256-GCM"
    ]
   },
   "pool_dataset_encryption_summary_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Retrieve summary of all encrypted roots under `id`.\nIt should be noted that there are 2 keys which show if a recursive unlock operation is\ndone for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys\nnamely are \"unlock_successful\" and \"unlock_error\". The former is a boolean value showing if unlock\nwould succeed/fail. The latter is description why it failed if it failed."
   },
   "pool_dataset_encryption_summary_1": {
    "type": "object",
    "properties": {
     "key_file": {
      "type": "boolean",
      "_name_": "key_file",
      "title": "key_file",
      "default": false
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     },
     "datasets": {
      "_name_": "datasets",
      "title": "datasets",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false,
         "_required_": true
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "key": {
         "_name_": "key",
         "title": "key",
         "_required_": false,
         "type": "string"
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "_required_": false,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "dataset",
       "title": "dataset",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "force",
        "name",
        "key",
        "passphrase"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "encryption_root_summary_options",
    "title": "encryption_root_summary_options",
    "default": {},
    "_attrs_order_": [
     "key_file",
     "force",
     "datasets"
    ]
   },
   "pool_dataset_encryption_summary": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_encryption_summary_0"
     },
     "encryption_root_summary_options": {
      "$ref": "#/components/schemas/pool_dataset_encryption_summary_1"
     }
    }
   },
   "return_schema_of_pool_dataset_encryption_summary": {
    "_name_": "encryption_summary",
    "title": "encryption_summary",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "key_format": {
       "_name_": "key_format",
       "title": "key_format",
       "_required_": true,
       "type": "string"
      },
      "key_present_in_database": {
       "type": "boolean",
       "_name_": "key_present_in_database",
       "title": "key_present_in_database",
       "_required_": true
      },
      "valid_key": {
       "type": "boolean",
       "_name_": "valid_key",
       "title": "valid_key",
       "_required_": true
      },
      "locked": {
       "type": "boolean",
       "_name_": "locked",
       "title": "locked",
       "_required_": true
      },
      "unlock_error": {
       "_name_": "unlock_error",
       "title": "unlock_error",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "unlock_successful": {
       "type": "boolean",
       "_name_": "unlock_successful",
       "title": "unlock_successful",
       "_required_": true
      }
     },
     "additionalProperties": false,
     "_name_": "dataset_encryption_summary",
     "title": "dataset_encryption_summary",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "key_format",
      "key_present_in_database",
      "valid_key",
      "locked",
      "unlock_error",
      "unlock_successful"
     ]
    }
   },
   "pool_dataset_export_key_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file\nwhere the same file can be used to unlock the dataset, otherwise it will be returned as string."
   },
   "pool_dataset_export_key_1": {
    "type": "boolean",
    "_name_": "download",
    "title": "download",
    "default": false,
    "description": "Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file\nwhere the same file can be used to unlock the dataset, otherwise it will be returned as string."
   },
   "pool_dataset_export_key": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_export_key_0"
     },
     "download": {
      "$ref": "#/components/schemas/pool_dataset_export_key_1"
     }
    }
   },
   "return_schema_of_pool_dataset_export_key": {
    "_name_": "key",
    "title": "key",
    "type": "string",
    "nullable": true
   },
   "pool_dataset_export_keys": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Export keys for `id` and its children which are stored in the system. The exported file is a JSON file\nwhich has a dictionary containing dataset names as keys and their keys as the value."
   },
   "pool_dataset_export_keys_for_replication": {
    "type": "integer",
    "_name_": "id",
    "title": "id",
    "description": "Export keys for replication task `id` for source dataset(s) which are stored in the system. The exported file\nis a JSON file which has a dictionary containing dataset names as keys and their keys as the value."
   },
   "pool_dataset_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "pool_dataset_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "pool_dataset_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/pool_dataset_get_instance_1"
     }
    }
   },
   "return_schema_of_pool_dataset_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string"
     },
     "encrypted": {
      "type": "boolean",
      "_name_": "encrypted",
      "title": "encrypted"
     },
     "encryption_root": {
      "_name_": "encryption_root",
      "title": "encryption_root",
      "type": "string",
      "nullable": true
     },
     "key_loaded": {
      "type": "boolean",
      "_name_": "key_loaded",
      "title": "key_loaded",
      "nullable": true
     },
     "children": {
      "_name_": "children",
      "title": "children",
      "default": [],
      "type": "array",
      "items": {}
     },
     "user_properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "user_properties",
      "title": "user_properties",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     },
     "comments": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "comments",
      "title": "comments",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota_warning": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota_warning",
      "title": "quota_warning",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota_critical": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota_critical",
      "title": "quota_critical",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota_warning": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota_warning",
      "title": "refquota_warning",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota_critical": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota_critical",
      "title": "refquota_critical",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "managedby": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "managedby",
      "title": "managedby",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "deduplication": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "deduplication",
      "title": "deduplication",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "aclmode": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "aclmode",
      "title": "aclmode",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "acltype": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "acltype",
      "title": "acltype",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "xattr": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "xattr",
      "title": "xattr",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "atime": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "atime",
      "title": "atime",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "casesensitivity": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "casesensitivity",
      "title": "casesensitivity",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "checksum": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "checksum",
      "title": "checksum",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "exec": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "exec",
      "title": "exec",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "sync": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "sync",
      "title": "sync",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "compression": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "compression",
      "title": "compression",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "compressratio": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "compressratio",
      "title": "compressratio",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "origin": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "origin",
      "title": "origin",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "quota": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "quota",
      "title": "quota",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refquota": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refquota",
      "title": "refquota",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "reservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "reservation",
      "title": "reservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "refreservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "refreservation",
      "title": "refreservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "copies": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "copies",
      "title": "copies",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "snapdir": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "snapdir",
      "title": "snapdir",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "readonly": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "readonly",
      "title": "readonly",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "recordsize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "recordsize",
      "title": "recordsize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "sparse": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "sparse",
      "title": "sparse",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "volsize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "volsize",
      "title": "volsize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "volblocksize": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "volblocksize",
      "title": "volblocksize",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "key_format": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "key_format",
      "title": "key_format",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "encryption_algorithm": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "encryption_algorithm",
      "title": "encryption_algorithm",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "used": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "used",
      "title": "used",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbychildren": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbychildren",
      "title": "usedbychildren",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbydataset": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbydataset",
      "title": "usedbydataset",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbyrefreservation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbyrefreservation",
      "title": "usedbyrefreservation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "usedbysnapshots": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "usedbysnapshots",
      "title": "usedbysnapshots",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "available": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "available",
      "title": "available",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "special_small_block_size": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "special_small_block_size",
      "title": "special_small_block_size",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "pbkdf2iters": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "pbkdf2iters",
      "title": "pbkdf2iters",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "creation": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "creation",
      "title": "creation",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "snapdev": {
      "type": "object",
      "properties": {
       "parsed": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "parsed",
        "title": "parsed"
       },
       "rawvalue": {
        "_name_": "rawvalue",
        "title": "rawvalue",
        "type": "string",
        "nullable": true
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string",
        "nullable": true
       },
       "source": {
        "_name_": "source",
        "title": "source",
        "type": "string",
        "nullable": true
       },
       "source_info": {
        "anyOf": [
         {
          "type": "string"
         },
         {
          "type": "integer"
         },
         {
          "type": "boolean"
         },
         {
          "type": "object"
         },
         {
          "type": "array"
         }
        ],
        "nullable": true,
        "_name_": "source_info",
        "title": "source_info"
       }
      },
      "additionalProperties": false,
      "_name_": "snapdev",
      "title": "snapdev",
      "default": {},
      "_attrs_order_": [
       "parsed",
       "rawvalue",
       "value",
       "source",
       "source_info"
      ]
     },
     "mountpoint": {
      "_name_": "mountpoint",
      "title": "mountpoint",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_entry",
    "title": "pool_dataset_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "type",
     "name",
     "pool",
     "encrypted",
     "encryption_root",
     "key_loaded",
     "children",
     "user_properties",
     "locked",
     "comments",
     "quota_warning",
     "quota_critical",
     "refquota_warning",
     "refquota_critical",
     "managedby",
     "deduplication",
     "aclmode",
     "acltype",
     "xattr",
     "atime",
     "casesensitivity",
     "checksum",
     "exec",
     "sync",
     "compression",
     "compressratio",
     "origin",
     "quota",
     "refquota",
     "reservation",
     "refreservation",
     "copies",
     "snapdir",
     "readonly",
     "recordsize",
     "sparse",
     "volsize",
     "volblocksize",
     "key_format",
     "encryption_algorithm",
     "used",
     "usedbychildren",
     "usedbydataset",
     "usedbyrefreservation",
     "usedbysnapshots",
     "available",
     "special_small_block_size",
     "pbkdf2iters",
     "creation",
     "snapdev",
     "mountpoint"
    ]
   },
   "pool_dataset_get_quota_1": {
    "_name_": "quota_type",
    "title": "quota_type",
    "type": "string",
    "enum": [
     "USER",
     "GROUP",
     "DATASET",
     "PROJECT"
    ],
    "description": "Return a list of the specified `quota_type` of quotas on the ZFS dataset `ds`.\nSupport `query-filters` and `query-options`. used_bytes may not instantly\nupdate as space is used."
   },
   "pool_dataset_get_quota_2": {
    "_name_": "query-filters",
    "title": "query-filters",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "query-filter",
     "title": "query-filter",
     "default": [],
     "_required_": false,
     "type": "array",
     "items": []
    }
   },
   "pool_dataset_get_quota_3": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "query-options",
    "title": "query-options",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "pool_dataset_get_quota": {
    "type": "object",
    "properties": {
     "quota_type": {
      "$ref": "#/components/schemas/pool_dataset_get_quota_1"
     },
     "query-filters": {
      "$ref": "#/components/schemas/pool_dataset_get_quota_2"
     },
     "query-options": {
      "$ref": "#/components/schemas/pool_dataset_get_quota_3"
     }
    }
   },
   "pool_dataset_inherit_parent_encryption_properties": {
    "_name_": "id",
    "title": "id",
    "type": "string"
   },
   "pool_dataset_lock_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Locks `id` dataset. It will unmount the dataset and its children before locking."
   },
   "pool_dataset_lock_1": {
    "type": "object",
    "properties": {
     "force_umount": {
      "type": "boolean",
      "_name_": "force_umount",
      "title": "force_umount",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "lock_options",
    "title": "lock_options",
    "default": {},
    "_attrs_order_": [
     "force_umount"
    ]
   },
   "pool_dataset_lock": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_lock_0"
     },
     "lock_options": {
      "$ref": "#/components/schemas/pool_dataset_lock_1"
     }
    }
   },
   "return_schema_of_pool_dataset_lock": {
    "type": "boolean",
    "_name_": "locked",
    "title": "locked"
   },
   "pool_dataset_mountpoint_0": {
    "_name_": "dataset",
    "title": "dataset",
    "type": "string"
   },
   "pool_dataset_mountpoint_1": {
    "type": "boolean",
    "_name_": "raise",
    "title": "raise",
    "default": true
   },
   "pool_dataset_mountpoint": {
    "type": "object",
    "properties": {
     "dataset": {
      "$ref": "#/components/schemas/pool_dataset_mountpoint_0"
     },
     "raise": {
      "$ref": "#/components/schemas/pool_dataset_mountpoint_1"
     }
    }
   },
   "return_schema_of_pool_dataset_mountpoint": {
    "_name_": "mountpoint",
    "title": "mountpoint",
    "type": "string",
    "nullable": true
   },
   "pool_dataset_permission": {
    "type": "object",
    "properties": {
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "group": {
      "_name_": "group",
      "title": "group",
      "type": "string"
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "type": "string",
      "description": "Set permissions for a dataset `id`. Permissions may be specified as\neither a posix `mode` or an `acl`. This method is a wrapper around\n`filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`\n`filesystem.setperm` is called if `mode` is specified.\n`filesystem.setacl` is called if `acl` is specified or if the\noption `set_default_acl` is selected.\n`filesystem.chown` is called if neither `mode` nor `acl` is\nspecified.",
      "nullable": true
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": "Set permissions for a dataset `id`. Permissions may be specified as\neither a posix `mode` or an `acl`. This method is a wrapper around\n`filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`\n`filesystem.setacl` is called if `acl` is specified or if the\noption `set_default_acl` is selected.\n`filesystem.chown` is called if neither `mode` nor `acl` is\nspecified."
     },
     "options": {
      "type": "object",
      "properties": {
       "set_default_acl": {
        "type": "boolean",
        "_name_": "set_default_acl",
        "title": "set_default_acl",
        "default": false
       },
       "stripacl": {
        "type": "boolean",
        "_name_": "stripacl",
        "title": "stripacl",
        "default": false
       },
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "default": false
       },
       "traverse": {
        "type": "boolean",
        "_name_": "traverse",
        "title": "traverse",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "set_default_acl",
       "stripacl",
       "recursive",
       "traverse"
      ],
      "description": "The following `options` are supported:"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_permission",
    "title": "pool_dataset_permission",
    "default": {},
    "_attrs_order_": [
     "user",
     "group",
     "mode",
     "acl",
     "options"
    ]
   },
   "return_schema_of_pool_dataset_permission": {
    "type": "object",
    "properties": {
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "group": {
      "_name_": "group",
      "title": "group",
      "type": "string"
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "type": "string",
      "description": "Set permissions for a dataset `id`. Permissions may be specified as\neither a posix `mode` or an `acl`. This method is a wrapper around\n`filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`\n`filesystem.setperm` is called if `mode` is specified.\n`filesystem.setacl` is called if `acl` is specified or if the\noption `set_default_acl` is selected.\n`filesystem.chown` is called if neither `mode` nor `acl` is\nspecified.",
      "nullable": true
     },
     "acl": {
      "anyOf": [
       {
        "_name_": "nfs4_acl",
        "title": "nfs4_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "owner@",
             "group@",
             "everyone@",
             "USER",
             "GROUP"
            ]
           },
           "id": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "_required_": false,
            "type": "string",
            "enum": [
             "ALLOW",
             "DENY"
            ]
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ_DATA": {
              "type": "boolean",
              "_name_": "READ_DATA",
              "title": "READ_DATA",
              "_required_": false
             },
             "WRITE_DATA": {
              "type": "boolean",
              "_name_": "WRITE_DATA",
              "title": "WRITE_DATA",
              "_required_": false
             },
             "APPEND_DATA": {
              "type": "boolean",
              "_name_": "APPEND_DATA",
              "title": "APPEND_DATA",
              "_required_": false
             },
             "READ_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "READ_NAMED_ATTRS",
              "title": "READ_NAMED_ATTRS",
              "_required_": false
             },
             "WRITE_NAMED_ATTRS": {
              "type": "boolean",
              "_name_": "WRITE_NAMED_ATTRS",
              "title": "WRITE_NAMED_ATTRS",
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "_required_": false
             },
             "DELETE_CHILD": {
              "type": "boolean",
              "_name_": "DELETE_CHILD",
              "title": "DELETE_CHILD",
              "_required_": false
             },
             "READ_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "READ_ATTRIBUTES",
              "title": "READ_ATTRIBUTES",
              "_required_": false
             },
             "WRITE_ATTRIBUTES": {
              "type": "boolean",
              "_name_": "WRITE_ATTRIBUTES",
              "title": "WRITE_ATTRIBUTES",
              "_required_": false
             },
             "DELETE": {
              "type": "boolean",
              "_name_": "DELETE",
              "title": "DELETE",
              "_required_": false
             },
             "READ_ACL": {
              "type": "boolean",
              "_name_": "READ_ACL",
              "title": "READ_ACL",
              "_required_": false
             },
             "WRITE_ACL": {
              "type": "boolean",
              "_name_": "WRITE_ACL",
              "title": "WRITE_ACL",
              "_required_": false
             },
             "WRITE_OWNER": {
              "type": "boolean",
              "_name_": "WRITE_OWNER",
              "title": "WRITE_OWNER",
              "_required_": false
             },
             "SYNCHRONIZE": {
              "type": "boolean",
              "_name_": "SYNCHRONIZE",
              "title": "SYNCHRONIZE",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "FULL_CONTROL",
               "MODIFY",
               "READ",
               "TRAVERSE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ_DATA",
             "WRITE_DATA",
             "APPEND_DATA",
             "READ_NAMED_ATTRS",
             "WRITE_NAMED_ATTRS",
             "EXECUTE",
             "DELETE_CHILD",
             "READ_ATTRIBUTES",
             "WRITE_ATTRIBUTES",
             "DELETE",
             "READ_ACL",
             "WRITE_ACL",
             "WRITE_OWNER",
             "SYNCHRONIZE",
             "BASIC"
            ]
           },
           "flags": {
            "type": "object",
            "properties": {
             "FILE_INHERIT": {
              "type": "boolean",
              "_name_": "FILE_INHERIT",
              "title": "FILE_INHERIT",
              "_required_": false
             },
             "DIRECTORY_INHERIT": {
              "type": "boolean",
              "_name_": "DIRECTORY_INHERIT",
              "title": "DIRECTORY_INHERIT",
              "_required_": false
             },
             "NO_PROPAGATE_INHERIT": {
              "type": "boolean",
              "_name_": "NO_PROPAGATE_INHERIT",
              "title": "NO_PROPAGATE_INHERIT",
              "_required_": false
             },
             "INHERIT_ONLY": {
              "type": "boolean",
              "_name_": "INHERIT_ONLY",
              "title": "INHERIT_ONLY",
              "_required_": false
             },
             "INHERITED": {
              "type": "boolean",
              "_name_": "INHERITED",
              "title": "INHERITED",
              "_required_": false
             },
             "BASIC": {
              "_name_": "BASIC",
              "title": "BASIC",
              "_required_": false,
              "type": "string",
              "enum": [
               "INHERIT",
               "NOINHERIT"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "flags",
            "title": "flags",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "FILE_INHERIT",
             "DIRECTORY_INHERIT",
             "NO_PROPAGATE_INHERIT",
             "INHERIT_ONLY",
             "INHERITED",
             "BASIC"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "nfs4_ace",
          "title": "nfs4_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "tag",
           "id",
           "type",
           "perms",
           "flags"
          ]
         }
        ]
       },
       {
        "_name_": "posix1e_acl",
        "title": "posix1e_acl",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "default": {
            "type": "boolean",
            "_name_": "default",
            "title": "default",
            "default": false,
            "_required_": false
           },
           "tag": {
            "_name_": "tag",
            "title": "tag",
            "_required_": false,
            "type": "string",
            "enum": [
             "USER_OBJ",
             "GROUP_OBJ",
             "USER",
             "GROUP",
             "OTHER",
             "MASK"
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "default": -1,
            "_required_": false
           },
           "perms": {
            "type": "object",
            "properties": {
             "READ": {
              "type": "boolean",
              "_name_": "READ",
              "title": "READ",
              "default": false,
              "_required_": false
             },
             "WRITE": {
              "type": "boolean",
              "_name_": "WRITE",
              "title": "WRITE",
              "default": false,
              "_required_": false
             },
             "EXECUTE": {
              "type": "boolean",
              "_name_": "EXECUTE",
              "title": "EXECUTE",
              "default": false,
              "_required_": false
             }
            },
            "additionalProperties": false,
            "_name_": "perms",
            "title": "perms",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "READ",
             "WRITE",
             "EXECUTE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "posix1e_ace",
          "title": "posix1e_ace",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "default",
           "tag",
           "id",
           "perms"
          ]
         }
        ]
       }
      ],
      "nullable": false,
      "_name_": "acl",
      "description": "Set permissions for a dataset `id`. Permissions may be specified as\neither a posix `mode` or an `acl`. This method is a wrapper around\n`filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`\n`filesystem.setacl` is called if `acl` is specified or if the\noption `set_default_acl` is selected.\n`filesystem.chown` is called if neither `mode` nor `acl` is\nspecified."
     },
     "options": {
      "type": "object",
      "properties": {
       "set_default_acl": {
        "type": "boolean",
        "_name_": "set_default_acl",
        "title": "set_default_acl",
        "default": false
       },
       "stripacl": {
        "type": "boolean",
        "_name_": "stripacl",
        "title": "stripacl",
        "default": false
       },
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "default": false
       },
       "traverse": {
        "type": "boolean",
        "_name_": "traverse",
        "title": "traverse",
        "default": false
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "set_default_acl",
       "stripacl",
       "recursive",
       "traverse"
      ],
      "description": "The following `options` are supported:"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_permission",
    "title": "pool_dataset_permission",
    "default": {},
    "_attrs_order_": [
     "user",
     "group",
     "mode",
     "acl",
     "options"
    ]
   },
   "pool_dataset_processes": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_dataset_processes": {
    "_name_": "processes",
    "title": "processes",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "pid": {
       "type": "integer",
       "_name_": "pid",
       "title": "pid",
       "_required_": true
      },
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "service": {
       "_name_": "service",
       "title": "service",
       "_required_": false,
       "type": "string"
      },
      "cmdline": {
       "_name_": "cmdline",
       "title": "cmdline",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "process",
     "title": "process",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "pid",
      "name",
      "service",
      "cmdline"
     ]
    }
   },
   "pool_dataset_promote": {
    "type": "object",
    "properties": {}
   },
   "pool_dataset_recommended_zvol_blocksize": {
    "_name_": "pool",
    "title": "pool",
    "type": "string"
   },
   "return_schema_of_pool_dataset_recommended_zvol_blocksize": {
    "_name_": "recommended_zvol_blocksize",
    "title": "recommended_zvol_blocksize",
    "type": "string"
   },
   "pool_dataset_recordsize_choices": {
    "_name_": "pool_name",
    "title": "pool_name",
    "default": null,
    "type": "string",
    "nullable": true
   },
   "return_schema_of_pool_dataset_recordsize_choices": {
    "_name_": "recordsize_choices",
    "title": "recordsize_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "recordsize_value",
     "title": "recordsize_value",
     "_required_": false,
     "type": "string"
    }
   },
   "pool_dataset_set_quota": {
    "_name_": "quotas",
    "title": "quotas",
    "default": [
     {
      "quota_type": "USER",
      "id": "0",
      "quota_value": 0
     }
    ],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "quota_type": {
       "_name_": "quota_type",
       "title": "quota_type",
       "_required_": true,
       "type": "string",
       "enum": [
        "DATASET",
        "USER",
        "USEROBJ",
        "GROUP",
        "GROUPOBJ"
       ]
      },
      "id": {
       "_name_": "id",
       "title": "id",
       "_required_": true,
       "type": "string"
      },
      "quota_value": {
       "type": [
        "integer",
        "null"
       ],
       "_name_": "quota_value",
       "title": "quota_value",
       "_required_": true
      }
     },
     "additionalProperties": false,
     "_name_": "quota_entry",
     "title": "quota_entry",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "quota_type",
      "id",
      "quota_value"
     ]
    },
    "description": "`quotas` specifies a list of `quota_entry` entries to apply to dataset."
   },
   "pool_dataset_snapshot_count": {
    "_name_": "dataset",
    "title": "dataset",
    "type": "string"
   },
   "return_schema_of_pool_dataset_snapshot_count": {
    "type": "integer",
    "_name_": "snapshot_count",
    "title": "snapshot_count"
   },
   "pool_dataset_unlock_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).\nIf `id` dataset is not encrypted an exception will be raised. There is one exception:\nwhen `id` is a root dataset and `unlock_options.recursive` is specified, encryption\nvalidation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`."
   },
   "pool_dataset_unlock_1": {
    "type": "object",
    "properties": {
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     },
     "key_file": {
      "type": "boolean",
      "_name_": "key_file",
      "title": "key_file",
      "default": false
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false
     },
     "toggle_attachments": {
      "type": "boolean",
      "_name_": "toggle_attachments",
      "title": "toggle_attachments",
      "default": true
     },
     "datasets": {
      "_name_": "datasets",
      "title": "datasets",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "force": {
         "type": "boolean",
         "_name_": "force",
         "title": "force",
         "default": false,
         "_required_": true
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "key": {
         "_name_": "key",
         "title": "key",
         "_required_": false,
         "type": "string"
        },
        "passphrase": {
         "_name_": "passphrase",
         "title": "passphrase",
         "_required_": false,
         "type": "string"
        },
        "recursive": {
         "type": "boolean",
         "_name_": "recursive",
         "title": "recursive",
         "default": false,
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "dataset",
       "title": "dataset",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "force",
        "name",
        "key",
        "passphrase",
        "recursive"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "unlock_options",
    "title": "unlock_options",
    "default": {},
    "_attrs_order_": [
     "force",
     "key_file",
     "recursive",
     "toggle_attachments",
     "datasets"
    ]
   },
   "pool_dataset_unlock": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_unlock_0"
     },
     "unlock_options": {
      "$ref": "#/components/schemas/pool_dataset_unlock_1"
     }
    }
   },
   "return_schema_of_pool_dataset_unlock": {
    "type": "object",
    "properties": {
     "unlocked": {
      "_name_": "unlocked",
      "title": "unlocked",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      }
     },
     "failed": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "failed",
      "title": "failed",
      "description": "\n\nExample(s):\n```\n{\n    \"vol1/enc\": {\n        \"error\": \"Invalid Key\",\n        \"skipped\": []\n    }\n}\n```\n",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "unlock",
    "title": "unlock",
    "default": {},
    "_attrs_order_": [
     "unlocked",
     "failed"
    ]
   },
   "pool_dataset_unlock_services_restart_choices": {
    "_name_": "dataset",
    "title": "dataset",
    "type": "string"
   },
   "return_schema_of_pool_dataset_unlock_services_restart_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "services_to_restart",
    "title": "services_to_restart",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_pool_dataset_userprop_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "_name_": "id",
          "title": "id",
          "_required_": true,
          "type": "string"
         },
         "properties": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "properties",
          "title": "properties",
          "default": {},
          "_required_": true,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "pool_dataset_userprop_entry",
        "title": "pool_dataset_userprop_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "properties"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "properties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "properties",
        "title": "properties",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "pool_dataset_userprop_entry",
      "title": "pool_dataset_userprop_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "properties"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "_name_": "id",
        "title": "id",
        "_required_": true,
        "type": "string"
       },
       "properties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "properties",
        "title": "properties",
        "default": {},
        "_required_": true,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "pool_dataset_userprop_entry",
      "title": "pool_dataset_userprop_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "properties"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "pool_dataset_userprop_create": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "property": {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "property",
      "title": "property",
      "default": {},
      "_attrs_order_": [
       "name",
       "value"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "dataset_user_prop_create",
    "title": "dataset_user_prop_create",
    "default": {},
    "_attrs_order_": [
     "id",
     "property"
    ]
   },
   "return_schema_of_pool_dataset_userprop_create": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties",
      "title": "properties",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_userprop_create_returns",
    "title": "pool_dataset_userprop_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "properties"
    ]
   },
   "pool_dataset_userprop_delete": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "dataset_user_prop_delete",
    "title": "dataset_user_prop_delete",
    "default": {},
    "_attrs_order_": [
     "name"
    ]
   },
   "return_schema_of_pool_dataset_userprop_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "pool_dataset_userprop_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "value": {
      "_name_": "value",
      "title": "value",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "dataset_user_prop_update",
    "title": "dataset_user_prop_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "value"
    ]
   },
   "return_schema_of_pool_dataset_userprop_update": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string"
     },
     "properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties",
      "title": "properties",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_userprop_update_returns",
    "title": "pool_dataset_userprop_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "properties"
    ]
   },
   "pool_dataset_userprop_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "pool_dataset_userprop_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "pool_dataset_userprop_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_dataset_userprop_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/pool_dataset_userprop_get_instance_1"
     }
    }
   },
   "return_schema_of_pool_dataset_userprop_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "_name_": "id",
      "title": "id",
      "type": "string",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties",
      "title": "properties",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "pool_dataset_userprop_entry",
    "title": "pool_dataset_userprop_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "properties"
    ]
   },
   "return_schema_of_pool_resilver_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "begin": {
      "_name_": "begin",
      "title": "begin",
      "type": "string"
     },
     "end": {
      "_name_": "end",
      "title": "end",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "weekday": {
      "_name_": "weekday",
      "title": "weekday",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "weekday",
       "title": "weekday",
       "_required_": false
      }
     }
    },
    "additionalProperties": false,
    "_name_": "pool_resilver_entry",
    "title": "pool_resilver_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "begin",
     "end",
     "enabled",
     "weekday"
    ]
   },
   "pool_resilver_update": {
    "type": "object",
    "properties": {
     "begin": {
      "_name_": "begin",
      "title": "begin",
      "type": "string",
      "description": "If `begin` time is greater than `end` time it means it will rollover the day, e.g.\nbegin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day\nuntil 05:00 of the next day."
     },
     "end": {
      "_name_": "end",
      "title": "end",
      "type": "string",
      "description": "If `begin` time is greater than `end` time it means it will rollover the day, e.g.\nbegin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day\nuntil 05:00 of the next day."
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "weekday": {
      "_name_": "weekday",
      "title": "weekday",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "weekday",
       "title": "weekday",
       "_required_": false
      },
      "description": "`weekday` follows crontab(5) values 0-7 (0 or 7 is Sun)."
     }
    },
    "additionalProperties": false,
    "_name_": "pool_resilver_update",
    "title": "pool_resilver_update",
    "default": {},
    "_attrs_order_": [
     "begin",
     "end",
     "enabled",
     "weekday"
    ]
   },
   "return_schema_of_pool_resilver_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "begin": {
      "_name_": "begin",
      "title": "begin",
      "type": "string",
      "description": "If `begin` time is greater than `end` time it means it will rollover the day, e.g.\nbegin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day\nuntil 05:00 of the next day."
     },
     "end": {
      "_name_": "end",
      "title": "end",
      "type": "string",
      "description": "If `begin` time is greater than `end` time it means it will rollover the day, e.g.\nbegin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day\nuntil 05:00 of the next day."
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "weekday": {
      "_name_": "weekday",
      "title": "weekday",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "weekday",
       "title": "weekday",
       "_required_": false
      },
      "description": "`weekday` follows crontab(5) values 0-7 (0 or 7 is Sun)."
     }
    },
    "additionalProperties": false,
    "_name_": "pool_resilver_update_returns",
    "title": "pool_resilver_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "begin",
     "end",
     "enabled",
     "weekday"
    ]
   },
   "return_schema_of_pool_scrub_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "pool": {
          "type": "integer",
          "_name_": "pool",
          "title": "pool",
          "_required_": true
         },
         "threshold": {
          "type": "integer",
          "_name_": "threshold",
          "title": "threshold",
          "_required_": true
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": true,
          "type": "string"
         },
         "schedule": {
          "type": "object",
          "properties": {
           "minute": {
            "_name_": "minute",
            "title": "minute",
            "default": "00",
            "_required_": false,
            "type": "string"
           },
           "hour": {
            "_name_": "hour",
            "title": "hour",
            "default": "00",
            "_required_": false,
            "type": "string"
           },
           "dom": {
            "_name_": "dom",
            "title": "dom",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "month": {
            "_name_": "month",
            "title": "month",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dow": {
            "_name_": "dow",
            "title": "dow",
            "default": "7",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "schedule",
          "title": "schedule",
          "default": {},
          "_required_": true,
          "_attrs_order_": [
           "minute",
           "hour",
           "dom",
           "month",
           "dow"
          ]
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": true
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         },
         "pool_name": {
          "_name_": "pool_name",
          "title": "pool_name",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "pool_scrub_entry",
        "title": "pool_scrub_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pool",
         "threshold",
         "description",
         "schedule",
         "enabled",
         "id",
         "pool_name"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "pool": {
        "type": "integer",
        "_name_": "pool",
        "title": "pool",
        "_required_": true
       },
       "threshold": {
        "type": "integer",
        "_name_": "threshold",
        "title": "threshold",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "7",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": true
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "pool_name": {
        "_name_": "pool_name",
        "title": "pool_name",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "pool_scrub_entry",
      "title": "pool_scrub_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "pool",
       "threshold",
       "description",
       "schedule",
       "enabled",
       "id",
       "pool_name"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "pool": {
        "type": "integer",
        "_name_": "pool",
        "title": "pool",
        "_required_": true
       },
       "threshold": {
        "type": "integer",
        "_name_": "threshold",
        "title": "threshold",
        "_required_": true
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": true,
        "type": "string"
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "7",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": true,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": true
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "pool_name": {
        "_name_": "pool_name",
        "title": "pool_name",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "pool_scrub_entry",
      "title": "pool_scrub_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "pool",
       "threshold",
       "description",
       "schedule",
       "enabled",
       "id",
       "pool_name"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "pool_scrub_create": {
    "type": "object",
    "properties": {
     "pool": {
      "type": "integer",
      "_name_": "pool",
      "title": "pool"
     },
     "threshold": {
      "type": "integer",
      "_name_": "threshold",
      "title": "threshold",
      "description": "`threshold` refers to the minimum amount of time in days has to be passed before\na scrub can run again."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "00",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "7",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "pool_scrub_entry",
    "title": "pool_scrub_entry",
    "default": {},
    "_attrs_order_": [
     "pool",
     "threshold",
     "description",
     "schedule",
     "enabled"
    ]
   },
   "return_schema_of_pool_scrub_create": {
    "type": "object",
    "properties": {
     "pool": {
      "type": "integer",
      "_name_": "pool",
      "title": "pool"
     },
     "threshold": {
      "type": "integer",
      "_name_": "threshold",
      "title": "threshold",
      "description": "`threshold` refers to the minimum amount of time in days has to be passed before\na scrub can run again."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "00",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "7",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "pool_name": {
      "_name_": "pool_name",
      "title": "pool_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_scrub_create_returns",
    "title": "pool_scrub_create_returns",
    "default": {},
    "_attrs_order_": [
     "pool",
     "threshold",
     "description",
     "schedule",
     "enabled",
     "id",
     "pool_name"
    ]
   },
   "return_schema_of_pool_scrub_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "pool_scrub_update": {
    "type": "object",
    "properties": {
     "pool": {
      "type": "integer",
      "_name_": "pool",
      "title": "pool"
     },
     "threshold": {
      "type": "integer",
      "_name_": "threshold",
      "title": "threshold",
      "description": "`threshold` refers to the minimum amount of time in days has to be passed before\na scrub can run again."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "00",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "7",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "pool_name": {
      "_name_": "pool_name",
      "title": "pool_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_scrub_update",
    "title": "pool_scrub_update",
    "default": {},
    "_attrs_order_": [
     "pool",
     "threshold",
     "description",
     "schedule",
     "enabled",
     "pool_name"
    ]
   },
   "return_schema_of_pool_scrub_update": {
    "type": "object",
    "properties": {
     "pool": {
      "type": "integer",
      "_name_": "pool",
      "title": "pool"
     },
     "threshold": {
      "type": "integer",
      "_name_": "threshold",
      "title": "threshold",
      "description": "`threshold` refers to the minimum amount of time in days has to be passed before\na scrub can run again."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "00",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "7",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update scrub task of `id`.\nCreate a scrub task for a pool."
     },
     "pool_name": {
      "_name_": "pool_name",
      "title": "pool_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_scrub_update_returns",
    "title": "pool_scrub_update_returns",
    "default": {},
    "_attrs_order_": [
     "pool",
     "threshold",
     "description",
     "schedule",
     "enabled",
     "id",
     "pool_name"
    ]
   },
   "pool_scrub_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "pool_scrub_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "pool_scrub_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_scrub_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/pool_scrub_get_instance_1"
     }
    }
   },
   "return_schema_of_pool_scrub_get_instance": {
    "type": "object",
    "properties": {
     "pool": {
      "type": "integer",
      "_name_": "pool",
      "title": "pool"
     },
     "threshold": {
      "type": "integer",
      "_name_": "threshold",
      "title": "threshold"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "00",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "7",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "pool_name": {
      "_name_": "pool_name",
      "title": "pool_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "pool_scrub_entry",
    "title": "pool_scrub_entry",
    "default": {},
    "_attrs_order_": [
     "pool",
     "threshold",
     "description",
     "schedule",
     "enabled",
     "id",
     "pool_name"
    ]
   },
   "pool_scrub_run_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "pool_scrub_run_1": {
    "type": "integer",
    "_name_": "threshold",
    "title": "threshold",
    "default": 35
   },
   "pool_scrub_run": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/pool_scrub_run_0"
     },
     "threshold": {
      "$ref": "#/components/schemas/pool_scrub_run_1"
     }
    }
   },
   "pool_scrub_scrub_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "pool_scrub_scrub_1": {
    "_name_": "action",
    "title": "action",
    "default": "START",
    "type": "string",
    "enum": [
     "START",
     "STOP",
     "PAUSE"
    ]
   },
   "pool_scrub_scrub": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/pool_scrub_scrub_0"
     },
     "action": {
      "$ref": "#/components/schemas/pool_scrub_scrub_1"
     }
    }
   },
   "return_schema_of_pool_snapshottask_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "pool_snapshottask_entry",
        "title": "pool_snapshottask_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "pool_snapshottask_entry",
      "title": "pool_snapshottask_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "pool_snapshottask_entry",
      "title": "pool_snapshottask_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "pool_snapshottask_create": {
    "type": "object",
    "properties": {
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string",
      "description": "Create a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`."
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "description": "Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets\nor zvols from the snapshot.\nSnapshots will be automatically destroyed after a certain amount of time, specified by"
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "item",
       "title": "item",
       "_required_": false,
       "type": "string"
      },
      "description": "Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets\nor zvols from the snapshot.\nSnapshots will be automatically destroyed after a certain amount of time, specified by"
     },
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value",
      "description": "`lifetime_value` and `lifetime_unit`.\nIf multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot\nwill be kept until the last of these tasks reaches its expiry time."
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "description": "`lifetime_value` and `lifetime_unit`.\nIf multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot\nwill be kept until the last of these tasks reaches its expiry time."
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "type": "string",
      "description": "Snapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name\nand must contain `%Y`, `%m`, `%d`, `%H` and `%M`."
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ],
      "description": "Create a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`."
     },
     "allow_empty": {
      "type": "boolean",
      "_name_": "allow_empty",
      "title": "allow_empty",
      "default": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "periodic_snapshot_create",
    "title": "periodic_snapshot_create",
    "default": {},
    "_attrs_order_": [
     "dataset",
     "recursive",
     "exclude",
     "lifetime_value",
     "lifetime_unit",
     "naming_schema",
     "schedule",
     "allow_empty",
     "enabled"
    ]
   },
   "return_schema_of_pool_snapshottask_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "pool_snapshottask_create_returns",
    "title": "pool_snapshottask_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "pool_snapshottask_delete": {
    "type": "object",
    "properties": {
     "fixate_removal_date": {
      "type": "boolean",
      "_name_": "fixate_removal_date",
      "title": "fixate_removal_date",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "fixate_removal_date"
    ]
   },
   "return_schema_of_pool_snapshottask_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "pool_snapshottask_update": {
    "type": "object",
    "properties": {
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string",
      "description": "Create a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`."
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "description": "Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets\nor zvols from the snapshot.\nSnapshots will be automatically destroyed after a certain amount of time, specified by"
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "item",
       "title": "item",
       "_required_": false,
       "type": "string"
      },
      "description": "Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets\nor zvols from the snapshot.\nSnapshots will be automatically destroyed after a certain amount of time, specified by"
     },
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value",
      "description": "`lifetime_value` and `lifetime_unit`.\nIf multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot\nwill be kept until the last of these tasks reaches its expiry time."
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "description": "`lifetime_value` and `lifetime_unit`.\nIf multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot\nwill be kept until the last of these tasks reaches its expiry time."
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "type": "string",
      "description": "Snapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name\nand must contain `%Y`, `%m`, `%d`, `%H` and `%M`."
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ],
      "description": "Create a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`."
     },
     "allow_empty": {
      "type": "boolean",
      "_name_": "allow_empty",
      "title": "allow_empty",
      "default": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "fixate_removal_date": {
      "type": "boolean",
      "_name_": "fixate_removal_date",
      "title": "fixate_removal_date"
     }
    },
    "additionalProperties": false,
    "_name_": "periodic_snapshot_update",
    "title": "periodic_snapshot_update",
    "default": {},
    "_attrs_order_": [
     "dataset",
     "recursive",
     "exclude",
     "lifetime_value",
     "lifetime_unit",
     "naming_schema",
     "schedule",
     "allow_empty",
     "enabled",
     "fixate_removal_date"
    ]
   },
   "return_schema_of_pool_snapshottask_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "pool_snapshottask_update_returns",
    "title": "pool_snapshottask_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "pool_snapshottask_delete_will_change_retention_for": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_pool_snapshottask_delete_will_change_retention_for": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "snapshots",
    "title": "snapshots",
    "default": {},
    "_attrs_order_": []
   },
   "pool_snapshottask_foreseen_count": {
    "type": "object",
    "properties": {
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value"
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ]
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "periodic_snapshot_foreseen_count",
    "title": "periodic_snapshot_foreseen_count",
    "default": {},
    "_attrs_order_": [
     "lifetime_value",
     "lifetime_unit",
     "schedule"
    ]
   },
   "return_schema_of_pool_snapshottask_foreseen_count": {
    "type": "integer",
    "_name_": "foreseen_count",
    "title": "foreseen_count"
   },
   "pool_snapshottask_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "pool_snapshottask_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "pool_snapshottask_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/pool_snapshottask_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/pool_snapshottask_get_instance_1"
     }
    }
   },
   "return_schema_of_pool_snapshottask_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "pool_snapshottask_entry",
    "title": "pool_snapshottask_entry",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_pool_snapshottask_max_count": {
    "type": "integer",
    "_name_": "max_count",
    "title": "max_count"
   },
   "return_schema_of_pool_snapshottask_max_total_count": {
    "type": "integer",
    "_name_": "max_total_count",
    "title": "max_total_count"
   },
   "pool_snapshottask_run": {
    "type": "object",
    "properties": {}
   },
   "pool_snapshottask_update_will_change_retention_for": {
    "type": "object",
    "properties": {
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "item",
       "title": "item",
       "_required_": false,
       "type": "string"
      }
     },
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value"
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ]
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ]
     },
     "allow_empty": {
      "type": "boolean",
      "_name_": "allow_empty",
      "title": "allow_empty",
      "default": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "periodic_snapshot_update_will_change_retention",
    "title": "periodic_snapshot_update_will_change_retention",
    "default": {},
    "_attrs_order_": [
     "dataset",
     "recursive",
     "exclude",
     "lifetime_value",
     "lifetime_unit",
     "naming_schema",
     "schedule",
     "allow_empty",
     "enabled"
    ]
   },
   "return_schema_of_pool_snapshottask_update_will_change_retention_for": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "snapshots",
    "title": "snapshots",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_privilege_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "builtin_name": {
          "_name_": "builtin_name",
          "title": "builtin_name",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "local_groups": {
          "_name_": "local_groups",
          "title": "local_groups",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "gid": {
              "type": "integer",
              "_name_": "gid",
              "title": "gid",
              "_required_": false
             },
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": true,
              "type": "string"
             },
             "smb": {
              "type": "boolean",
              "_name_": "smb",
              "title": "smb",
              "default": true,
              "_required_": false
             },
             "sudo_commands": {
              "_name_": "sudo_commands",
              "title": "sudo_commands",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "command",
                "title": "command",
                "_required_": false,
                "type": "string"
               }
              ]
             },
             "sudo_commands_nopasswd": {
              "_name_": "sudo_commands_nopasswd",
              "title": "sudo_commands_nopasswd",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "command",
                "title": "command",
                "_required_": false,
                "type": "string"
               }
              ]
             },
             "users": {
              "_name_": "users",
              "title": "users",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "type": "integer",
                "_name_": "id",
                "title": "id",
                "_required_": false
               }
              ]
             },
             "id": {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "_required_": false
             },
             "group": {
              "_name_": "group",
              "title": "group",
              "_required_": false,
              "type": "string"
             },
             "builtin": {
              "type": "boolean",
              "_name_": "builtin",
              "title": "builtin",
              "_required_": false
             },
             "id_type_both": {
              "type": "boolean",
              "_name_": "id_type_both",
              "title": "id_type_both",
              "_required_": false
             },
             "local": {
              "type": "boolean",
              "_name_": "local",
              "title": "local",
              "_required_": false
             },
             "nt_name": {
              "_name_": "nt_name",
              "title": "nt_name",
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             },
             "sid": {
              "_name_": "sid",
              "title": "sid",
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             },
             "roles": {
              "_name_": "roles",
              "title": "roles",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "role",
                "title": "role",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "group_entry",
            "title": "group_entry",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "gid",
             "name",
             "smb",
             "sudo_commands",
             "sudo_commands_nopasswd",
             "users",
             "id",
             "group",
             "builtin",
             "id_type_both",
             "local",
             "nt_name",
             "sid",
             "roles"
            ]
           }
          ]
         },
         "ds_groups": {
          "_name_": "ds_groups",
          "title": "ds_groups",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "gid": {
              "type": "integer",
              "_name_": "gid",
              "title": "gid",
              "_required_": false
             },
             "name": {
              "_name_": "name",
              "title": "name",
              "_required_": true,
              "type": "string"
             },
             "smb": {
              "type": "boolean",
              "_name_": "smb",
              "title": "smb",
              "default": true,
              "_required_": false
             },
             "sudo_commands": {
              "_name_": "sudo_commands",
              "title": "sudo_commands",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "command",
                "title": "command",
                "_required_": false,
                "type": "string"
               }
              ]
             },
             "sudo_commands_nopasswd": {
              "_name_": "sudo_commands_nopasswd",
              "title": "sudo_commands_nopasswd",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "command",
                "title": "command",
                "_required_": false,
                "type": "string"
               }
              ]
             },
             "users": {
              "_name_": "users",
              "title": "users",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "type": "integer",
                "_name_": "id",
                "title": "id",
                "_required_": false
               }
              ]
             },
             "id": {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "_required_": false
             },
             "group": {
              "_name_": "group",
              "title": "group",
              "_required_": false,
              "type": "string"
             },
             "builtin": {
              "type": "boolean",
              "_name_": "builtin",
              "title": "builtin",
              "_required_": false
             },
             "id_type_both": {
              "type": "boolean",
              "_name_": "id_type_both",
              "title": "id_type_both",
              "_required_": false
             },
             "local": {
              "type": "boolean",
              "_name_": "local",
              "title": "local",
              "_required_": false
             },
             "nt_name": {
              "_name_": "nt_name",
              "title": "nt_name",
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             },
             "sid": {
              "_name_": "sid",
              "title": "sid",
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             },
             "roles": {
              "_name_": "roles",
              "title": "roles",
              "default": [],
              "_required_": false,
              "type": "array",
              "items": [
               {
                "_name_": "role",
                "title": "role",
                "_required_": false,
                "type": "string"
               }
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "group_entry",
            "title": "group_entry",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "gid",
             "name",
             "smb",
             "sudo_commands",
             "sudo_commands_nopasswd",
             "users",
             "id",
             "group",
             "builtin",
             "id_type_both",
             "local",
             "nt_name",
             "sid",
             "roles"
            ]
           }
          ]
         },
         "allowlist": {
          "_name_": "allowlist",
          "title": "allowlist",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "method": {
              "_name_": "method",
              "title": "method",
              "_required_": true,
              "type": "string",
              "enum": [
               "GET",
               "POST",
               "PUT",
               "DELETE",
               "CALL",
               "SUBSCRIBE",
               "*"
              ]
             },
             "resource": {
              "_name_": "resource",
              "title": "resource",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "allowlist_item",
            "title": "allowlist_item",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "method",
             "resource"
            ]
           }
          ]
         },
         "roles": {
          "_name_": "roles",
          "title": "roles",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "role",
            "title": "role",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "web_shell": {
          "type": "boolean",
          "_name_": "web_shell",
          "title": "web_shell",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "privilege_entry",
        "title": "privilege_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "builtin_name",
         "name",
         "local_groups",
         "ds_groups",
         "allowlist",
         "roles",
         "web_shell"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "builtin_name": {
        "_name_": "builtin_name",
        "title": "builtin_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "local_groups": {
        "_name_": "local_groups",
        "title": "local_groups",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "gid": {
            "type": "integer",
            "_name_": "gid",
            "title": "gid",
            "_required_": false
           },
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "smb": {
            "type": "boolean",
            "_name_": "smb",
            "title": "smb",
            "default": true,
            "_required_": false
           },
           "sudo_commands": {
            "_name_": "sudo_commands",
            "title": "sudo_commands",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "sudo_commands_nopasswd": {
            "_name_": "sudo_commands_nopasswd",
            "title": "sudo_commands_nopasswd",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "users": {
            "_name_": "users",
            "title": "users",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "_required_": false
             }
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "group": {
            "_name_": "group",
            "title": "group",
            "_required_": false,
            "type": "string"
           },
           "builtin": {
            "type": "boolean",
            "_name_": "builtin",
            "title": "builtin",
            "_required_": false
           },
           "id_type_both": {
            "type": "boolean",
            "_name_": "id_type_both",
            "title": "id_type_both",
            "_required_": false
           },
           "local": {
            "type": "boolean",
            "_name_": "local",
            "title": "local",
            "_required_": false
           },
           "nt_name": {
            "_name_": "nt_name",
            "title": "nt_name",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "sid": {
            "_name_": "sid",
            "title": "sid",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "roles": {
            "_name_": "roles",
            "title": "roles",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "role",
              "title": "role",
              "_required_": false,
              "type": "string"
             }
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "group_entry",
          "title": "group_entry",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "gid",
           "name",
           "smb",
           "sudo_commands",
           "sudo_commands_nopasswd",
           "users",
           "id",
           "group",
           "builtin",
           "id_type_both",
           "local",
           "nt_name",
           "sid",
           "roles"
          ]
         }
        ]
       },
       "ds_groups": {
        "_name_": "ds_groups",
        "title": "ds_groups",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "gid": {
            "type": "integer",
            "_name_": "gid",
            "title": "gid",
            "_required_": false
           },
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "smb": {
            "type": "boolean",
            "_name_": "smb",
            "title": "smb",
            "default": true,
            "_required_": false
           },
           "sudo_commands": {
            "_name_": "sudo_commands",
            "title": "sudo_commands",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "sudo_commands_nopasswd": {
            "_name_": "sudo_commands_nopasswd",
            "title": "sudo_commands_nopasswd",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "users": {
            "_name_": "users",
            "title": "users",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "_required_": false
             }
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "group": {
            "_name_": "group",
            "title": "group",
            "_required_": false,
            "type": "string"
           },
           "builtin": {
            "type": "boolean",
            "_name_": "builtin",
            "title": "builtin",
            "_required_": false
           },
           "id_type_both": {
            "type": "boolean",
            "_name_": "id_type_both",
            "title": "id_type_both",
            "_required_": false
           },
           "local": {
            "type": "boolean",
            "_name_": "local",
            "title": "local",
            "_required_": false
           },
           "nt_name": {
            "_name_": "nt_name",
            "title": "nt_name",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "sid": {
            "_name_": "sid",
            "title": "sid",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "roles": {
            "_name_": "roles",
            "title": "roles",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "role",
              "title": "role",
              "_required_": false,
              "type": "string"
             }
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "group_entry",
          "title": "group_entry",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "gid",
           "name",
           "smb",
           "sudo_commands",
           "sudo_commands_nopasswd",
           "users",
           "id",
           "group",
           "builtin",
           "id_type_both",
           "local",
           "nt_name",
           "sid",
           "roles"
          ]
         }
        ]
       },
       "allowlist": {
        "_name_": "allowlist",
        "title": "allowlist",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "method": {
            "_name_": "method",
            "title": "method",
            "_required_": true,
            "type": "string",
            "enum": [
             "GET",
             "POST",
             "PUT",
             "DELETE",
             "CALL",
             "SUBSCRIBE",
             "*"
            ]
           },
           "resource": {
            "_name_": "resource",
            "title": "resource",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "allowlist_item",
          "title": "allowlist_item",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "method",
           "resource"
          ]
         }
        ]
       },
       "roles": {
        "_name_": "roles",
        "title": "roles",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "role",
          "title": "role",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "web_shell": {
        "type": "boolean",
        "_name_": "web_shell",
        "title": "web_shell",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "privilege_entry",
      "title": "privilege_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "builtin_name",
       "name",
       "local_groups",
       "ds_groups",
       "allowlist",
       "roles",
       "web_shell"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "builtin_name": {
        "_name_": "builtin_name",
        "title": "builtin_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "local_groups": {
        "_name_": "local_groups",
        "title": "local_groups",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "gid": {
            "type": "integer",
            "_name_": "gid",
            "title": "gid",
            "_required_": false
           },
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "smb": {
            "type": "boolean",
            "_name_": "smb",
            "title": "smb",
            "default": true,
            "_required_": false
           },
           "sudo_commands": {
            "_name_": "sudo_commands",
            "title": "sudo_commands",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "sudo_commands_nopasswd": {
            "_name_": "sudo_commands_nopasswd",
            "title": "sudo_commands_nopasswd",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "users": {
            "_name_": "users",
            "title": "users",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "_required_": false
             }
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "group": {
            "_name_": "group",
            "title": "group",
            "_required_": false,
            "type": "string"
           },
           "builtin": {
            "type": "boolean",
            "_name_": "builtin",
            "title": "builtin",
            "_required_": false
           },
           "id_type_both": {
            "type": "boolean",
            "_name_": "id_type_both",
            "title": "id_type_both",
            "_required_": false
           },
           "local": {
            "type": "boolean",
            "_name_": "local",
            "title": "local",
            "_required_": false
           },
           "nt_name": {
            "_name_": "nt_name",
            "title": "nt_name",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "sid": {
            "_name_": "sid",
            "title": "sid",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "roles": {
            "_name_": "roles",
            "title": "roles",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "role",
              "title": "role",
              "_required_": false,
              "type": "string"
             }
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "group_entry",
          "title": "group_entry",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "gid",
           "name",
           "smb",
           "sudo_commands",
           "sudo_commands_nopasswd",
           "users",
           "id",
           "group",
           "builtin",
           "id_type_both",
           "local",
           "nt_name",
           "sid",
           "roles"
          ]
         }
        ]
       },
       "ds_groups": {
        "_name_": "ds_groups",
        "title": "ds_groups",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "gid": {
            "type": "integer",
            "_name_": "gid",
            "title": "gid",
            "_required_": false
           },
           "name": {
            "_name_": "name",
            "title": "name",
            "_required_": true,
            "type": "string"
           },
           "smb": {
            "type": "boolean",
            "_name_": "smb",
            "title": "smb",
            "default": true,
            "_required_": false
           },
           "sudo_commands": {
            "_name_": "sudo_commands",
            "title": "sudo_commands",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "sudo_commands_nopasswd": {
            "_name_": "sudo_commands_nopasswd",
            "title": "sudo_commands_nopasswd",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "command",
              "title": "command",
              "_required_": false,
              "type": "string"
             }
            ]
           },
           "users": {
            "_name_": "users",
            "title": "users",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "type": "integer",
              "_name_": "id",
              "title": "id",
              "_required_": false
             }
            ]
           },
           "id": {
            "type": "integer",
            "_name_": "id",
            "title": "id",
            "_required_": false
           },
           "group": {
            "_name_": "group",
            "title": "group",
            "_required_": false,
            "type": "string"
           },
           "builtin": {
            "type": "boolean",
            "_name_": "builtin",
            "title": "builtin",
            "_required_": false
           },
           "id_type_both": {
            "type": "boolean",
            "_name_": "id_type_both",
            "title": "id_type_both",
            "_required_": false
           },
           "local": {
            "type": "boolean",
            "_name_": "local",
            "title": "local",
            "_required_": false
           },
           "nt_name": {
            "_name_": "nt_name",
            "title": "nt_name",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "sid": {
            "_name_": "sid",
            "title": "sid",
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "roles": {
            "_name_": "roles",
            "title": "roles",
            "default": [],
            "_required_": false,
            "type": "array",
            "items": [
             {
              "_name_": "role",
              "title": "role",
              "_required_": false,
              "type": "string"
             }
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "group_entry",
          "title": "group_entry",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "gid",
           "name",
           "smb",
           "sudo_commands",
           "sudo_commands_nopasswd",
           "users",
           "id",
           "group",
           "builtin",
           "id_type_both",
           "local",
           "nt_name",
           "sid",
           "roles"
          ]
         }
        ]
       },
       "allowlist": {
        "_name_": "allowlist",
        "title": "allowlist",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "method": {
            "_name_": "method",
            "title": "method",
            "_required_": true,
            "type": "string",
            "enum": [
             "GET",
             "POST",
             "PUT",
             "DELETE",
             "CALL",
             "SUBSCRIBE",
             "*"
            ]
           },
           "resource": {
            "_name_": "resource",
            "title": "resource",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "allowlist_item",
          "title": "allowlist_item",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "method",
           "resource"
          ]
         }
        ]
       },
       "roles": {
        "_name_": "roles",
        "title": "roles",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "role",
          "title": "role",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "web_shell": {
        "type": "boolean",
        "_name_": "web_shell",
        "title": "web_shell",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "privilege_entry",
      "title": "privilege_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "builtin_name",
       "name",
       "local_groups",
       "ds_groups",
       "allowlist",
       "roles",
       "web_shell"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "privilege_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` is a name for privilege (must be unique)."
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      },
      "description": "`allowlist` is a list of API endpoints allowed for this privilege."
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     },
     "web_shell": {
      "type": "boolean",
      "_name_": "web_shell",
      "title": "web_shell"
     },
     "local_groups": {
      "_name_": "local_groups",
      "title": "local_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "local_group",
       "title": "local_group",
       "_required_": false
      },
      "description": "`local_groups` is a list of local user account group GIDs that gain this privilege."
     },
     "ds_groups": {
      "_name_": "ds_groups",
      "title": "ds_groups",
      "default": [],
      "type": "array",
      "items": {
       "oneOf": [
        {
         "type": "integer",
         "_name_": "ds_group_gid",
         "title": "ds_group_gid",
         "_required_": false
        },
        {
         "_name_": "ds_group_sid",
         "title": "ds_group_sid",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "description": "`ds_groups` is list of Directory Service group GIDs that will gain this privilege."
     }
    },
    "additionalProperties": false,
    "_name_": "privilege_create",
    "title": "privilege_create",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "allowlist",
     "roles",
     "web_shell",
     "local_groups",
     "ds_groups"
    ]
   },
   "return_schema_of_privilege_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "builtin_name": {
      "_name_": "builtin_name",
      "title": "builtin_name",
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` is a name for privilege (must be unique)."
     },
     "local_groups": {
      "_name_": "local_groups",
      "title": "local_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "gid": {
         "type": "integer",
         "_name_": "gid",
         "title": "gid",
         "_required_": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "smb": {
         "type": "boolean",
         "_name_": "smb",
         "title": "smb",
         "default": true,
         "_required_": false
        },
        "sudo_commands": {
         "_name_": "sudo_commands",
         "title": "sudo_commands",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "sudo_commands_nopasswd": {
         "_name_": "sudo_commands_nopasswd",
         "title": "sudo_commands_nopasswd",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "users": {
         "_name_": "users",
         "title": "users",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "_required_": false
        },
        "group": {
         "_name_": "group",
         "title": "group",
         "_required_": false,
         "type": "string"
        },
        "builtin": {
         "type": "boolean",
         "_name_": "builtin",
         "title": "builtin",
         "_required_": false
        },
        "id_type_both": {
         "type": "boolean",
         "_name_": "id_type_both",
         "title": "id_type_both",
         "_required_": false
        },
        "local": {
         "type": "boolean",
         "_name_": "local",
         "title": "local",
         "_required_": false
        },
        "nt_name": {
         "_name_": "nt_name",
         "title": "nt_name",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "sid": {
         "_name_": "sid",
         "title": "sid",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "roles": {
         "_name_": "roles",
         "title": "roles",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "role",
           "title": "role",
           "_required_": false,
           "type": "string"
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "group_entry",
       "title": "group_entry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "gid",
        "name",
        "smb",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "users",
        "id",
        "group",
        "builtin",
        "id_type_both",
        "local",
        "nt_name",
        "sid",
        "roles"
       ]
      },
      "description": "`local_groups` is a list of local user account group GIDs that gain this privilege."
     },
     "ds_groups": {
      "_name_": "ds_groups",
      "title": "ds_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "gid": {
         "type": "integer",
         "_name_": "gid",
         "title": "gid",
         "_required_": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "smb": {
         "type": "boolean",
         "_name_": "smb",
         "title": "smb",
         "default": true,
         "_required_": false
        },
        "sudo_commands": {
         "_name_": "sudo_commands",
         "title": "sudo_commands",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "sudo_commands_nopasswd": {
         "_name_": "sudo_commands_nopasswd",
         "title": "sudo_commands_nopasswd",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "users": {
         "_name_": "users",
         "title": "users",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "_required_": false
        },
        "group": {
         "_name_": "group",
         "title": "group",
         "_required_": false,
         "type": "string"
        },
        "builtin": {
         "type": "boolean",
         "_name_": "builtin",
         "title": "builtin",
         "_required_": false
        },
        "id_type_both": {
         "type": "boolean",
         "_name_": "id_type_both",
         "title": "id_type_both",
         "_required_": false
        },
        "local": {
         "type": "boolean",
         "_name_": "local",
         "title": "local",
         "_required_": false
        },
        "nt_name": {
         "_name_": "nt_name",
         "title": "nt_name",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "sid": {
         "_name_": "sid",
         "title": "sid",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "roles": {
         "_name_": "roles",
         "title": "roles",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "role",
           "title": "role",
           "_required_": false,
           "type": "string"
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "group_entry",
       "title": "group_entry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "gid",
        "name",
        "smb",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "users",
        "id",
        "group",
        "builtin",
        "id_type_both",
        "local",
        "nt_name",
        "sid",
        "roles"
       ]
      },
      "description": "`ds_groups` is list of Directory Service group GIDs that will gain this privilege."
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      },
      "description": "`allowlist` is a list of API endpoints allowed for this privilege."
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     },
     "web_shell": {
      "type": "boolean",
      "_name_": "web_shell",
      "title": "web_shell"
     }
    },
    "additionalProperties": false,
    "_name_": "privilege_create_returns",
    "title": "privilege_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "builtin_name",
     "name",
     "local_groups",
     "ds_groups",
     "allowlist",
     "roles",
     "web_shell"
    ]
   },
   "return_schema_of_privilege_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "privilege_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update the privilege `id`.\nCreates a privilege."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` is a name for privilege (must be unique)."
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      },
      "description": "`allowlist` is a list of API endpoints allowed for this privilege."
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     },
     "web_shell": {
      "type": "boolean",
      "_name_": "web_shell",
      "title": "web_shell"
     },
     "local_groups": {
      "_name_": "local_groups",
      "title": "local_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "local_group",
       "title": "local_group",
       "_required_": false
      },
      "description": "`local_groups` is a list of local user account group GIDs that gain this privilege."
     },
     "ds_groups": {
      "_name_": "ds_groups",
      "title": "ds_groups",
      "default": [],
      "type": "array",
      "items": {
       "oneOf": [
        {
         "type": "integer",
         "_name_": "ds_group_gid",
         "title": "ds_group_gid",
         "_required_": false
        },
        {
         "_name_": "ds_group_sid",
         "title": "ds_group_sid",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "description": "`ds_groups` is list of Directory Service group GIDs that will gain this privilege."
     }
    },
    "additionalProperties": false,
    "_name_": "privilege_update",
    "title": "privilege_update",
    "default": {},
    "_attrs_order_": [
     "id",
     "name",
     "allowlist",
     "roles",
     "web_shell",
     "local_groups",
     "ds_groups"
    ]
   },
   "return_schema_of_privilege_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update the privilege `id`.\nCreates a privilege."
     },
     "builtin_name": {
      "_name_": "builtin_name",
      "title": "builtin_name",
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "`name` is a name for privilege (must be unique)."
     },
     "local_groups": {
      "_name_": "local_groups",
      "title": "local_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "gid": {
         "type": "integer",
         "_name_": "gid",
         "title": "gid",
         "_required_": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "smb": {
         "type": "boolean",
         "_name_": "smb",
         "title": "smb",
         "default": true,
         "_required_": false
        },
        "sudo_commands": {
         "_name_": "sudo_commands",
         "title": "sudo_commands",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "sudo_commands_nopasswd": {
         "_name_": "sudo_commands_nopasswd",
         "title": "sudo_commands_nopasswd",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "users": {
         "_name_": "users",
         "title": "users",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "_required_": false
        },
        "group": {
         "_name_": "group",
         "title": "group",
         "_required_": false,
         "type": "string"
        },
        "builtin": {
         "type": "boolean",
         "_name_": "builtin",
         "title": "builtin",
         "_required_": false
        },
        "id_type_both": {
         "type": "boolean",
         "_name_": "id_type_both",
         "title": "id_type_both",
         "_required_": false
        },
        "local": {
         "type": "boolean",
         "_name_": "local",
         "title": "local",
         "_required_": false
        },
        "nt_name": {
         "_name_": "nt_name",
         "title": "nt_name",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "sid": {
         "_name_": "sid",
         "title": "sid",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "roles": {
         "_name_": "roles",
         "title": "roles",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "role",
           "title": "role",
           "_required_": false,
           "type": "string"
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "group_entry",
       "title": "group_entry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "gid",
        "name",
        "smb",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "users",
        "id",
        "group",
        "builtin",
        "id_type_both",
        "local",
        "nt_name",
        "sid",
        "roles"
       ]
      },
      "description": "`local_groups` is a list of local user account group GIDs that gain this privilege."
     },
     "ds_groups": {
      "_name_": "ds_groups",
      "title": "ds_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "gid": {
         "type": "integer",
         "_name_": "gid",
         "title": "gid",
         "_required_": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "smb": {
         "type": "boolean",
         "_name_": "smb",
         "title": "smb",
         "default": true,
         "_required_": false
        },
        "sudo_commands": {
         "_name_": "sudo_commands",
         "title": "sudo_commands",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "sudo_commands_nopasswd": {
         "_name_": "sudo_commands_nopasswd",
         "title": "sudo_commands_nopasswd",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "users": {
         "_name_": "users",
         "title": "users",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "_required_": false
        },
        "group": {
         "_name_": "group",
         "title": "group",
         "_required_": false,
         "type": "string"
        },
        "builtin": {
         "type": "boolean",
         "_name_": "builtin",
         "title": "builtin",
         "_required_": false
        },
        "id_type_both": {
         "type": "boolean",
         "_name_": "id_type_both",
         "title": "id_type_both",
         "_required_": false
        },
        "local": {
         "type": "boolean",
         "_name_": "local",
         "title": "local",
         "_required_": false
        },
        "nt_name": {
         "_name_": "nt_name",
         "title": "nt_name",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "sid": {
         "_name_": "sid",
         "title": "sid",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "roles": {
         "_name_": "roles",
         "title": "roles",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "role",
           "title": "role",
           "_required_": false,
           "type": "string"
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "group_entry",
       "title": "group_entry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "gid",
        "name",
        "smb",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "users",
        "id",
        "group",
        "builtin",
        "id_type_both",
        "local",
        "nt_name",
        "sid",
        "roles"
       ]
      },
      "description": "`ds_groups` is list of Directory Service group GIDs that will gain this privilege."
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      },
      "description": "`allowlist` is a list of API endpoints allowed for this privilege."
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     },
     "web_shell": {
      "type": "boolean",
      "_name_": "web_shell",
      "title": "web_shell"
     }
    },
    "additionalProperties": false,
    "_name_": "privilege_update_returns",
    "title": "privilege_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "builtin_name",
     "name",
     "local_groups",
     "ds_groups",
     "allowlist",
     "roles",
     "web_shell"
    ]
   },
   "privilege_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "privilege_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "privilege_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/privilege_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/privilege_get_instance_1"
     }
    }
   },
   "return_schema_of_privilege_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "builtin_name": {
      "_name_": "builtin_name",
      "title": "builtin_name",
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "local_groups": {
      "_name_": "local_groups",
      "title": "local_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "gid": {
         "type": "integer",
         "_name_": "gid",
         "title": "gid",
         "_required_": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "smb": {
         "type": "boolean",
         "_name_": "smb",
         "title": "smb",
         "default": true,
         "_required_": false
        },
        "sudo_commands": {
         "_name_": "sudo_commands",
         "title": "sudo_commands",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "sudo_commands_nopasswd": {
         "_name_": "sudo_commands_nopasswd",
         "title": "sudo_commands_nopasswd",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "users": {
         "_name_": "users",
         "title": "users",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "_required_": false
        },
        "group": {
         "_name_": "group",
         "title": "group",
         "_required_": false,
         "type": "string"
        },
        "builtin": {
         "type": "boolean",
         "_name_": "builtin",
         "title": "builtin",
         "_required_": false
        },
        "id_type_both": {
         "type": "boolean",
         "_name_": "id_type_both",
         "title": "id_type_both",
         "_required_": false
        },
        "local": {
         "type": "boolean",
         "_name_": "local",
         "title": "local",
         "_required_": false
        },
        "nt_name": {
         "_name_": "nt_name",
         "title": "nt_name",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "sid": {
         "_name_": "sid",
         "title": "sid",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "roles": {
         "_name_": "roles",
         "title": "roles",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "role",
           "title": "role",
           "_required_": false,
           "type": "string"
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "group_entry",
       "title": "group_entry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "gid",
        "name",
        "smb",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "users",
        "id",
        "group",
        "builtin",
        "id_type_both",
        "local",
        "nt_name",
        "sid",
        "roles"
       ]
      }
     },
     "ds_groups": {
      "_name_": "ds_groups",
      "title": "ds_groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "gid": {
         "type": "integer",
         "_name_": "gid",
         "title": "gid",
         "_required_": false
        },
        "name": {
         "_name_": "name",
         "title": "name",
         "_required_": true,
         "type": "string"
        },
        "smb": {
         "type": "boolean",
         "_name_": "smb",
         "title": "smb",
         "default": true,
         "_required_": false
        },
        "sudo_commands": {
         "_name_": "sudo_commands",
         "title": "sudo_commands",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "sudo_commands_nopasswd": {
         "_name_": "sudo_commands_nopasswd",
         "title": "sudo_commands_nopasswd",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "command",
           "title": "command",
           "_required_": false,
           "type": "string"
          }
         ]
        },
        "users": {
         "_name_": "users",
         "title": "users",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         ]
        },
        "id": {
         "type": "integer",
         "_name_": "id",
         "title": "id",
         "_required_": false
        },
        "group": {
         "_name_": "group",
         "title": "group",
         "_required_": false,
         "type": "string"
        },
        "builtin": {
         "type": "boolean",
         "_name_": "builtin",
         "title": "builtin",
         "_required_": false
        },
        "id_type_both": {
         "type": "boolean",
         "_name_": "id_type_both",
         "title": "id_type_both",
         "_required_": false
        },
        "local": {
         "type": "boolean",
         "_name_": "local",
         "title": "local",
         "_required_": false
        },
        "nt_name": {
         "_name_": "nt_name",
         "title": "nt_name",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "sid": {
         "_name_": "sid",
         "title": "sid",
         "_required_": false,
         "type": [
          "string",
          "null"
         ]
        },
        "roles": {
         "_name_": "roles",
         "title": "roles",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "_name_": "role",
           "title": "role",
           "_required_": false,
           "type": "string"
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "group_entry",
       "title": "group_entry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "gid",
        "name",
        "smb",
        "sudo_commands",
        "sudo_commands_nopasswd",
        "users",
        "id",
        "group",
        "builtin",
        "id_type_both",
        "local",
        "nt_name",
        "sid",
        "roles"
       ]
      }
     },
     "allowlist": {
      "_name_": "allowlist",
      "title": "allowlist",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "method": {
         "_name_": "method",
         "title": "method",
         "_required_": true,
         "type": "string",
         "enum": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "CALL",
          "SUBSCRIBE",
          "*"
         ]
        },
        "resource": {
         "_name_": "resource",
         "title": "resource",
         "_required_": true,
         "type": "string"
        }
       },
       "additionalProperties": false,
       "_name_": "allowlist_item",
       "title": "allowlist_item",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "method",
        "resource"
       ]
      }
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     },
     "web_shell": {
      "type": "boolean",
      "_name_": "web_shell",
      "title": "web_shell"
     }
    },
    "additionalProperties": false,
    "_name_": "privilege_entry",
    "title": "privilege_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "builtin_name",
     "name",
     "local_groups",
     "ds_groups",
     "allowlist",
     "roles",
     "web_shell"
    ]
   },
   "return_schema_of_privilege_roles": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "_required_": false,
        "type": "string"
       },
       "includes": {
        "_name_": "includes",
        "title": "includes",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "role",
      "title": "role",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "title",
       "includes",
       "builtin"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "title": {
          "_name_": "title",
          "title": "title",
          "_required_": false,
          "type": "string"
         },
         "includes": {
          "_name_": "includes",
          "title": "includes",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "name",
            "title": "name",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "builtin": {
          "type": "boolean",
          "_name_": "builtin",
          "title": "builtin",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "role",
        "title": "role",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "title",
         "includes",
         "builtin"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_replication_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "replication_entry",
        "title": "replication_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "replication_entry",
      "title": "replication_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "replication_entry",
      "title": "replication_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "replication_create": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "* `name` specifies a name for replication task"
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ],
      "description": "* `direction` specifies whether task will `PUSH` or `PULL` snapshots"
     },
     "transport": {
      "_name_": "transport",
      "title": "transport",
      "type": "string",
      "enum": [
       "SSH",
       "SSH+NETCAT",
       "LOCAL"
      ],
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
     },
     "ssh_credentials": {
      "type": "integer",
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": null,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_active_side": {
      "_name_": "netcat_active_side",
      "title": "netcat_active_side",
      "default": null,
      "type": "string",
      "enum": [
       "LOCAL",
       "REMOTE"
      ],
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_active_side_listen_address": {
      "_name_": "netcat_active_side_listen_address",
      "title": "netcat_active_side_listen_address",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "netcat_active_side_port_min": {
      "type": "integer",
      "_name_": "netcat_active_side_port_min",
      "title": "netcat_active_side_port_min",
      "default": null,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_active_side_port_max": {
      "type": "integer",
      "_name_": "netcat_active_side_port_max",
      "title": "netcat_active_side_port_max",
      "default": null,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_passive_side_connect_address": {
      "_name_": "netcat_passive_side_connect_address",
      "title": "netcat_passive_side_connect_address",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "sudo": {
      "type": "boolean",
      "_name_": "sudo",
      "title": "sudo",
      "default": false,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
     },
     "source_datasets": {
      "_name_": "source_datasets",
      "title": "source_datasets",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      },
      "description": "* `source_datasets` is a non-empty list of datasets to replicate snapshots from"
     },
     "target_dataset": {
      "_name_": "target_dataset",
      "title": "target_dataset",
      "type": "string",
      "description": "* `target_dataset` is a dataset to put snapshots into. It must exist on target side"
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      },
      "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
     },
     "properties": {
      "type": "boolean",
      "_name_": "properties",
      "title": "properties",
      "default": true,
      "description": "* `properties` control whether we should send dataset properties along with snapshots"
     },
     "properties_exclude": {
      "_name_": "properties_exclude",
      "title": "properties_exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "property",
       "title": "property",
       "_required_": false,
       "type": "string"
      }
     },
     "properties_override": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties_override",
      "title": "properties_override",
      "default": {},
      "_attrs_order_": []
     },
     "replicate": {
      "type": "boolean",
      "_name_": "replicate",
      "title": "replicate",
      "default": false
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "encryption_inherit": {
      "type": "boolean",
      "_name_": "encryption_inherit",
      "title": "encryption_inherit",
      "default": null,
      "nullable": true
     },
     "encryption_key": {
      "_name_": "encryption_key",
      "title": "encryption_key",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "encryption_key_format": {
      "_name_": "encryption_key_format",
      "title": "encryption_key_format",
      "default": null,
      "type": "string",
      "enum": [
       "HEX",
       "PASSPHRASE"
      ],
      "nullable": true
     },
     "encryption_key_location": {
      "_name_": "encryption_key_location",
      "title": "encryption_key_location",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "periodic_snapshot_tasks": {
      "_name_": "periodic_snapshot_tasks",
      "title": "periodic_snapshot_tasks",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "periodic_snapshot_task",
       "title": "periodic_snapshot_task",
       "_required_": false
      },
      "description": "* `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this\n  replication task. Only push replication tasks can be bound to periodic snapshot tasks."
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      },
      "description": "* `naming_schema` is a list of naming schemas for pull replication"
     },
     "also_include_naming_schema": {
      "_name_": "also_include_naming_schema",
      "title": "also_include_naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      },
      "description": "* `also_include_naming_schema` is a list of naming schemas for push replication"
     },
     "name_regex": {
      "_name_": "name_regex",
      "title": "name_regex",
      "default": null,
      "type": "string",
      "description": "* `name_regex` will replicate all snapshots which names match specified regular expression",
      "nullable": true
     },
     "auto": {
      "type": "boolean",
      "_name_": "auto",
      "title": "auto",
      "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": null,
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ],
      "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
     },
     "restrict_schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "restrict_schedule",
      "title": "restrict_schedule",
      "default": null,
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ],
      "description": "* `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,\n  you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
     },
     "only_matching_schedule": {
      "type": "boolean",
      "_name_": "only_matching_schedule",
      "title": "only_matching_schedule",
      "default": false,
      "description": "* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
     },
     "allow_from_scratch": {
      "type": "boolean",
      "_name_": "allow_from_scratch",
      "title": "allow_from_scratch",
      "default": false,
      "description": "* `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none\n  of the snapshots on target side matches source snapshots"
     },
     "readonly": {
      "_name_": "readonly",
      "title": "readonly",
      "default": "SET",
      "type": "string",
      "enum": [
       "SET",
       "REQUIRE",
       "IGNORE"
      ],
      "description": "* `readonly` controls destination datasets readonly property:\n  * `SET` will set all destination datasets to readonly=on after finishing the replication\n  * `REQUIRE` will require all existing destination datasets to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior"
     },
     "hold_pending_snapshots": {
      "type": "boolean",
      "_name_": "hold_pending_snapshots",
      "title": "hold_pending_snapshots",
      "default": false,
      "description": "* `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails\n  for some reason"
     },
     "retention_policy": {
      "_name_": "retention_policy",
      "title": "retention_policy",
      "type": "string",
      "enum": [
       "SOURCE",
       "CUSTOM",
       "NONE"
      ],
      "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots"
     },
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value",
      "default": null,
      "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
      "nullable": true
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "default": null,
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
      "nullable": true
     },
     "lifetimes": {
      "_name_": "lifetimes",
      "title": "lifetimes",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "lifetime_value": {
         "type": "integer",
         "_name_": "lifetime_value",
         "title": "lifetime_value",
         "_required_": true
        },
        "lifetime_unit": {
         "_name_": "lifetime_unit",
         "title": "lifetime_unit",
         "_required_": true,
         "type": "string",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "lifetime",
       "title": "lifetime",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "schedule",
        "lifetime_value",
        "lifetime_unit"
       ]
      }
     },
     "compression": {
      "_name_": "compression",
      "title": "compression",
      "default": null,
      "type": "string",
      "enum": [
       "LZ4",
       "PIGZ",
       "PLZIP"
      ],
      "description": "* `compression` compresses SSH stream. Available only for SSH transport",
      "nullable": true
     },
     "speed_limit": {
      "type": "integer",
      "_name_": "speed_limit",
      "title": "speed_limit",
      "default": null,
      "description": "* `speed_limit` limits speed of SSH stream. Available only for SSH transport",
      "nullable": true
     },
     "large_block": {
      "type": "boolean",
      "_name_": "large_block",
      "title": "large_block",
      "default": true,
      "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
     },
     "embed": {
      "type": "boolean",
      "_name_": "embed",
      "title": "embed",
      "default": false,
      "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
     },
     "compressed": {
      "type": "boolean",
      "_name_": "compressed",
      "title": "compressed",
      "default": true,
      "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
     },
     "retries": {
      "type": "integer",
      "_name_": "retries",
      "title": "retries",
      "default": 5,
      "description": "* `retries` specifies number of retries before considering replication failed"
     },
     "logging_level": {
      "_name_": "logging_level",
      "title": "logging_level",
      "default": null,
      "type": "string",
      "enum": [
       "DEBUG",
       "INFO",
       "WARNING",
       "ERROR"
      ],
      "nullable": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "replication_create",
    "title": "replication_create",
    "default": {},
    "_attrs_order_": [
     "name",
     "direction",
     "transport",
     "ssh_credentials",
     "netcat_active_side",
     "netcat_active_side_listen_address",
     "netcat_active_side_port_min",
     "netcat_active_side_port_max",
     "netcat_passive_side_connect_address",
     "sudo",
     "source_datasets",
     "target_dataset",
     "recursive",
     "exclude",
     "properties",
     "properties_exclude",
     "properties_override",
     "replicate",
     "encryption",
     "encryption_inherit",
     "encryption_key",
     "encryption_key_format",
     "encryption_key_location",
     "periodic_snapshot_tasks",
     "naming_schema",
     "also_include_naming_schema",
     "name_regex",
     "auto",
     "schedule",
     "restrict_schedule",
     "only_matching_schedule",
     "allow_from_scratch",
     "readonly",
     "hold_pending_snapshots",
     "retention_policy",
     "lifetime_value",
     "lifetime_unit",
     "lifetimes",
     "compression",
     "speed_limit",
     "large_block",
     "embed",
     "compressed",
     "retries",
     "logging_level",
     "enabled"
    ]
   },
   "return_schema_of_replication_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "replication_create_returns",
    "title": "replication_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_replication_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "replication_update": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "* `name` specifies a name for replication task"
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ],
      "description": "* `direction` specifies whether task will `PUSH` or `PULL` snapshots"
     },
     "transport": {
      "_name_": "transport",
      "title": "transport",
      "type": "string",
      "enum": [
       "SSH",
       "SSH+NETCAT",
       "LOCAL"
      ],
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
     },
     "ssh_credentials": {
      "type": "integer",
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": null,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_active_side": {
      "_name_": "netcat_active_side",
      "title": "netcat_active_side",
      "default": null,
      "type": "string",
      "enum": [
       "LOCAL",
       "REMOTE"
      ],
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_active_side_listen_address": {
      "_name_": "netcat_active_side_listen_address",
      "title": "netcat_active_side_listen_address",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "netcat_active_side_port_min": {
      "type": "integer",
      "_name_": "netcat_active_side_port_min",
      "title": "netcat_active_side_port_min",
      "default": null,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_active_side_port_max": {
      "type": "integer",
      "_name_": "netcat_active_side_port_max",
      "title": "netcat_active_side_port_max",
      "default": null,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine.",
      "nullable": true
     },
     "netcat_passive_side_connect_address": {
      "_name_": "netcat_passive_side_connect_address",
      "title": "netcat_passive_side_connect_address",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "sudo": {
      "type": "boolean",
      "_name_": "sudo",
      "title": "sudo",
      "default": false,
      "description": "* `transport` is a method of snapshots transfer:\n  * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve\n    great performance\n    `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks\n    and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n    to be open on `netcat_active_side`\n    `ssh_credentials` is also required for control connection\n  * `LOCAL` replicates to or from localhost\n  `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be\n  passwordless) to run `zfs` command on the remote machine."
     },
     "source_datasets": {
      "_name_": "source_datasets",
      "title": "source_datasets",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      },
      "description": "* `source_datasets` is a non-empty list of datasets to replicate snapshots from"
     },
     "target_dataset": {
      "_name_": "target_dataset",
      "title": "target_dataset",
      "type": "string",
      "description": "* `target_dataset` is a dataset to put snapshots into. It must exist on target side"
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      },
      "description": "* `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task"
     },
     "properties": {
      "type": "boolean",
      "_name_": "properties",
      "title": "properties",
      "default": true,
      "description": "* `properties` control whether we should send dataset properties along with snapshots"
     },
     "properties_exclude": {
      "_name_": "properties_exclude",
      "title": "properties_exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "property",
       "title": "property",
       "_required_": false,
       "type": "string"
      }
     },
     "properties_override": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties_override",
      "title": "properties_override",
      "default": {},
      "_attrs_order_": []
     },
     "replicate": {
      "type": "boolean",
      "_name_": "replicate",
      "title": "replicate",
      "default": false
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "encryption_inherit": {
      "type": "boolean",
      "_name_": "encryption_inherit",
      "title": "encryption_inherit",
      "default": null,
      "nullable": true
     },
     "encryption_key": {
      "_name_": "encryption_key",
      "title": "encryption_key",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "encryption_key_format": {
      "_name_": "encryption_key_format",
      "title": "encryption_key_format",
      "default": null,
      "type": "string",
      "enum": [
       "HEX",
       "PASSPHRASE"
      ],
      "nullable": true
     },
     "encryption_key_location": {
      "_name_": "encryption_key_location",
      "title": "encryption_key_location",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "periodic_snapshot_tasks": {
      "_name_": "periodic_snapshot_tasks",
      "title": "periodic_snapshot_tasks",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "periodic_snapshot_task",
       "title": "periodic_snapshot_task",
       "_required_": false
      },
      "description": "* `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this\n  replication task. Only push replication tasks can be bound to periodic snapshot tasks."
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      },
      "description": "* `naming_schema` is a list of naming schemas for pull replication"
     },
     "also_include_naming_schema": {
      "_name_": "also_include_naming_schema",
      "title": "also_include_naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      },
      "description": "* `also_include_naming_schema` is a list of naming schemas for push replication"
     },
     "name_regex": {
      "_name_": "name_regex",
      "title": "name_regex",
      "default": null,
      "type": "string",
      "description": "* `name_regex` will replicate all snapshots which names match specified regular expression",
      "nullable": true
     },
     "auto": {
      "type": "boolean",
      "_name_": "auto",
      "title": "auto",
      "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": null,
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ],
      "description": "* `auto` allows replication to run automatically on schedule or after bound periodic snapshot task\n* `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic\n  snapshot tasks can have a schedule\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
     },
     "restrict_schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "restrict_schedule",
      "title": "restrict_schedule",
      "default": null,
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ],
      "description": "* `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,\n  you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.\n* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
     },
     "only_matching_schedule": {
      "type": "boolean",
      "_name_": "only_matching_schedule",
      "title": "only_matching_schedule",
      "default": false,
      "description": "* Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or\n  `restrict_schedule`"
     },
     "allow_from_scratch": {
      "type": "boolean",
      "_name_": "allow_from_scratch",
      "title": "allow_from_scratch",
      "default": false,
      "description": "* `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none\n  of the snapshots on target side matches source snapshots"
     },
     "readonly": {
      "_name_": "readonly",
      "title": "readonly",
      "default": "SET",
      "type": "string",
      "enum": [
       "SET",
       "REQUIRE",
       "IGNORE"
      ],
      "description": "* `readonly` controls destination datasets readonly property:\n  * `SET` will set all destination datasets to readonly=on after finishing the replication\n  * `REQUIRE` will require all existing destination datasets to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior"
     },
     "hold_pending_snapshots": {
      "type": "boolean",
      "_name_": "hold_pending_snapshots",
      "title": "hold_pending_snapshots",
      "default": false,
      "description": "* `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails\n  for some reason"
     },
     "retention_policy": {
      "_name_": "retention_policy",
      "title": "retention_policy",
      "type": "string",
      "enum": [
       "SOURCE",
       "CUSTOM",
       "NONE"
      ],
      "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots"
     },
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value",
      "default": null,
      "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
      "nullable": true
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "default": null,
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "description": "* `retention_policy` specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does not delete any snapshots",
      "nullable": true
     },
     "lifetimes": {
      "_name_": "lifetimes",
      "title": "lifetimes",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "lifetime_value": {
         "type": "integer",
         "_name_": "lifetime_value",
         "title": "lifetime_value",
         "_required_": true
        },
        "lifetime_unit": {
         "_name_": "lifetime_unit",
         "title": "lifetime_unit",
         "_required_": true,
         "type": "string",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "lifetime",
       "title": "lifetime",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "schedule",
        "lifetime_value",
        "lifetime_unit"
       ]
      }
     },
     "compression": {
      "_name_": "compression",
      "title": "compression",
      "default": null,
      "type": "string",
      "enum": [
       "LZ4",
       "PIGZ",
       "PLZIP"
      ],
      "description": "* `compression` compresses SSH stream. Available only for SSH transport",
      "nullable": true
     },
     "speed_limit": {
      "type": "integer",
      "_name_": "speed_limit",
      "title": "speed_limit",
      "default": null,
      "description": "* `speed_limit` limits speed of SSH stream. Available only for SSH transport",
      "nullable": true
     },
     "large_block": {
      "type": "boolean",
      "_name_": "large_block",
      "title": "large_block",
      "default": true,
      "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
     },
     "embed": {
      "type": "boolean",
      "_name_": "embed",
      "title": "embed",
      "default": false,
      "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
     },
     "compressed": {
      "type": "boolean",
      "_name_": "compressed",
      "title": "compressed",
      "default": true,
      "description": "* `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`"
     },
     "retries": {
      "type": "integer",
      "_name_": "retries",
      "title": "retries",
      "default": 5,
      "description": "* `retries` specifies number of retries before considering replication failed"
     },
     "logging_level": {
      "_name_": "logging_level",
      "title": "logging_level",
      "default": null,
      "type": "string",
      "enum": [
       "DEBUG",
       "INFO",
       "WARNING",
       "ERROR"
      ],
      "nullable": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "replication_update",
    "title": "replication_update",
    "default": {},
    "_attrs_order_": [
     "name",
     "direction",
     "transport",
     "ssh_credentials",
     "netcat_active_side",
     "netcat_active_side_listen_address",
     "netcat_active_side_port_min",
     "netcat_active_side_port_max",
     "netcat_passive_side_connect_address",
     "sudo",
     "source_datasets",
     "target_dataset",
     "recursive",
     "exclude",
     "properties",
     "properties_exclude",
     "properties_override",
     "replicate",
     "encryption",
     "encryption_inherit",
     "encryption_key",
     "encryption_key_format",
     "encryption_key_location",
     "periodic_snapshot_tasks",
     "naming_schema",
     "also_include_naming_schema",
     "name_regex",
     "auto",
     "schedule",
     "restrict_schedule",
     "only_matching_schedule",
     "allow_from_scratch",
     "readonly",
     "hold_pending_snapshots",
     "retention_policy",
     "lifetime_value",
     "lifetime_unit",
     "lifetimes",
     "compression",
     "speed_limit",
     "large_block",
     "embed",
     "compressed",
     "retries",
     "logging_level",
     "enabled"
    ]
   },
   "return_schema_of_replication_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "replication_update_returns",
    "title": "replication_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "replication_count_eligible_manual_snapshots": {
    "type": "object",
    "properties": {
     "datasets": {
      "_name_": "datasets",
      "title": "datasets",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      }
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      },
      "description": "Count how many existing snapshots of `dataset` match `naming_schema`."
     },
     "name_regex": {
      "_name_": "name_regex",
      "title": "name_regex",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "transport": {
      "_name_": "transport",
      "title": "transport",
      "type": "string",
      "enum": [
       "SSH",
       "SSH+NETCAT",
       "LOCAL"
      ]
     },
     "ssh_credentials": {
      "type": "integer",
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": null,
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "count_eligible_manual_snapshots",
    "title": "count_eligible_manual_snapshots",
    "default": {},
    "_attrs_order_": [
     "datasets",
     "naming_schema",
     "name_regex",
     "transport",
     "ssh_credentials"
    ]
   },
   "return_schema_of_replication_count_eligible_manual_snapshots": {
    "type": "object",
    "properties": {
     "total": {
      "type": "integer",
      "_name_": "total",
      "title": "total"
     },
     "eligible": {
      "type": "integer",
      "_name_": "eligible",
      "title": "eligible"
     }
    },
    "additionalProperties": false,
    "_name_": "count_eligible_manual_snapshots",
    "title": "count_eligible_manual_snapshots",
    "default": {},
    "_attrs_order_": [
     "total",
     "eligible"
    ]
   },
   "replication_create_dataset_0": {
    "_name_": "dataset",
    "title": "dataset",
    "type": "string",
    "description": "Accepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)"
   },
   "replication_create_dataset_1": {
    "_name_": "transport",
    "title": "transport",
    "type": "string",
    "enum": [
     "SSH",
     "SSH+NETCAT",
     "LOCAL"
    ],
    "description": "Accepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)"
   },
   "replication_create_dataset_2": {
    "type": "integer",
    "_name_": "ssh_credentials",
    "title": "ssh_credentials",
    "default": null,
    "nullable": true
   },
   "replication_create_dataset": {
    "type": "object",
    "properties": {
     "dataset": {
      "$ref": "#/components/schemas/replication_create_dataset_0"
     },
     "transport": {
      "$ref": "#/components/schemas/replication_create_dataset_1"
     },
     "ssh_credentials": {
      "$ref": "#/components/schemas/replication_create_dataset_2"
     }
    }
   },
   "replication_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "replication_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "replication_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/replication_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/replication_get_instance_1"
     }
    }
   },
   "return_schema_of_replication_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "replication_entry",
    "title": "replication_entry",
    "default": {},
    "_attrs_order_": []
   },
   "replication_list_datasets_0": {
    "_name_": "transport",
    "title": "transport",
    "type": "string",
    "enum": [
     "SSH",
     "SSH+NETCAT",
     "LOCAL"
    ],
    "description": "Accepts `transport` and SSH credentials ID (for non-local transport)"
   },
   "replication_list_datasets_1": {
    "type": "integer",
    "_name_": "ssh_credentials",
    "title": "ssh_credentials",
    "default": null,
    "nullable": true
   },
   "replication_list_datasets": {
    "type": "object",
    "properties": {
     "transport": {
      "$ref": "#/components/schemas/replication_list_datasets_0"
     },
     "ssh_credentials": {
      "$ref": "#/components/schemas/replication_list_datasets_1"
     }
    }
   },
   "return_schema_of_replication_list_datasets": {
    "_name_": "datasets",
    "title": "datasets",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "dataset",
     "title": "dataset",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_replication_list_naming_schemas": {
    "_name_": "naming_schemas",
    "title": "naming_schemas",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "naming_schema",
     "title": "naming_schema",
     "_required_": false,
     "type": "string"
    }
   },
   "replication_restore": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "target_dataset": {
      "_name_": "target_dataset",
      "title": "target_dataset",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "replication_restore",
    "title": "replication_restore",
    "default": {},
    "_attrs_order_": [
     "name",
     "target_dataset"
    ]
   },
   "replication_run": {
    "type": "object",
    "properties": {}
   },
   "replication_run_onetime": {
    "type": "object",
    "properties": {
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "type": "string",
      "enum": [
       "PUSH",
       "PULL"
      ]
     },
     "transport": {
      "_name_": "transport",
      "title": "transport",
      "type": "string",
      "enum": [
       "SSH",
       "SSH+NETCAT",
       "LOCAL"
      ]
     },
     "ssh_credentials": {
      "type": "integer",
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": null,
      "nullable": true
     },
     "netcat_active_side": {
      "_name_": "netcat_active_side",
      "title": "netcat_active_side",
      "default": null,
      "type": "string",
      "enum": [
       "LOCAL",
       "REMOTE"
      ],
      "nullable": true
     },
     "netcat_active_side_listen_address": {
      "_name_": "netcat_active_side_listen_address",
      "title": "netcat_active_side_listen_address",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "netcat_active_side_port_min": {
      "type": "integer",
      "_name_": "netcat_active_side_port_min",
      "title": "netcat_active_side_port_min",
      "default": null,
      "nullable": true
     },
     "netcat_active_side_port_max": {
      "type": "integer",
      "_name_": "netcat_active_side_port_max",
      "title": "netcat_active_side_port_max",
      "default": null,
      "nullable": true
     },
     "netcat_passive_side_connect_address": {
      "_name_": "netcat_passive_side_connect_address",
      "title": "netcat_passive_side_connect_address",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "sudo": {
      "type": "boolean",
      "_name_": "sudo",
      "title": "sudo",
      "default": false
     },
     "source_datasets": {
      "_name_": "source_datasets",
      "title": "source_datasets",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      }
     },
     "target_dataset": {
      "_name_": "target_dataset",
      "title": "target_dataset",
      "type": "string"
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      }
     },
     "properties": {
      "type": "boolean",
      "_name_": "properties",
      "title": "properties",
      "default": true
     },
     "properties_exclude": {
      "_name_": "properties_exclude",
      "title": "properties_exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "property",
       "title": "property",
       "_required_": false,
       "type": "string"
      }
     },
     "properties_override": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties_override",
      "title": "properties_override",
      "default": {},
      "_attrs_order_": []
     },
     "replicate": {
      "type": "boolean",
      "_name_": "replicate",
      "title": "replicate",
      "default": false
     },
     "encryption": {
      "type": "boolean",
      "_name_": "encryption",
      "title": "encryption",
      "default": false
     },
     "encryption_inherit": {
      "type": "boolean",
      "_name_": "encryption_inherit",
      "title": "encryption_inherit",
      "default": null,
      "nullable": true
     },
     "encryption_key": {
      "_name_": "encryption_key",
      "title": "encryption_key",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "encryption_key_format": {
      "_name_": "encryption_key_format",
      "title": "encryption_key_format",
      "default": null,
      "type": "string",
      "enum": [
       "HEX",
       "PASSPHRASE"
      ],
      "nullable": true
     },
     "encryption_key_location": {
      "_name_": "encryption_key_location",
      "title": "encryption_key_location",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "periodic_snapshot_tasks": {
      "_name_": "periodic_snapshot_tasks",
      "title": "periodic_snapshot_tasks",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "periodic_snapshot_task",
       "title": "periodic_snapshot_task",
       "_required_": false
      }
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      }
     },
     "also_include_naming_schema": {
      "_name_": "also_include_naming_schema",
      "title": "also_include_naming_schema",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "naming_schema",
       "title": "naming_schema",
       "_required_": false,
       "type": "string"
      }
     },
     "name_regex": {
      "_name_": "name_regex",
      "title": "name_regex",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "restrict_schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       },
       "begin": {
        "_name_": "begin",
        "title": "begin",
        "default": "00:00",
        "type": "string"
       },
       "end": {
        "_name_": "end",
        "title": "end",
        "default": "23:59",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "restrict_schedule",
      "title": "restrict_schedule",
      "default": null,
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow",
       "begin",
       "end"
      ]
     },
     "allow_from_scratch": {
      "type": "boolean",
      "_name_": "allow_from_scratch",
      "title": "allow_from_scratch",
      "default": false
     },
     "readonly": {
      "_name_": "readonly",
      "title": "readonly",
      "default": "SET",
      "type": "string",
      "enum": [
       "SET",
       "REQUIRE",
       "IGNORE"
      ]
     },
     "hold_pending_snapshots": {
      "type": "boolean",
      "_name_": "hold_pending_snapshots",
      "title": "hold_pending_snapshots",
      "default": false
     },
     "retention_policy": {
      "_name_": "retention_policy",
      "title": "retention_policy",
      "type": "string",
      "enum": [
       "SOURCE",
       "CUSTOM",
       "NONE"
      ]
     },
     "lifetime_value": {
      "type": "integer",
      "_name_": "lifetime_value",
      "title": "lifetime_value",
      "default": null,
      "nullable": true
     },
     "lifetime_unit": {
      "_name_": "lifetime_unit",
      "title": "lifetime_unit",
      "default": null,
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "nullable": true
     },
     "lifetimes": {
      "_name_": "lifetimes",
      "title": "lifetimes",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "schedule": {
         "type": "object",
         "properties": {
          "minute": {
           "_name_": "minute",
           "title": "minute",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "hour": {
           "_name_": "hour",
           "title": "hour",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "dom": {
           "_name_": "dom",
           "title": "dom",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "month": {
           "_name_": "month",
           "title": "month",
           "default": "*",
           "_required_": false,
           "type": "string"
          },
          "dow": {
           "_name_": "dow",
           "title": "dow",
           "default": "*",
           "_required_": false,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "schedule",
         "title": "schedule",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "minute",
          "hour",
          "dom",
          "month",
          "dow"
         ]
        },
        "lifetime_value": {
         "type": "integer",
         "_name_": "lifetime_value",
         "title": "lifetime_value",
         "_required_": true
        },
        "lifetime_unit": {
         "_name_": "lifetime_unit",
         "title": "lifetime_unit",
         "_required_": true,
         "type": "string",
         "enum": [
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "lifetime",
       "title": "lifetime",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "schedule",
        "lifetime_value",
        "lifetime_unit"
       ]
      }
     },
     "compression": {
      "_name_": "compression",
      "title": "compression",
      "default": null,
      "type": "string",
      "enum": [
       "LZ4",
       "PIGZ",
       "PLZIP"
      ],
      "nullable": true
     },
     "speed_limit": {
      "type": "integer",
      "_name_": "speed_limit",
      "title": "speed_limit",
      "default": null,
      "nullable": true
     },
     "large_block": {
      "type": "boolean",
      "_name_": "large_block",
      "title": "large_block",
      "default": true
     },
     "embed": {
      "type": "boolean",
      "_name_": "embed",
      "title": "embed",
      "default": false
     },
     "compressed": {
      "type": "boolean",
      "_name_": "compressed",
      "title": "compressed",
      "default": true
     },
     "retries": {
      "type": "integer",
      "_name_": "retries",
      "title": "retries",
      "default": 5
     },
     "logging_level": {
      "_name_": "logging_level",
      "title": "logging_level",
      "default": null,
      "type": "string",
      "enum": [
       "DEBUG",
       "INFO",
       "WARNING",
       "ERROR"
      ],
      "nullable": true
     },
     "exclude_mountpoint_property": {
      "type": "boolean",
      "_name_": "exclude_mountpoint_property",
      "title": "exclude_mountpoint_property",
      "default": true
     },
     "only_from_scratch": {
      "type": "boolean",
      "_name_": "only_from_scratch",
      "title": "only_from_scratch",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "replication_run_onetime",
    "title": "replication_run_onetime",
    "default": {},
    "_attrs_order_": [
     "direction",
     "transport",
     "ssh_credentials",
     "netcat_active_side",
     "netcat_active_side_listen_address",
     "netcat_active_side_port_min",
     "netcat_active_side_port_max",
     "netcat_passive_side_connect_address",
     "sudo",
     "source_datasets",
     "target_dataset",
     "recursive",
     "exclude",
     "properties",
     "properties_exclude",
     "properties_override",
     "replicate",
     "encryption",
     "encryption_inherit",
     "encryption_key",
     "encryption_key_format",
     "encryption_key_location",
     "periodic_snapshot_tasks",
     "naming_schema",
     "also_include_naming_schema",
     "name_regex",
     "restrict_schedule",
     "allow_from_scratch",
     "readonly",
     "hold_pending_snapshots",
     "retention_policy",
     "lifetime_value",
     "lifetime_unit",
     "lifetimes",
     "compression",
     "speed_limit",
     "large_block",
     "embed",
     "compressed",
     "retries",
     "logging_level",
     "exclude_mountpoint_property",
     "only_from_scratch"
    ]
   },
   "replication_target_unmatched_snapshots_0": {
    "_name_": "direction",
    "title": "direction",
    "type": "string",
    "enum": [
     "PUSH",
     "PULL"
    ]
   },
   "replication_target_unmatched_snapshots_1": {
    "_name_": "source_datasets",
    "title": "source_datasets",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "dataset",
     "title": "dataset",
     "_required_": false,
     "type": "string"
    }
   },
   "replication_target_unmatched_snapshots_2": {
    "_name_": "target_dataset",
    "title": "target_dataset",
    "type": "string"
   },
   "replication_target_unmatched_snapshots_3": {
    "_name_": "transport",
    "title": "transport",
    "type": "string",
    "enum": [
     "SSH",
     "SSH+NETCAT",
     "LOCAL",
     "LEGACY"
    ]
   },
   "replication_target_unmatched_snapshots_4": {
    "type": "integer",
    "_name_": "ssh_credentials",
    "title": "ssh_credentials",
    "default": null,
    "nullable": true
   },
   "replication_target_unmatched_snapshots": {
    "type": "object",
    "properties": {
     "direction": {
      "$ref": "#/components/schemas/replication_target_unmatched_snapshots_0"
     },
     "source_datasets": {
      "$ref": "#/components/schemas/replication_target_unmatched_snapshots_1"
     },
     "target_dataset": {
      "$ref": "#/components/schemas/replication_target_unmatched_snapshots_2"
     },
     "transport": {
      "$ref": "#/components/schemas/replication_target_unmatched_snapshots_3"
     },
     "ssh_credentials": {
      "$ref": "#/components/schemas/replication_target_unmatched_snapshots_4"
     }
    }
   },
   "return_schema_of_replication_target_unmatched_snapshots": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "target_unmatched_snapshots",
    "title": "target_unmatched_snapshots",
    "description": "\n\nExample(s):\n```\n{\n    \"backup/work\": [\n        \"auto-2019-10-15_13-00\",\n        \"auto-2019-10-15_09-00\"\n    ],\n    \"backup/games\": [\n        \"auto-2019-10-15_13-00\"\n    ]\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_replication_config_config": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "replication_config_entry",
    "title": "replication_config_entry",
    "default": {},
    "_attrs_order_": []
   },
   "replication_config_update": {
    "type": "object",
    "properties": {
     "max_parallel_replication_tasks": {
      "type": "integer",
      "_name_": "max_parallel_replication_tasks",
      "title": "max_parallel_replication_tasks",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "replication_config_update",
    "title": "replication_config_update",
    "default": {},
    "_attrs_order_": [
     "max_parallel_replication_tasks"
    ]
   },
   "return_schema_of_replication_config_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "replication_config_update_returns",
    "title": "replication_config_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_reporting_config": {
    "type": "object",
    "properties": {
     "tier1_days": {
      "type": "integer",
      "_name_": "tier1_days",
      "title": "tier1_days"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_entry",
    "title": "reporting_entry",
    "default": {},
    "_attrs_order_": [
     "tier1_days"
    ]
   },
   "reporting_update": {
    "type": "object",
    "properties": {
     "tier1_days": {
      "type": "integer",
      "_name_": "tier1_days",
      "title": "tier1_days"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_update",
    "title": "reporting_update",
    "default": {},
    "_attrs_order_": [
     "tier1_days"
    ]
   },
   "return_schema_of_reporting_update": {
    "type": "object",
    "properties": {
     "tier1_days": {
      "type": "integer",
      "_name_": "tier1_days",
      "title": "tier1_days"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_update_returns",
    "title": "reporting_update_returns",
    "default": {},
    "_attrs_order_": [
     "tier1_days"
    ]
   },
   "reporting_get_data_0": {
    "_name_": "graphs",
    "title": "graphs",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string",
       "enum": [
        "cpu",
        "cputemp",
        "disk",
        "interface",
        "load",
        "processes",
        "memory",
        "swap",
        "uptime",
        "arcactualrate",
        "arcrate",
        "arcsize",
        "arcresult",
        "disktemp",
        "upscharge",
        "upsruntime",
        "upsvoltage",
        "upscurrent",
        "upsfrequency",
        "upsload",
        "upstemperature"
       ]
      },
      "identifier": {
       "_name_": "identifier",
       "title": "identifier",
       "default": null,
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "graph",
     "title": "graph",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "identifier"
     ]
    }
   },
   "reporting_get_data_1": {
    "type": "object",
    "properties": {
     "unit": {
      "_name_": "unit",
      "title": "unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "page": {
      "type": "integer",
      "_name_": "page",
      "title": "page",
      "default": 1,
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "start": {
      "type": "integer",
      "_name_": "start",
      "title": "start",
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "end": {
      "type": "integer",
      "_name_": "end",
      "title": "end",
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "aggregate": {
      "type": "boolean",
      "_name_": "aggregate",
      "title": "aggregate",
      "default": true,
      "description": "`aggregate` will return aggregate available data for each graph (e.g. min, max, mean)."
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_query",
    "title": "reporting_query",
    "default": {},
    "_attrs_order_": [
     "unit",
     "page",
     "start",
     "end",
     "aggregate"
    ]
   },
   "reporting_get_data": {
    "type": "object",
    "properties": {
     "graphs": {
      "$ref": "#/components/schemas/reporting_get_data_0"
     },
     "reporting_query": {
      "$ref": "#/components/schemas/reporting_get_data_1"
     }
    }
   },
   "return_schema_of_reporting_get_data": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string",
      "nullable": true
     },
     "data": {
      "_name_": "data",
      "title": "data",
      "default": [],
      "type": "array",
      "items": {}
     },
     "aggregations": {
      "type": "object",
      "properties": {
       "min": {
        "_name_": "min",
        "title": "min",
        "default": [],
        "type": "array",
        "items": {}
       },
       "max": {
        "_name_": "max",
        "title": "max",
        "default": [],
        "type": "array",
        "items": {}
       },
       "mean": {
        "_name_": "mean",
        "title": "mean",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "aggregations",
      "title": "aggregations",
      "default": {},
      "_attrs_order_": [
       "min",
       "max",
       "mean"
      ]
     }
    },
    "additionalProperties": true,
    "_name_": "netdata_graph_reporting_data",
    "title": "netdata_graph_reporting_data",
    "default": {},
    "_attrs_order_": [
     "name",
     "identifier",
     "data",
     "aggregations"
    ]
   },
   "reporting_graph_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "reporting_graph_1": {
    "type": "object",
    "properties": {
     "unit": {
      "_name_": "unit",
      "title": "unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ]
     },
     "page": {
      "type": "integer",
      "_name_": "page",
      "title": "page",
      "default": 1
     },
     "start": {
      "type": "integer",
      "_name_": "start",
      "title": "start"
     },
     "end": {
      "type": "integer",
      "_name_": "end",
      "title": "end"
     },
     "aggregate": {
      "type": "boolean",
      "_name_": "aggregate",
      "title": "aggregate",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_query",
    "title": "reporting_query",
    "default": {},
    "_attrs_order_": [
     "unit",
     "page",
     "start",
     "end",
     "aggregate"
    ]
   },
   "reporting_graph": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/reporting_graph_0"
     },
     "reporting_query": {
      "$ref": "#/components/schemas/reporting_graph_1"
     }
    }
   },
   "return_schema_of_reporting_graph": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string",
      "nullable": true
     },
     "data": {
      "_name_": "data",
      "title": "data",
      "default": [],
      "type": "array",
      "items": {}
     },
     "aggregations": {
      "type": "object",
      "properties": {
       "min": {
        "_name_": "min",
        "title": "min",
        "default": [],
        "type": "array",
        "items": {}
       },
       "max": {
        "_name_": "max",
        "title": "max",
        "default": [],
        "type": "array",
        "items": {}
       },
       "mean": {
        "_name_": "mean",
        "title": "mean",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "aggregations",
      "title": "aggregations",
      "default": {},
      "_attrs_order_": [
       "min",
       "max",
       "mean"
      ]
     }
    },
    "additionalProperties": true,
    "_name_": "netdata_graph_reporting_data",
    "title": "netdata_graph_reporting_data",
    "default": {},
    "_attrs_order_": [
     "name",
     "identifier",
     "data",
     "aggregations"
    ]
   },
   "return_schema_of_reporting_graphs": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "_required_": false,
        "type": "string"
       },
       "vertical_label": {
        "_name_": "vertical_label",
        "title": "vertical_label",
        "_required_": false,
        "type": "string"
       },
       "identifiers": {
        "_name_": "identifiers",
        "title": "identifiers",
        "default": [],
        "_required_": false,
        "type": [
         "array",
         "null"
        ],
        "items": [
         {
          "_name_": "identifier",
          "title": "identifier",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "reporting_graph",
      "title": "reporting_graph",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "title",
       "vertical_label",
       "identifiers"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "title": {
          "_name_": "title",
          "title": "title",
          "_required_": false,
          "type": "string"
         },
         "vertical_label": {
          "_name_": "vertical_label",
          "title": "vertical_label",
          "_required_": false,
          "type": "string"
         },
         "identifiers": {
          "_name_": "identifiers",
          "title": "identifiers",
          "default": [],
          "_required_": false,
          "type": [
           "array",
           "null"
          ],
          "items": [
           {
            "_name_": "identifier",
            "title": "identifier",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "reporting_graph",
        "title": "reporting_graph",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "title",
         "vertical_label",
         "identifiers"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "reporting_netdata_get_data_0": {
    "_name_": "graphs",
    "title": "graphs",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string",
       "enum": [
        "cpu",
        "cputemp",
        "disk",
        "interface",
        "load",
        "processes",
        "memory",
        "swap",
        "uptime",
        "arcactualrate",
        "arcrate",
        "arcsize",
        "arcresult",
        "disktemp",
        "upscharge",
        "upsruntime",
        "upsvoltage",
        "upscurrent",
        "upsfrequency",
        "upsload",
        "upstemperature"
       ]
      },
      "identifier": {
       "_name_": "identifier",
       "title": "identifier",
       "default": null,
       "_required_": false,
       "type": [
        "string",
        "null"
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "graph",
     "title": "graph",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "identifier"
     ]
    }
   },
   "reporting_netdata_get_data_1": {
    "type": "object",
    "properties": {
     "unit": {
      "_name_": "unit",
      "title": "unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ],
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "page": {
      "type": "integer",
      "_name_": "page",
      "title": "page",
      "default": 1,
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "start": {
      "type": "integer",
      "_name_": "start",
      "title": "start",
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "end": {
      "type": "integer",
      "_name_": "end",
      "title": "end",
      "description": "For the time period of the graph either `unit` and `page` OR `start` and `end` should be\nused, not both."
     },
     "aggregate": {
      "type": "boolean",
      "_name_": "aggregate",
      "title": "aggregate",
      "default": true,
      "description": "`aggregate` will return aggregate available data for each graph (e.g. min, max, mean)."
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_query",
    "title": "reporting_query",
    "default": {},
    "_attrs_order_": [
     "unit",
     "page",
     "start",
     "end",
     "aggregate"
    ]
   },
   "reporting_netdata_get_data": {
    "type": "object",
    "properties": {
     "graphs": {
      "$ref": "#/components/schemas/reporting_netdata_get_data_0"
     },
     "reporting_query": {
      "$ref": "#/components/schemas/reporting_netdata_get_data_1"
     }
    }
   },
   "return_schema_of_reporting_netdata_get_data": {
    "_name_": "reporting_data",
    "title": "reporting_data",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "name": {
       "_name_": "name",
       "title": "name",
       "_required_": true,
       "type": "string"
      },
      "identifier": {
       "_name_": "identifier",
       "title": "identifier",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "data": {
       "_name_": "data",
       "title": "data",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": []
      },
      "aggregations": {
       "type": "object",
       "properties": {
        "min": {
         "_name_": "min",
         "title": "min",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": []
        },
        "max": {
         "_name_": "max",
         "title": "max",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": []
        },
        "mean": {
         "_name_": "mean",
         "title": "mean",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": []
        }
       },
       "additionalProperties": false,
       "_name_": "aggregations",
       "title": "aggregations",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "min",
        "max",
        "mean"
       ]
      }
     },
     "additionalProperties": true,
     "_name_": "netdata_graph_reporting_data",
     "title": "netdata_graph_reporting_data",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "name",
      "identifier",
      "data",
      "aggregations"
     ]
    }
   },
   "reporting_netdata_graph_0": {
    "_name_": "name",
    "title": "name",
    "type": "string"
   },
   "reporting_netdata_graph_1": {
    "type": "object",
    "properties": {
     "unit": {
      "_name_": "unit",
      "title": "unit",
      "type": "string",
      "enum": [
       "HOUR",
       "DAY",
       "WEEK",
       "MONTH",
       "YEAR"
      ]
     },
     "page": {
      "type": "integer",
      "_name_": "page",
      "title": "page",
      "default": 1
     },
     "start": {
      "type": "integer",
      "_name_": "start",
      "title": "start"
     },
     "end": {
      "type": "integer",
      "_name_": "end",
      "title": "end"
     },
     "aggregate": {
      "type": "boolean",
      "_name_": "aggregate",
      "title": "aggregate",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_query",
    "title": "reporting_query",
    "default": {},
    "_attrs_order_": [
     "unit",
     "page",
     "start",
     "end",
     "aggregate"
    ]
   },
   "reporting_netdata_graph": {
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/reporting_netdata_graph_0"
     },
     "reporting_query": {
      "$ref": "#/components/schemas/reporting_netdata_graph_1"
     }
    }
   },
   "return_schema_of_reporting_netdata_graph": {
    "type": "object",
    "properties": {
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string",
      "nullable": true
     },
     "data": {
      "_name_": "data",
      "title": "data",
      "default": [],
      "type": "array",
      "items": {}
     },
     "aggregations": {
      "type": "object",
      "properties": {
       "min": {
        "_name_": "min",
        "title": "min",
        "default": [],
        "type": "array",
        "items": {}
       },
       "max": {
        "_name_": "max",
        "title": "max",
        "default": [],
        "type": "array",
        "items": {}
       },
       "mean": {
        "_name_": "mean",
        "title": "mean",
        "default": [],
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "aggregations",
      "title": "aggregations",
      "default": {},
      "_attrs_order_": [
       "min",
       "max",
       "mean"
      ]
     }
    },
    "additionalProperties": true,
    "_name_": "netdata_graph_reporting_data",
    "title": "netdata_graph_reporting_data",
    "default": {},
    "_attrs_order_": [
     "name",
     "identifier",
     "data",
     "aggregations"
    ]
   },
   "return_schema_of_reporting_netdata_graphs": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": false,
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "_required_": false,
        "type": "string"
       },
       "vertical_label": {
        "_name_": "vertical_label",
        "title": "vertical_label",
        "_required_": false,
        "type": "string"
       },
       "identifiers": {
        "_name_": "identifiers",
        "title": "identifiers",
        "default": [],
        "_required_": false,
        "type": [
         "array",
         "null"
        ],
        "items": [
         {
          "_name_": "identifier",
          "title": "identifier",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "reporting_graph",
      "title": "reporting_graph",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "name",
       "title",
       "vertical_label",
       "identifiers"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": false,
          "type": "string"
         },
         "title": {
          "_name_": "title",
          "title": "title",
          "_required_": false,
          "type": "string"
         },
         "vertical_label": {
          "_name_": "vertical_label",
          "title": "vertical_label",
          "_required_": false,
          "type": "string"
         },
         "identifiers": {
          "_name_": "identifiers",
          "title": "identifiers",
          "default": [],
          "_required_": false,
          "type": [
           "array",
           "null"
          ],
          "items": [
           {
            "_name_": "identifier",
            "title": "identifier",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "reporting_graph",
        "title": "reporting_graph",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "name",
         "title",
         "vertical_label",
         "identifiers"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_reporting_exporters_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "_required_": true
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string",
          "enum": [
           "GRAPHITE"
          ]
         },
         "attributes": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "attributes",
          "title": "attributes",
          "description": "Specific attributes of each `exporter`",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "description": "User defined name of exporter configuration",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "reporting_exporter_entry",
        "title": "reporting_exporter_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "enabled",
         "type",
         "attributes",
         "name"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "_required_": true
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "GRAPHITE"
        ]
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "description": "Specific attributes of each `exporter`",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "User defined name of exporter configuration",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "reporting_exporter_entry",
      "title": "reporting_exporter_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "enabled",
       "type",
       "attributes",
       "name"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "_required_": true
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "GRAPHITE"
        ]
       },
       "attributes": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "attributes",
        "title": "attributes",
        "description": "Specific attributes of each `exporter`",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "description": "User defined name of exporter configuration",
        "_required_": true,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "reporting_exporter_entry",
      "title": "reporting_exporter_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "enabled",
       "type",
       "attributes",
       "name"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "reporting_exporters_create": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "GRAPHITE"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `exporter`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of exporter configuration",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_exporters_create",
    "title": "reporting_exporters_create",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "type",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_reporting_exporters_create": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "GRAPHITE"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `exporter`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of exporter configuration",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_exporters_create_returns",
    "title": "reporting_exporters_create_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "enabled",
     "type",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_reporting_exporters_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "reporting_exporters_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `exporter`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of exporter configuration",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_exporter_update",
    "title": "reporting_exporter_update",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_reporting_exporters_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "GRAPHITE"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `exporter`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of exporter configuration",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_exporters_update_returns",
    "title": "reporting_exporters_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "enabled",
     "type",
     "attributes",
     "name"
    ]
   },
   "return_schema_of_reporting_exporters_exporter_schemas": {
    "_name_": "exporter_schemas",
    "title": "Reporting Exporter Schemas",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "key": {
       "_name_": "key",
       "title": "key",
       "_required_": true,
       "type": "string"
      },
      "schema": {
       "_name_": "schema",
       "title": "schema",
       "default": [],
       "_required_": false,
       "type": "array",
       "items": [
        {
         "type": "object",
         "properties": {},
         "additionalProperties": true,
         "_name_": "attribute_schema",
         "title": "Attribute Schema",
         "default": {},
         "_required_": false,
         "_attrs_order_": []
        }
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "schema_entry",
     "title": "Reporting Exporter Schema",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "key",
      "schema"
     ]
    }
   },
   "reporting_exporters_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "reporting_exporters_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "reporting_exporters_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/reporting_exporters_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/reporting_exporters_get_instance_1"
     }
    }
   },
   "return_schema_of_reporting_exporters_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "GRAPHITE"
      ]
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "description": "Specific attributes of each `exporter`",
      "default": {},
      "_attrs_order_": []
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "description": "User defined name of exporter configuration",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "reporting_exporter_entry",
    "title": "reporting_exporter_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "enabled",
     "type",
     "attributes",
     "name"
    ]
   },
   "route_ipv4gw_reachable": {
    "_name_": "ipv4_gateway",
    "title": "ipv4_gateway",
    "type": "string"
   },
   "return_schema_of_route_ipv4gw_reachable": {
    "type": "boolean",
    "_name_": "ipv4gw_reachable",
    "title": "ipv4gw_reachable"
   },
   "return_schema_of_route_system_routes": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "network": {
        "_name_": "network",
        "title": "network",
        "_required_": true,
        "type": "string"
       },
       "netmask": {
        "_name_": "netmask",
        "title": "netmask",
        "_required_": true,
        "type": "string"
       },
       "gateway": {
        "_name_": "gateway",
        "title": "gateway",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       },
       "interface": {
        "_name_": "interface",
        "title": "interface",
        "_required_": true,
        "type": "string"
       },
       "flags": {
        "_name_": "flags",
        "title": "flags",
        "default": [],
        "_required_": true,
        "type": "array",
        "items": []
       },
       "table_id": {
        "type": "integer",
        "_name_": "table_id",
        "title": "table_id",
        "_required_": true
       },
       "scope": {
        "type": "integer",
        "_name_": "scope",
        "title": "scope",
        "_required_": true
       },
       "preferred_source": {
        "_name_": "preferred_source",
        "title": "preferred_source",
        "_required_": true,
        "type": [
         "string",
         "null"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "system_route",
      "title": "system_route",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "network",
       "netmask",
       "gateway",
       "interface",
       "flags",
       "table_id",
       "scope",
       "preferred_source"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "network": {
          "_name_": "network",
          "title": "network",
          "_required_": true,
          "type": "string"
         },
         "netmask": {
          "_name_": "netmask",
          "title": "netmask",
          "_required_": true,
          "type": "string"
         },
         "gateway": {
          "_name_": "gateway",
          "title": "gateway",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         },
         "interface": {
          "_name_": "interface",
          "title": "interface",
          "_required_": true,
          "type": "string"
         },
         "flags": {
          "_name_": "flags",
          "title": "flags",
          "default": [],
          "_required_": true,
          "type": "array",
          "items": []
         },
         "table_id": {
          "type": "integer",
          "_name_": "table_id",
          "title": "table_id",
          "_required_": true
         },
         "scope": {
          "type": "integer",
          "_name_": "scope",
          "title": "scope",
          "_required_": true
         },
         "preferred_source": {
          "_name_": "preferred_source",
          "title": "preferred_source",
          "_required_": true,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "system_route",
        "title": "system_route",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "network",
         "netmask",
         "gateway",
         "interface",
         "flags",
         "table_id",
         "scope",
         "preferred_source"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_rsynctask_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "user": {
          "_name_": "user",
          "title": "user",
          "_required_": true,
          "type": "string"
         },
         "mode": {
          "_name_": "mode",
          "title": "mode",
          "default": "MODULE",
          "_required_": false,
          "type": "string",
          "enum": [
           "MODULE",
           "SSH"
          ]
         },
         "remotehost": {
          "_name_": "remotehost",
          "title": "remotehost",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "remoteport": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "remoteport",
          "title": "remoteport",
          "default": null,
          "_required_": false
         },
         "remotemodule": {
          "_name_": "remotemodule",
          "title": "remotemodule",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "remotepath": {
          "_name_": "remotepath",
          "title": "remotepath",
          "_required_": false,
          "type": "string"
         },
         "direction": {
          "_name_": "direction",
          "title": "direction",
          "default": "PUSH",
          "_required_": false,
          "type": "string",
          "enum": [
           "PULL",
           "PUSH"
          ]
         },
         "desc": {
          "_name_": "desc",
          "title": "desc",
          "_required_": false,
          "type": "string"
         },
         "schedule": {
          "type": "object",
          "properties": {
           "minute": {
            "_name_": "minute",
            "title": "minute",
            "default": "00",
            "_required_": false,
            "type": "string"
           },
           "hour": {
            "_name_": "hour",
            "title": "hour",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dom": {
            "_name_": "dom",
            "title": "dom",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "month": {
            "_name_": "month",
            "title": "month",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dow": {
            "_name_": "dow",
            "title": "dow",
            "default": "*",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "schedule",
          "title": "schedule",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "minute",
           "hour",
           "dom",
           "month",
           "dow"
          ]
         },
         "recursive": {
          "type": "boolean",
          "_name_": "recursive",
          "title": "recursive",
          "_required_": false
         },
         "times": {
          "type": "boolean",
          "_name_": "times",
          "title": "times",
          "_required_": false
         },
         "compress": {
          "type": "boolean",
          "_name_": "compress",
          "title": "compress",
          "_required_": false
         },
         "archive": {
          "type": "boolean",
          "_name_": "archive",
          "title": "archive",
          "_required_": false
         },
         "delete": {
          "type": "boolean",
          "_name_": "delete",
          "title": "delete",
          "_required_": false
         },
         "quiet": {
          "type": "boolean",
          "_name_": "quiet",
          "title": "quiet",
          "_required_": false
         },
         "preserveperm": {
          "type": "boolean",
          "_name_": "preserveperm",
          "title": "preserveperm",
          "_required_": false
         },
         "preserveattr": {
          "type": "boolean",
          "_name_": "preserveattr",
          "title": "preserveattr",
          "_required_": false
         },
         "delayupdates": {
          "type": "boolean",
          "_name_": "delayupdates",
          "title": "delayupdates",
          "_required_": false
         },
         "extra": {
          "_name_": "extra",
          "title": "extra",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "extra",
            "title": "extra",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "ssh_credentials": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "ssh_credentials",
          "title": "ssh_credentials",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "_required_": false
         },
         "job": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "job",
          "title": "job",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "rsync_task_entry",
        "title": "rsync_task_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "user",
         "mode",
         "remotehost",
         "remoteport",
         "remotemodule",
         "remotepath",
         "direction",
         "desc",
         "schedule",
         "recursive",
         "times",
         "compress",
         "archive",
         "delete",
         "quiet",
         "preserveperm",
         "preserveattr",
         "delayupdates",
         "extra",
         "enabled",
         "id",
         "ssh_credentials",
         "locked",
         "job"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "user": {
        "_name_": "user",
        "title": "user",
        "_required_": true,
        "type": "string"
       },
       "mode": {
        "_name_": "mode",
        "title": "mode",
        "default": "MODULE",
        "_required_": false,
        "type": "string",
        "enum": [
         "MODULE",
         "SSH"
        ]
       },
       "remotehost": {
        "_name_": "remotehost",
        "title": "remotehost",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "remoteport": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "remoteport",
        "title": "remoteport",
        "default": null,
        "_required_": false
       },
       "remotemodule": {
        "_name_": "remotemodule",
        "title": "remotemodule",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "remotepath": {
        "_name_": "remotepath",
        "title": "remotepath",
        "_required_": false,
        "type": "string"
       },
       "direction": {
        "_name_": "direction",
        "title": "direction",
        "default": "PUSH",
        "_required_": false,
        "type": "string",
        "enum": [
         "PULL",
         "PUSH"
        ]
       },
       "desc": {
        "_name_": "desc",
        "title": "desc",
        "_required_": false,
        "type": "string"
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "_required_": false
       },
       "times": {
        "type": "boolean",
        "_name_": "times",
        "title": "times",
        "_required_": false
       },
       "compress": {
        "type": "boolean",
        "_name_": "compress",
        "title": "compress",
        "_required_": false
       },
       "archive": {
        "type": "boolean",
        "_name_": "archive",
        "title": "archive",
        "_required_": false
       },
       "delete": {
        "type": "boolean",
        "_name_": "delete",
        "title": "delete",
        "_required_": false
       },
       "quiet": {
        "type": "boolean",
        "_name_": "quiet",
        "title": "quiet",
        "_required_": false
       },
       "preserveperm": {
        "type": "boolean",
        "_name_": "preserveperm",
        "title": "preserveperm",
        "_required_": false
       },
       "preserveattr": {
        "type": "boolean",
        "_name_": "preserveattr",
        "title": "preserveattr",
        "_required_": false
       },
       "delayupdates": {
        "type": "boolean",
        "_name_": "delayupdates",
        "title": "delayupdates",
        "_required_": false
       },
       "extra": {
        "_name_": "extra",
        "title": "extra",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "ssh_credentials": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "ssh_credentials",
        "title": "ssh_credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       },
       "job": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "rsync_task_entry",
      "title": "rsync_task_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "path",
       "user",
       "mode",
       "remotehost",
       "remoteport",
       "remotemodule",
       "remotepath",
       "direction",
       "desc",
       "schedule",
       "recursive",
       "times",
       "compress",
       "archive",
       "delete",
       "quiet",
       "preserveperm",
       "preserveattr",
       "delayupdates",
       "extra",
       "enabled",
       "id",
       "ssh_credentials",
       "locked",
       "job"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "user": {
        "_name_": "user",
        "title": "user",
        "_required_": true,
        "type": "string"
       },
       "mode": {
        "_name_": "mode",
        "title": "mode",
        "default": "MODULE",
        "_required_": false,
        "type": "string",
        "enum": [
         "MODULE",
         "SSH"
        ]
       },
       "remotehost": {
        "_name_": "remotehost",
        "title": "remotehost",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "remoteport": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "remoteport",
        "title": "remoteport",
        "default": null,
        "_required_": false
       },
       "remotemodule": {
        "_name_": "remotemodule",
        "title": "remotemodule",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "remotepath": {
        "_name_": "remotepath",
        "title": "remotepath",
        "_required_": false,
        "type": "string"
       },
       "direction": {
        "_name_": "direction",
        "title": "direction",
        "default": "PUSH",
        "_required_": false,
        "type": "string",
        "enum": [
         "PULL",
         "PUSH"
        ]
       },
       "desc": {
        "_name_": "desc",
        "title": "desc",
        "_required_": false,
        "type": "string"
       },
       "schedule": {
        "type": "object",
        "properties": {
         "minute": {
          "_name_": "minute",
          "title": "minute",
          "default": "00",
          "_required_": false,
          "type": "string"
         },
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "minute",
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "recursive": {
        "type": "boolean",
        "_name_": "recursive",
        "title": "recursive",
        "_required_": false
       },
       "times": {
        "type": "boolean",
        "_name_": "times",
        "title": "times",
        "_required_": false
       },
       "compress": {
        "type": "boolean",
        "_name_": "compress",
        "title": "compress",
        "_required_": false
       },
       "archive": {
        "type": "boolean",
        "_name_": "archive",
        "title": "archive",
        "_required_": false
       },
       "delete": {
        "type": "boolean",
        "_name_": "delete",
        "title": "delete",
        "_required_": false
       },
       "quiet": {
        "type": "boolean",
        "_name_": "quiet",
        "title": "quiet",
        "_required_": false
       },
       "preserveperm": {
        "type": "boolean",
        "_name_": "preserveperm",
        "title": "preserveperm",
        "_required_": false
       },
       "preserveattr": {
        "type": "boolean",
        "_name_": "preserveattr",
        "title": "preserveattr",
        "_required_": false
       },
       "delayupdates": {
        "type": "boolean",
        "_name_": "delayupdates",
        "title": "delayupdates",
        "_required_": false
       },
       "extra": {
        "_name_": "extra",
        "title": "extra",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "extra",
          "title": "extra",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "ssh_credentials": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "ssh_credentials",
        "title": "ssh_credentials",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       },
       "job": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "job",
        "title": "job",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "rsync_task_entry",
      "title": "rsync_task_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "path",
       "user",
       "mode",
       "remotehost",
       "remoteport",
       "remotemodule",
       "remotepath",
       "direction",
       "desc",
       "schedule",
       "recursive",
       "times",
       "compress",
       "archive",
       "delete",
       "quiet",
       "preserveperm",
       "preserveattr",
       "delayupdates",
       "extra",
       "enabled",
       "id",
       "ssh_credentials",
       "locked",
       "job"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "rsynctask_create": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "See the comment in Rsyncmod about `path` length limits."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "MODULE",
      "type": "string",
      "enum": [
       "MODULE",
       "SSH"
      ],
      "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "default": null,
      "type": "string",
      "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport",
      "default": null,
      "description": "`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remotemodule": {
      "_name_": "remotemodule",
      "title": "remotemodule",
      "default": null,
      "type": "string",
      "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
      "nullable": true
     },
     "ssh_credentials": {
      "type": "integer",
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": null,
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.",
      "nullable": true
     },
     "remotepath": {
      "_name_": "remotepath",
      "title": "remotepath",
      "type": "string",
      "description": "`remotepath` specifies the path on the remote system."
     },
     "validate_rpath": {
      "type": "boolean",
      "_name_": "validate_rpath",
      "title": "validate_rpath",
      "default": true,
      "description": "`validate_rpath` is a boolean which when sets validates the existence of the remote path."
     },
     "ssh_keyscan": {
      "type": "boolean",
      "_name_": "ssh_keyscan",
      "title": "ssh_keyscan",
      "default": false,
      "description": "`ssh_keyscan` will automatically add remote host key to user's known_hosts file."
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "default": "PUSH",
      "type": "string",
      "enum": [
       "PULL",
       "PUSH"
      ],
      "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "times": {
      "type": "boolean",
      "_name_": "times",
      "title": "times"
     },
     "compress": {
      "type": "boolean",
      "_name_": "compress",
      "title": "compress",
      "description": "`compress` when set reduces the size of the data which is to be transmitted."
     },
     "archive": {
      "type": "boolean",
      "_name_": "archive",
      "title": "archive",
      "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
     },
     "delete": {
      "type": "boolean",
      "_name_": "delete",
      "title": "delete",
      "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
     },
     "quiet": {
      "type": "boolean",
      "_name_": "quiet",
      "title": "quiet"
     },
     "preserveperm": {
      "type": "boolean",
      "_name_": "preserveperm",
      "title": "preserveperm",
      "description": "`preserveperm` when set preserves original file permissions."
     },
     "preserveattr": {
      "type": "boolean",
      "_name_": "preserveattr",
      "title": "preserveattr"
     },
     "delayupdates": {
      "type": "boolean",
      "_name_": "delayupdates",
      "title": "delayupdates"
     },
     "extra": {
      "_name_": "extra",
      "title": "extra",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "extra",
       "title": "extra",
       "_required_": false,
       "type": "string"
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "rsync_task_create",
    "title": "rsync_task_create",
    "default": {},
    "_attrs_order_": [
     "path",
     "user",
     "mode",
     "remotehost",
     "remoteport",
     "remotemodule",
     "ssh_credentials",
     "remotepath",
     "validate_rpath",
     "ssh_keyscan",
     "direction",
     "desc",
     "schedule",
     "recursive",
     "times",
     "compress",
     "archive",
     "delete",
     "quiet",
     "preserveperm",
     "preserveattr",
     "delayupdates",
     "extra",
     "enabled"
    ]
   },
   "return_schema_of_rsynctask_create": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "See the comment in Rsyncmod about `path` length limits."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "MODULE",
      "type": "string",
      "enum": [
       "MODULE",
       "SSH"
      ],
      "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "default": null,
      "type": "string",
      "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport",
      "default": null,
      "description": "`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remotemodule": {
      "_name_": "remotemodule",
      "title": "remotemodule",
      "default": null,
      "type": "string",
      "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
      "nullable": true
     },
     "remotepath": {
      "_name_": "remotepath",
      "title": "remotepath",
      "type": "string",
      "description": "`remotepath` specifies the path on the remote system."
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "default": "PUSH",
      "type": "string",
      "enum": [
       "PULL",
       "PUSH"
      ],
      "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "times": {
      "type": "boolean",
      "_name_": "times",
      "title": "times"
     },
     "compress": {
      "type": "boolean",
      "_name_": "compress",
      "title": "compress",
      "description": "`compress` when set reduces the size of the data which is to be transmitted."
     },
     "archive": {
      "type": "boolean",
      "_name_": "archive",
      "title": "archive",
      "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
     },
     "delete": {
      "type": "boolean",
      "_name_": "delete",
      "title": "delete",
      "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
     },
     "quiet": {
      "type": "boolean",
      "_name_": "quiet",
      "title": "quiet"
     },
     "preserveperm": {
      "type": "boolean",
      "_name_": "preserveperm",
      "title": "preserveperm",
      "description": "`preserveperm` when set preserves original file permissions."
     },
     "preserveattr": {
      "type": "boolean",
      "_name_": "preserveattr",
      "title": "preserveattr"
     },
     "delayupdates": {
      "type": "boolean",
      "_name_": "delayupdates",
      "title": "delayupdates"
     },
     "extra": {
      "_name_": "extra",
      "title": "extra",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "extra",
       "title": "extra",
       "_required_": false,
       "type": "string"
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "ssh_credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": {},
      "_attrs_order_": [],
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "rsynctask_create_returns",
    "title": "rsynctask_create_returns",
    "default": {},
    "_attrs_order_": [
     "path",
     "user",
     "mode",
     "remotehost",
     "remoteport",
     "remotemodule",
     "remotepath",
     "direction",
     "desc",
     "schedule",
     "recursive",
     "times",
     "compress",
     "archive",
     "delete",
     "quiet",
     "preserveperm",
     "preserveattr",
     "delayupdates",
     "extra",
     "enabled",
     "id",
     "ssh_credentials",
     "locked",
     "job"
    ]
   },
   "return_schema_of_rsynctask_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "rsynctask_update": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "See the comment in Rsyncmod about `path` length limits."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "MODULE",
      "type": "string",
      "enum": [
       "MODULE",
       "SSH"
      ],
      "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "default": null,
      "type": "string",
      "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport",
      "default": null,
      "description": "`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remotemodule": {
      "_name_": "remotemodule",
      "title": "remotemodule",
      "default": null,
      "type": "string",
      "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
      "nullable": true
     },
     "ssh_credentials": {
      "type": "integer",
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": null,
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.",
      "nullable": true
     },
     "remotepath": {
      "_name_": "remotepath",
      "title": "remotepath",
      "type": "string",
      "description": "`remotepath` specifies the path on the remote system."
     },
     "validate_rpath": {
      "type": "boolean",
      "_name_": "validate_rpath",
      "title": "validate_rpath",
      "default": true,
      "description": "`validate_rpath` is a boolean which when sets validates the existence of the remote path."
     },
     "ssh_keyscan": {
      "type": "boolean",
      "_name_": "ssh_keyscan",
      "title": "ssh_keyscan",
      "default": false,
      "description": "`ssh_keyscan` will automatically add remote host key to user's known_hosts file."
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "default": "PUSH",
      "type": "string",
      "enum": [
       "PULL",
       "PUSH"
      ],
      "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "times": {
      "type": "boolean",
      "_name_": "times",
      "title": "times"
     },
     "compress": {
      "type": "boolean",
      "_name_": "compress",
      "title": "compress",
      "description": "`compress` when set reduces the size of the data which is to be transmitted."
     },
     "archive": {
      "type": "boolean",
      "_name_": "archive",
      "title": "archive",
      "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
     },
     "delete": {
      "type": "boolean",
      "_name_": "delete",
      "title": "delete",
      "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
     },
     "quiet": {
      "type": "boolean",
      "_name_": "quiet",
      "title": "quiet"
     },
     "preserveperm": {
      "type": "boolean",
      "_name_": "preserveperm",
      "title": "preserveperm",
      "description": "`preserveperm` when set preserves original file permissions."
     },
     "preserveattr": {
      "type": "boolean",
      "_name_": "preserveattr",
      "title": "preserveattr"
     },
     "delayupdates": {
      "type": "boolean",
      "_name_": "delayupdates",
      "title": "delayupdates"
     },
     "extra": {
      "_name_": "extra",
      "title": "extra",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "extra",
       "title": "extra",
       "_required_": false,
       "type": "string"
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "rsync_task_update",
    "title": "rsync_task_update",
    "default": {},
    "_attrs_order_": [
     "path",
     "user",
     "mode",
     "remotehost",
     "remoteport",
     "remotemodule",
     "ssh_credentials",
     "remotepath",
     "validate_rpath",
     "ssh_keyscan",
     "direction",
     "desc",
     "schedule",
     "recursive",
     "times",
     "compress",
     "archive",
     "delete",
     "quiet",
     "preserveperm",
     "preserveattr",
     "delayupdates",
     "extra",
     "enabled"
    ]
   },
   "return_schema_of_rsynctask_update": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "See the comment in Rsyncmod about `path` length limits."
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string",
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "MODULE",
      "type": "string",
      "enum": [
       "MODULE",
       "SSH"
      ],
      "description": "`mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.\n`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE."
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "default": null,
      "type": "string",
      "description": "`remotehost` is ip address or hostname of the remote system. If username differs on the remote host,\n\"username@remote_host\" format should be used.\n`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport",
      "default": null,
      "description": "`remotehost` and `remoteport` are not used in this case.",
      "nullable": true
     },
     "remotemodule": {
      "_name_": "remotemodule",
      "title": "remotemodule",
      "default": null,
      "type": "string",
      "description": "`remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.",
      "nullable": true
     },
     "remotepath": {
      "_name_": "remotepath",
      "title": "remotepath",
      "type": "string",
      "description": "`remotepath` specifies the path on the remote system."
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "default": "PUSH",
      "type": "string",
      "enum": [
       "PULL",
       "PUSH"
      ],
      "description": "`direction` specifies if data should be PULLED or PUSHED from the remote system."
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "times": {
      "type": "boolean",
      "_name_": "times",
      "title": "times"
     },
     "compress": {
      "type": "boolean",
      "_name_": "compress",
      "title": "compress",
      "description": "`compress` when set reduces the size of the data which is to be transmitted."
     },
     "archive": {
      "type": "boolean",
      "_name_": "archive",
      "title": "archive",
      "description": "`archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,\nand special files."
     },
     "delete": {
      "type": "boolean",
      "_name_": "delete",
      "title": "delete",
      "description": "`delete` when set deletes files in the destination directory which do not exist in the source directory."
     },
     "quiet": {
      "type": "boolean",
      "_name_": "quiet",
      "title": "quiet"
     },
     "preserveperm": {
      "type": "boolean",
      "_name_": "preserveperm",
      "title": "preserveperm",
      "description": "`preserveperm` when set preserves original file permissions."
     },
     "preserveattr": {
      "type": "boolean",
      "_name_": "preserveattr",
      "title": "preserveattr"
     },
     "delayupdates": {
      "type": "boolean",
      "_name_": "delayupdates",
      "title": "delayupdates"
     },
     "extra": {
      "_name_": "extra",
      "title": "extra",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "extra",
       "title": "extra",
       "_required_": false,
       "type": "string"
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update Rsync Task of `id`.\nCreate a Rsync Task."
     },
     "ssh_credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": {},
      "_attrs_order_": [],
      "description": "In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used\nto connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used."
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "rsynctask_update_returns",
    "title": "rsynctask_update_returns",
    "default": {},
    "_attrs_order_": [
     "path",
     "user",
     "mode",
     "remotehost",
     "remoteport",
     "remotemodule",
     "remotepath",
     "direction",
     "desc",
     "schedule",
     "recursive",
     "times",
     "compress",
     "archive",
     "delete",
     "quiet",
     "preserveperm",
     "preserveattr",
     "delayupdates",
     "extra",
     "enabled",
     "id",
     "ssh_credentials",
     "locked",
     "job"
    ]
   },
   "rsynctask_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "rsynctask_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "rsynctask_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/rsynctask_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/rsynctask_get_instance_1"
     }
    }
   },
   "return_schema_of_rsynctask_get_instance": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "user": {
      "_name_": "user",
      "title": "user",
      "type": "string"
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "default": "MODULE",
      "type": "string",
      "enum": [
       "MODULE",
       "SSH"
      ]
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport",
      "default": null,
      "nullable": true
     },
     "remotemodule": {
      "_name_": "remotemodule",
      "title": "remotemodule",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "remotepath": {
      "_name_": "remotepath",
      "title": "remotepath",
      "type": "string"
     },
     "direction": {
      "_name_": "direction",
      "title": "direction",
      "default": "PUSH",
      "type": "string",
      "enum": [
       "PULL",
       "PUSH"
      ]
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "schedule": {
      "type": "object",
      "properties": {
       "minute": {
        "_name_": "minute",
        "title": "minute",
        "default": "00",
        "type": "string"
       },
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "minute",
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive"
     },
     "times": {
      "type": "boolean",
      "_name_": "times",
      "title": "times"
     },
     "compress": {
      "type": "boolean",
      "_name_": "compress",
      "title": "compress"
     },
     "archive": {
      "type": "boolean",
      "_name_": "archive",
      "title": "archive"
     },
     "delete": {
      "type": "boolean",
      "_name_": "delete",
      "title": "delete"
     },
     "quiet": {
      "type": "boolean",
      "_name_": "quiet",
      "title": "quiet"
     },
     "preserveperm": {
      "type": "boolean",
      "_name_": "preserveperm",
      "title": "preserveperm"
     },
     "preserveattr": {
      "type": "boolean",
      "_name_": "preserveattr",
      "title": "preserveattr"
     },
     "delayupdates": {
      "type": "boolean",
      "_name_": "delayupdates",
      "title": "delayupdates"
     },
     "extra": {
      "_name_": "extra",
      "title": "extra",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "extra",
       "title": "extra",
       "_required_": false,
       "type": "string"
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "ssh_credentials": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "ssh_credentials",
      "title": "ssh_credentials",
      "default": {},
      "_attrs_order_": []
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     },
     "job": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "job",
      "title": "job",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "rsync_task_entry",
    "title": "rsync_task_entry",
    "default": {},
    "_attrs_order_": [
     "path",
     "user",
     "mode",
     "remotehost",
     "remoteport",
     "remotemodule",
     "remotepath",
     "direction",
     "desc",
     "schedule",
     "recursive",
     "times",
     "compress",
     "archive",
     "delete",
     "quiet",
     "preserveperm",
     "preserveattr",
     "delayupdates",
     "extra",
     "enabled",
     "id",
     "ssh_credentials",
     "locked",
     "job"
    ]
   },
   "rsynctask_run": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_service_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "service": {
          "_name_": "service",
          "title": "service",
          "_required_": false,
          "type": "string"
         },
         "enable": {
          "type": "boolean",
          "_name_": "enable",
          "title": "enable",
          "_required_": false
         },
         "state": {
          "_name_": "state",
          "title": "state",
          "_required_": false,
          "type": "string"
         },
         "pids": {
          "_name_": "pids",
          "title": "pids",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "pid",
            "title": "pid",
            "_required_": false
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "service_entry",
        "title": "service_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "id",
         "service",
         "enable",
         "state",
         "pids"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "service": {
        "_name_": "service",
        "title": "service",
        "_required_": false,
        "type": "string"
       },
       "enable": {
        "type": "boolean",
        "_name_": "enable",
        "title": "enable",
        "_required_": false
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": "string"
       },
       "pids": {
        "_name_": "pids",
        "title": "pids",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "integer",
          "_name_": "pid",
          "title": "pid",
          "_required_": false
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "service_entry",
      "title": "service_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "service",
       "enable",
       "state",
       "pids"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "service": {
        "_name_": "service",
        "title": "service",
        "_required_": false,
        "type": "string"
       },
       "enable": {
        "type": "boolean",
        "_name_": "enable",
        "title": "enable",
        "_required_": false
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "_required_": false,
        "type": "string"
       },
       "pids": {
        "_name_": "pids",
        "title": "pids",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "integer",
          "_name_": "pid",
          "title": "pid",
          "_required_": false
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "service_entry",
      "title": "service_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "id",
       "service",
       "enable",
       "state",
       "pids"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "service_update": {
    "type": "object",
    "properties": {
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "service-update",
    "title": "service-update",
    "default": {},
    "_attrs_order_": [
     "enable"
    ]
   },
   "return_schema_of_service_update": {
    "type": "integer",
    "_name_": "service_primary_key",
    "title": "service_primary_key"
   },
   "service_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "service_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "service_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/service_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/service_get_instance_1"
     }
    }
   },
   "return_schema_of_service_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "service": {
      "_name_": "service",
      "title": "service",
      "type": "string"
     },
     "enable": {
      "type": "boolean",
      "_name_": "enable",
      "title": "enable"
     },
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string"
     },
     "pids": {
      "_name_": "pids",
      "title": "pids",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "pid",
       "title": "pid",
       "_required_": false
      }
     }
    },
    "additionalProperties": false,
    "_name_": "service_entry",
    "title": "service_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "service",
     "enable",
     "state",
     "pids"
    ]
   },
   "service_reload_0": {
    "_name_": "service",
    "title": "service",
    "type": "string"
   },
   "service_reload_1": {
    "type": "object",
    "properties": {
     "ha_propagate": {
      "type": "boolean",
      "_name_": "ha_propagate",
      "title": "ha_propagate",
      "default": true
     },
     "silent": {
      "type": "boolean",
      "_name_": "silent",
      "title": "silent",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "service-control",
    "title": "service-control",
    "default": {},
    "_attrs_order_": [
     "ha_propagate",
     "silent"
    ]
   },
   "service_reload": {
    "type": "object",
    "properties": {
     "service": {
      "$ref": "#/components/schemas/service_reload_0"
     },
     "service-control": {
      "$ref": "#/components/schemas/service_reload_1"
     }
    }
   },
   "return_schema_of_service_reload": {
    "type": "boolean",
    "_name_": "service_reloaded",
    "title": "service_reloaded"
   },
   "service_restart_0": {
    "_name_": "service",
    "title": "service",
    "type": "string"
   },
   "service_restart_1": {
    "type": "object",
    "properties": {
     "ha_propagate": {
      "type": "boolean",
      "_name_": "ha_propagate",
      "title": "ha_propagate",
      "default": true
     },
     "silent": {
      "type": "boolean",
      "_name_": "silent",
      "title": "silent",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "service-control",
    "title": "service-control",
    "default": {},
    "_attrs_order_": [
     "ha_propagate",
     "silent"
    ]
   },
   "service_restart": {
    "type": "object",
    "properties": {
     "service": {
      "$ref": "#/components/schemas/service_restart_0"
     },
     "service-control": {
      "$ref": "#/components/schemas/service_restart_1"
     }
    }
   },
   "return_schema_of_service_restart": {
    "type": "boolean",
    "_name_": "service_restarted",
    "title": "service_restarted"
   },
   "service_start_0": {
    "_name_": "service",
    "title": "service",
    "type": "string",
    "description": "Start the service specified by `service`."
   },
   "service_start_1": {
    "type": "object",
    "properties": {
     "ha_propagate": {
      "type": "boolean",
      "_name_": "ha_propagate",
      "title": "ha_propagate",
      "default": true
     },
     "silent": {
      "type": "boolean",
      "_name_": "silent",
      "title": "silent",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "service-control",
    "title": "service-control",
    "default": {},
    "_attrs_order_": [
     "ha_propagate",
     "silent"
    ]
   },
   "service_start": {
    "type": "object",
    "properties": {
     "service": {
      "$ref": "#/components/schemas/service_start_0"
     },
     "service-control": {
      "$ref": "#/components/schemas/service_start_1"
     }
    }
   },
   "return_schema_of_service_start": {
    "type": "boolean",
    "_name_": "started_service",
    "title": "started_service"
   },
   "service_started": {
    "_name_": "service",
    "title": "service",
    "type": "string"
   },
   "return_schema_of_service_started": {
    "type": "boolean",
    "_name_": "service_started",
    "title": "service_started",
    "description": "Will return `true` if service is running"
   },
   "service_started_or_enabled": {
    "_name_": "service",
    "title": "service",
    "type": "string"
   },
   "return_schema_of_service_started_or_enabled": {
    "type": "boolean",
    "_name_": "service_started_or_enabled",
    "title": "service_started_or_enabled",
    "description": "Will return `true` if service is started or enabled to start automatically."
   },
   "service_stop_0": {
    "_name_": "service",
    "title": "service",
    "type": "string"
   },
   "service_stop_1": {
    "type": "object",
    "properties": {
     "ha_propagate": {
      "type": "boolean",
      "_name_": "ha_propagate",
      "title": "ha_propagate",
      "default": true
     },
     "silent": {
      "type": "boolean",
      "_name_": "silent",
      "title": "silent",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "service-control",
    "title": "service-control",
    "default": {},
    "_attrs_order_": [
     "ha_propagate",
     "silent"
    ]
   },
   "service_stop": {
    "type": "object",
    "properties": {
     "service": {
      "$ref": "#/components/schemas/service_stop_0"
     },
     "service-control": {
      "$ref": "#/components/schemas/service_stop_1"
     }
    }
   },
   "return_schema_of_service_stop": {
    "type": "boolean",
    "_name_": "service_stopped",
    "title": "service_stopped",
    "description": "Will return `true` if service successfully stopped"
   },
   "service_terminate_process_0": {
    "type": "integer",
    "_name_": "pid",
    "title": "pid",
    "description": "Terminate process by `pid`."
   },
   "service_terminate_process_1": {
    "type": "integer",
    "_name_": "timeout",
    "title": "timeout",
    "default": 10
   },
   "service_terminate_process": {
    "type": "object",
    "properties": {
     "pid": {
      "$ref": "#/components/schemas/service_terminate_process_0"
     },
     "timeout": {
      "$ref": "#/components/schemas/service_terminate_process_1"
     }
    }
   },
   "return_schema_of_service_terminate_process": {
    "type": "boolean",
    "_name_": "process_terminated_nicely",
    "title": "process_terminated_nicely",
    "description": "`true` is process has been successfully terminated with `TERM` and `false` if we had to use `KILL`"
   },
   "return_schema_of_sharing_nfs_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "aliases": {
          "_name_": "aliases",
          "title": "aliases",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "comment": {
          "_name_": "comment",
          "title": "comment",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "networks": {
          "_name_": "networks",
          "title": "networks",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "network",
            "title": "network",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "hosts": {
          "_name_": "hosts",
          "title": "hosts",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "host",
            "title": "host",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "ro": {
          "type": "boolean",
          "_name_": "ro",
          "title": "ro",
          "default": false,
          "_required_": false
         },
         "maproot_user": {
          "_name_": "maproot_user",
          "title": "maproot_user",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "maproot_group": {
          "_name_": "maproot_group",
          "title": "maproot_group",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "mapall_user": {
          "_name_": "mapall_user",
          "title": "mapall_user",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "mapall_group": {
          "_name_": "mapall_group",
          "title": "mapall_group",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "security": {
          "_name_": "security",
          "title": "security",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "provider",
            "title": "provider",
            "_required_": false,
            "type": "string",
            "enum": [
             "SYS",
             "KRB5",
             "KRB5I",
             "KRB5P"
            ]
           }
          ]
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "sharing_nfs_entry",
        "title": "sharing_nfs_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "aliases",
         "comment",
         "networks",
         "hosts",
         "ro",
         "maproot_user",
         "maproot_group",
         "mapall_user",
         "mapall_group",
         "security",
         "enabled",
         "id",
         "locked"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "networks": {
        "_name_": "networks",
        "title": "networks",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "network",
          "title": "network",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "hosts": {
        "_name_": "hosts",
        "title": "hosts",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "host",
          "title": "host",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "ro": {
        "type": "boolean",
        "_name_": "ro",
        "title": "ro",
        "default": false,
        "_required_": false
       },
       "maproot_user": {
        "_name_": "maproot_user",
        "title": "maproot_user",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "maproot_group": {
        "_name_": "maproot_group",
        "title": "maproot_group",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "mapall_user": {
        "_name_": "mapall_user",
        "title": "mapall_user",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "mapall_group": {
        "_name_": "mapall_group",
        "title": "mapall_group",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "security": {
        "_name_": "security",
        "title": "security",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "provider",
          "title": "provider",
          "_required_": false,
          "type": "string",
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ]
         }
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "sharing_nfs_entry",
      "title": "sharing_nfs_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "path",
       "aliases",
       "comment",
       "networks",
       "hosts",
       "ro",
       "maproot_user",
       "maproot_group",
       "mapall_user",
       "mapall_group",
       "security",
       "enabled",
       "id",
       "locked"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "path": {
        "_name_": "path",
        "title": "path",
        "_required_": true,
        "type": "string"
       },
       "aliases": {
        "_name_": "aliases",
        "title": "aliases",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "networks": {
        "_name_": "networks",
        "title": "networks",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "network",
          "title": "network",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "hosts": {
        "_name_": "hosts",
        "title": "hosts",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "host",
          "title": "host",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "ro": {
        "type": "boolean",
        "_name_": "ro",
        "title": "ro",
        "default": false,
        "_required_": false
       },
       "maproot_user": {
        "_name_": "maproot_user",
        "title": "maproot_user",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "maproot_group": {
        "_name_": "maproot_group",
        "title": "maproot_group",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "mapall_user": {
        "_name_": "mapall_user",
        "title": "mapall_user",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "mapall_group": {
        "_name_": "mapall_group",
        "title": "mapall_group",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "security": {
        "_name_": "security",
        "title": "security",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "provider",
          "title": "provider",
          "_required_": false,
          "type": "string",
          "enum": [
           "SYS",
           "KRB5",
           "KRB5I",
           "KRB5P"
          ]
         }
        ]
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "sharing_nfs_entry",
      "title": "sharing_nfs_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "path",
       "aliases",
       "comment",
       "networks",
       "hosts",
       "ro",
       "maproot_user",
       "maproot_group",
       "mapall_user",
       "mapall_group",
       "security",
       "enabled",
       "id",
       "locked"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "sharing_nfs_create": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` local path to be exported."
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      },
      "description": "`aliases` IGNORED, for now."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "networks": {
      "_name_": "networks",
      "title": "networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "network",
       "title": "network",
       "_required_": false,
       "type": "string"
      },
      "description": "`networks` is a list of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. If empty, all networks are allowed."
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "maproot_user": {
      "_name_": "maproot_user",
      "title": "maproot_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "maproot_group": {
      "_name_": "maproot_group",
      "title": "maproot_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_user": {
      "_name_": "mapall_user",
      "title": "mapall_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_group": {
      "_name_": "mapall_group",
      "title": "mapall_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "provider",
       "title": "provider",
       "_required_": false,
       "type": "string",
       "enum": [
        "SYS",
        "KRB5",
        "KRB5I",
        "KRB5P"
       ]
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "sharingnfs_create",
    "title": "sharingnfs_create",
    "default": {},
    "_attrs_order_": [
     "path",
     "aliases",
     "comment",
     "networks",
     "hosts",
     "ro",
     "maproot_user",
     "maproot_group",
     "mapall_user",
     "mapall_group",
     "security",
     "enabled"
    ]
   },
   "return_schema_of_sharing_nfs_create": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` local path to be exported."
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      },
      "description": "`aliases` IGNORED, for now."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "networks": {
      "_name_": "networks",
      "title": "networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "network",
       "title": "network",
       "_required_": false,
       "type": "string"
      },
      "description": "`networks` is a list of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. If empty, all networks are allowed."
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "maproot_user": {
      "_name_": "maproot_user",
      "title": "maproot_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "maproot_group": {
      "_name_": "maproot_group",
      "title": "maproot_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_user": {
      "_name_": "mapall_user",
      "title": "mapall_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_group": {
      "_name_": "mapall_group",
      "title": "mapall_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "provider",
       "title": "provider",
       "_required_": false,
       "type": "string",
       "enum": [
        "SYS",
        "KRB5",
        "KRB5I",
        "KRB5P"
       ]
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "sharing_nfs_create_returns",
    "title": "sharing_nfs_create_returns",
    "default": {},
    "_attrs_order_": [
     "path",
     "aliases",
     "comment",
     "networks",
     "hosts",
     "ro",
     "maproot_user",
     "maproot_group",
     "mapall_user",
     "mapall_group",
     "security",
     "enabled",
     "id",
     "locked"
    ]
   },
   "sharing_nfs_update": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` local path to be exported."
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      },
      "description": "`aliases` IGNORED, for now."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "networks": {
      "_name_": "networks",
      "title": "networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "network",
       "title": "network",
       "_required_": false,
       "type": "string"
      },
      "description": "`networks` is a list of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. If empty, all networks are allowed."
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "maproot_user": {
      "_name_": "maproot_user",
      "title": "maproot_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "maproot_group": {
      "_name_": "maproot_group",
      "title": "maproot_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_user": {
      "_name_": "mapall_user",
      "title": "mapall_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_group": {
      "_name_": "mapall_group",
      "title": "mapall_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "provider",
       "title": "provider",
       "_required_": false,
       "type": "string",
       "enum": [
        "SYS",
        "KRB5",
        "KRB5I",
        "KRB5P"
       ]
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "sharingnfs_update",
    "title": "sharingnfs_update",
    "default": {},
    "_attrs_order_": [
     "path",
     "aliases",
     "comment",
     "networks",
     "hosts",
     "ro",
     "maproot_user",
     "maproot_group",
     "mapall_user",
     "mapall_group",
     "security",
     "enabled"
    ]
   },
   "return_schema_of_sharing_nfs_update": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` local path to be exported."
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      },
      "description": "`aliases` IGNORED, for now."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "networks": {
      "_name_": "networks",
      "title": "networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "network",
       "title": "network",
       "_required_": false,
       "type": "string"
      },
      "description": "`networks` is a list of authorized networks that are allowed to access the share having format\n\"network/mask\" CIDR notation. If empty, all networks are allowed."
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "maproot_user": {
      "_name_": "maproot_user",
      "title": "maproot_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "maproot_group": {
      "_name_": "maproot_group",
      "title": "maproot_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_user": {
      "_name_": "mapall_user",
      "title": "mapall_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_group": {
      "_name_": "mapall_group",
      "title": "mapall_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "provider",
       "title": "provider",
       "_required_": false,
       "type": "string",
       "enum": [
        "SYS",
        "KRB5",
        "KRB5I",
        "KRB5P"
       ]
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update NFS Share of `id`.\nCreate a NFS Share."
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "sharing_nfs_update_returns",
    "title": "sharing_nfs_update_returns",
    "default": {},
    "_attrs_order_": [
     "path",
     "aliases",
     "comment",
     "networks",
     "hosts",
     "ro",
     "maproot_user",
     "maproot_group",
     "mapall_user",
     "mapall_group",
     "security",
     "enabled",
     "id",
     "locked"
    ]
   },
   "sharing_nfs_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "sharing_nfs_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "sharing_nfs_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/sharing_nfs_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/sharing_nfs_get_instance_1"
     }
    }
   },
   "return_schema_of_sharing_nfs_get_instance": {
    "type": "object",
    "properties": {
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string"
     },
     "aliases": {
      "_name_": "aliases",
      "title": "aliases",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "path",
       "title": "path",
       "_required_": false,
       "type": "string"
      }
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "networks": {
      "_name_": "networks",
      "title": "networks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "network",
       "title": "network",
       "_required_": false,
       "type": "string"
      }
     },
     "hosts": {
      "_name_": "hosts",
      "title": "hosts",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "host",
       "title": "host",
       "_required_": false,
       "type": "string"
      }
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false
     },
     "maproot_user": {
      "_name_": "maproot_user",
      "title": "maproot_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "maproot_group": {
      "_name_": "maproot_group",
      "title": "maproot_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_user": {
      "_name_": "mapall_user",
      "title": "mapall_user",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "mapall_group": {
      "_name_": "mapall_group",
      "title": "mapall_group",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "security": {
      "_name_": "security",
      "title": "security",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "provider",
       "title": "provider",
       "_required_": false,
       "type": "string",
       "enum": [
        "SYS",
        "KRB5",
        "KRB5I",
        "KRB5P"
       ]
      }
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked"
     }
    },
    "additionalProperties": false,
    "_name_": "sharing_nfs_entry",
    "title": "sharing_nfs_entry",
    "default": {},
    "_attrs_order_": [
     "path",
     "aliases",
     "comment",
     "networks",
     "hosts",
     "ro",
     "maproot_user",
     "maproot_group",
     "mapall_user",
     "mapall_group",
     "security",
     "enabled",
     "id",
     "locked"
    ]
   },
   "return_schema_of_sharing_smb_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "sharing_smb_entry",
        "title": "sharing_smb_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "sharing_smb_entry",
      "title": "sharing_smb_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "sharing_smb_entry",
      "title": "sharing_smb_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "sharing_smb_create": {
    "type": "object",
    "properties": {
     "purpose": {
      "_name_": "purpose",
      "title": "purpose",
      "default": "DEFAULT_SHARE",
      "type": "string",
      "enum": [
       "NO_PRESET",
       "DEFAULT_SHARE",
       "TIMEMACHINE",
       "ENHANCED_TIMEMACHINE",
       "MULTI_PROTOCOL_NFS",
       "PRIVATE_DATASETS",
       "WORM_DROPBOX"
      ],
      "description": "`purpose` applies common configuration presets depending on intended purpose."
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` path to export over the SMB protocol."
     },
     "path_suffix": {
      "_name_": "path_suffix",
      "title": "path_suffix",
      "default": "",
      "type": "string"
     },
     "home": {
      "type": "boolean",
      "_name_": "home",
      "title": "home",
      "default": false
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false,
      "description": "`ro` when enabled, prohibits write access to the share."
     },
     "browsable": {
      "type": "boolean",
      "_name_": "browsable",
      "title": "browsable",
      "default": true
     },
     "timemachine": {
      "type": "boolean",
      "_name_": "timemachine",
      "title": "timemachine",
      "default": false,
      "description": "`timemachine` when set, enables Time Machine backups for this share."
     },
     "timemachine_quota": {
      "type": "integer",
      "_name_": "timemachine_quota",
      "title": "timemachine_quota",
      "default": 0
     },
     "recyclebin": {
      "type": "boolean",
      "_name_": "recyclebin",
      "title": "recyclebin",
      "default": false
     },
     "guestok": {
      "type": "boolean",
      "_name_": "guestok",
      "title": "guestok",
      "default": false,
      "description": "`guestok` when enabled, allows access to this share without a password."
     },
     "abe": {
      "type": "boolean",
      "_name_": "abe",
      "title": "abe",
      "default": false
     },
     "hostsallow": {
      "_name_": "hostsallow",
      "title": "hostsallow",
      "default": [],
      "type": "array",
      "items": {},
      "description": "`hostsallow` is a list of hostnames / IP addresses which have access to this share.\n`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
     },
     "hostsdeny": {
      "_name_": "hostsdeny",
      "title": "hostsdeny",
      "default": [],
      "type": "array",
      "items": {},
      "description": "`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
     },
     "aapl_name_mangling": {
      "type": "boolean",
      "_name_": "aapl_name_mangling",
      "title": "aapl_name_mangling",
      "default": false
     },
     "acl": {
      "type": "boolean",
      "_name_": "acl",
      "title": "acl",
      "default": true,
      "description": "`acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL."
     },
     "durablehandle": {
      "type": "boolean",
      "_name_": "durablehandle",
      "title": "durablehandle",
      "default": true
     },
     "shadowcopy": {
      "type": "boolean",
      "_name_": "shadowcopy",
      "title": "shadowcopy",
      "default": true,
      "description": "`shadowcopy` enables support for the volume shadow copy service."
     },
     "streams": {
      "type": "boolean",
      "_name_": "streams",
      "title": "streams",
      "default": true,
      "description": "`streams` enables support for storing alternate datastreams as filesystem extended attributes."
     },
     "fsrvp": {
      "type": "boolean",
      "_name_": "fsrvp",
      "title": "fsrvp",
      "default": false,
      "description": "`fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\nZFS snapshots through RPC."
     },
     "auxsmbconf": {
      "_name_": "auxsmbconf",
      "title": "auxsmbconf",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "afp": {
      "type": "boolean",
      "_name_": "afp",
      "title": "afp",
      "default": false
     },
     "audit": {
      "type": "object",
      "properties": {
       "enable": {
        "type": "boolean",
        "_name_": "enable",
        "title": "enable"
       },
       "watch_list": {
        "_name_": "watch_list",
        "title": "watch_list",
        "type": "array",
        "items": {}
       },
       "ignore_list": {
        "_name_": "ignore_list",
        "title": "ignore_list",
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "audit",
      "title": "audit",
      "default": {},
      "_attrs_order_": [
       "enable",
       "watch_list",
       "ignore_list"
      ],
      "description": "`audit` object contains configuration parameters related to SMB share auditing. It contains the\nfollowing keys: `enable`, `watch_list` and `ignore_list`. Enable is boolean and controls whether\naudit messages will be generated for the share. `watch_list` is a list of groups for which to\ngenerate audit messages (defaults to all groups). `ignore_list` is a list of groups to ignore\nwhen auditing. If conflict arises between watch_list and ignore_list (based on user group\nmembershipt), then watch_list will take precedence and ops will be audited.\nNOTE: auditing may not be enabled if SMB1 support is enabled for the server."
     }
    },
    "additionalProperties": false,
    "_name_": "sharingsmb_create",
    "title": "sharingsmb_create",
    "default": {},
    "_attrs_order_": [
     "purpose",
     "path",
     "path_suffix",
     "home",
     "name",
     "comment",
     "ro",
     "browsable",
     "timemachine",
     "timemachine_quota",
     "recyclebin",
     "guestok",
     "abe",
     "hostsallow",
     "hostsdeny",
     "aapl_name_mangling",
     "acl",
     "durablehandle",
     "shadowcopy",
     "streams",
     "fsrvp",
     "auxsmbconf",
     "enabled",
     "afp",
     "audit"
    ]
   },
   "return_schema_of_sharing_smb_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "sharing_smb_create_returns",
    "title": "sharing_smb_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_sharing_smb_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "sharing_smb_update": {
    "type": "object",
    "properties": {
     "purpose": {
      "_name_": "purpose",
      "title": "purpose",
      "default": "DEFAULT_SHARE",
      "type": "string",
      "enum": [
       "NO_PRESET",
       "DEFAULT_SHARE",
       "TIMEMACHINE",
       "ENHANCED_TIMEMACHINE",
       "MULTI_PROTOCOL_NFS",
       "PRIVATE_DATASETS",
       "WORM_DROPBOX"
      ],
      "description": "`purpose` applies common configuration presets depending on intended purpose."
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "description": "`path` path to export over the SMB protocol."
     },
     "path_suffix": {
      "_name_": "path_suffix",
      "title": "path_suffix",
      "default": "",
      "type": "string"
     },
     "home": {
      "type": "boolean",
      "_name_": "home",
      "title": "home",
      "default": false
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "ro": {
      "type": "boolean",
      "_name_": "ro",
      "title": "ro",
      "default": false,
      "description": "`ro` when enabled, prohibits write access to the share."
     },
     "browsable": {
      "type": "boolean",
      "_name_": "browsable",
      "title": "browsable",
      "default": true
     },
     "timemachine": {
      "type": "boolean",
      "_name_": "timemachine",
      "title": "timemachine",
      "default": false,
      "description": "`timemachine` when set, enables Time Machine backups for this share."
     },
     "timemachine_quota": {
      "type": "integer",
      "_name_": "timemachine_quota",
      "title": "timemachine_quota",
      "default": 0
     },
     "recyclebin": {
      "type": "boolean",
      "_name_": "recyclebin",
      "title": "recyclebin",
      "default": false
     },
     "guestok": {
      "type": "boolean",
      "_name_": "guestok",
      "title": "guestok",
      "default": false,
      "description": "`guestok` when enabled, allows access to this share without a password."
     },
     "abe": {
      "type": "boolean",
      "_name_": "abe",
      "title": "abe",
      "default": false
     },
     "hostsallow": {
      "_name_": "hostsallow",
      "title": "hostsallow",
      "default": [],
      "type": "array",
      "items": {},
      "description": "`hostsallow` is a list of hostnames / IP addresses which have access to this share.\n`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
     },
     "hostsdeny": {
      "_name_": "hostsdeny",
      "title": "hostsdeny",
      "default": [],
      "type": "array",
      "items": {},
      "description": "`hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\nof hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\naccess to ALL hostnames except for the ones which have been listed in `hostsallow`."
     },
     "aapl_name_mangling": {
      "type": "boolean",
      "_name_": "aapl_name_mangling",
      "title": "aapl_name_mangling",
      "default": false
     },
     "acl": {
      "type": "boolean",
      "_name_": "acl",
      "title": "acl",
      "default": true,
      "description": "`acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL."
     },
     "durablehandle": {
      "type": "boolean",
      "_name_": "durablehandle",
      "title": "durablehandle",
      "default": true
     },
     "shadowcopy": {
      "type": "boolean",
      "_name_": "shadowcopy",
      "title": "shadowcopy",
      "default": true,
      "description": "`shadowcopy` enables support for the volume shadow copy service."
     },
     "streams": {
      "type": "boolean",
      "_name_": "streams",
      "title": "streams",
      "default": true,
      "description": "`streams` enables support for storing alternate datastreams as filesystem extended attributes."
     },
     "fsrvp": {
      "type": "boolean",
      "_name_": "fsrvp",
      "title": "fsrvp",
      "default": false,
      "description": "`fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\nZFS snapshots through RPC."
     },
     "auxsmbconf": {
      "_name_": "auxsmbconf",
      "title": "auxsmbconf",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "afp": {
      "type": "boolean",
      "_name_": "afp",
      "title": "afp",
      "default": false
     },
     "audit": {
      "type": "object",
      "properties": {
       "enable": {
        "type": "boolean",
        "_name_": "enable",
        "title": "enable"
       },
       "watch_list": {
        "_name_": "watch_list",
        "title": "watch_list",
        "type": "array",
        "items": {}
       },
       "ignore_list": {
        "_name_": "ignore_list",
        "title": "ignore_list",
        "type": "array",
        "items": {}
       }
      },
      "additionalProperties": false,
      "_name_": "audit",
      "title": "audit",
      "default": {},
      "_attrs_order_": [
       "enable",
       "watch_list",
       "ignore_list"
      ],
      "description": "`audit` object contains configuration parameters related to SMB share auditing. It contains the\nfollowing keys: `enable`, `watch_list` and `ignore_list`. Enable is boolean and controls whether\naudit messages will be generated for the share. `watch_list` is a list of groups for which to\ngenerate audit messages (defaults to all groups). `ignore_list` is a list of groups to ignore\nwhen auditing. If conflict arises between watch_list and ignore_list (based on user group\nmembershipt), then watch_list will take precedence and ops will be audited.\nNOTE: auditing may not be enabled if SMB1 support is enabled for the server."
     }
    },
    "additionalProperties": false,
    "_name_": "sharingsmb_update",
    "title": "sharingsmb_update",
    "default": {},
    "_attrs_order_": [
     "purpose",
     "path",
     "path_suffix",
     "home",
     "name",
     "comment",
     "ro",
     "browsable",
     "timemachine",
     "timemachine_quota",
     "recyclebin",
     "guestok",
     "abe",
     "hostsallow",
     "hostsdeny",
     "aapl_name_mangling",
     "acl",
     "durablehandle",
     "shadowcopy",
     "streams",
     "fsrvp",
     "auxsmbconf",
     "enabled",
     "afp",
     "audit"
    ]
   },
   "return_schema_of_sharing_smb_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "sharing_smb_update_returns",
    "title": "sharing_smb_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "sharing_smb_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "sharing_smb_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "sharing_smb_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/sharing_smb_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/sharing_smb_get_instance_1"
     }
    }
   },
   "return_schema_of_sharing_smb_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "sharing_smb_entry",
    "title": "sharing_smb_entry",
    "default": {},
    "_attrs_order_": []
   },
   "sharing_smb_getacl": {
    "type": "object",
    "properties": {
     "share_name": {
      "_name_": "share_name",
      "title": "share_name",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "smb_getacl",
    "title": "smb_getacl",
    "default": {},
    "_attrs_order_": [
     "share_name"
    ]
   },
   "return_schema_of_sharing_smb_getacl": {
    "type": "object",
    "properties": {
     "share_name": {
      "_name_": "share_name",
      "title": "share_name",
      "type": "string"
     },
     "share_acl": {
      "_name_": "share_acl",
      "title": "share_acl",
      "default": [
       {
        "ae_who_sid": "S-1-1-0",
        "ae_perm": "FULL",
        "ae_type": "ALLOWED"
       }
      ],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "ae_who_sid": {
         "_name_": "ae_who_sid",
         "title": "ae_who_sid",
         "default": null,
         "_required_": false,
         "type": "string"
        },
        "ae_who_id": {
         "type": "object",
         "properties": {
          "id_type": {
           "_name_": "id_type",
           "title": "id_type",
           "_required_": false,
           "type": "string",
           "enum": [
            "USER",
            "GROUP",
            "BOTH"
           ]
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "ae_who_id",
         "title": "ae_who_id",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id_type",
          "id"
         ]
        },
        "ae_perm": {
         "_name_": "ae_perm",
         "title": "ae_perm",
         "_required_": true,
         "type": "string",
         "enum": [
          "FULL",
          "CHANGE",
          "READ"
         ]
        },
        "ae_type": {
         "_name_": "ae_type",
         "title": "ae_type",
         "_required_": true,
         "type": "string",
         "enum": [
          "ALLOWED",
          "DENIED"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "aclentry",
       "title": "aclentry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "ae_who_sid",
        "ae_who_id",
        "ae_perm",
        "ae_type"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "smb_share_acl",
    "title": "smb_share_acl",
    "default": {},
    "_attrs_order_": [
     "share_name",
     "share_acl"
    ]
   },
   "sharing_smb_setacl": {
    "type": "object",
    "properties": {
     "share_name": {
      "_name_": "share_name",
      "title": "share_name",
      "type": "string",
      "description": "Set an ACL on `share_name`. This only impacts access through the SMB protocol.\nEither ae_who_sid, ae_who_id must, ae_who_str be specified for each ACL entry in the\nshare_acl. If multiple are specified, preference is in the following order: SID,\nunix id, name.\n`share_name` the name of the share"
     },
     "share_acl": {
      "_name_": "share_acl",
      "title": "share_acl",
      "default": [
       {
        "ae_who_sid": "S-1-1-0",
        "ae_perm": "FULL",
        "ae_type": "ALLOWED"
       }
      ],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "ae_who_sid": {
         "_name_": "ae_who_sid",
         "title": "ae_who_sid",
         "default": null,
         "_required_": false,
         "type": "string"
        },
        "ae_who_id": {
         "type": "object",
         "properties": {
          "id_type": {
           "_name_": "id_type",
           "title": "id_type",
           "_required_": false,
           "type": "string",
           "enum": [
            "USER",
            "GROUP",
            "BOTH"
           ]
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "ae_who_id",
         "title": "ae_who_id",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id_type",
          "id"
         ]
        },
        "ae_perm": {
         "_name_": "ae_perm",
         "title": "ae_perm",
         "_required_": true,
         "type": "string",
         "enum": [
          "FULL",
          "CHANGE",
          "READ"
         ]
        },
        "ae_type": {
         "_name_": "ae_type",
         "title": "ae_type",
         "_required_": true,
         "type": "string",
         "enum": [
          "ALLOWED",
          "DENIED"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "aclentry",
       "title": "aclentry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "ae_who_sid",
        "ae_who_id",
        "ae_perm",
        "ae_type"
       ]
      },
      "description": "`share_acl` a list of ACL entries (dictionaries) with the following keys:"
     }
    },
    "additionalProperties": false,
    "_name_": "smb_share_acl",
    "title": "smb_share_acl",
    "default": {},
    "_attrs_order_": [
     "share_name",
     "share_acl"
    ]
   },
   "return_schema_of_sharing_smb_setacl": {
    "type": "object",
    "properties": {
     "share_name": {
      "_name_": "share_name",
      "title": "share_name",
      "type": "string",
      "description": "Set an ACL on `share_name`. This only impacts access through the SMB protocol.\nEither ae_who_sid, ae_who_id must, ae_who_str be specified for each ACL entry in the\nshare_acl. If multiple are specified, preference is in the following order: SID,\nunix id, name.\n`share_name` the name of the share"
     },
     "share_acl": {
      "_name_": "share_acl",
      "title": "share_acl",
      "default": [
       {
        "ae_who_sid": "S-1-1-0",
        "ae_perm": "FULL",
        "ae_type": "ALLOWED"
       }
      ],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "ae_who_sid": {
         "_name_": "ae_who_sid",
         "title": "ae_who_sid",
         "default": null,
         "_required_": false,
         "type": "string"
        },
        "ae_who_id": {
         "type": "object",
         "properties": {
          "id_type": {
           "_name_": "id_type",
           "title": "id_type",
           "_required_": false,
           "type": "string",
           "enum": [
            "USER",
            "GROUP",
            "BOTH"
           ]
          },
          "id": {
           "type": "integer",
           "_name_": "id",
           "title": "id",
           "_required_": false
          }
         },
         "additionalProperties": false,
         "_name_": "ae_who_id",
         "title": "ae_who_id",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "id_type",
          "id"
         ]
        },
        "ae_perm": {
         "_name_": "ae_perm",
         "title": "ae_perm",
         "_required_": true,
         "type": "string",
         "enum": [
          "FULL",
          "CHANGE",
          "READ"
         ]
        },
        "ae_type": {
         "_name_": "ae_type",
         "title": "ae_type",
         "_required_": true,
         "type": "string",
         "enum": [
          "ALLOWED",
          "DENIED"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "aclentry",
       "title": "aclentry",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "ae_who_sid",
        "ae_who_id",
        "ae_perm",
        "ae_type"
       ]
      },
      "description": "`share_acl` a list of ACL entries (dictionaries) with the following keys:"
     }
    },
    "additionalProperties": false,
    "_name_": "smb_share_acl",
    "title": "smb_share_acl",
    "default": {},
    "_attrs_order_": [
     "share_name",
     "share_acl"
    ]
   },
   "return_schema_of_smart_config": {
    "type": "object",
    "properties": {
     "interval": {
      "type": "integer",
      "_name_": "interval",
      "title": "interval"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "powermode": {
      "_name_": "powermode",
      "title": "powermode",
      "type": "string",
      "enum": [
       "NEVER",
       "SLEEP",
       "STANDBY",
       "IDLE"
      ]
     },
     "difference": {
      "type": "integer",
      "_name_": "difference",
      "title": "difference"
     },
     "informational": {
      "type": "integer",
      "_name_": "informational",
      "title": "informational"
     },
     "critical": {
      "type": "integer",
      "_name_": "critical",
      "title": "critical"
     }
    },
    "additionalProperties": false,
    "_name_": "smart_entry",
    "title": "smart_entry",
    "default": {},
    "_attrs_order_": [
     "interval",
     "id",
     "powermode",
     "difference",
     "informational",
     "critical"
    ]
   },
   "smart_update": {
    "type": "object",
    "properties": {
     "interval": {
      "type": "integer",
      "_name_": "interval",
      "title": "interval",
      "description": "`interval` is an integer value in minutes which defines how often smartd activates to check if any tests\nare configured to run."
     },
     "powermode": {
      "_name_": "powermode",
      "title": "powermode",
      "type": "string",
      "enum": [
       "NEVER",
       "SLEEP",
       "STANDBY",
       "IDLE"
      ]
     },
     "difference": {
      "type": "integer",
      "_name_": "difference",
      "title": "difference"
     },
     "informational": {
      "type": "integer",
      "_name_": "informational",
      "title": "informational"
     },
     "critical": {
      "type": "integer",
      "_name_": "critical",
      "title": "critical"
     }
    },
    "additionalProperties": false,
    "_name_": "smart_update",
    "title": "smart_update",
    "default": {},
    "_attrs_order_": [
     "interval",
     "powermode",
     "difference",
     "informational",
     "critical"
    ]
   },
   "return_schema_of_smart_update": {
    "type": "object",
    "properties": {
     "interval": {
      "type": "integer",
      "_name_": "interval",
      "title": "interval",
      "description": "`interval` is an integer value in minutes which defines how often smartd activates to check if any tests\nare configured to run."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "powermode": {
      "_name_": "powermode",
      "title": "powermode",
      "type": "string",
      "enum": [
       "NEVER",
       "SLEEP",
       "STANDBY",
       "IDLE"
      ]
     },
     "difference": {
      "type": "integer",
      "_name_": "difference",
      "title": "difference"
     },
     "informational": {
      "type": "integer",
      "_name_": "informational",
      "title": "informational"
     },
     "critical": {
      "type": "integer",
      "_name_": "critical",
      "title": "critical"
     }
    },
    "additionalProperties": false,
    "_name_": "smart_update_returns",
    "title": "smart_update_returns",
    "default": {},
    "_attrs_order_": [
     "interval",
     "id",
     "powermode",
     "difference",
     "informational",
     "critical"
    ]
   },
   "return_schema_of_smart_test_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "schedule": {
          "type": "object",
          "properties": {
           "hour": {
            "_name_": "hour",
            "title": "hour",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dom": {
            "_name_": "dom",
            "title": "dom",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "month": {
            "_name_": "month",
            "title": "month",
            "default": "*",
            "_required_": false,
            "type": "string"
           },
           "dow": {
            "_name_": "dow",
            "title": "dow",
            "default": "*",
            "_required_": false,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "schedule",
          "title": "schedule",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "hour",
           "dom",
           "month",
           "dow"
          ]
         },
         "desc": {
          "_name_": "desc",
          "title": "desc",
          "_required_": false,
          "type": "string"
         },
         "all_disks": {
          "type": "boolean",
          "_name_": "all_disks",
          "title": "all_disks",
          "default": false,
          "_required_": false
         },
         "disks": {
          "_name_": "disks",
          "title": "disks",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "disk",
            "title": "disk",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "_required_": true,
          "type": "string",
          "enum": [
           "LONG",
           "SHORT",
           "CONVEYANCE",
           "OFFLINE"
          ]
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "smart_task_entry",
        "title": "smart_task_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "schedule",
         "desc",
         "all_disks",
         "disks",
         "type",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "schedule": {
        "type": "object",
        "properties": {
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "desc": {
        "_name_": "desc",
        "title": "desc",
        "_required_": false,
        "type": "string"
       },
       "all_disks": {
        "type": "boolean",
        "_name_": "all_disks",
        "title": "all_disks",
        "default": false,
        "_required_": false
       },
       "disks": {
        "_name_": "disks",
        "title": "disks",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "LONG",
         "SHORT",
         "CONVEYANCE",
         "OFFLINE"
        ]
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "smart_task_entry",
      "title": "smart_task_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "schedule",
       "desc",
       "all_disks",
       "disks",
       "type",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "schedule": {
        "type": "object",
        "properties": {
         "hour": {
          "_name_": "hour",
          "title": "hour",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dom": {
          "_name_": "dom",
          "title": "dom",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "month": {
          "_name_": "month",
          "title": "month",
          "default": "*",
          "_required_": false,
          "type": "string"
         },
         "dow": {
          "_name_": "dow",
          "title": "dow",
          "default": "*",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "schedule",
        "title": "schedule",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "hour",
         "dom",
         "month",
         "dow"
        ]
       },
       "desc": {
        "_name_": "desc",
        "title": "desc",
        "_required_": false,
        "type": "string"
       },
       "all_disks": {
        "type": "boolean",
        "_name_": "all_disks",
        "title": "all_disks",
        "default": false,
        "_required_": false
       },
       "disks": {
        "_name_": "disks",
        "title": "disks",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "disk",
          "title": "disk",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "type": {
        "_name_": "type",
        "title": "type",
        "_required_": true,
        "type": "string",
        "enum": [
         "LONG",
         "SHORT",
         "CONVEYANCE",
         "OFFLINE"
        ]
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "smart_task_entry",
      "title": "smart_task_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "schedule",
       "desc",
       "all_disks",
       "disks",
       "type",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "smart_test_create": {
    "type": "object",
    "properties": {
     "schedule": {
      "type": "object",
      "properties": {
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "all_disks": {
      "type": "boolean",
      "_name_": "all_disks",
      "title": "all_disks",
      "default": false,
      "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "disks": {
      "_name_": "disks",
      "title": "disks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "disk",
       "title": "disk",
       "_required_": false,
       "type": "string"
      },
      "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "LONG",
       "SHORT",
       "CONVEYANCE",
       "OFFLINE"
      ],
      "description": "`type` is specified to represent the type of SMART test to be executed."
     }
    },
    "additionalProperties": false,
    "_name_": "smart_task_create",
    "title": "smart_task_create",
    "default": {},
    "_attrs_order_": [
     "schedule",
     "desc",
     "all_disks",
     "disks",
     "type"
    ]
   },
   "return_schema_of_smart_test_create": {
    "type": "object",
    "properties": {
     "schedule": {
      "type": "object",
      "properties": {
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "all_disks": {
      "type": "boolean",
      "_name_": "all_disks",
      "title": "all_disks",
      "default": false,
      "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "disks": {
      "_name_": "disks",
      "title": "disks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "disk",
       "title": "disk",
       "_required_": false,
       "type": "string"
      },
      "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "LONG",
       "SHORT",
       "CONVEYANCE",
       "OFFLINE"
      ],
      "description": "`type` is specified to represent the type of SMART test to be executed."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "smart_test_create_returns",
    "title": "smart_test_create_returns",
    "default": {},
    "_attrs_order_": [
     "schedule",
     "desc",
     "all_disks",
     "disks",
     "type",
     "id"
    ]
   },
   "return_schema_of_smart_test_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "smart_test_update": {
    "type": "object",
    "properties": {
     "schedule": {
      "type": "object",
      "properties": {
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "all_disks": {
      "type": "boolean",
      "_name_": "all_disks",
      "title": "all_disks",
      "default": false,
      "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "disks": {
      "_name_": "disks",
      "title": "disks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "disk",
       "title": "disk",
       "_required_": false,
       "type": "string"
      },
      "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "LONG",
       "SHORT",
       "CONVEYANCE",
       "OFFLINE"
      ],
      "description": "`type` is specified to represent the type of SMART test to be executed."
     }
    },
    "additionalProperties": false,
    "_name_": "smart_test_update",
    "title": "smart_test_update",
    "default": {},
    "_attrs_order_": [
     "schedule",
     "desc",
     "all_disks",
     "disks",
     "type"
    ]
   },
   "return_schema_of_smart_test_update": {
    "type": "object",
    "properties": {
     "schedule": {
      "type": "object",
      "properties": {
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "all_disks": {
      "type": "boolean",
      "_name_": "all_disks",
      "title": "all_disks",
      "default": false,
      "description": "`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "disks": {
      "_name_": "disks",
      "title": "disks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "disk",
       "title": "disk",
       "_required_": false,
       "type": "string"
      },
      "description": "`disks` is a list of valid disks which should be monitored in this task.\n`all_disks` when enabled sets the task to cover all disks in which case `disks` is not required."
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "LONG",
       "SHORT",
       "CONVEYANCE",
       "OFFLINE"
      ],
      "description": "`type` is specified to represent the type of SMART test to be executed."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update SMART Test Task of `id`.\nCreate a SMART Test Task."
     }
    },
    "additionalProperties": false,
    "_name_": "smart_test_update_returns",
    "title": "smart_test_update_returns",
    "default": {},
    "_attrs_order_": [
     "schedule",
     "desc",
     "all_disks",
     "disks",
     "type",
     "id"
    ]
   },
   "smart_test_disk_choices": {
    "type": "boolean",
    "_name_": "full_disk",
    "title": "full_disk",
    "default": false
   },
   "smart_test_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "smart_test_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "smart_test_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/smart_test_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/smart_test_get_instance_1"
     }
    }
   },
   "return_schema_of_smart_test_get_instance": {
    "type": "object",
    "properties": {
     "schedule": {
      "type": "object",
      "properties": {
       "hour": {
        "_name_": "hour",
        "title": "hour",
        "default": "*",
        "type": "string"
       },
       "dom": {
        "_name_": "dom",
        "title": "dom",
        "default": "*",
        "type": "string"
       },
       "month": {
        "_name_": "month",
        "title": "month",
        "default": "*",
        "type": "string"
       },
       "dow": {
        "_name_": "dow",
        "title": "dow",
        "default": "*",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "schedule",
      "title": "schedule",
      "default": {},
      "_attrs_order_": [
       "hour",
       "dom",
       "month",
       "dow"
      ]
     },
     "desc": {
      "_name_": "desc",
      "title": "desc",
      "type": "string"
     },
     "all_disks": {
      "type": "boolean",
      "_name_": "all_disks",
      "title": "all_disks",
      "default": false
     },
     "disks": {
      "_name_": "disks",
      "title": "disks",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "disk",
       "title": "disk",
       "_required_": false,
       "type": "string"
      }
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "LONG",
       "SHORT",
       "CONVEYANCE",
       "OFFLINE"
      ]
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "smart_task_entry",
    "title": "smart_task_entry",
    "default": {},
    "_attrs_order_": [
     "schedule",
     "desc",
     "all_disks",
     "disks",
     "type",
     "id"
    ]
   },
   "smart_test_manual_test": {
    "_name_": "disks",
    "title": "disks",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "identifier": {
       "_name_": "identifier",
       "title": "identifier",
       "_required_": true,
       "type": "string"
      },
      "mode": {
       "_name_": "mode",
       "title": "mode",
       "default": "BACKGROUND",
       "_required_": false,
       "type": "string",
       "enum": [
        "FOREGROUND",
        "BACKGROUND"
       ]
      },
      "type": {
       "_name_": "type",
       "title": "type",
       "_required_": true,
       "type": "string",
       "enum": [
        "LONG",
        "SHORT",
        "CONVEYANCE",
        "OFFLINE"
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "disk_run",
     "title": "disk_run",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "identifier",
      "mode",
      "type"
     ]
    },
    "description": "Run manual SMART tests for `disks`."
   },
   "return_schema_of_smart_test_manual_test": {
    "_name_": "smart_manual_test",
    "title": "smart_manual_test",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "disk": {
       "_name_": "disk",
       "title": "disk",
       "_required_": true,
       "type": "string"
      },
      "identifier": {
       "_name_": "identifier",
       "title": "identifier",
       "_required_": true,
       "type": "string"
      },
      "error": {
       "_name_": "error",
       "title": "error",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "expected_result_time": {
       "_name_": "expected_result_time",
       "title": "expected_result_time",
       "_required_": false,
       "type": "string"
      },
      "job": {
       "type": "integer",
       "_name_": "job",
       "title": "job",
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "smart_manual_test_disk_response",
     "title": "smart_manual_test_disk_response",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "disk",
      "identifier",
      "error",
      "expected_result_time",
      "job"
     ]
    }
   },
   "smart_test_query_for_disk": {
    "_name_": "disk",
    "title": "disk",
    "type": "string"
   },
   "return_schema_of_smart_test_results": {
    "anyOf": [
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "disk": {
        "_name_": "disk",
        "title": "disk",
        "_required_": true,
        "type": "string"
       },
       "tests": {
        "_name_": "tests",
        "title": "tests",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "object",
          "properties": {
           "num": {
            "type": "integer",
            "_name_": "num",
            "title": "num",
            "_required_": true
           },
           "description": {
            "_name_": "description",
            "title": "description",
            "_required_": true,
            "type": "string"
           },
           "status": {
            "_name_": "status",
            "title": "status",
            "_required_": true,
            "type": "string"
           },
           "status_verbose": {
            "_name_": "status_verbose",
            "title": "status_verbose",
            "_required_": true,
            "type": "string"
           },
           "segment_number": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "segment_number",
            "title": "segment_number",
            "_required_": false
           },
           "remaining": {
            "type": "float",
            "_name_": "remaining",
            "title": "remaining",
            "_required_": false
           },
           "lifetime": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "lifetime",
            "title": "lifetime",
            "_required_": true
           },
           "lba_of_first_error": {
            "_name_": "lba_of_first_error",
            "title": "lba_of_first_error",
            "_required_": true,
            "type": [
             "string",
             "null"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "test_result",
          "title": "test_result",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "num",
           "description",
           "status",
           "status_verbose",
           "segment_number",
           "remaining",
           "lifetime",
           "lba_of_first_error"
          ]
         }
        ]
       },
       "current_test": {
        "type": "object",
        "properties": {
         "progress": {
          "type": "integer",
          "_name_": "progress",
          "title": "progress",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "current_test",
        "title": "current_test",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "progress"
        ]
       }
      },
      "additionalProperties": true,
      "_name_": "disk_smart_test_result",
      "title": "disk_smart_test_result",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "disk",
       "tests",
       "current_test"
      ]
     },
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "disk": {
          "_name_": "disk",
          "title": "disk",
          "_required_": true,
          "type": "string"
         },
         "tests": {
          "_name_": "tests",
          "title": "tests",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "object",
            "properties": {
             "num": {
              "type": "integer",
              "_name_": "num",
              "title": "num",
              "_required_": true
             },
             "description": {
              "_name_": "description",
              "title": "description",
              "_required_": true,
              "type": "string"
             },
             "status": {
              "_name_": "status",
              "title": "status",
              "_required_": true,
              "type": "string"
             },
             "status_verbose": {
              "_name_": "status_verbose",
              "title": "status_verbose",
              "_required_": true,
              "type": "string"
             },
             "segment_number": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "segment_number",
              "title": "segment_number",
              "_required_": false
             },
             "remaining": {
              "type": "float",
              "_name_": "remaining",
              "title": "remaining",
              "_required_": false
             },
             "lifetime": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "lifetime",
              "title": "lifetime",
              "_required_": true
             },
             "lba_of_first_error": {
              "_name_": "lba_of_first_error",
              "title": "lba_of_first_error",
              "_required_": true,
              "type": [
               "string",
               "null"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "test_result",
            "title": "test_result",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "num",
             "description",
             "status",
             "status_verbose",
             "segment_number",
             "remaining",
             "lifetime",
             "lba_of_first_error"
            ]
           }
          ]
         },
         "current_test": {
          "type": "object",
          "properties": {
           "progress": {
            "type": "integer",
            "_name_": "progress",
            "title": "progress",
            "_required_": true
           }
          },
          "additionalProperties": false,
          "_name_": "current_test",
          "title": "current_test",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "progress"
          ]
         }
        },
        "additionalProperties": true,
        "_name_": "disk_smart_test_result",
        "title": "disk_smart_test_result",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "disk",
         "tests",
         "current_test"
        ]
       }
      ]
     }
    ],
    "nullable": false,
    "_name_": "filterable_result",
    "description": null
   },
   "return_schema_of_smb_config": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "smb_entry",
    "title": "smb_entry",
    "default": {},
    "_attrs_order_": []
   },
   "smb_update": {
    "type": "object",
    "properties": {
     "netbiosname": {
      "_name_": "netbiosname",
      "title": "netbiosname",
      "type": "string",
      "description": "`netbiosname` defaults to the original hostname of the system.\n`workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be\nautomatically set to the correct value during the process of joining an AD domain.\nNOTE: `workgroup` and `netbiosname` should have different values."
     },
     "netbiosname_b": {
      "_name_": "netbiosname_b",
      "title": "netbiosname_b",
      "type": "string"
     },
     "netbiosalias": {
      "_name_": "netbiosalias",
      "title": "netbiosalias",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "netbios_alias",
       "title": "netbios_alias",
       "_required_": false,
       "type": "string"
      },
      "description": "`netbiosalias` a list of netbios aliases. If Server is joined to an AD domain, additional Kerberos\nService Principal Names will be generated for these aliases."
     },
     "workgroup": {
      "_name_": "workgroup",
      "title": "workgroup",
      "type": "string",
      "description": "`workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be\nautomatically set to the correct value during the process of joining an AD domain.\nNOTE: `workgroup` and `netbiosname` should have different values."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "enable_smb1": {
      "type": "boolean",
      "_name_": "enable_smb1",
      "title": "enable_smb1",
      "description": "`enable_smb1` allows legacy SMB clients to connect to the server when enabled."
     },
     "unixcharset": {
      "_name_": "unixcharset",
      "title": "unixcharset",
      "type": "string"
     },
     "loglevel": {
      "_name_": "loglevel",
      "title": "loglevel",
      "type": "string",
      "enum": [
       "NONE",
       "MINIMUM",
       "NORMAL",
       "FULL",
       "DEBUG"
      ]
     },
     "syslog": {
      "type": "boolean",
      "_name_": "syslog",
      "title": "syslog"
     },
     "aapl_extensions": {
      "type": "boolean",
      "_name_": "aapl_extensions",
      "title": "aapl_extensions",
      "description": "`aapl_extensions` enables support for SMB2 protocol extensions for MacOS clients. This is not a\nrequirement for MacOS support, but is currently a requirement for time machine support."
     },
     "localmaster": {
      "type": "boolean",
      "_name_": "localmaster",
      "title": "localmaster",
      "description": "`localmaster` when set, determines if the system participates in a browser election."
     },
     "guest": {
      "_name_": "guest",
      "title": "guest",
      "type": "string",
      "description": "`guest` attribute is specified to select the account to be used for guest access. It defaults to \"nobody\"."
     },
     "admin_group": {
      "_name_": "admin_group",
      "title": "admin_group",
      "default": null,
      "type": "string",
      "description": "The group specified as the SMB `admin_group` will be automatically added as a foreign group member\nof S-1-5-32-544 (builtin\\admins). This will afford the group all privileges granted to a local admin.\nAny SMB group may be selected (including AD groups).",
      "nullable": true
     },
     "filemask": {
      "_name_": "filemask",
      "title": "filemask",
      "type": "string"
     },
     "dirmask": {
      "_name_": "dirmask",
      "title": "dirmask",
      "type": "string"
     },
     "ntlmv1_auth": {
      "type": "boolean",
      "_name_": "ntlmv1_auth",
      "title": "ntlmv1_auth",
      "description": "`ntlmv1_auth` enables a legacy and insecure authentication method, which may be required for legacy or\npoorly-implemented SMB clients."
     },
     "multichannel": {
      "type": "boolean",
      "_name_": "multichannel",
      "title": "multichannel",
      "default": false
     },
     "bindip": {
      "_name_": "bindip",
      "title": "bindip",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "ip",
       "title": "ip",
       "_required_": false,
       "type": "string"
      }
     },
     "smb_options": {
      "_name_": "smb_options",
      "title": "smb_options",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "smb_update",
    "title": "smb_update",
    "default": {},
    "_attrs_order_": [
     "netbiosname",
     "netbiosname_b",
     "netbiosalias",
     "workgroup",
     "description",
     "enable_smb1",
     "unixcharset",
     "loglevel",
     "syslog",
     "aapl_extensions",
     "localmaster",
     "guest",
     "admin_group",
     "filemask",
     "dirmask",
     "ntlmv1_auth",
     "multichannel",
     "bindip",
     "smb_options"
    ]
   },
   "return_schema_of_smb_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "smb_update_returns",
    "title": "smb_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "smb_get_remote_acl": {
    "type": "object",
    "properties": {
     "server": {
      "_name_": "server",
      "title": "server",
      "type": "string",
      "description": "`server` IP Address or hostname of the remote server"
     },
     "share": {
      "_name_": "share",
      "title": "share",
      "type": "string",
      "description": "`share` Share name"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "default": "\\",
      "type": "string",
      "description": "`path` path on the remote SMB server. Use \"\" to separate path components"
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string",
      "description": "`username` username to use for authentication"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`password` password to use for authentication"
     },
     "options": {
      "type": "object",
      "properties": {
       "use_kerberos": {
        "type": "boolean",
        "_name_": "use_kerberos",
        "title": "use_kerberos",
        "default": false
       },
       "output_format": {
        "_name_": "output_format",
        "title": "output_format",
        "default": "SMB",
        "type": "string",
        "enum": [
         "SMB",
         "LOCAL"
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "options",
      "title": "options",
      "default": {},
      "_attrs_order_": [
       "use_kerberos",
       "output_format"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "get_remote_acl",
    "title": "get_remote_acl",
    "default": {},
    "_attrs_order_": [
     "server",
     "share",
     "path",
     "username",
     "password",
     "options"
    ]
   },
   "smb_status_0": {
    "_name_": "info_level",
    "title": "info_level",
    "default": "ALL",
    "type": "string",
    "enum": [
     "AUTH_LOG",
     "ALL",
     "SESSIONS",
     "SHARES",
     "LOCKS",
     "BYTERANGE",
     "NOTIFICATIONS"
    ],
    "description": "`info_level` type of information requests. Defaults to ALL."
   },
   "smb_status_1": {
    "_name_": "query-filters",
    "title": "query-filters",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "query-filter",
     "title": "query-filter",
     "default": [],
     "_required_": false,
     "type": "array",
     "items": []
    }
   },
   "smb_status_2": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "query-options",
    "title": "query-options",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "smb_status_3": {
    "type": "object",
    "properties": {
     "verbose": {
      "type": "boolean",
      "_name_": "verbose",
      "title": "verbose",
      "default": true,
      "description": "`status_options` additional options to filter query results. Supported\nvalues are as follows: `verbose` gives more verbose status output"
     },
     "fast": {
      "type": "boolean",
      "_name_": "fast",
      "title": "fast",
      "default": false,
      "description": "`fast` causes smbstatus to not check if the status data is valid by\nchecking if the processes that the status data refer to all still\nexist. This speeds up execution on busy systems and clusters but\nmight display stale data of processes that died without cleaning up\nproperly. `restrict_user` specifies the limits results to the specified\nuser."
     },
     "restrict_user": {
      "_name_": "restrict_user",
      "title": "restrict_user",
      "default": "",
      "type": "string",
      "description": "`fast` causes smbstatus to not check if the status data is valid by\nchecking if the processes that the status data refer to all still\nexist. This speeds up execution on busy systems and clusters but\nmight display stale data of processes that died without cleaning up\nproperly. `restrict_user` specifies the limits results to the specified\nuser."
     },
     "restrict_session": {
      "_name_": "restrict_session",
      "title": "restrict_session",
      "default": "",
      "type": "string"
     },
     "resolve_uids": {
      "type": "boolean",
      "_name_": "resolve_uids",
      "title": "resolve_uids",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "status_options",
    "title": "status_options",
    "default": {},
    "_attrs_order_": [
     "verbose",
     "fast",
     "restrict_user",
     "restrict_session",
     "resolve_uids"
    ],
    "description": "`status_options` additional options to filter query results. Supported\nvalues are as follows: `verbose` gives more verbose status output"
   },
   "smb_status": {
    "type": "object",
    "properties": {
     "info_level": {
      "$ref": "#/components/schemas/smb_status_0"
     },
     "query-filters": {
      "$ref": "#/components/schemas/smb_status_1"
     },
     "query-options": {
      "$ref": "#/components/schemas/smb_status_2"
     },
     "status_options": {
      "$ref": "#/components/schemas/smb_status_3"
     }
    }
   },
   "return_schema_of_snmp_config": {
    "type": "object",
    "properties": {
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "contact": {
      "_name_": "contact",
      "title": "contact",
      "type": "string"
     },
     "traps": {
      "type": "boolean",
      "_name_": "traps",
      "title": "traps"
     },
     "v3": {
      "type": "boolean",
      "_name_": "v3",
      "title": "v3"
     },
     "community": {
      "_name_": "community",
      "title": "community",
      "default": "public",
      "type": "string"
     },
     "v3_username": {
      "_name_": "v3_username",
      "title": "v3_username",
      "type": "string"
     },
     "v3_authtype": {
      "_name_": "v3_authtype",
      "title": "v3_authtype",
      "type": "string",
      "enum": [
       "",
       "MD5",
       "SHA"
      ]
     },
     "v3_password": {
      "_name_": "v3_password",
      "title": "v3_password",
      "type": "string"
     },
     "v3_privproto": {
      "_name_": "v3_privproto",
      "title": "v3_privproto",
      "type": "string",
      "enum": [
       null,
       "AES",
       "DES"
      ],
      "nullable": true
     },
     "v3_privpassphrase": {
      "_name_": "v3_privpassphrase",
      "title": "v3_privpassphrase",
      "type": "string",
      "nullable": true
     },
     "loglevel": {
      "type": "integer",
      "_name_": "loglevel",
      "title": "loglevel"
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "zilstat": {
      "type": "boolean",
      "_name_": "zilstat",
      "title": "zilstat"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "snmp_entry",
    "title": "snmp_entry",
    "default": {},
    "_attrs_order_": [
     "location",
     "contact",
     "traps",
     "v3",
     "community",
     "v3_username",
     "v3_authtype",
     "v3_password",
     "v3_privproto",
     "v3_privpassphrase",
     "loglevel",
     "options",
     "zilstat",
     "id"
    ]
   },
   "snmp_update": {
    "type": "object",
    "properties": {
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "contact": {
      "_name_": "contact",
      "title": "contact",
      "type": "string"
     },
     "traps": {
      "type": "boolean",
      "_name_": "traps",
      "title": "traps"
     },
     "v3": {
      "type": "boolean",
      "_name_": "v3",
      "title": "v3",
      "description": "`v3` when set enables SNMP version 3."
     },
     "community": {
      "_name_": "community",
      "title": "community",
      "default": "public",
      "type": "string"
     },
     "v3_username": {
      "_name_": "v3_username",
      "title": "v3_username",
      "type": "string"
     },
     "v3_authtype": {
      "_name_": "v3_authtype",
      "title": "v3_authtype",
      "type": "string",
      "enum": [
       "",
       "MD5",
       "SHA"
      ]
     },
     "v3_password": {
      "_name_": "v3_password",
      "title": "v3_password",
      "type": "string"
     },
     "v3_privproto": {
      "_name_": "v3_privproto",
      "title": "v3_privproto",
      "type": "string",
      "enum": [
       null,
       "AES",
       "DES"
      ],
      "nullable": true
     },
     "v3_privpassphrase": {
      "_name_": "v3_privpassphrase",
      "title": "v3_privpassphrase",
      "type": "string",
      "nullable": true
     },
     "loglevel": {
      "type": "integer",
      "_name_": "loglevel",
      "title": "loglevel"
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "zilstat": {
      "type": "boolean",
      "_name_": "zilstat",
      "title": "zilstat"
     }
    },
    "additionalProperties": false,
    "_name_": "snmp_update",
    "title": "snmp_update",
    "default": {},
    "_attrs_order_": [
     "location",
     "contact",
     "traps",
     "v3",
     "community",
     "v3_username",
     "v3_authtype",
     "v3_password",
     "v3_privproto",
     "v3_privpassphrase",
     "loglevel",
     "options",
     "zilstat"
    ]
   },
   "return_schema_of_snmp_update": {
    "type": "object",
    "properties": {
     "location": {
      "_name_": "location",
      "title": "location",
      "type": "string"
     },
     "contact": {
      "_name_": "contact",
      "title": "contact",
      "type": "string"
     },
     "traps": {
      "type": "boolean",
      "_name_": "traps",
      "title": "traps"
     },
     "v3": {
      "type": "boolean",
      "_name_": "v3",
      "title": "v3",
      "description": "`v3` when set enables SNMP version 3."
     },
     "community": {
      "_name_": "community",
      "title": "community",
      "default": "public",
      "type": "string"
     },
     "v3_username": {
      "_name_": "v3_username",
      "title": "v3_username",
      "type": "string"
     },
     "v3_authtype": {
      "_name_": "v3_authtype",
      "title": "v3_authtype",
      "type": "string",
      "enum": [
       "",
       "MD5",
       "SHA"
      ]
     },
     "v3_password": {
      "_name_": "v3_password",
      "title": "v3_password",
      "type": "string"
     },
     "v3_privproto": {
      "_name_": "v3_privproto",
      "title": "v3_privproto",
      "type": "string",
      "enum": [
       null,
       "AES",
       "DES"
      ],
      "nullable": true
     },
     "v3_privpassphrase": {
      "_name_": "v3_privpassphrase",
      "title": "v3_privpassphrase",
      "type": "string",
      "nullable": true
     },
     "loglevel": {
      "type": "integer",
      "_name_": "loglevel",
      "title": "loglevel"
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "zilstat": {
      "type": "boolean",
      "_name_": "zilstat",
      "title": "zilstat"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "snmp_update_returns",
    "title": "snmp_update_returns",
    "default": {},
    "_attrs_order_": [
     "location",
     "contact",
     "traps",
     "v3",
     "community",
     "v3_username",
     "v3_authtype",
     "v3_password",
     "v3_privproto",
     "v3_privpassphrase",
     "loglevel",
     "options",
     "zilstat",
     "id"
    ]
   },
   "return_schema_of_ssh_config": {
    "type": "object",
    "properties": {
     "bindiface": {
      "_name_": "bindiface",
      "title": "bindiface",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "iface",
       "title": "iface",
       "_required_": false,
       "type": "string"
      }
     },
     "tcpport": {
      "type": "integer",
      "_name_": "tcpport",
      "title": "tcpport"
     },
     "password_login_groups": {
      "_name_": "password_login_groups",
      "title": "password_login_groups",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "group",
       "title": "group",
       "_required_": false,
       "type": "string"
      }
     },
     "passwordauth": {
      "type": "boolean",
      "_name_": "passwordauth",
      "title": "passwordauth"
     },
     "kerberosauth": {
      "type": "boolean",
      "_name_": "kerberosauth",
      "title": "kerberosauth"
     },
     "tcpfwd": {
      "type": "boolean",
      "_name_": "tcpfwd",
      "title": "tcpfwd"
     },
     "compression": {
      "type": "boolean",
      "_name_": "compression",
      "title": "compression"
     },
     "sftp_log_level": {
      "_name_": "sftp_log_level",
      "title": "sftp_log_level",
      "type": "string",
      "enum": [
       "",
       "QUIET",
       "FATAL",
       "ERROR",
       "INFO",
       "VERBOSE",
       "DEBUG",
       "DEBUG2",
       "DEBUG3"
      ]
     },
     "sftp_log_facility": {
      "_name_": "sftp_log_facility",
      "title": "sftp_log_facility",
      "type": "string",
      "enum": [
       "",
       "DAEMON",
       "USER",
       "AUTH",
       "LOCAL0",
       "LOCAL1",
       "LOCAL2",
       "LOCAL3",
       "LOCAL4",
       "LOCAL5",
       "LOCAL6",
       "LOCAL7"
      ]
     },
     "weak_ciphers": {
      "_name_": "weak_ciphers",
      "title": "weak_ciphers",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "cipher",
       "title": "cipher",
       "_required_": false,
       "type": "string",
       "enum": [
        "AES128-CBC",
        "NONE"
       ]
      }
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string"
     },
     "host_dsa_key": {
      "_name_": "host_dsa_key",
      "title": "host_dsa_key",
      "type": "string",
      "nullable": true
     },
     "host_dsa_key_pub": {
      "_name_": "host_dsa_key_pub",
      "title": "host_dsa_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_dsa_key_cert_pub": {
      "_name_": "host_dsa_key_cert_pub",
      "title": "host_dsa_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "host_ecdsa_key": {
      "_name_": "host_ecdsa_key",
      "title": "host_ecdsa_key",
      "type": "string",
      "nullable": true
     },
     "host_ecdsa_key_pub": {
      "_name_": "host_ecdsa_key_pub",
      "title": "host_ecdsa_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_ecdsa_key_cert_pub": {
      "_name_": "host_ecdsa_key_cert_pub",
      "title": "host_ecdsa_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "host_ed25519_key": {
      "_name_": "host_ed25519_key",
      "title": "host_ed25519_key",
      "type": "string",
      "nullable": true
     },
     "host_ed25519_key_pub": {
      "_name_": "host_ed25519_key_pub",
      "title": "host_ed25519_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_ed25519_key_cert_pub": {
      "_name_": "host_ed25519_key_cert_pub",
      "title": "host_ed25519_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "host_key": {
      "_name_": "host_key",
      "title": "host_key",
      "type": "string",
      "nullable": true
     },
     "host_key_pub": {
      "_name_": "host_key_pub",
      "title": "host_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_rsa_key": {
      "_name_": "host_rsa_key",
      "title": "host_rsa_key",
      "type": "string",
      "nullable": true
     },
     "host_rsa_key_pub": {
      "_name_": "host_rsa_key_pub",
      "title": "host_rsa_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_rsa_key_cert_pub": {
      "_name_": "host_rsa_key_cert_pub",
      "title": "host_rsa_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "ssh_entry",
    "title": "ssh_entry",
    "default": {},
    "_attrs_order_": [
     "bindiface",
     "tcpport",
     "password_login_groups",
     "passwordauth",
     "kerberosauth",
     "tcpfwd",
     "compression",
     "sftp_log_level",
     "sftp_log_facility",
     "weak_ciphers",
     "options",
     "privatekey",
     "host_dsa_key",
     "host_dsa_key_pub",
     "host_dsa_key_cert_pub",
     "host_ecdsa_key",
     "host_ecdsa_key_pub",
     "host_ecdsa_key_cert_pub",
     "host_ed25519_key",
     "host_ed25519_key_pub",
     "host_ed25519_key_cert_pub",
     "host_key",
     "host_key_pub",
     "host_rsa_key",
     "host_rsa_key_pub",
     "host_rsa_key_cert_pub",
     "id"
    ]
   },
   "ssh_update": {
    "type": "object",
    "properties": {
     "bindiface": {
      "_name_": "bindiface",
      "title": "bindiface",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "iface",
       "title": "iface",
       "_required_": false,
       "type": "string"
      },
      "description": "If `bindiface` is empty it will listen for all available addresses."
     },
     "tcpport": {
      "type": "integer",
      "_name_": "tcpport",
      "title": "tcpport"
     },
     "password_login_groups": {
      "_name_": "password_login_groups",
      "title": "password_login_groups",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "group",
       "title": "group",
       "_required_": false,
       "type": "string"
      }
     },
     "passwordauth": {
      "type": "boolean",
      "_name_": "passwordauth",
      "title": "passwordauth"
     },
     "kerberosauth": {
      "type": "boolean",
      "_name_": "kerberosauth",
      "title": "kerberosauth"
     },
     "tcpfwd": {
      "type": "boolean",
      "_name_": "tcpfwd",
      "title": "tcpfwd"
     },
     "compression": {
      "type": "boolean",
      "_name_": "compression",
      "title": "compression"
     },
     "sftp_log_level": {
      "_name_": "sftp_log_level",
      "title": "sftp_log_level",
      "type": "string",
      "enum": [
       "",
       "QUIET",
       "FATAL",
       "ERROR",
       "INFO",
       "VERBOSE",
       "DEBUG",
       "DEBUG2",
       "DEBUG3"
      ]
     },
     "sftp_log_facility": {
      "_name_": "sftp_log_facility",
      "title": "sftp_log_facility",
      "type": "string",
      "enum": [
       "",
       "DAEMON",
       "USER",
       "AUTH",
       "LOCAL0",
       "LOCAL1",
       "LOCAL2",
       "LOCAL3",
       "LOCAL4",
       "LOCAL5",
       "LOCAL6",
       "LOCAL7"
      ]
     },
     "weak_ciphers": {
      "_name_": "weak_ciphers",
      "title": "weak_ciphers",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "cipher",
       "title": "cipher",
       "_required_": false,
       "type": "string",
       "enum": [
        "AES128-CBC",
        "NONE"
       ]
      }
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "ssh_update",
    "title": "ssh_update",
    "default": {},
    "_attrs_order_": [
     "bindiface",
     "tcpport",
     "password_login_groups",
     "passwordauth",
     "kerberosauth",
     "tcpfwd",
     "compression",
     "sftp_log_level",
     "sftp_log_facility",
     "weak_ciphers",
     "options"
    ]
   },
   "return_schema_of_ssh_update": {
    "type": "object",
    "properties": {
     "bindiface": {
      "_name_": "bindiface",
      "title": "bindiface",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "iface",
       "title": "iface",
       "_required_": false,
       "type": "string"
      },
      "description": "If `bindiface` is empty it will listen for all available addresses."
     },
     "tcpport": {
      "type": "integer",
      "_name_": "tcpport",
      "title": "tcpport"
     },
     "password_login_groups": {
      "_name_": "password_login_groups",
      "title": "password_login_groups",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "group",
       "title": "group",
       "_required_": false,
       "type": "string"
      }
     },
     "passwordauth": {
      "type": "boolean",
      "_name_": "passwordauth",
      "title": "passwordauth"
     },
     "kerberosauth": {
      "type": "boolean",
      "_name_": "kerberosauth",
      "title": "kerberosauth"
     },
     "tcpfwd": {
      "type": "boolean",
      "_name_": "tcpfwd",
      "title": "tcpfwd"
     },
     "compression": {
      "type": "boolean",
      "_name_": "compression",
      "title": "compression"
     },
     "sftp_log_level": {
      "_name_": "sftp_log_level",
      "title": "sftp_log_level",
      "type": "string",
      "enum": [
       "",
       "QUIET",
       "FATAL",
       "ERROR",
       "INFO",
       "VERBOSE",
       "DEBUG",
       "DEBUG2",
       "DEBUG3"
      ]
     },
     "sftp_log_facility": {
      "_name_": "sftp_log_facility",
      "title": "sftp_log_facility",
      "type": "string",
      "enum": [
       "",
       "DAEMON",
       "USER",
       "AUTH",
       "LOCAL0",
       "LOCAL1",
       "LOCAL2",
       "LOCAL3",
       "LOCAL4",
       "LOCAL5",
       "LOCAL6",
       "LOCAL7"
      ]
     },
     "weak_ciphers": {
      "_name_": "weak_ciphers",
      "title": "weak_ciphers",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "cipher",
       "title": "cipher",
       "_required_": false,
       "type": "string",
       "enum": [
        "AES128-CBC",
        "NONE"
       ]
      }
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "privatekey": {
      "_name_": "privatekey",
      "title": "privatekey",
      "type": "string"
     },
     "host_dsa_key": {
      "_name_": "host_dsa_key",
      "title": "host_dsa_key",
      "type": "string",
      "nullable": true
     },
     "host_dsa_key_pub": {
      "_name_": "host_dsa_key_pub",
      "title": "host_dsa_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_dsa_key_cert_pub": {
      "_name_": "host_dsa_key_cert_pub",
      "title": "host_dsa_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "host_ecdsa_key": {
      "_name_": "host_ecdsa_key",
      "title": "host_ecdsa_key",
      "type": "string",
      "nullable": true
     },
     "host_ecdsa_key_pub": {
      "_name_": "host_ecdsa_key_pub",
      "title": "host_ecdsa_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_ecdsa_key_cert_pub": {
      "_name_": "host_ecdsa_key_cert_pub",
      "title": "host_ecdsa_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "host_ed25519_key": {
      "_name_": "host_ed25519_key",
      "title": "host_ed25519_key",
      "type": "string",
      "nullable": true
     },
     "host_ed25519_key_pub": {
      "_name_": "host_ed25519_key_pub",
      "title": "host_ed25519_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_ed25519_key_cert_pub": {
      "_name_": "host_ed25519_key_cert_pub",
      "title": "host_ed25519_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "host_key": {
      "_name_": "host_key",
      "title": "host_key",
      "type": "string",
      "nullable": true
     },
     "host_key_pub": {
      "_name_": "host_key_pub",
      "title": "host_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_rsa_key": {
      "_name_": "host_rsa_key",
      "title": "host_rsa_key",
      "type": "string",
      "nullable": true
     },
     "host_rsa_key_pub": {
      "_name_": "host_rsa_key_pub",
      "title": "host_rsa_key_pub",
      "type": "string",
      "nullable": true
     },
     "host_rsa_key_cert_pub": {
      "_name_": "host_rsa_key_cert_pub",
      "title": "host_rsa_key_cert_pub",
      "type": "string",
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "ssh_update_returns",
    "title": "ssh_update_returns",
    "default": {},
    "_attrs_order_": [
     "bindiface",
     "tcpport",
     "password_login_groups",
     "passwordauth",
     "kerberosauth",
     "tcpfwd",
     "compression",
     "sftp_log_level",
     "sftp_log_facility",
     "weak_ciphers",
     "options",
     "privatekey",
     "host_dsa_key",
     "host_dsa_key_pub",
     "host_dsa_key_cert_pub",
     "host_ecdsa_key",
     "host_ecdsa_key_pub",
     "host_ecdsa_key_cert_pub",
     "host_ed25519_key",
     "host_ed25519_key_pub",
     "host_ed25519_key_cert_pub",
     "host_key",
     "host_key_pub",
     "host_rsa_key",
     "host_rsa_key_pub",
     "host_rsa_key_cert_pub",
     "id"
    ]
   },
   "return_schema_of_ssh_bindiface_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "ssh_bind_interfaces_choices",
    "title": "ssh_bind_interfaces_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_staticroute_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "destination": {
          "_name_": "destination",
          "title": "destination",
          "_required_": true,
          "type": "string"
         },
         "gateway": {
          "_name_": "gateway",
          "title": "gateway",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "default": "",
          "_required_": true,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": true
         }
        },
        "additionalProperties": false,
        "_name_": "staticroute_entry",
        "title": "staticroute_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "destination",
         "gateway",
         "description",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "destination": {
        "_name_": "destination",
        "title": "destination",
        "_required_": true,
        "type": "string"
       },
       "gateway": {
        "_name_": "gateway",
        "title": "gateway",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "default": "",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "staticroute_entry",
      "title": "staticroute_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "destination",
       "gateway",
       "description",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "destination": {
        "_name_": "destination",
        "title": "destination",
        "_required_": true,
        "type": "string"
       },
       "gateway": {
        "_name_": "gateway",
        "title": "gateway",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "default": "",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": true
       }
      },
      "additionalProperties": false,
      "_name_": "staticroute_entry",
      "title": "staticroute_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "destination",
       "gateway",
       "description",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "staticroute_create": {
    "type": "object",
    "properties": {
     "destination": {
      "_name_": "destination",
      "title": "destination",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "gateway": {
      "_name_": "gateway",
      "title": "gateway",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "staticroute_create",
    "title": "staticroute_create",
    "default": {},
    "_attrs_order_": [
     "destination",
     "gateway",
     "description"
    ]
   },
   "return_schema_of_staticroute_create": {
    "type": "object",
    "properties": {
     "destination": {
      "_name_": "destination",
      "title": "destination",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "gateway": {
      "_name_": "gateway",
      "title": "gateway",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "staticroute_create_returns",
    "title": "staticroute_create_returns",
    "default": {},
    "_attrs_order_": [
     "destination",
     "gateway",
     "description",
     "id"
    ]
   },
   "return_schema_of_staticroute_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "staticroute_update": {
    "type": "object",
    "properties": {
     "destination": {
      "_name_": "destination",
      "title": "destination",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "gateway": {
      "_name_": "gateway",
      "title": "gateway",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "staticroute_update",
    "title": "staticroute_update",
    "default": {},
    "_attrs_order_": [
     "destination",
     "gateway",
     "description"
    ]
   },
   "return_schema_of_staticroute_update": {
    "type": "object",
    "properties": {
     "destination": {
      "_name_": "destination",
      "title": "destination",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "gateway": {
      "_name_": "gateway",
      "title": "gateway",
      "type": "string",
      "description": "Address families of `gateway` and `destination` should match when creating a static route."
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update Static Route of `id`.\nCreate a Static Route."
     }
    },
    "additionalProperties": false,
    "_name_": "staticroute_update_returns",
    "title": "staticroute_update_returns",
    "default": {},
    "_attrs_order_": [
     "destination",
     "gateway",
     "description",
     "id"
    ]
   },
   "staticroute_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "staticroute_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "staticroute_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/staticroute_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/staticroute_get_instance_1"
     }
    }
   },
   "return_schema_of_staticroute_get_instance": {
    "type": "object",
    "properties": {
     "destination": {
      "_name_": "destination",
      "title": "destination",
      "type": "string"
     },
     "gateway": {
      "_name_": "gateway",
      "title": "gateway",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "default": "",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "staticroute_entry",
    "title": "staticroute_entry",
    "default": {},
    "_attrs_order_": [
     "destination",
     "gateway",
     "description",
     "id"
    ]
   },
   "return_schema_of_support_config": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "title": {
      "_name_": "title",
      "title": "title",
      "type": "string"
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string"
     },
     "phone": {
      "_name_": "phone",
      "title": "phone",
      "type": "string"
     },
     "secondary_name": {
      "_name_": "secondary_name",
      "title": "secondary_name",
      "type": "string"
     },
     "secondary_title": {
      "_name_": "secondary_title",
      "title": "secondary_title",
      "type": "string"
     },
     "secondary_email": {
      "_name_": "secondary_email",
      "title": "secondary_email",
      "type": "string"
     },
     "secondary_phone": {
      "_name_": "secondary_phone",
      "title": "secondary_phone",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "support_entry",
    "title": "support_entry",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "name",
     "title",
     "email",
     "phone",
     "secondary_name",
     "secondary_title",
     "secondary_email",
     "secondary_phone",
     "id"
    ]
   },
   "support_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "title": {
      "_name_": "title",
      "title": "title",
      "type": "string"
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string"
     },
     "phone": {
      "_name_": "phone",
      "title": "phone",
      "type": "string"
     },
     "secondary_name": {
      "_name_": "secondary_name",
      "title": "secondary_name",
      "type": "string"
     },
     "secondary_title": {
      "_name_": "secondary_title",
      "title": "secondary_title",
      "type": "string"
     },
     "secondary_email": {
      "_name_": "secondary_email",
      "title": "secondary_email",
      "type": "string"
     },
     "secondary_phone": {
      "_name_": "secondary_phone",
      "title": "secondary_phone",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "support_update",
    "title": "support_update",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "name",
     "title",
     "email",
     "phone",
     "secondary_name",
     "secondary_title",
     "secondary_email",
     "secondary_phone"
    ]
   },
   "return_schema_of_support_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "title": {
      "_name_": "title",
      "title": "title",
      "type": "string"
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string"
     },
     "phone": {
      "_name_": "phone",
      "title": "phone",
      "type": "string"
     },
     "secondary_name": {
      "_name_": "secondary_name",
      "title": "secondary_name",
      "type": "string"
     },
     "secondary_title": {
      "_name_": "secondary_title",
      "title": "secondary_title",
      "type": "string"
     },
     "secondary_email": {
      "_name_": "secondary_email",
      "title": "secondary_email",
      "type": "string"
     },
     "secondary_phone": {
      "_name_": "secondary_phone",
      "title": "secondary_phone",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "support_update_returns",
    "title": "support_update_returns",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "name",
     "title",
     "email",
     "phone",
     "secondary_name",
     "secondary_title",
     "secondary_email",
     "secondary_phone",
     "id"
    ]
   },
   "support_attach_ticket": {
    "type": "object",
    "properties": {
     "ticket": {
      "type": "integer",
      "_name_": "ticket",
      "title": "ticket"
     },
     "filename": {
      "_name_": "filename",
      "title": "filename",
      "type": "string"
     },
     "token": {
      "_name_": "token",
      "title": "token",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "attach_ticket",
    "title": "attach_ticket",
    "default": {},
    "_attrs_order_": [
     "ticket",
     "filename",
     "token"
    ]
   },
   "return_schema_of_support_attach_ticket_max_size": {
    "type": "integer",
    "_name_": "attach_ticket_max_size",
    "title": "attach_ticket_max_size"
   },
   "support_fetch_categories": {
    "_name_": "token",
    "title": "token",
    "default": "",
    "type": "string"
   },
   "return_schema_of_support_fetch_categories": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "fetch_categories",
    "title": "fetch_categories",
    "description": "\n\nExample(s):\n```\n{\n    \"API\": \"11008\",\n    \"WebUI\": \"10004\"\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_support_fields": {
    "_name_": "support_fields",
    "title": "support_fields",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "support_field",
     "title": "support_field",
     "default": [],
     "_required_": false,
     "type": "array",
     "items": [
      {
       "_name_": "field",
       "title": "field",
       "_required_": false,
       "type": "string"
      }
     ]
    }
   },
   "return_schema_of_support_is_available": {
    "type": "boolean",
    "_name_": "proactive_support_is_available",
    "title": "proactive_support_is_available"
   },
   "return_schema_of_support_is_available_and_enabled": {
    "type": "boolean",
    "_name_": "proactive_support_is_available_and_enabled",
    "title": "proactive_support_is_available_and_enabled"
   },
   "support_new_ticket": {
    "type": "object",
    "properties": {
     "title": {
      "_name_": "title",
      "title": "title",
      "type": "string"
     },
     "body": {
      "_name_": "body",
      "title": "body",
      "type": "string"
     },
     "category": {
      "_name_": "category",
      "title": "category",
      "type": "string"
     },
     "attach_debug": {
      "type": "boolean",
      "_name_": "attach_debug",
      "title": "attach_debug",
      "default": false
     },
     "token": {
      "_name_": "token",
      "title": "token",
      "type": "string"
     },
     "type": {
      "_name_": "type",
      "title": "type",
      "type": "string",
      "enum": [
       "BUG",
       "FEATURE"
      ]
     },
     "criticality": {
      "_name_": "criticality",
      "title": "criticality",
      "type": "string",
      "description": "For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required."
     },
     "environment": {
      "_name_": "environment",
      "title": "environment",
      "type": "string",
      "description": "For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required."
     },
     "phone": {
      "_name_": "phone",
      "title": "phone",
      "type": "string",
      "description": "For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required."
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string",
      "description": "For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required."
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "type": "string",
      "description": "For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required."
     },
     "cc": {
      "_name_": "cc",
      "title": "cc",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "email",
       "title": "email",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "new_ticket",
    "title": "new_ticket",
    "default": {},
    "_attrs_order_": [
     "title",
     "body",
     "category",
     "attach_debug",
     "token",
     "type",
     "criticality",
     "environment",
     "phone",
     "name",
     "email",
     "cc"
    ]
   },
   "return_schema_of_support_new_ticket": {
    "type": "object",
    "properties": {
     "ticket": {
      "type": "integer",
      "_name_": "ticket",
      "title": "ticket",
      "nullable": true
     },
     "url": {
      "_name_": "url",
      "title": "url",
      "type": "string",
      "nullable": true
     },
     "has_debug": {
      "type": "boolean",
      "_name_": "has_debug",
      "title": "has_debug"
     }
    },
    "additionalProperties": false,
    "_name_": "new_ticket_response",
    "title": "new_ticket_response",
    "default": {},
    "_attrs_order_": [
     "ticket",
     "url",
     "has_debug"
    ]
   },
   "support_similar_issues": {
    "_name_": "query",
    "title": "query",
    "type": "string"
   },
   "return_schema_of_support_similar_issues": {
    "_name_": "similar_issues",
    "title": "similar_issues",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "url": {
       "_name_": "url",
       "title": "url",
       "_required_": false,
       "type": "string"
      },
      "summary": {
       "_name_": "summary",
       "title": "summary",
       "_required_": false,
       "type": "string"
      }
     },
     "additionalProperties": true,
     "_name_": "similar_issue",
     "title": "similar_issue",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "url",
      "summary"
     ]
    }
   },
   "return_schema_of_system_boot_id": {
    "_name_": "system_boot_identifier",
    "title": "system_boot_identifier",
    "type": "string"
   },
   "return_schema_of_system_environment": {
    "_name_": "product_running_environment",
    "title": "product_running_environment",
    "type": "string",
    "enum": [
     "DEFAULT",
     "EC2"
    ]
   },
   "system_feature_enabled": {
    "_name_": "feature",
    "title": "feature",
    "type": "string",
    "enum": [
     "DEDUP",
     "FIBRECHANNEL",
     "VM"
    ]
   },
   "return_schema_of_system_feature_enabled": {
    "type": "boolean",
    "_name_": "feature_enabled",
    "title": "feature_enabled"
   },
   "return_schema_of_system_host_id": {
    "_name_": "system_host_identifier",
    "title": "system_host_identifier",
    "type": "string"
   },
   "return_schema_of_system_hostname": {
    "_name_": "hostname",
    "title": "hostname",
    "type": "string"
   },
   "return_schema_of_system_info": {
    "type": "object",
    "properties": {
     "version": {
      "_name_": "version",
      "title": "TrueNAS Version",
      "type": "string"
     },
     "buildtime": {
      "_name_": "buildtime",
      "title": "TrueNAS build time",
      "type": "string"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "System host name",
      "type": "string"
     },
     "physmem": {
      "type": "integer",
      "_name_": "physmem",
      "title": "System physical memory"
     },
     "model": {
      "_name_": "model",
      "title": "CPU Model",
      "type": "string"
     },
     "cores": {
      "type": "integer",
      "_name_": "cores",
      "title": "CPU Cores"
     },
     "physical_cores": {
      "type": "integer",
      "_name_": "physical_cores",
      "title": "CPU Physical Cores"
     },
     "loadavg": {
      "_name_": "loadavg",
      "title": "loadavg",
      "default": [],
      "type": "array",
      "items": {}
     },
     "uptime": {
      "_name_": "uptime",
      "title": "uptime",
      "type": "string"
     },
     "uptime_seconds": {
      "type": "float",
      "_name_": "uptime_seconds",
      "title": "uptime_seconds"
     },
     "system_serial": {
      "_name_": "system_serial",
      "title": "system_serial",
      "type": "string",
      "nullable": true
     },
     "system_product": {
      "_name_": "system_product",
      "title": "system_product",
      "type": "string",
      "nullable": true
     },
     "system_product_version": {
      "_name_": "system_product_version",
      "title": "system_product_version",
      "type": "string",
      "nullable": true
     },
     "license": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "license",
      "title": "license",
      "default": {},
      "_attrs_order_": []
     },
     "boottime": {
      "_name_": "boottime",
      "title": "boottime",
      "type": "string"
     },
     "datetime": {
      "_name_": "datetime",
      "title": "datetime",
      "type": "string"
     },
     "timezone": {
      "_name_": "timezone",
      "title": "timezone",
      "type": "string"
     },
     "system_manufacturer": {
      "_name_": "system_manufacturer",
      "title": "system_manufacturer",
      "type": "string",
      "nullable": true
     },
     "ecc_memory": {
      "type": "boolean",
      "_name_": "ecc_memory",
      "title": "ecc_memory"
     }
    },
    "additionalProperties": false,
    "_name_": "system_info",
    "title": "system_info",
    "default": {},
    "_attrs_order_": [
     "version",
     "buildtime",
     "hostname",
     "physmem",
     "model",
     "cores",
     "physical_cores",
     "loadavg",
     "uptime",
     "uptime_seconds",
     "system_serial",
     "system_product",
     "system_product_version",
     "license",
     "boottime",
     "datetime",
     "timezone",
     "system_manufacturer",
     "ecc_memory"
    ]
   },
   "return_schema_of_system_is_freenas": {
    "type": "boolean",
    "_name_": "system_is_truenas_core",
    "title": "system_is_truenas_core"
   },
   "return_schema_of_system_is_stable": {
    "_name_": "is_stable",
    "title": "is_stable",
    "type": "string"
   },
   "system_license_update": {
    "_name_": "license",
    "title": "license",
    "type": "string"
   },
   "return_schema_of_system_product_name": {
    "_name_": "product_name",
    "title": "product_name",
    "type": "string"
   },
   "return_schema_of_system_product_type": {
    "_name_": "product_type",
    "title": "product_type",
    "type": "string"
   },
   "return_schema_of_system_ready": {
    "type": "boolean",
    "_name_": "system_ready",
    "title": "system_ready"
   },
   "system_reboot": {
    "type": "object",
    "properties": {
     "delay": {
      "type": "integer",
      "_name_": "delay",
      "title": "delay"
     }
    },
    "additionalProperties": false,
    "_name_": "system-reboot",
    "title": "system-reboot",
    "default": {},
    "_attrs_order_": [
     "delay"
    ]
   },
   "system_release_notes_url": {
    "_name_": "version_str",
    "title": "version_str",
    "default": null,
    "type": "string",
    "description": "`version_str` str: represents a version to check against"
   },
   "return_schema_of_system_release_notes_url": {
    "_name_": "truenas_release_notes_url",
    "title": "truenas_release_notes_url",
    "type": "string",
    "nullable": true
   },
   "system_shutdown": {
    "type": "object",
    "properties": {
     "delay": {
      "type": "integer",
      "_name_": "delay",
      "title": "delay"
     }
    },
    "additionalProperties": false,
    "_name_": "system-shutdown",
    "title": "system-shutdown",
    "default": {},
    "_attrs_order_": [
     "delay"
    ]
   },
   "return_schema_of_system_state": {
    "_name_": "system_state",
    "title": "system_state",
    "type": "string",
    "enum": [
     "SHUTTING_DOWN",
     "READY",
     "BOOTING"
    ]
   },
   "return_schema_of_system_version": {
    "_name_": "truenas_version",
    "title": "truenas_version",
    "type": "string"
   },
   "return_schema_of_system_version_short": {
    "_name_": "truenas_version_shortname",
    "title": "truenas_version_shortname",
    "type": "string"
   },
   "return_schema_of_system_advanced_config": {
    "type": "object",
    "properties": {
     "advancedmode": {
      "type": "boolean",
      "_name_": "advancedmode",
      "title": "advancedmode"
     },
     "autotune": {
      "type": "boolean",
      "_name_": "autotune",
      "title": "autotune"
     },
     "kdump_enabled": {
      "type": "boolean",
      "_name_": "kdump_enabled",
      "title": "kdump_enabled"
     },
     "boot_scrub": {
      "type": "integer",
      "_name_": "boot_scrub",
      "title": "boot_scrub"
     },
     "consolemenu": {
      "type": "boolean",
      "_name_": "consolemenu",
      "title": "consolemenu"
     },
     "consolemsg": {
      "type": "boolean",
      "_name_": "consolemsg",
      "title": "consolemsg"
     },
     "debugkernel": {
      "type": "boolean",
      "_name_": "debugkernel",
      "title": "debugkernel"
     },
     "fqdn_syslog": {
      "type": "boolean",
      "_name_": "fqdn_syslog",
      "title": "fqdn_syslog"
     },
     "motd": {
      "_name_": "motd",
      "title": "motd",
      "type": "string"
     },
     "powerdaemon": {
      "type": "boolean",
      "_name_": "powerdaemon",
      "title": "powerdaemon"
     },
     "serialconsole": {
      "type": "boolean",
      "_name_": "serialconsole",
      "title": "serialconsole"
     },
     "serialport": {
      "_name_": "serialport",
      "title": "serialport",
      "type": "string"
     },
     "anonstats_token": {
      "_name_": "anonstats_token",
      "title": "anonstats_token",
      "type": "string"
     },
     "serialspeed": {
      "_name_": "serialspeed",
      "title": "serialspeed",
      "type": "string",
      "enum": [
       "9600",
       "19200",
       "38400",
       "57600",
       "115200"
      ]
     },
     "swapondrive": {
      "type": "integer",
      "_name_": "swapondrive",
      "title": "swapondrive"
     },
     "overprovision": {
      "type": "integer",
      "_name_": "overprovision",
      "title": "overprovision",
      "nullable": true
     },
     "traceback": {
      "type": "boolean",
      "_name_": "traceback",
      "title": "traceback"
     },
     "uploadcrash": {
      "type": "boolean",
      "_name_": "uploadcrash",
      "title": "uploadcrash"
     },
     "anonstats": {
      "type": "boolean",
      "_name_": "anonstats",
      "title": "anonstats"
     },
     "sed_user": {
      "_name_": "sed_user",
      "title": "sed_user",
      "type": "string",
      "enum": [
       "USER",
       "MASTER"
      ]
     },
     "sysloglevel": {
      "_name_": "sysloglevel",
      "title": "sysloglevel",
      "type": "string",
      "enum": [
       "F_EMERG",
       "F_ALERT",
       "F_CRIT",
       "F_ERR",
       "F_WARNING",
       "F_NOTICE",
       "F_INFO",
       "F_DEBUG"
      ]
     },
     "syslogserver": {
      "_name_": "syslogserver",
      "title": "syslogserver",
      "type": "string"
     },
     "syslog_transport": {
      "_name_": "syslog_transport",
      "title": "syslog_transport",
      "type": "string",
      "enum": [
       "UDP",
       "TCP",
       "TLS"
      ]
     },
     "syslog_tls_certificate": {
      "type": "integer",
      "_name_": "syslog_tls_certificate",
      "title": "syslog_tls_certificate",
      "nullable": true
     },
     "syslog_tls_certificate_authority": {
      "type": "integer",
      "_name_": "syslog_tls_certificate_authority",
      "title": "syslog_tls_certificate_authority",
      "nullable": true
     },
     "syslog_audit": {
      "type": "boolean",
      "_name_": "syslog_audit",
      "title": "syslog_audit"
     },
     "isolated_gpu_pci_ids": {
      "_name_": "isolated_gpu_pci_ids",
      "title": "isolated_gpu_pci_ids",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "pci_id",
       "title": "pci_id",
       "_required_": false,
       "type": "string"
      }
     },
     "kernel_extra_options": {
      "_name_": "kernel_extra_options",
      "title": "kernel_extra_options",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_advanced_entry",
    "title": "system_advanced_entry",
    "default": {},
    "_attrs_order_": [
     "advancedmode",
     "autotune",
     "kdump_enabled",
     "boot_scrub",
     "consolemenu",
     "consolemsg",
     "debugkernel",
     "fqdn_syslog",
     "motd",
     "powerdaemon",
     "serialconsole",
     "serialport",
     "anonstats_token",
     "serialspeed",
     "swapondrive",
     "overprovision",
     "traceback",
     "uploadcrash",
     "anonstats",
     "sed_user",
     "sysloglevel",
     "syslogserver",
     "syslog_transport",
     "syslog_tls_certificate",
     "syslog_tls_certificate_authority",
     "syslog_audit",
     "isolated_gpu_pci_ids",
     "kernel_extra_options",
     "id"
    ]
   },
   "system_advanced_update": {
    "type": "object",
    "properties": {
     "advancedmode": {
      "type": "boolean",
      "_name_": "advancedmode",
      "title": "advancedmode"
     },
     "autotune": {
      "type": "boolean",
      "_name_": "autotune",
      "title": "autotune",
      "description": "`autotune` when enabled executes autotune script which attempts to optimize the system based on the installed\nhardware."
     },
     "kdump_enabled": {
      "type": "boolean",
      "_name_": "kdump_enabled",
      "title": "kdump_enabled"
     },
     "boot_scrub": {
      "type": "integer",
      "_name_": "boot_scrub",
      "title": "boot_scrub"
     },
     "consolemenu": {
      "type": "boolean",
      "_name_": "consolemenu",
      "title": "consolemenu",
      "description": "`consolemenu` should be disabled if the menu at console is not desired. It will default to standard login\nin the console if disabled."
     },
     "consolemsg": {
      "type": "boolean",
      "_name_": "consolemsg",
      "title": "consolemsg",
      "description": "`consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`\nattribute in the `system.general` plugin."
     },
     "debugkernel": {
      "type": "boolean",
      "_name_": "debugkernel",
      "title": "debugkernel"
     },
     "fqdn_syslog": {
      "type": "boolean",
      "_name_": "fqdn_syslog",
      "title": "fqdn_syslog"
     },
     "motd": {
      "_name_": "motd",
      "title": "motd",
      "type": "string"
     },
     "powerdaemon": {
      "type": "boolean",
      "_name_": "powerdaemon",
      "title": "powerdaemon"
     },
     "serialconsole": {
      "type": "boolean",
      "_name_": "serialconsole",
      "title": "serialconsole"
     },
     "serialport": {
      "_name_": "serialport",
      "title": "serialport",
      "type": "string"
     },
     "serialspeed": {
      "_name_": "serialspeed",
      "title": "serialspeed",
      "type": "string",
      "enum": [
       "9600",
       "19200",
       "38400",
       "57600",
       "115200"
      ]
     },
     "swapondrive": {
      "type": "integer",
      "_name_": "swapondrive",
      "title": "swapondrive"
     },
     "overprovision": {
      "type": "integer",
      "_name_": "overprovision",
      "title": "overprovision",
      "nullable": true
     },
     "traceback": {
      "type": "boolean",
      "_name_": "traceback",
      "title": "traceback"
     },
     "uploadcrash": {
      "type": "boolean",
      "_name_": "uploadcrash",
      "title": "uploadcrash"
     },
     "anonstats": {
      "type": "boolean",
      "_name_": "anonstats",
      "title": "anonstats"
     },
     "sed_user": {
      "_name_": "sed_user",
      "title": "sed_user",
      "type": "string",
      "enum": [
       "USER",
       "MASTER"
      ]
     },
     "sysloglevel": {
      "_name_": "sysloglevel",
      "title": "sysloglevel",
      "type": "string",
      "enum": [
       "F_EMERG",
       "F_ALERT",
       "F_CRIT",
       "F_ERR",
       "F_WARNING",
       "F_NOTICE",
       "F_INFO",
       "F_DEBUG"
      ],
      "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
     },
     "syslogserver": {
      "_name_": "syslogserver",
      "title": "syslogserver",
      "type": "string",
      "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
     },
     "syslog_transport": {
      "_name_": "syslog_transport",
      "title": "syslog_transport",
      "type": "string",
      "enum": [
       "UDP",
       "TCP",
       "TLS"
      ]
     },
     "syslog_tls_certificate": {
      "type": "integer",
      "_name_": "syslog_tls_certificate",
      "title": "syslog_tls_certificate",
      "nullable": true
     },
     "syslog_tls_certificate_authority": {
      "type": "integer",
      "_name_": "syslog_tls_certificate_authority",
      "title": "syslog_tls_certificate_authority",
      "nullable": true
     },
     "syslog_audit": {
      "type": "boolean",
      "_name_": "syslog_audit",
      "title": "syslog_audit"
     },
     "isolated_gpu_pci_ids": {
      "_name_": "isolated_gpu_pci_ids",
      "title": "isolated_gpu_pci_ids",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "pci_id",
       "title": "pci_id",
       "_required_": false,
       "type": "string"
      }
     },
     "kernel_extra_options": {
      "_name_": "kernel_extra_options",
      "title": "kernel_extra_options",
      "type": "string"
     },
     "sed_passwd": {
      "_name_": "sed_passwd",
      "title": "sed_passwd",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "system_advanced_update",
    "title": "system_advanced_update",
    "default": {},
    "_attrs_order_": [
     "advancedmode",
     "autotune",
     "kdump_enabled",
     "boot_scrub",
     "consolemenu",
     "consolemsg",
     "debugkernel",
     "fqdn_syslog",
     "motd",
     "powerdaemon",
     "serialconsole",
     "serialport",
     "serialspeed",
     "swapondrive",
     "overprovision",
     "traceback",
     "uploadcrash",
     "anonstats",
     "sed_user",
     "sysloglevel",
     "syslogserver",
     "syslog_transport",
     "syslog_tls_certificate",
     "syslog_tls_certificate_authority",
     "syslog_audit",
     "isolated_gpu_pci_ids",
     "kernel_extra_options",
     "sed_passwd"
    ]
   },
   "return_schema_of_system_advanced_update": {
    "type": "object",
    "properties": {
     "advancedmode": {
      "type": "boolean",
      "_name_": "advancedmode",
      "title": "advancedmode"
     },
     "autotune": {
      "type": "boolean",
      "_name_": "autotune",
      "title": "autotune",
      "description": "`autotune` when enabled executes autotune script which attempts to optimize the system based on the installed\nhardware."
     },
     "kdump_enabled": {
      "type": "boolean",
      "_name_": "kdump_enabled",
      "title": "kdump_enabled"
     },
     "boot_scrub": {
      "type": "integer",
      "_name_": "boot_scrub",
      "title": "boot_scrub"
     },
     "consolemenu": {
      "type": "boolean",
      "_name_": "consolemenu",
      "title": "consolemenu",
      "description": "`consolemenu` should be disabled if the menu at console is not desired. It will default to standard login\nin the console if disabled."
     },
     "consolemsg": {
      "type": "boolean",
      "_name_": "consolemsg",
      "title": "consolemsg",
      "description": "`consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`\nattribute in the `system.general` plugin."
     },
     "debugkernel": {
      "type": "boolean",
      "_name_": "debugkernel",
      "title": "debugkernel"
     },
     "fqdn_syslog": {
      "type": "boolean",
      "_name_": "fqdn_syslog",
      "title": "fqdn_syslog"
     },
     "motd": {
      "_name_": "motd",
      "title": "motd",
      "type": "string"
     },
     "powerdaemon": {
      "type": "boolean",
      "_name_": "powerdaemon",
      "title": "powerdaemon"
     },
     "serialconsole": {
      "type": "boolean",
      "_name_": "serialconsole",
      "title": "serialconsole"
     },
     "serialport": {
      "_name_": "serialport",
      "title": "serialport",
      "type": "string"
     },
     "anonstats_token": {
      "_name_": "anonstats_token",
      "title": "anonstats_token",
      "type": "string"
     },
     "serialspeed": {
      "_name_": "serialspeed",
      "title": "serialspeed",
      "type": "string",
      "enum": [
       "9600",
       "19200",
       "38400",
       "57600",
       "115200"
      ]
     },
     "swapondrive": {
      "type": "integer",
      "_name_": "swapondrive",
      "title": "swapondrive"
     },
     "overprovision": {
      "type": "integer",
      "_name_": "overprovision",
      "title": "overprovision",
      "nullable": true
     },
     "traceback": {
      "type": "boolean",
      "_name_": "traceback",
      "title": "traceback"
     },
     "uploadcrash": {
      "type": "boolean",
      "_name_": "uploadcrash",
      "title": "uploadcrash"
     },
     "anonstats": {
      "type": "boolean",
      "_name_": "anonstats",
      "title": "anonstats"
     },
     "sed_user": {
      "_name_": "sed_user",
      "title": "sed_user",
      "type": "string",
      "enum": [
       "USER",
       "MASTER"
      ]
     },
     "sysloglevel": {
      "_name_": "sysloglevel",
      "title": "sysloglevel",
      "type": "string",
      "enum": [
       "F_EMERG",
       "F_ALERT",
       "F_CRIT",
       "F_ERR",
       "F_WARNING",
       "F_NOTICE",
       "F_INFO",
       "F_DEBUG"
      ],
      "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
     },
     "syslogserver": {
      "_name_": "syslogserver",
      "title": "syslogserver",
      "type": "string",
      "description": "When `syslogserver` is defined, logs of `sysloglevel` or above are sent. If syslog_audit is also set\nthen the remote syslog server will also receive audit messages."
     },
     "syslog_transport": {
      "_name_": "syslog_transport",
      "title": "syslog_transport",
      "type": "string",
      "enum": [
       "UDP",
       "TCP",
       "TLS"
      ]
     },
     "syslog_tls_certificate": {
      "type": "integer",
      "_name_": "syslog_tls_certificate",
      "title": "syslog_tls_certificate",
      "nullable": true
     },
     "syslog_tls_certificate_authority": {
      "type": "integer",
      "_name_": "syslog_tls_certificate_authority",
      "title": "syslog_tls_certificate_authority",
      "nullable": true
     },
     "syslog_audit": {
      "type": "boolean",
      "_name_": "syslog_audit",
      "title": "syslog_audit"
     },
     "isolated_gpu_pci_ids": {
      "_name_": "isolated_gpu_pci_ids",
      "title": "isolated_gpu_pci_ids",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "pci_id",
       "title": "pci_id",
       "_required_": false,
       "type": "string"
      }
     },
     "kernel_extra_options": {
      "_name_": "kernel_extra_options",
      "title": "kernel_extra_options",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_advanced_update_returns",
    "title": "system_advanced_update_returns",
    "default": {},
    "_attrs_order_": [
     "advancedmode",
     "autotune",
     "kdump_enabled",
     "boot_scrub",
     "consolemenu",
     "consolemsg",
     "debugkernel",
     "fqdn_syslog",
     "motd",
     "powerdaemon",
     "serialconsole",
     "serialport",
     "anonstats_token",
     "serialspeed",
     "swapondrive",
     "overprovision",
     "traceback",
     "uploadcrash",
     "anonstats",
     "sed_user",
     "sysloglevel",
     "syslogserver",
     "syslog_transport",
     "syslog_tls_certificate",
     "syslog_tls_certificate_authority",
     "syslog_audit",
     "isolated_gpu_pci_ids",
     "kernel_extra_options",
     "id"
    ]
   },
   "return_schema_of_system_advanced_get_gpu_pci_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "get_gpu_pci_choices",
    "title": "get_gpu_pci_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_advanced_sed_global_password": {
    "_name_": "sed_global_password",
    "title": "sed_global_password",
    "type": "string"
   },
   "return_schema_of_system_advanced_sed_global_password_is_set": {
    "type": "boolean",
    "_name_": "sed_global_password_is_set",
    "title": "sed_global_password_is_set"
   },
   "return_schema_of_system_advanced_serial_port_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "serial_port_choices",
    "title": "serial_port_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_advanced_syslog_certificate_authority_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "syslog_certificate_authority_choices",
    "title": "Syslog Certificate Authority Choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_advanced_syslog_certificate_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "syslog_certificate_choices",
    "title": "Syslog Certificate Choices",
    "default": {},
    "_attrs_order_": []
   },
   "system_advanced_update_gpu_pci_ids": {
    "_name_": "isolated_gpu_pci_ids",
    "title": "isolated_gpu_pci_ids",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "pci_id",
     "title": "pci_id",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_system_general_config": {
    "type": "object",
    "properties": {
     "ui_certificate": {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id"
       },
       "type": {
        "type": "integer",
        "_name_": "type",
        "title": "type"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       },
       "certificate": {
        "_name_": "certificate",
        "title": "certificate",
        "type": "string",
        "nullable": true
       },
       "privatekey": {
        "_name_": "privatekey",
        "title": "privatekey",
        "type": "string",
        "nullable": true
       },
       "CSR": {
        "_name_": "CSR",
        "title": "CSR",
        "type": "string",
        "nullable": true
       },
       "acme_uri": {
        "_name_": "acme_uri",
        "title": "acme_uri",
        "type": "string",
        "nullable": true
       },
       "domains_authenticators": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "domains_authenticators",
        "title": "domains_authenticators",
        "default": {},
        "_attrs_order_": []
       },
       "renew_days": {
        "type": "integer",
        "_name_": "renew_days",
        "title": "renew_days"
       },
       "revoked_date": {
        "_name_": "revoked_date",
        "title": "revoked_date",
        "type": "string",
        "nullable": true
       },
       "signedby": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "signedby",
        "title": "signedby",
        "default": {},
        "_attrs_order_": []
       },
       "root_path": {
        "_name_": "root_path",
        "title": "root_path",
        "type": "string"
       },
       "acme": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "acme",
        "title": "acme",
        "default": {},
        "_attrs_order_": []
       },
       "certificate_path": {
        "_name_": "certificate_path",
        "title": "certificate_path",
        "type": "string",
        "nullable": true
       },
       "privatekey_path": {
        "_name_": "privatekey_path",
        "title": "privatekey_path",
        "type": "string",
        "nullable": true
       },
       "csr_path": {
        "_name_": "csr_path",
        "title": "csr_path",
        "type": "string",
        "nullable": true
       },
       "cert_type": {
        "_name_": "cert_type",
        "title": "cert_type",
        "type": "string"
       },
       "revoked": {
        "type": "boolean",
        "_name_": "revoked",
        "title": "revoked"
       },
       "expired": {
        "type": "boolean",
        "_name_": "expired",
        "title": "expired",
        "nullable": true
       },
       "issuer": {
        "anyOf": [
         {
          "_name_": "issuer",
          "title": "issuer",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "issuer",
          "title": "issuer",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "issuer",
        "description": null
       },
       "chain_list": {
        "_name_": "chain_list",
        "title": "chain_list",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "certificate",
         "title": "certificate",
         "_required_": false,
         "type": "string"
        }
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "type": "string",
        "nullable": true
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string",
        "nullable": true
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "type": "string",
        "nullable": true
       },
       "organization": {
        "_name_": "organization",
        "title": "organization",
        "type": "string",
        "nullable": true
       },
       "organizational_unit": {
        "_name_": "organizational_unit",
        "title": "organizational_unit",
        "type": "string",
        "nullable": true
       },
       "san": {
        "_name_": "san",
        "title": "san",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "san_entry",
         "title": "san_entry",
         "_required_": false,
         "type": "string"
        },
        "nullable": true
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "type": "string",
        "nullable": true
       },
       "DN": {
        "_name_": "DN",
        "title": "DN",
        "type": "string",
        "nullable": true
       },
       "subject_name_hash": {
        "_name_": "subject_name_hash",
        "title": "subject_name_hash",
        "type": "string",
        "nullable": true
       },
       "digest_algorithm": {
        "_name_": "digest_algorithm",
        "title": "digest_algorithm",
        "type": "string",
        "nullable": true
       },
       "from": {
        "_name_": "from",
        "title": "from",
        "type": "string",
        "nullable": true
       },
       "common": {
        "_name_": "common",
        "title": "common",
        "type": "string",
        "nullable": true
       },
       "until": {
        "_name_": "until",
        "title": "until",
        "type": "string",
        "nullable": true
       },
       "fingerprint": {
        "_name_": "fingerprint",
        "title": "fingerprint",
        "type": "string",
        "nullable": true
       },
       "key_type": {
        "_name_": "key_type",
        "title": "key_type",
        "type": "string",
        "nullable": true
       },
       "internal": {
        "_name_": "internal",
        "title": "internal",
        "type": "string",
        "nullable": true
       },
       "lifetime": {
        "type": "integer",
        "_name_": "lifetime",
        "title": "lifetime",
        "nullable": true
       },
       "serial": {
        "type": "integer",
        "_name_": "serial",
        "title": "serial",
        "nullable": true
       },
       "key_length": {
        "type": "integer",
        "_name_": "key_length",
        "title": "key_length",
        "nullable": true
       },
       "chain": {
        "type": "boolean",
        "_name_": "chain",
        "title": "chain",
        "nullable": true
       },
       "CA_type_existing": {
        "type": "boolean",
        "_name_": "CA_type_existing",
        "title": "CA_type_existing"
       },
       "CA_type_internal": {
        "type": "boolean",
        "_name_": "CA_type_internal",
        "title": "CA_type_internal"
       },
       "CA_type_intermediate": {
        "type": "boolean",
        "_name_": "CA_type_intermediate",
        "title": "CA_type_intermediate"
       },
       "cert_type_existing": {
        "type": "boolean",
        "_name_": "cert_type_existing",
        "title": "cert_type_existing"
       },
       "cert_type_internal": {
        "type": "boolean",
        "_name_": "cert_type_internal",
        "title": "cert_type_internal"
       },
       "cert_type_CSR": {
        "type": "boolean",
        "_name_": "cert_type_CSR",
        "title": "cert_type_CSR"
       },
       "parsed": {
        "type": "boolean",
        "_name_": "parsed",
        "title": "parsed"
       },
       "can_be_revoked": {
        "type": "boolean",
        "_name_": "can_be_revoked",
        "title": "can_be_revoked"
       },
       "extensions": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extensions",
        "title": "extensions",
        "default": {},
        "_attrs_order_": []
       },
       "revoked_certs": {
        "_name_": "revoked_certs",
        "title": "revoked_certs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "crl_path": {
        "_name_": "crl_path",
        "title": "crl_path",
        "type": "string"
       },
       "signed_certificates": {
        "type": "integer",
        "_name_": "signed_certificates",
        "title": "signed_certificates"
       }
      },
      "additionalProperties": false,
      "_name_": "ui_certificate",
      "title": "ui_certificate",
      "default": {},
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "certificate",
       "privatekey",
       "CSR",
       "acme_uri",
       "domains_authenticators",
       "renew_days",
       "revoked_date",
       "signedby",
       "root_path",
       "acme",
       "certificate_path",
       "privatekey_path",
       "csr_path",
       "cert_type",
       "revoked",
       "expired",
       "issuer",
       "chain_list",
       "country",
       "state",
       "city",
       "organization",
       "organizational_unit",
       "san",
       "email",
       "DN",
       "subject_name_hash",
       "digest_algorithm",
       "from",
       "common",
       "until",
       "fingerprint",
       "key_type",
       "internal",
       "lifetime",
       "serial",
       "key_length",
       "chain",
       "CA_type_existing",
       "CA_type_internal",
       "CA_type_intermediate",
       "cert_type_existing",
       "cert_type_internal",
       "cert_type_CSR",
       "parsed",
       "can_be_revoked",
       "extensions",
       "revoked_certs",
       "crl_path",
       "signed_certificates"
      ]
     },
     "ui_httpsport": {
      "type": "integer",
      "_name_": "ui_httpsport",
      "title": "ui_httpsport"
     },
     "ui_httpsredirect": {
      "type": "boolean",
      "_name_": "ui_httpsredirect",
      "title": "ui_httpsredirect"
     },
     "ui_httpsprotocols": {
      "_name_": "ui_httpsprotocols",
      "title": "ui_httpsprotocols",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "protocol",
       "title": "protocol",
       "_required_": false,
       "type": "string",
       "enum": [
        "TLSv1",
        "TLSv1.1",
        "TLSv1.2",
        "TLSv1.3"
       ]
      }
     },
     "ui_port": {
      "type": "integer",
      "_name_": "ui_port",
      "title": "ui_port"
     },
     "ui_address": {
      "_name_": "ui_address",
      "title": "ui_address",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      }
     },
     "ui_v6address": {
      "_name_": "ui_v6address",
      "title": "ui_v6address",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      }
     },
     "ui_allowlist": {
      "_name_": "ui_allowlist",
      "title": "ui_allowlist",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      }
     },
     "ui_consolemsg": {
      "type": "boolean",
      "_name_": "ui_consolemsg",
      "title": "ui_consolemsg"
     },
     "ui_x_frame_options": {
      "_name_": "ui_x_frame_options",
      "title": "ui_x_frame_options",
      "type": "string",
      "enum": [
       "SAMEORIGIN",
       "DENY",
       "ALLOW_ALL"
      ]
     },
     "kbdmap": {
      "_name_": "kbdmap",
      "title": "kbdmap",
      "type": "string"
     },
     "language": {
      "_name_": "language",
      "title": "language",
      "type": "string"
     },
     "timezone": {
      "_name_": "timezone",
      "title": "timezone",
      "type": "string"
     },
     "usage_collection": {
      "type": "boolean",
      "_name_": "usage_collection",
      "title": "usage_collection",
      "nullable": true
     },
     "wizardshown": {
      "type": "boolean",
      "_name_": "wizardshown",
      "title": "wizardshown"
     },
     "usage_collection_is_set": {
      "type": "boolean",
      "_name_": "usage_collection_is_set",
      "title": "usage_collection_is_set"
     },
     "ds_auth": {
      "type": "boolean",
      "_name_": "ds_auth",
      "title": "ds_auth"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_general_entry",
    "title": "system_general_entry",
    "default": {},
    "_attrs_order_": [
     "ui_certificate",
     "ui_httpsport",
     "ui_httpsredirect",
     "ui_httpsprotocols",
     "ui_port",
     "ui_address",
     "ui_v6address",
     "ui_allowlist",
     "ui_consolemsg",
     "ui_x_frame_options",
     "kbdmap",
     "language",
     "timezone",
     "usage_collection",
     "wizardshown",
     "usage_collection_is_set",
     "ds_auth",
     "id"
    ]
   },
   "system_general_update": {
    "type": "object",
    "properties": {
     "ui_httpsport": {
      "type": "integer",
      "_name_": "ui_httpsport",
      "title": "ui_httpsport"
     },
     "ui_httpsredirect": {
      "type": "boolean",
      "_name_": "ui_httpsredirect",
      "title": "ui_httpsredirect",
      "description": "`ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better\nenhance security."
     },
     "ui_httpsprotocols": {
      "_name_": "ui_httpsprotocols",
      "title": "ui_httpsprotocols",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "protocol",
       "title": "protocol",
       "_required_": false,
       "type": "string",
       "enum": [
        "TLSv1",
        "TLSv1.1",
        "TLSv1.2",
        "TLSv1.3"
       ]
      }
     },
     "ui_port": {
      "type": "integer",
      "_name_": "ui_port",
      "title": "ui_port"
     },
     "ui_address": {
      "_name_": "ui_address",
      "title": "ui_address",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      },
      "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
     },
     "ui_v6address": {
      "_name_": "ui_v6address",
      "title": "ui_v6address",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      },
      "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
     },
     "ui_allowlist": {
      "_name_": "ui_allowlist",
      "title": "ui_allowlist",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      },
      "description": "`ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,\nthen all IP addresses are allowed to use API and UI."
     },
     "ui_consolemsg": {
      "type": "boolean",
      "_name_": "ui_consolemsg",
      "title": "ui_consolemsg"
     },
     "ui_x_frame_options": {
      "_name_": "ui_x_frame_options",
      "title": "ui_x_frame_options",
      "type": "string",
      "enum": [
       "SAMEORIGIN",
       "DENY",
       "ALLOW_ALL"
      ]
     },
     "kbdmap": {
      "_name_": "kbdmap",
      "title": "kbdmap",
      "type": "string"
     },
     "language": {
      "_name_": "language",
      "title": "language",
      "type": "string"
     },
     "timezone": {
      "_name_": "timezone",
      "title": "timezone",
      "type": "string"
     },
     "usage_collection": {
      "type": "boolean",
      "_name_": "usage_collection",
      "title": "usage_collection",
      "nullable": true
     },
     "ds_auth": {
      "type": "boolean",
      "_name_": "ds_auth",
      "title": "ds_auth",
      "description": "`ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to\nlog in to the Web UI or use TrueNAS API."
     },
     "ui_certificate": {
      "type": "integer",
      "_name_": "ui_certificate",
      "title": "ui_certificate",
      "description": "`ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,\nit is automatically created by the system.",
      "nullable": true
     },
     "rollback_timeout": {
      "type": "integer",
      "_name_": "rollback_timeout",
      "title": "rollback_timeout",
      "nullable": true
     },
     "ui_restart_delay": {
      "type": "integer",
      "_name_": "ui_restart_delay",
      "title": "ui_restart_delay",
      "description": "HTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after\nsome small amount of time necessary you might need to receive the response for your settings update request.",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "general_settings",
    "title": "general_settings",
    "default": {},
    "_attrs_order_": [
     "ui_httpsport",
     "ui_httpsredirect",
     "ui_httpsprotocols",
     "ui_port",
     "ui_address",
     "ui_v6address",
     "ui_allowlist",
     "ui_consolemsg",
     "ui_x_frame_options",
     "kbdmap",
     "language",
     "timezone",
     "usage_collection",
     "ds_auth",
     "ui_certificate",
     "rollback_timeout",
     "ui_restart_delay"
    ]
   },
   "return_schema_of_system_general_update": {
    "type": "object",
    "properties": {
     "ui_certificate": {
      "type": "object",
      "properties": {
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id"
       },
       "type": {
        "type": "integer",
        "_name_": "type",
        "title": "type"
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "type": "string"
       },
       "certificate": {
        "_name_": "certificate",
        "title": "certificate",
        "type": "string",
        "nullable": true
       },
       "privatekey": {
        "_name_": "privatekey",
        "title": "privatekey",
        "type": "string",
        "nullable": true
       },
       "CSR": {
        "_name_": "CSR",
        "title": "CSR",
        "type": "string",
        "nullable": true
       },
       "acme_uri": {
        "_name_": "acme_uri",
        "title": "acme_uri",
        "type": "string",
        "nullable": true
       },
       "domains_authenticators": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "domains_authenticators",
        "title": "domains_authenticators",
        "default": {},
        "_attrs_order_": []
       },
       "renew_days": {
        "type": "integer",
        "_name_": "renew_days",
        "title": "renew_days"
       },
       "revoked_date": {
        "_name_": "revoked_date",
        "title": "revoked_date",
        "type": "string",
        "nullable": true
       },
       "signedby": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "signedby",
        "title": "signedby",
        "default": {},
        "_attrs_order_": []
       },
       "root_path": {
        "_name_": "root_path",
        "title": "root_path",
        "type": "string"
       },
       "acme": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "acme",
        "title": "acme",
        "default": {},
        "_attrs_order_": []
       },
       "certificate_path": {
        "_name_": "certificate_path",
        "title": "certificate_path",
        "type": "string",
        "nullable": true
       },
       "privatekey_path": {
        "_name_": "privatekey_path",
        "title": "privatekey_path",
        "type": "string",
        "nullable": true
       },
       "csr_path": {
        "_name_": "csr_path",
        "title": "csr_path",
        "type": "string",
        "nullable": true
       },
       "cert_type": {
        "_name_": "cert_type",
        "title": "cert_type",
        "type": "string"
       },
       "revoked": {
        "type": "boolean",
        "_name_": "revoked",
        "title": "revoked"
       },
       "expired": {
        "type": "boolean",
        "_name_": "expired",
        "title": "expired",
        "nullable": true
       },
       "issuer": {
        "anyOf": [
         {
          "_name_": "issuer",
          "title": "issuer",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "issuer",
          "title": "issuer",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        ],
        "nullable": false,
        "_name_": "issuer",
        "description": null
       },
       "chain_list": {
        "_name_": "chain_list",
        "title": "chain_list",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "certificate",
         "title": "certificate",
         "_required_": false,
         "type": "string"
        }
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "type": "string",
        "nullable": true
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string",
        "nullable": true
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "type": "string",
        "nullable": true
       },
       "organization": {
        "_name_": "organization",
        "title": "organization",
        "type": "string",
        "nullable": true
       },
       "organizational_unit": {
        "_name_": "organizational_unit",
        "title": "organizational_unit",
        "type": "string",
        "nullable": true
       },
       "san": {
        "_name_": "san",
        "title": "san",
        "default": [],
        "type": "array",
        "items": {
         "_name_": "san_entry",
         "title": "san_entry",
         "_required_": false,
         "type": "string"
        },
        "nullable": true
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "type": "string",
        "nullable": true
       },
       "DN": {
        "_name_": "DN",
        "title": "DN",
        "type": "string",
        "nullable": true
       },
       "subject_name_hash": {
        "_name_": "subject_name_hash",
        "title": "subject_name_hash",
        "type": "string",
        "nullable": true
       },
       "digest_algorithm": {
        "_name_": "digest_algorithm",
        "title": "digest_algorithm",
        "type": "string",
        "nullable": true
       },
       "from": {
        "_name_": "from",
        "title": "from",
        "type": "string",
        "nullable": true
       },
       "common": {
        "_name_": "common",
        "title": "common",
        "type": "string",
        "nullable": true
       },
       "until": {
        "_name_": "until",
        "title": "until",
        "type": "string",
        "nullable": true
       },
       "fingerprint": {
        "_name_": "fingerprint",
        "title": "fingerprint",
        "type": "string",
        "nullable": true
       },
       "key_type": {
        "_name_": "key_type",
        "title": "key_type",
        "type": "string",
        "nullable": true
       },
       "internal": {
        "_name_": "internal",
        "title": "internal",
        "type": "string",
        "nullable": true
       },
       "lifetime": {
        "type": "integer",
        "_name_": "lifetime",
        "title": "lifetime",
        "nullable": true
       },
       "serial": {
        "type": "integer",
        "_name_": "serial",
        "title": "serial",
        "nullable": true
       },
       "key_length": {
        "type": "integer",
        "_name_": "key_length",
        "title": "key_length",
        "nullable": true
       },
       "chain": {
        "type": "boolean",
        "_name_": "chain",
        "title": "chain",
        "nullable": true
       },
       "CA_type_existing": {
        "type": "boolean",
        "_name_": "CA_type_existing",
        "title": "CA_type_existing"
       },
       "CA_type_internal": {
        "type": "boolean",
        "_name_": "CA_type_internal",
        "title": "CA_type_internal"
       },
       "CA_type_intermediate": {
        "type": "boolean",
        "_name_": "CA_type_intermediate",
        "title": "CA_type_intermediate"
       },
       "cert_type_existing": {
        "type": "boolean",
        "_name_": "cert_type_existing",
        "title": "cert_type_existing"
       },
       "cert_type_internal": {
        "type": "boolean",
        "_name_": "cert_type_internal",
        "title": "cert_type_internal"
       },
       "cert_type_CSR": {
        "type": "boolean",
        "_name_": "cert_type_CSR",
        "title": "cert_type_CSR"
       },
       "parsed": {
        "type": "boolean",
        "_name_": "parsed",
        "title": "parsed"
       },
       "can_be_revoked": {
        "type": "boolean",
        "_name_": "can_be_revoked",
        "title": "can_be_revoked"
       },
       "extensions": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "extensions",
        "title": "extensions",
        "default": {},
        "_attrs_order_": []
       },
       "revoked_certs": {
        "_name_": "revoked_certs",
        "title": "revoked_certs",
        "default": [],
        "type": "array",
        "items": {}
       },
       "crl_path": {
        "_name_": "crl_path",
        "title": "crl_path",
        "type": "string"
       },
       "signed_certificates": {
        "type": "integer",
        "_name_": "signed_certificates",
        "title": "signed_certificates"
       }
      },
      "additionalProperties": false,
      "_name_": "ui_certificate",
      "title": "ui_certificate",
      "default": {},
      "_attrs_order_": [
       "id",
       "type",
       "name",
       "certificate",
       "privatekey",
       "CSR",
       "acme_uri",
       "domains_authenticators",
       "renew_days",
       "revoked_date",
       "signedby",
       "root_path",
       "acme",
       "certificate_path",
       "privatekey_path",
       "csr_path",
       "cert_type",
       "revoked",
       "expired",
       "issuer",
       "chain_list",
       "country",
       "state",
       "city",
       "organization",
       "organizational_unit",
       "san",
       "email",
       "DN",
       "subject_name_hash",
       "digest_algorithm",
       "from",
       "common",
       "until",
       "fingerprint",
       "key_type",
       "internal",
       "lifetime",
       "serial",
       "key_length",
       "chain",
       "CA_type_existing",
       "CA_type_internal",
       "CA_type_intermediate",
       "cert_type_existing",
       "cert_type_internal",
       "cert_type_CSR",
       "parsed",
       "can_be_revoked",
       "extensions",
       "revoked_certs",
       "crl_path",
       "signed_certificates"
      ],
      "description": "`ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,\nit is automatically created by the system."
     },
     "ui_httpsport": {
      "type": "integer",
      "_name_": "ui_httpsport",
      "title": "ui_httpsport"
     },
     "ui_httpsredirect": {
      "type": "boolean",
      "_name_": "ui_httpsredirect",
      "title": "ui_httpsredirect",
      "description": "`ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better\nenhance security."
     },
     "ui_httpsprotocols": {
      "_name_": "ui_httpsprotocols",
      "title": "ui_httpsprotocols",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "protocol",
       "title": "protocol",
       "_required_": false,
       "type": "string",
       "enum": [
        "TLSv1",
        "TLSv1.1",
        "TLSv1.2",
        "TLSv1.3"
       ]
      }
     },
     "ui_port": {
      "type": "integer",
      "_name_": "ui_port",
      "title": "ui_port"
     },
     "ui_address": {
      "_name_": "ui_address",
      "title": "ui_address",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      },
      "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
     },
     "ui_v6address": {
      "_name_": "ui_v6address",
      "title": "ui_v6address",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      },
      "description": "`ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will\nlisten on."
     },
     "ui_allowlist": {
      "_name_": "ui_allowlist",
      "title": "ui_allowlist",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "addr",
       "title": "addr",
       "_required_": false,
       "type": "string"
      },
      "description": "`ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,\nthen all IP addresses are allowed to use API and UI."
     },
     "ui_consolemsg": {
      "type": "boolean",
      "_name_": "ui_consolemsg",
      "title": "ui_consolemsg"
     },
     "ui_x_frame_options": {
      "_name_": "ui_x_frame_options",
      "title": "ui_x_frame_options",
      "type": "string",
      "enum": [
       "SAMEORIGIN",
       "DENY",
       "ALLOW_ALL"
      ]
     },
     "kbdmap": {
      "_name_": "kbdmap",
      "title": "kbdmap",
      "type": "string"
     },
     "language": {
      "_name_": "language",
      "title": "language",
      "type": "string"
     },
     "timezone": {
      "_name_": "timezone",
      "title": "timezone",
      "type": "string"
     },
     "usage_collection": {
      "type": "boolean",
      "_name_": "usage_collection",
      "title": "usage_collection",
      "nullable": true
     },
     "wizardshown": {
      "type": "boolean",
      "_name_": "wizardshown",
      "title": "wizardshown"
     },
     "usage_collection_is_set": {
      "type": "boolean",
      "_name_": "usage_collection_is_set",
      "title": "usage_collection_is_set"
     },
     "ds_auth": {
      "type": "boolean",
      "_name_": "ds_auth",
      "title": "ds_auth",
      "description": "`ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to\nlog in to the Web UI or use TrueNAS API."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_general_update_returns",
    "title": "system_general_update_returns",
    "default": {},
    "_attrs_order_": [
     "ui_certificate",
     "ui_httpsport",
     "ui_httpsredirect",
     "ui_httpsprotocols",
     "ui_port",
     "ui_address",
     "ui_v6address",
     "ui_allowlist",
     "ui_consolemsg",
     "ui_x_frame_options",
     "kbdmap",
     "language",
     "timezone",
     "usage_collection",
     "wizardshown",
     "usage_collection_is_set",
     "ds_auth",
     "id"
    ]
   },
   "return_schema_of_system_general_checkin_waiting": {
    "type": "integer",
    "_name_": "remaining_seconds",
    "title": "remaining_seconds",
    "nullable": true
   },
   "return_schema_of_system_general_country_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "country_choices",
    "title": "country_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_general_kbdmap_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "kbdmap_choices",
    "title": "kbdmap_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_general_language_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "system_language_choices",
    "title": "System Language Choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_general_local_url": {
    "_name_": "local_url",
    "title": "local_url",
    "type": "string"
   },
   "return_schema_of_system_general_timezone_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "system_timezone_choices",
    "title": "System Timezone Choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_general_ui_address_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "available_ui_address_choices",
    "title": "Available UI IPv4 Address Choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_general_ui_certificate_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "ui_certificate_choices",
    "title": "UI Certificate Choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_general_ui_httpsprotocols_choices": {
    "type": "object",
    "properties": {
     "TLSv1": {
      "_name_": "TLSv1",
      "title": "TLSv1",
      "type": "string",
      "enum": [
       "TLSv1"
      ]
     },
     "TLSv1.1": {
      "_name_": "TLSv1.1",
      "title": "TLSv1.1",
      "type": "string",
      "enum": [
       "TLSv1.1"
      ]
     },
     "TLSv1.2": {
      "_name_": "TLSv1.2",
      "title": "TLSv1.2",
      "type": "string",
      "enum": [
       "TLSv1.2"
      ]
     },
     "TLSv1.3": {
      "_name_": "TLSv1.3",
      "title": "TLSv1.3",
      "type": "string",
      "enum": [
       "TLSv1.3"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "ui_https_protocols",
    "title": "UI HTTPS Protocol Choices",
    "default": {},
    "_attrs_order_": [
     "TLSv1",
     "TLSv1.1",
     "TLSv1.2",
     "TLSv1.3"
    ]
   },
   "system_general_ui_restart": {
    "type": "integer",
    "_name_": "delay",
    "title": "delay",
    "default": 3
   },
   "return_schema_of_system_general_ui_v6address_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "available_ui_v6address_choices",
    "title": "Available UI IPv6 Address Choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_system_ntpserver_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "address": {
          "_name_": "address",
          "title": "address",
          "_required_": false,
          "type": "string"
         },
         "burst": {
          "type": "boolean",
          "_name_": "burst",
          "title": "burst",
          "default": false,
          "_required_": false
         },
         "iburst": {
          "type": "boolean",
          "_name_": "iburst",
          "title": "iburst",
          "default": true,
          "_required_": false
         },
         "prefer": {
          "type": "boolean",
          "_name_": "prefer",
          "title": "prefer",
          "default": false,
          "_required_": false
         },
         "minpoll": {
          "type": "integer",
          "_name_": "minpoll",
          "title": "minpoll",
          "default": 6,
          "_required_": false
         },
         "maxpoll": {
          "type": "integer",
          "_name_": "maxpoll",
          "title": "maxpoll",
          "default": 10,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "ntp_entry",
        "title": "ntp_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "address",
         "burst",
         "iburst",
         "prefer",
         "minpoll",
         "maxpoll",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "address": {
        "_name_": "address",
        "title": "address",
        "_required_": false,
        "type": "string"
       },
       "burst": {
        "type": "boolean",
        "_name_": "burst",
        "title": "burst",
        "default": false,
        "_required_": false
       },
       "iburst": {
        "type": "boolean",
        "_name_": "iburst",
        "title": "iburst",
        "default": true,
        "_required_": false
       },
       "prefer": {
        "type": "boolean",
        "_name_": "prefer",
        "title": "prefer",
        "default": false,
        "_required_": false
       },
       "minpoll": {
        "type": "integer",
        "_name_": "minpoll",
        "title": "minpoll",
        "default": 6,
        "_required_": false
       },
       "maxpoll": {
        "type": "integer",
        "_name_": "maxpoll",
        "title": "maxpoll",
        "default": 10,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "ntp_entry",
      "title": "ntp_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "address",
       "burst",
       "iburst",
       "prefer",
       "minpoll",
       "maxpoll",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "address": {
        "_name_": "address",
        "title": "address",
        "_required_": false,
        "type": "string"
       },
       "burst": {
        "type": "boolean",
        "_name_": "burst",
        "title": "burst",
        "default": false,
        "_required_": false
       },
       "iburst": {
        "type": "boolean",
        "_name_": "iburst",
        "title": "iburst",
        "default": true,
        "_required_": false
       },
       "prefer": {
        "type": "boolean",
        "_name_": "prefer",
        "title": "prefer",
        "default": false,
        "_required_": false
       },
       "minpoll": {
        "type": "integer",
        "_name_": "minpoll",
        "title": "minpoll",
        "default": 6,
        "_required_": false
       },
       "maxpoll": {
        "type": "integer",
        "_name_": "maxpoll",
        "title": "maxpoll",
        "default": 10,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "ntp_entry",
      "title": "ntp_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "address",
       "burst",
       "iburst",
       "prefer",
       "minpoll",
       "maxpoll",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "system_ntpserver_create": {
    "type": "object",
    "properties": {
     "address": {
      "_name_": "address",
      "title": "address",
      "type": "string",
      "description": "`address` specifies the hostname/IP address of the NTP server."
     },
     "burst": {
      "type": "boolean",
      "_name_": "burst",
      "title": "burst",
      "default": false,
      "description": "`burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.\nThis is designed to improve timekeeping quality with the server command."
     },
     "iburst": {
      "type": "boolean",
      "_name_": "iburst",
      "title": "iburst",
      "default": true,
      "description": "`iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes."
     },
     "prefer": {
      "type": "boolean",
      "_name_": "prefer",
      "title": "prefer",
      "default": false,
      "description": "`prefer` marks the specified server as preferred. When all other things are equal, this host is chosen\nfor synchronization acquisition with the server command. It is recommended that they be used for servers with\ntime monitoring hardware."
     },
     "minpoll": {
      "type": "integer",
      "_name_": "minpoll",
      "title": "minpoll",
      "default": 6,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "maxpoll": {
      "type": "integer",
      "_name_": "maxpoll",
      "title": "maxpoll",
      "default": 10,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force"
     }
    },
    "additionalProperties": false,
    "_name_": "ntp_create",
    "title": "ntp_create",
    "default": {},
    "_attrs_order_": [
     "address",
     "burst",
     "iburst",
     "prefer",
     "minpoll",
     "maxpoll",
     "force"
    ]
   },
   "return_schema_of_system_ntpserver_create": {
    "type": "object",
    "properties": {
     "address": {
      "_name_": "address",
      "title": "address",
      "type": "string",
      "description": "`address` specifies the hostname/IP address of the NTP server."
     },
     "burst": {
      "type": "boolean",
      "_name_": "burst",
      "title": "burst",
      "default": false,
      "description": "`burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.\nThis is designed to improve timekeeping quality with the server command."
     },
     "iburst": {
      "type": "boolean",
      "_name_": "iburst",
      "title": "iburst",
      "default": true,
      "description": "`iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes."
     },
     "prefer": {
      "type": "boolean",
      "_name_": "prefer",
      "title": "prefer",
      "default": false,
      "description": "`prefer` marks the specified server as preferred. When all other things are equal, this host is chosen\nfor synchronization acquisition with the server command. It is recommended that they be used for servers with\ntime monitoring hardware."
     },
     "minpoll": {
      "type": "integer",
      "_name_": "minpoll",
      "title": "minpoll",
      "default": 6,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "maxpoll": {
      "type": "integer",
      "_name_": "maxpoll",
      "title": "maxpoll",
      "default": 10,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_ntpserver_create_returns",
    "title": "system_ntpserver_create_returns",
    "default": {},
    "_attrs_order_": [
     "address",
     "burst",
     "iburst",
     "prefer",
     "minpoll",
     "maxpoll",
     "id"
    ]
   },
   "return_schema_of_system_ntpserver_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "system_ntpserver_update": {
    "type": "object",
    "properties": {
     "address": {
      "_name_": "address",
      "title": "address",
      "type": "string",
      "description": "`address` specifies the hostname/IP address of the NTP server."
     },
     "burst": {
      "type": "boolean",
      "_name_": "burst",
      "title": "burst",
      "default": false,
      "description": "`burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.\nThis is designed to improve timekeeping quality with the server command."
     },
     "iburst": {
      "type": "boolean",
      "_name_": "iburst",
      "title": "iburst",
      "default": true,
      "description": "`iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes."
     },
     "prefer": {
      "type": "boolean",
      "_name_": "prefer",
      "title": "prefer",
      "default": false,
      "description": "`prefer` marks the specified server as preferred. When all other things are equal, this host is chosen\nfor synchronization acquisition with the server command. It is recommended that they be used for servers with\ntime monitoring hardware."
     },
     "minpoll": {
      "type": "integer",
      "_name_": "minpoll",
      "title": "minpoll",
      "default": 6,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "maxpoll": {
      "type": "integer",
      "_name_": "maxpoll",
      "title": "maxpoll",
      "default": 10,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force"
     }
    },
    "additionalProperties": false,
    "_name_": "ntp_update",
    "title": "ntp_update",
    "default": {},
    "_attrs_order_": [
     "address",
     "burst",
     "iburst",
     "prefer",
     "minpoll",
     "maxpoll",
     "force"
    ]
   },
   "return_schema_of_system_ntpserver_update": {
    "type": "object",
    "properties": {
     "address": {
      "_name_": "address",
      "title": "address",
      "type": "string",
      "description": "`address` specifies the hostname/IP address of the NTP server."
     },
     "burst": {
      "type": "boolean",
      "_name_": "burst",
      "title": "burst",
      "default": false,
      "description": "`burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.\nThis is designed to improve timekeeping quality with the server command."
     },
     "iburst": {
      "type": "boolean",
      "_name_": "iburst",
      "title": "iburst",
      "default": true,
      "description": "`iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes."
     },
     "prefer": {
      "type": "boolean",
      "_name_": "prefer",
      "title": "prefer",
      "default": false,
      "description": "`prefer` marks the specified server as preferred. When all other things are equal, this host is chosen\nfor synchronization acquisition with the server command. It is recommended that they be used for servers with\ntime monitoring hardware."
     },
     "minpoll": {
      "type": "integer",
      "_name_": "minpoll",
      "title": "minpoll",
      "default": 6,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "maxpoll": {
      "type": "integer",
      "_name_": "maxpoll",
      "title": "maxpoll",
      "default": 10,
      "description": "`minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.\n`maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update NTP server of `id`.\nAdd an NTP Server."
     }
    },
    "additionalProperties": false,
    "_name_": "system_ntpserver_update_returns",
    "title": "system_ntpserver_update_returns",
    "default": {},
    "_attrs_order_": [
     "address",
     "burst",
     "iburst",
     "prefer",
     "minpoll",
     "maxpoll",
     "id"
    ]
   },
   "system_ntpserver_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "system_ntpserver_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "system_ntpserver_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/system_ntpserver_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/system_ntpserver_get_instance_1"
     }
    }
   },
   "return_schema_of_system_ntpserver_get_instance": {
    "type": "object",
    "properties": {
     "address": {
      "_name_": "address",
      "title": "address",
      "type": "string"
     },
     "burst": {
      "type": "boolean",
      "_name_": "burst",
      "title": "burst",
      "default": false
     },
     "iburst": {
      "type": "boolean",
      "_name_": "iburst",
      "title": "iburst",
      "default": true
     },
     "prefer": {
      "type": "boolean",
      "_name_": "prefer",
      "title": "prefer",
      "default": false
     },
     "minpoll": {
      "type": "integer",
      "_name_": "minpoll",
      "title": "minpoll",
      "default": 6
     },
     "maxpoll": {
      "type": "integer",
      "_name_": "maxpoll",
      "title": "maxpoll",
      "default": 10
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "ntp_entry",
    "title": "ntp_entry",
    "default": {},
    "_attrs_order_": [
     "address",
     "burst",
     "iburst",
     "prefer",
     "minpoll",
     "maxpoll",
     "id"
    ]
   },
   "return_schema_of_system_security_config": {
    "type": "object",
    "properties": {
     "enable_fips": {
      "type": "boolean",
      "_name_": "enable_fips",
      "title": "enable_fips"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_security_entry",
    "title": "system_security_entry",
    "default": {},
    "_attrs_order_": [
     "enable_fips",
     "id"
    ]
   },
   "system_security_update": {
    "type": "object",
    "properties": {
     "enable_fips": {
      "type": "boolean",
      "_name_": "enable_fips",
      "title": "enable_fips"
     }
    },
    "additionalProperties": false,
    "_name_": "system_security_update",
    "title": "system_security_update",
    "default": {},
    "_attrs_order_": [
     "enable_fips"
    ]
   },
   "return_schema_of_system_security_update": {
    "type": "object",
    "properties": {
     "enable_fips": {
      "type": "boolean",
      "_name_": "enable_fips",
      "title": "enable_fips"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "system_security_update_returns",
    "title": "system_security_update_returns",
    "default": {},
    "_attrs_order_": [
     "enable_fips",
     "id"
    ]
   },
   "return_schema_of_system_security_info_fips_available": {
    "type": "boolean",
    "_name_": "fips_available",
    "title": "fips_available"
   },
   "return_schema_of_system_security_info_fips_enabled": {
    "type": "boolean",
    "_name_": "fips_available",
    "title": "fips_available"
   },
   "return_schema_of_systemdataset_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string"
     },
     "pool_set": {
      "type": "boolean",
      "_name_": "pool_set",
      "title": "pool_set"
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "type": "string"
     },
     "uuid_b": {
      "_name_": "uuid_b",
      "title": "uuid_b",
      "type": "string",
      "nullable": true
     },
     "basename": {
      "_name_": "basename",
      "title": "basename",
      "type": "string"
     },
     "uuid_a": {
      "_name_": "uuid_a",
      "title": "uuid_a",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "systemdataset_entry",
    "title": "systemdataset_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "pool",
     "pool_set",
     "uuid",
     "uuid_b",
     "basename",
     "uuid_a",
     "path"
    ]
   },
   "systemdataset_update": {
    "type": "object",
    "properties": {
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "description": "`pool` is the name of a valid pool configured in the system which will be used to host the system dataset.",
      "nullable": true
     },
     "pool_exclude": {
      "_name_": "pool_exclude",
      "title": "pool_exclude",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "sysdataset_update",
    "title": "sysdataset_update",
    "default": {},
    "_attrs_order_": [
     "pool",
     "pool_exclude"
    ]
   },
   "return_schema_of_systemdataset_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "pool": {
      "_name_": "pool",
      "title": "pool",
      "type": "string",
      "description": "`pool` is the name of a valid pool configured in the system which will be used to host the system dataset."
     },
     "pool_set": {
      "type": "boolean",
      "_name_": "pool_set",
      "title": "pool_set"
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "type": "string"
     },
     "uuid_b": {
      "_name_": "uuid_b",
      "title": "uuid_b",
      "type": "string",
      "nullable": true
     },
     "basename": {
      "_name_": "basename",
      "title": "basename",
      "type": "string"
     },
     "uuid_a": {
      "_name_": "uuid_a",
      "title": "uuid_a",
      "type": "string"
     },
     "path": {
      "_name_": "path",
      "title": "path",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "systemdataset_update_returns",
    "title": "systemdataset_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "pool",
     "pool_set",
     "uuid",
     "uuid_b",
     "basename",
     "uuid_a",
     "path"
    ]
   },
   "systemdataset_pool_choices": {
    "type": "boolean",
    "_name_": "include_current_pool",
    "title": "include_current_pool",
    "default": true
   },
   "return_schema_of_systemdataset_pool_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "systemdataset_pool_choices",
    "title": "systemdataset_pool_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_truecommand_config": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "api_key": {
      "_name_": "api_key",
      "title": "api_key",
      "type": "string",
      "nullable": true
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string",
      "enum": [
       "CONNECTED",
       "CONNECTING",
       "DISABLED",
       "FAILED"
      ]
     },
     "status_reason": {
      "_name_": "status_reason",
      "title": "status_reason",
      "type": "string",
      "enum": [
       "Truecommand service is connected.",
       "Pending Confirmation From iX Portal for Truecommand API Key.",
       "Truecommand service is disabled.",
       "Truecommand API Key Disabled by iX Portal."
      ]
     },
     "remote_url": {
      "_name_": "remote_url",
      "title": "remote_url",
      "type": "string",
      "nullable": true
     },
     "remote_ip_address": {
      "_name_": "remote_ip_address",
      "title": "remote_ip_address",
      "type": "string",
      "nullable": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     }
    },
    "additionalProperties": false,
    "_name_": "truecommand_entry",
    "title": "truecommand_entry",
    "default": {},
    "_attrs_order_": [
     "id",
     "api_key",
     "status",
     "status_reason",
     "remote_url",
     "remote_ip_address",
     "enabled"
    ]
   },
   "truecommand_update": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     },
     "api_key": {
      "_name_": "api_key",
      "title": "api_key",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "truecommand_update",
    "title": "truecommand_update",
    "default": {},
    "_attrs_order_": [
     "enabled",
     "api_key"
    ]
   },
   "return_schema_of_truecommand_update": {
    "type": "object",
    "properties": {
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "api_key": {
      "_name_": "api_key",
      "title": "api_key",
      "type": "string",
      "nullable": true
     },
     "status": {
      "_name_": "status",
      "title": "status",
      "type": "string",
      "enum": [
       "CONNECTED",
       "CONNECTING",
       "DISABLED",
       "FAILED"
      ]
     },
     "status_reason": {
      "_name_": "status_reason",
      "title": "status_reason",
      "type": "string",
      "enum": [
       "Truecommand service is connected.",
       "Pending Confirmation From iX Portal for Truecommand API Key.",
       "Truecommand service is disabled.",
       "Truecommand API Key Disabled by iX Portal."
      ]
     },
     "remote_url": {
      "_name_": "remote_url",
      "title": "remote_url",
      "type": "string",
      "nullable": true
     },
     "remote_ip_address": {
      "_name_": "remote_ip_address",
      "title": "remote_ip_address",
      "type": "string",
      "nullable": true
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled"
     }
    },
    "additionalProperties": false,
    "_name_": "truecommand_update_returns",
    "title": "truecommand_update_returns",
    "default": {},
    "_attrs_order_": [
     "id",
     "api_key",
     "status",
     "status_reason",
     "remote_url",
     "remote_ip_address",
     "enabled"
    ]
   },
   "return_schema_of_truenas_get_chassis_hardware": {
    "_name_": "system_chassis_hardware",
    "title": "system_chassis_hardware",
    "type": "string"
   },
   "return_schema_of_truenas_get_eula": {
    "_name_": "eula",
    "title": "eula",
    "type": "string",
    "nullable": true
   },
   "return_schema_of_truenas_is_eula_accepted": {
    "type": "boolean",
    "_name_": "system_eula_accepted",
    "title": "system_eula_accepted"
   },
   "return_schema_of_truenas_is_ix_hardware": {
    "type": "boolean",
    "_name_": "is_ix_hardware",
    "title": "is_ix_hardware"
   },
   "return_schema_of_truenas_is_production": {
    "type": "boolean",
    "_name_": "is_production_system",
    "title": "is_production_system"
   },
   "truenas_set_production_0": {
    "type": "boolean",
    "_name_": "production",
    "title": "production"
   },
   "truenas_set_production_1": {
    "type": "boolean",
    "_name_": "attach_debug",
    "title": "attach_debug",
    "default": false
   },
   "truenas_set_production": {
    "type": "object",
    "properties": {
     "production": {
      "$ref": "#/components/schemas/truenas_set_production_0"
     },
     "attach_debug": {
      "$ref": "#/components/schemas/truenas_set_production_1"
     }
    }
   },
   "return_schema_of_truenas_set_production": {
    "type": "object",
    "properties": {
     "ticket": {
      "type": "integer",
      "_name_": "ticket",
      "title": "ticket",
      "nullable": true
     },
     "url": {
      "_name_": "url",
      "title": "url",
      "type": "string",
      "nullable": true
     },
     "has_debug": {
      "type": "boolean",
      "_name_": "has_debug",
      "title": "has_debug"
     }
    },
    "additionalProperties": false,
    "_name_": "set_production",
    "title": "set_production",
    "default": {},
    "_attrs_order_": [
     "ticket",
     "url",
     "has_debug"
    ]
   },
   "truenas_update_customer_information": {
    "type": "object",
    "properties": {
     "company": {
      "_name_": "company",
      "title": "company",
      "type": "string"
     },
     "administrative_user": {
      "type": "object",
      "properties": {
       "first_name": {
        "_name_": "first_name",
        "title": "first_name",
        "type": "string"
       },
       "last_name": {
        "_name_": "last_name",
        "title": "last_name",
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "type": "string"
       },
       "office_phone": {
        "_name_": "office_phone",
        "title": "office_phone",
        "type": "string"
       },
       "mobile_phone": {
        "_name_": "mobile_phone",
        "title": "mobile_phone",
        "type": "string"
       },
       "primary_email": {
        "_name_": "primary_email",
        "title": "primary_email",
        "type": "string"
       },
       "secondary_email": {
        "_name_": "secondary_email",
        "title": "secondary_email",
        "type": "string"
       },
       "address": {
        "_name_": "address",
        "title": "address",
        "type": "string"
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "type": "string"
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string"
       },
       "zip": {
        "_name_": "zip",
        "title": "zip",
        "type": "string"
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "administrative_user",
      "title": "administrative_user",
      "default": {},
      "_attrs_order_": [
       "first_name",
       "last_name",
       "title",
       "office_phone",
       "mobile_phone",
       "primary_email",
       "secondary_email",
       "address",
       "city",
       "state",
       "zip",
       "country"
      ]
     },
     "technical_user": {
      "type": "object",
      "properties": {
       "first_name": {
        "_name_": "first_name",
        "title": "first_name",
        "type": "string"
       },
       "last_name": {
        "_name_": "last_name",
        "title": "last_name",
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "type": "string"
       },
       "office_phone": {
        "_name_": "office_phone",
        "title": "office_phone",
        "type": "string"
       },
       "mobile_phone": {
        "_name_": "mobile_phone",
        "title": "mobile_phone",
        "type": "string"
       },
       "primary_email": {
        "_name_": "primary_email",
        "title": "primary_email",
        "type": "string"
       },
       "secondary_email": {
        "_name_": "secondary_email",
        "title": "secondary_email",
        "type": "string"
       },
       "address": {
        "_name_": "address",
        "title": "address",
        "type": "string"
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "type": "string"
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string"
       },
       "zip": {
        "_name_": "zip",
        "title": "zip",
        "type": "string"
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "technical_user",
      "title": "technical_user",
      "default": {},
      "_attrs_order_": [
       "first_name",
       "last_name",
       "title",
       "office_phone",
       "mobile_phone",
       "primary_email",
       "secondary_email",
       "address",
       "city",
       "state",
       "zip",
       "country"
      ]
     },
     "reseller": {
      "type": "object",
      "properties": {
       "company": {
        "_name_": "company",
        "title": "company",
        "type": "string"
       },
       "first_name": {
        "_name_": "first_name",
        "title": "first_name",
        "type": "string"
       },
       "last_name": {
        "_name_": "last_name",
        "title": "last_name",
        "type": "string"
       },
       "title": {
        "_name_": "title",
        "title": "title",
        "type": "string"
       },
       "office_phone": {
        "_name_": "office_phone",
        "title": "office_phone",
        "type": "string"
       },
       "mobile_phone": {
        "_name_": "mobile_phone",
        "title": "mobile_phone",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "reseller",
      "title": "reseller",
      "default": {},
      "_attrs_order_": [
       "company",
       "first_name",
       "last_name",
       "title",
       "office_phone",
       "mobile_phone"
      ]
     },
     "physical_location": {
      "type": "object",
      "properties": {
       "address": {
        "_name_": "address",
        "title": "address",
        "type": "string"
       },
       "city": {
        "_name_": "city",
        "title": "city",
        "type": "string"
       },
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string"
       },
       "zip": {
        "_name_": "zip",
        "title": "zip",
        "type": "string"
       },
       "country": {
        "_name_": "country",
        "title": "country",
        "type": "string"
       },
       "contact_name": {
        "_name_": "contact_name",
        "title": "contact_name",
        "type": "string"
       },
       "contact_phone_number": {
        "_name_": "contact_phone_number",
        "title": "contact_phone_number",
        "type": "string"
       },
       "contact_email": {
        "_name_": "contact_email",
        "title": "contact_email",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "physical_location",
      "title": "physical_location",
      "default": {},
      "_attrs_order_": [
       "address",
       "city",
       "state",
       "zip",
       "country",
       "contact_name",
       "contact_phone_number",
       "contact_email"
      ]
     },
     "primary_use_case": {
      "_name_": "primary_use_case",
      "title": "primary_use_case",
      "type": "string"
     },
     "other_primary_use_case": {
      "_name_": "other_primary_use_case",
      "title": "other_primary_use_case",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "customer_information_update",
    "title": "customer_information_update",
    "default": {},
    "_attrs_order_": [
     "company",
     "administrative_user",
     "technical_user",
     "reseller",
     "physical_location",
     "primary_use_case",
     "other_primary_use_case"
    ]
   },
   "return_schema_of_tunable_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "SYSCTL",
          "_required_": true,
          "type": "string",
          "enum": [
           "SYSCTL",
           "UDEV",
           "ZFS"
          ]
         },
         "var": {
          "_name_": "var",
          "title": "var",
          "_required_": true,
          "type": "string"
         },
         "value": {
          "_name_": "value",
          "title": "value",
          "_required_": true,
          "type": "string"
         },
         "comment": {
          "_name_": "comment",
          "title": "comment",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "enabled": {
          "type": "boolean",
          "_name_": "enabled",
          "title": "enabled",
          "default": true,
          "_required_": false
         },
         "update_initramfs": {
          "type": "boolean",
          "_name_": "update_initramfs",
          "title": "update_initramfs",
          "default": true,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "orig_value": {
          "_name_": "orig_value",
          "title": "orig_value",
          "_required_": false,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "tunable_entry",
        "title": "tunable_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "type",
         "var",
         "value",
         "comment",
         "enabled",
         "update_initramfs",
         "id",
         "orig_value"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "default": "SYSCTL",
        "_required_": true,
        "type": "string",
        "enum": [
         "SYSCTL",
         "UDEV",
         "ZFS"
        ]
       },
       "var": {
        "_name_": "var",
        "title": "var",
        "_required_": true,
        "type": "string"
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "_required_": true,
        "type": "string"
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "update_initramfs": {
        "type": "boolean",
        "_name_": "update_initramfs",
        "title": "update_initramfs",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "orig_value": {
        "_name_": "orig_value",
        "title": "orig_value",
        "_required_": false,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "tunable_entry",
      "title": "tunable_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "type",
       "var",
       "value",
       "comment",
       "enabled",
       "update_initramfs",
       "id",
       "orig_value"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "type": {
        "_name_": "type",
        "title": "type",
        "default": "SYSCTL",
        "_required_": true,
        "type": "string",
        "enum": [
         "SYSCTL",
         "UDEV",
         "ZFS"
        ]
       },
       "var": {
        "_name_": "var",
        "title": "var",
        "_required_": true,
        "type": "string"
       },
       "value": {
        "_name_": "value",
        "title": "value",
        "_required_": true,
        "type": "string"
       },
       "comment": {
        "_name_": "comment",
        "title": "comment",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "enabled": {
        "type": "boolean",
        "_name_": "enabled",
        "title": "enabled",
        "default": true,
        "_required_": false
       },
       "update_initramfs": {
        "type": "boolean",
        "_name_": "update_initramfs",
        "title": "update_initramfs",
        "default": true,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "orig_value": {
        "_name_": "orig_value",
        "title": "orig_value",
        "_required_": false,
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "tunable_entry",
      "title": "tunable_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "type",
       "var",
       "value",
       "comment",
       "enabled",
       "update_initramfs",
       "id",
       "orig_value"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "tunable_create": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "SYSCTL",
      "type": "string",
      "enum": [
       "SYSCTL",
       "UDEV",
       "ZFS"
      ],
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "var": {
      "_name_": "var",
      "title": "var",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "value": {
      "_name_": "value",
      "title": "value",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "update_initramfs": {
      "type": "boolean",
      "_name_": "update_initramfs",
      "title": "update_initramfs",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "tunable_create",
    "title": "tunable_create",
    "default": {},
    "_attrs_order_": [
     "type",
     "var",
     "value",
     "comment",
     "enabled",
     "update_initramfs"
    ]
   },
   "return_schema_of_tunable_create": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "SYSCTL",
      "type": "string",
      "enum": [
       "SYSCTL",
       "UDEV",
       "ZFS"
      ],
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "var": {
      "_name_": "var",
      "title": "var",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "value": {
      "_name_": "value",
      "title": "value",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "update_initramfs": {
      "type": "boolean",
      "_name_": "update_initramfs",
      "title": "update_initramfs",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "orig_value": {
      "_name_": "orig_value",
      "title": "orig_value",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "tunable_create_returns",
    "title": "tunable_create_returns",
    "default": {},
    "_attrs_order_": [
     "type",
     "var",
     "value",
     "comment",
     "enabled",
     "update_initramfs",
     "id",
     "orig_value"
    ]
   },
   "return_schema_of_tunable_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "tunable_update": {
    "type": "object",
    "properties": {
     "value": {
      "_name_": "value",
      "title": "value",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "update_initramfs": {
      "type": "boolean",
      "_name_": "update_initramfs",
      "title": "update_initramfs",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "tunable_update",
    "title": "tunable_update",
    "default": {},
    "_attrs_order_": [
     "value",
     "comment",
     "enabled",
     "update_initramfs"
    ]
   },
   "return_schema_of_tunable_update": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "SYSCTL",
      "type": "string",
      "enum": [
       "SYSCTL",
       "UDEV",
       "ZFS"
      ],
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "var": {
      "_name_": "var",
      "title": "var",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "value": {
      "_name_": "value",
      "title": "value",
      "type": "string",
      "description": "If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding\nvalue (e.g. `0`).\nIf `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be\nappended automatically) and `value` is its contents (e.g. `BUS==\"usb\", OPTIONS+=\"ignore_device\"`).\nIf `type` is `ZFS` then `var` is a ZFS kernel module parameter name (e.g. `zfs_dirty_data_max_max`) and `value`\nis its value (e.g. `783091712`)."
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "update_initramfs": {
      "type": "boolean",
      "_name_": "update_initramfs",
      "title": "update_initramfs",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update Tunable of `id`.\nCreate a tunable."
     },
     "orig_value": {
      "_name_": "orig_value",
      "title": "orig_value",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "tunable_update_returns",
    "title": "tunable_update_returns",
    "default": {},
    "_attrs_order_": [
     "type",
     "var",
     "value",
     "comment",
     "enabled",
     "update_initramfs",
     "id",
     "orig_value"
    ]
   },
   "tunable_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "tunable_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "tunable_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/tunable_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/tunable_get_instance_1"
     }
    }
   },
   "return_schema_of_tunable_get_instance": {
    "type": "object",
    "properties": {
     "type": {
      "_name_": "type",
      "title": "type",
      "default": "SYSCTL",
      "type": "string",
      "enum": [
       "SYSCTL",
       "UDEV",
       "ZFS"
      ]
     },
     "var": {
      "_name_": "var",
      "title": "var",
      "type": "string"
     },
     "value": {
      "_name_": "value",
      "title": "value",
      "type": "string"
     },
     "comment": {
      "_name_": "comment",
      "title": "comment",
      "default": "",
      "type": "string"
     },
     "enabled": {
      "type": "boolean",
      "_name_": "enabled",
      "title": "enabled",
      "default": true
     },
     "update_initramfs": {
      "type": "boolean",
      "_name_": "update_initramfs",
      "title": "update_initramfs",
      "default": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "orig_value": {
      "_name_": "orig_value",
      "title": "orig_value",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "tunable_entry",
    "title": "tunable_entry",
    "default": {},
    "_attrs_order_": [
     "type",
     "var",
     "value",
     "comment",
     "enabled",
     "update_initramfs",
     "id",
     "orig_value"
    ]
   },
   "return_schema_of_tunable_tunable_type_choices": {
    "type": "object",
    "properties": {
     "SYSCTL": {
      "_name_": "SYSCTL",
      "title": "SYSCTL",
      "type": "string",
      "enum": [
       "SYSCTL"
      ]
     },
     "UDEV": {
      "_name_": "UDEV",
      "title": "UDEV",
      "type": "string",
      "enum": [
       "UDEV"
      ]
     },
     "ZFS": {
      "_name_": "ZFS",
      "title": "ZFS",
      "type": "string",
      "enum": [
       "ZFS"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "tunable_type_choices",
    "title": "tunable_type_choices",
    "default": {},
    "_attrs_order_": [
     "SYSCTL",
     "UDEV",
     "ZFS"
    ]
   },
   "update_check_available": {
    "type": "object",
    "properties": {
     "train": {
      "_name_": "train",
      "title": "train",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "update-check-available",
    "title": "update-check-available",
    "default": {},
    "_attrs_order_": [
     "train"
    ]
   },
   "update_file": {
    "type": "object",
    "properties": {
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume",
      "default": false,
      "description": "`resume` should be set to `true` if a previous call to this method returned a `CallError` with `errno=EAGAIN`\nmeaning that an upgrade can be performed with a warning and that warning is accepted. In that case, re-uploading\nthe file is not necessary."
     },
     "destination": {
      "_name_": "destination",
      "title": "destination",
      "default": null,
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "updatefile",
    "title": "updatefile",
    "default": {},
    "_attrs_order_": [
     "resume",
     "destination"
    ]
   },
   "update_get_pending": {
    "_name_": "path",
    "title": "path",
    "default": null,
    "type": "string",
    "nullable": true
   },
   "update_manual_0": {
    "_name_": "path",
    "title": "path",
    "type": "string",
    "description": "`path` must be the absolute path to the update file."
   },
   "update_manual_1": {
    "type": "object",
    "properties": {
     "dataset_name": {
      "_name_": "dataset_name",
      "title": "dataset_name",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume",
      "default": false
     },
     "cleanup": {
      "type": "boolean",
      "_name_": "cleanup",
      "title": "cleanup",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "dataset_name",
     "resume",
     "cleanup"
    ]
   },
   "update_manual": {
    "type": "object",
    "properties": {
     "path": {
      "$ref": "#/components/schemas/update_manual_0"
     },
     "options": {
      "$ref": "#/components/schemas/update_manual_1"
     }
    }
   },
   "update_set_auto_download": {
    "type": "boolean",
    "_name_": "autocheck",
    "title": "autocheck"
   },
   "update_set_train": {
    "_name_": "train",
    "title": "train",
    "type": "string"
   },
   "update_update": {
    "type": "object",
    "properties": {
     "dataset_name": {
      "_name_": "dataset_name",
      "title": "dataset_name",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "resume": {
      "type": "boolean",
      "_name_": "resume",
      "title": "resume",
      "default": false
     },
     "train": {
      "_name_": "train",
      "title": "train",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "reboot": {
      "type": "boolean",
      "_name_": "reboot",
      "title": "reboot",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "update",
    "title": "update",
    "default": {},
    "_attrs_order_": [
     "dataset_name",
     "resume",
     "train",
     "reboot"
    ]
   },
   "return_schema_of_ups_config": {
    "type": "object",
    "properties": {
     "powerdown": {
      "type": "boolean",
      "_name_": "powerdown",
      "title": "powerdown"
     },
     "rmonitor": {
      "type": "boolean",
      "_name_": "rmonitor",
      "title": "rmonitor"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "nocommwarntime": {
      "type": "integer",
      "_name_": "nocommwarntime",
      "title": "nocommwarntime",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport"
     },
     "shutdowntimer": {
      "type": "integer",
      "_name_": "shutdowntimer",
      "title": "shutdowntimer"
     },
     "hostsync": {
      "type": "integer",
      "_name_": "hostsync",
      "title": "hostsync"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "driver": {
      "_name_": "driver",
      "title": "driver",
      "type": "string"
     },
     "extrausers": {
      "_name_": "extrausers",
      "title": "extrausers",
      "type": "string"
     },
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string"
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "type": "string",
      "enum": [
       "MASTER",
       "SLAVE"
      ]
     },
     "monpwd": {
      "_name_": "monpwd",
      "title": "monpwd",
      "type": "string"
     },
     "monuser": {
      "_name_": "monuser",
      "title": "monuser",
      "type": "string"
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "optionsupsd": {
      "_name_": "optionsupsd",
      "title": "optionsupsd",
      "type": "string"
     },
     "port": {
      "_name_": "port",
      "title": "port",
      "type": "string"
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "type": "string"
     },
     "shutdown": {
      "_name_": "shutdown",
      "title": "shutdown",
      "type": "string",
      "enum": [
       "LOWBATT",
       "BATT"
      ]
     },
     "shutdowncmd": {
      "_name_": "shutdowncmd",
      "title": "shutdowncmd",
      "type": "string",
      "nullable": true
     },
     "complete_identifier": {
      "_name_": "complete_identifier",
      "title": "complete_identifier",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "ups_entry",
    "title": "ups_entry",
    "default": {},
    "_attrs_order_": [
     "powerdown",
     "rmonitor",
     "id",
     "nocommwarntime",
     "remoteport",
     "shutdowntimer",
     "hostsync",
     "description",
     "driver",
     "extrausers",
     "identifier",
     "mode",
     "monpwd",
     "monuser",
     "options",
     "optionsupsd",
     "port",
     "remotehost",
     "shutdown",
     "shutdowncmd",
     "complete_identifier"
    ]
   },
   "ups_update": {
    "type": "object",
    "properties": {
     "powerdown": {
      "type": "boolean",
      "_name_": "powerdown",
      "title": "powerdown",
      "description": "`powerdown` when enabled, sets UPS to power off after shutting down the system."
     },
     "rmonitor": {
      "type": "boolean",
      "_name_": "rmonitor",
      "title": "rmonitor"
     },
     "nocommwarntime": {
      "type": "integer",
      "_name_": "nocommwarntime",
      "title": "nocommwarntime",
      "description": "`nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that\nthe Service cannot reach configured UPS.",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport"
     },
     "shutdowntimer": {
      "type": "integer",
      "_name_": "shutdowntimer",
      "title": "shutdowntimer",
      "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
     },
     "hostsync": {
      "type": "integer",
      "_name_": "hostsync",
      "title": "hostsync"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "driver": {
      "_name_": "driver",
      "title": "driver",
      "type": "string"
     },
     "extrausers": {
      "_name_": "extrausers",
      "title": "extrausers",
      "type": "string"
     },
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string"
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "type": "string",
      "enum": [
       "MASTER",
       "SLAVE"
      ]
     },
     "monpwd": {
      "_name_": "monpwd",
      "title": "monpwd",
      "type": "string"
     },
     "monuser": {
      "_name_": "monuser",
      "title": "monuser",
      "type": "string"
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "optionsupsd": {
      "_name_": "optionsupsd",
      "title": "optionsupsd",
      "type": "string"
     },
     "port": {
      "_name_": "port",
      "title": "port",
      "type": "string"
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "type": "string"
     },
     "shutdown": {
      "_name_": "shutdown",
      "title": "shutdown",
      "type": "string",
      "enum": [
       "LOWBATT",
       "BATT"
      ],
      "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
     },
     "shutdowncmd": {
      "_name_": "shutdowncmd",
      "title": "shutdowncmd",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "ups_update",
    "title": "ups_update",
    "default": {},
    "_attrs_order_": [
     "powerdown",
     "rmonitor",
     "nocommwarntime",
     "remoteport",
     "shutdowntimer",
     "hostsync",
     "description",
     "driver",
     "extrausers",
     "identifier",
     "mode",
     "monpwd",
     "monuser",
     "options",
     "optionsupsd",
     "port",
     "remotehost",
     "shutdown",
     "shutdowncmd"
    ]
   },
   "return_schema_of_ups_update": {
    "type": "object",
    "properties": {
     "powerdown": {
      "type": "boolean",
      "_name_": "powerdown",
      "title": "powerdown",
      "description": "`powerdown` when enabled, sets UPS to power off after shutting down the system."
     },
     "rmonitor": {
      "type": "boolean",
      "_name_": "rmonitor",
      "title": "rmonitor"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "nocommwarntime": {
      "type": "integer",
      "_name_": "nocommwarntime",
      "title": "nocommwarntime",
      "description": "`nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that\nthe Service cannot reach configured UPS.",
      "nullable": true
     },
     "remoteport": {
      "type": "integer",
      "_name_": "remoteport",
      "title": "remoteport"
     },
     "shutdowntimer": {
      "type": "integer",
      "_name_": "shutdowntimer",
      "title": "shutdowntimer",
      "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
     },
     "hostsync": {
      "type": "integer",
      "_name_": "hostsync",
      "title": "hostsync"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "driver": {
      "_name_": "driver",
      "title": "driver",
      "type": "string"
     },
     "extrausers": {
      "_name_": "extrausers",
      "title": "extrausers",
      "type": "string"
     },
     "identifier": {
      "_name_": "identifier",
      "title": "identifier",
      "type": "string"
     },
     "mode": {
      "_name_": "mode",
      "title": "mode",
      "type": "string",
      "enum": [
       "MASTER",
       "SLAVE"
      ]
     },
     "monpwd": {
      "_name_": "monpwd",
      "title": "monpwd",
      "type": "string"
     },
     "monuser": {
      "_name_": "monuser",
      "title": "monuser",
      "type": "string"
     },
     "options": {
      "_name_": "options",
      "title": "options",
      "type": "string"
     },
     "optionsupsd": {
      "_name_": "optionsupsd",
      "title": "optionsupsd",
      "type": "string"
     },
     "port": {
      "_name_": "port",
      "title": "port",
      "type": "string"
     },
     "remotehost": {
      "_name_": "remotehost",
      "title": "remotehost",
      "type": "string"
     },
     "shutdown": {
      "_name_": "shutdown",
      "title": "shutdown",
      "type": "string",
      "enum": [
       "LOWBATT",
       "BATT"
      ],
      "description": "`shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before\ninitiating a shutdown. This only applies when `shutdown` is set to \"BATT\"."
     },
     "shutdowncmd": {
      "_name_": "shutdowncmd",
      "title": "shutdowncmd",
      "type": "string",
      "nullable": true
     },
     "complete_identifier": {
      "_name_": "complete_identifier",
      "title": "complete_identifier",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "ups_update_returns",
    "title": "ups_update_returns",
    "default": {},
    "_attrs_order_": [
     "powerdown",
     "rmonitor",
     "id",
     "nocommwarntime",
     "remoteport",
     "shutdowntimer",
     "hostsync",
     "description",
     "driver",
     "extrausers",
     "identifier",
     "mode",
     "monpwd",
     "monuser",
     "options",
     "optionsupsd",
     "port",
     "remotehost",
     "shutdown",
     "shutdowncmd",
     "complete_identifier"
    ]
   },
   "return_schema_of_ups_driver_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "driver_choices",
    "title": "driver_choices",
    "description": "\n\nExample(s):\n```\n{\n    \"blazer_ser$CPM-800\": \"WinPower ups 2 CPM-800 (blazer_ser)\"\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_ups_port_choices": {
    "_name_": "port_choices",
    "title": "port_choices",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "port_choice",
     "title": "port_choice",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_user_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "uid": {
          "type": "integer",
          "_name_": "uid",
          "title": "uid",
          "_required_": false
         },
         "username": {
          "_name_": "username",
          "title": "username",
          "_required_": true,
          "type": "string"
         },
         "home": {
          "_name_": "home",
          "title": "home",
          "default": "/var/empty",
          "_required_": false,
          "type": "string"
         },
         "shell": {
          "_name_": "shell",
          "title": "shell",
          "default": "/usr/bin/zsh",
          "_required_": false,
          "type": "string"
         },
         "full_name": {
          "_name_": "full_name",
          "title": "full_name",
          "_required_": true,
          "type": "string"
         },
         "email": {
          "_name_": "email",
          "title": "email",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "password_disabled": {
          "type": "boolean",
          "_name_": "password_disabled",
          "title": "password_disabled",
          "default": false,
          "_required_": false
         },
         "ssh_password_enabled": {
          "type": "boolean",
          "_name_": "ssh_password_enabled",
          "title": "ssh_password_enabled",
          "default": false,
          "_required_": false
         },
         "locked": {
          "type": "boolean",
          "_name_": "locked",
          "title": "locked",
          "default": false,
          "_required_": false
         },
         "smb": {
          "type": "boolean",
          "_name_": "smb",
          "title": "smb",
          "default": true,
          "_required_": false
         },
         "sudo_commands": {
          "_name_": "sudo_commands",
          "title": "sudo_commands",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "command",
            "title": "command",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "sudo_commands_nopasswd": {
          "_name_": "sudo_commands_nopasswd",
          "title": "sudo_commands_nopasswd",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "command",
            "title": "command",
            "_required_": false,
            "type": "string"
           }
          ]
         },
         "sshpubkey": {
          "_name_": "sshpubkey",
          "title": "sshpubkey",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "groups": {
          "_name_": "groups",
          "title": "groups",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "type": "integer",
            "_name_": "group",
            "title": "group",
            "_required_": false
           }
          ]
         },
         "group": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "group",
          "title": "group",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "builtin": {
          "type": "boolean",
          "_name_": "builtin",
          "title": "builtin",
          "_required_": false
         },
         "id_type_both": {
          "type": "boolean",
          "_name_": "id_type_both",
          "title": "id_type_both",
          "_required_": false
         },
         "local": {
          "type": "boolean",
          "_name_": "local",
          "title": "local",
          "_required_": false
         },
         "immutable": {
          "type": "boolean",
          "_name_": "immutable",
          "title": "immutable",
          "_required_": false
         },
         "twofactor_auth_configured": {
          "type": "boolean",
          "_name_": "twofactor_auth_configured",
          "title": "twofactor_auth_configured",
          "_required_": false
         },
         "unixhash": {
          "_name_": "unixhash",
          "title": "unixhash",
          "_required_": false,
          "type": "string"
         },
         "smbhash": {
          "_name_": "smbhash",
          "title": "smbhash",
          "_required_": false,
          "type": "string"
         },
         "nt_name": {
          "_name_": "nt_name",
          "title": "nt_name",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "sid": {
          "_name_": "sid",
          "title": "sid",
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "roles": {
          "_name_": "roles",
          "title": "roles",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": [
           {
            "_name_": "role",
            "title": "role",
            "_required_": false,
            "type": "string"
           }
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "user_entry",
        "title": "user_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "uid",
         "username",
         "home",
         "shell",
         "full_name",
         "email",
         "password_disabled",
         "ssh_password_enabled",
         "locked",
         "smb",
         "sudo_commands",
         "sudo_commands_nopasswd",
         "sshpubkey",
         "groups",
         "group",
         "id",
         "builtin",
         "id_type_both",
         "local",
         "immutable",
         "twofactor_auth_configured",
         "unixhash",
         "smbhash",
         "nt_name",
         "sid",
         "roles"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "uid": {
        "type": "integer",
        "_name_": "uid",
        "title": "uid",
        "_required_": false
       },
       "username": {
        "_name_": "username",
        "title": "username",
        "_required_": true,
        "type": "string"
       },
       "home": {
        "_name_": "home",
        "title": "home",
        "default": "/var/empty",
        "_required_": false,
        "type": "string"
       },
       "shell": {
        "_name_": "shell",
        "title": "shell",
        "default": "/usr/bin/zsh",
        "_required_": false,
        "type": "string"
       },
       "full_name": {
        "_name_": "full_name",
        "title": "full_name",
        "_required_": true,
        "type": "string"
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "password_disabled": {
        "type": "boolean",
        "_name_": "password_disabled",
        "title": "password_disabled",
        "default": false,
        "_required_": false
       },
       "ssh_password_enabled": {
        "type": "boolean",
        "_name_": "ssh_password_enabled",
        "title": "ssh_password_enabled",
        "default": false,
        "_required_": false
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "default": false,
        "_required_": false
       },
       "smb": {
        "type": "boolean",
        "_name_": "smb",
        "title": "smb",
        "default": true,
        "_required_": false
       },
       "sudo_commands": {
        "_name_": "sudo_commands",
        "title": "sudo_commands",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sudo_commands_nopasswd": {
        "_name_": "sudo_commands_nopasswd",
        "title": "sudo_commands_nopasswd",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sshpubkey": {
        "_name_": "sshpubkey",
        "title": "sshpubkey",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "groups": {
        "_name_": "groups",
        "title": "groups",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "integer",
          "_name_": "group",
          "title": "group",
          "_required_": false
         }
        ]
       },
       "group": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "group",
        "title": "group",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       },
       "id_type_both": {
        "type": "boolean",
        "_name_": "id_type_both",
        "title": "id_type_both",
        "_required_": false
       },
       "local": {
        "type": "boolean",
        "_name_": "local",
        "title": "local",
        "_required_": false
       },
       "immutable": {
        "type": "boolean",
        "_name_": "immutable",
        "title": "immutable",
        "_required_": false
       },
       "twofactor_auth_configured": {
        "type": "boolean",
        "_name_": "twofactor_auth_configured",
        "title": "twofactor_auth_configured",
        "_required_": false
       },
       "unixhash": {
        "_name_": "unixhash",
        "title": "unixhash",
        "_required_": false,
        "type": "string"
       },
       "smbhash": {
        "_name_": "smbhash",
        "title": "smbhash",
        "_required_": false,
        "type": "string"
       },
       "nt_name": {
        "_name_": "nt_name",
        "title": "nt_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "sid": {
        "_name_": "sid",
        "title": "sid",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "roles": {
        "_name_": "roles",
        "title": "roles",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "role",
          "title": "role",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "user_entry",
      "title": "user_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "uid",
       "username",
       "home",
       "shell",
       "full_name",
       "email",
       "password_disabled",
       "ssh_password_enabled",
       "locked",
       "smb",
       "sudo_commands",
       "sudo_commands_nopasswd",
       "sshpubkey",
       "groups",
       "group",
       "id",
       "builtin",
       "id_type_both",
       "local",
       "immutable",
       "twofactor_auth_configured",
       "unixhash",
       "smbhash",
       "nt_name",
       "sid",
       "roles"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "uid": {
        "type": "integer",
        "_name_": "uid",
        "title": "uid",
        "_required_": false
       },
       "username": {
        "_name_": "username",
        "title": "username",
        "_required_": true,
        "type": "string"
       },
       "home": {
        "_name_": "home",
        "title": "home",
        "default": "/var/empty",
        "_required_": false,
        "type": "string"
       },
       "shell": {
        "_name_": "shell",
        "title": "shell",
        "default": "/usr/bin/zsh",
        "_required_": false,
        "type": "string"
       },
       "full_name": {
        "_name_": "full_name",
        "title": "full_name",
        "_required_": true,
        "type": "string"
       },
       "email": {
        "_name_": "email",
        "title": "email",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "password_disabled": {
        "type": "boolean",
        "_name_": "password_disabled",
        "title": "password_disabled",
        "default": false,
        "_required_": false
       },
       "ssh_password_enabled": {
        "type": "boolean",
        "_name_": "ssh_password_enabled",
        "title": "ssh_password_enabled",
        "default": false,
        "_required_": false
       },
       "locked": {
        "type": "boolean",
        "_name_": "locked",
        "title": "locked",
        "default": false,
        "_required_": false
       },
       "smb": {
        "type": "boolean",
        "_name_": "smb",
        "title": "smb",
        "default": true,
        "_required_": false
       },
       "sudo_commands": {
        "_name_": "sudo_commands",
        "title": "sudo_commands",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sudo_commands_nopasswd": {
        "_name_": "sudo_commands_nopasswd",
        "title": "sudo_commands_nopasswd",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "command",
          "title": "command",
          "_required_": false,
          "type": "string"
         }
        ]
       },
       "sshpubkey": {
        "_name_": "sshpubkey",
        "title": "sshpubkey",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "groups": {
        "_name_": "groups",
        "title": "groups",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "type": "integer",
          "_name_": "group",
          "title": "group",
          "_required_": false
         }
        ]
       },
       "group": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "group",
        "title": "group",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "builtin": {
        "type": "boolean",
        "_name_": "builtin",
        "title": "builtin",
        "_required_": false
       },
       "id_type_both": {
        "type": "boolean",
        "_name_": "id_type_both",
        "title": "id_type_both",
        "_required_": false
       },
       "local": {
        "type": "boolean",
        "_name_": "local",
        "title": "local",
        "_required_": false
       },
       "immutable": {
        "type": "boolean",
        "_name_": "immutable",
        "title": "immutable",
        "_required_": false
       },
       "twofactor_auth_configured": {
        "type": "boolean",
        "_name_": "twofactor_auth_configured",
        "title": "twofactor_auth_configured",
        "_required_": false
       },
       "unixhash": {
        "_name_": "unixhash",
        "title": "unixhash",
        "_required_": false,
        "type": "string"
       },
       "smbhash": {
        "_name_": "smbhash",
        "title": "smbhash",
        "_required_": false,
        "type": "string"
       },
       "nt_name": {
        "_name_": "nt_name",
        "title": "nt_name",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "sid": {
        "_name_": "sid",
        "title": "sid",
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "roles": {
        "_name_": "roles",
        "title": "roles",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": [
         {
          "_name_": "role",
          "title": "role",
          "_required_": false,
          "type": "string"
         }
        ]
       }
      },
      "additionalProperties": false,
      "_name_": "user_entry",
      "title": "user_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "uid",
       "username",
       "home",
       "shell",
       "full_name",
       "email",
       "password_disabled",
       "ssh_password_enabled",
       "locked",
       "smb",
       "sudo_commands",
       "sudo_commands_nopasswd",
       "sshpubkey",
       "groups",
       "group",
       "id",
       "builtin",
       "id_type_both",
       "local",
       "immutable",
       "twofactor_auth_configured",
       "unixhash",
       "smbhash",
       "nt_name",
       "sid",
       "roles"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "user_create": {
    "type": "object",
    "properties": {
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "description": "If `uid` is not provided it is automatically filled with the next one available."
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "group": {
      "type": "integer",
      "_name_": "group",
      "title": "group",
      "description": "`group` is required if `group_create` is false."
     },
     "group_create": {
      "type": "boolean",
      "_name_": "group_create",
      "title": "group_create",
      "default": false,
      "description": "`group` is required if `group_create` is false."
     },
     "home": {
      "_name_": "home",
      "title": "home",
      "default": "/var/empty",
      "type": "string"
     },
     "home_mode": {
      "_name_": "home_mode",
      "title": "home_mode",
      "default": "700",
      "type": "string"
     },
     "home_create": {
      "type": "boolean",
      "_name_": "home_create",
      "title": "home_create",
      "default": false
     },
     "shell": {
      "_name_": "shell",
      "title": "shell",
      "default": "/usr/bin/zsh",
      "type": "string",
      "description": "Available choices for `shell` can be retrieved with `user.shell_choices`."
     },
     "full_name": {
      "_name_": "full_name",
      "title": "full_name",
      "type": "string"
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`password` is required if `password_disabled` is false."
     },
     "password_disabled": {
      "type": "boolean",
      "_name_": "password_disabled",
      "title": "password_disabled",
      "default": false,
      "description": "`password` is required if `password_disabled` is false."
     },
     "ssh_password_enabled": {
      "type": "boolean",
      "_name_": "ssh_password_enabled",
      "title": "ssh_password_enabled",
      "default": false
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked",
      "default": false
     },
     "smb": {
      "type": "boolean",
      "_name_": "smb",
      "title": "smb",
      "default": true
     },
     "sudo_commands": {
      "_name_": "sudo_commands",
      "title": "sudo_commands",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sudo_commands_nopasswd": {
      "_name_": "sudo_commands_nopasswd",
      "title": "sudo_commands_nopasswd",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sshpubkey": {
      "_name_": "sshpubkey",
      "title": "sshpubkey",
      "type": "string",
      "nullable": true
     },
     "groups": {
      "_name_": "groups",
      "title": "groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "group",
       "title": "group",
       "_required_": false
      }
     }
    },
    "additionalProperties": false,
    "_name_": "user_create",
    "title": "user_create",
    "default": {},
    "_attrs_order_": [
     "uid",
     "username",
     "group",
     "group_create",
     "home",
     "home_mode",
     "home_create",
     "shell",
     "full_name",
     "email",
     "password",
     "password_disabled",
     "ssh_password_enabled",
     "locked",
     "smb",
     "sudo_commands",
     "sudo_commands_nopasswd",
     "sshpubkey",
     "groups"
    ]
   },
   "return_schema_of_user_create": {
    "type": "integer",
    "_name_": "primary_key",
    "title": "primary_key"
   },
   "user_delete": {
    "type": "object",
    "properties": {
     "delete_group": {
      "type": "boolean",
      "_name_": "delete_group",
      "title": "delete_group",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "delete_group"
    ]
   },
   "return_schema_of_user_delete": {
    "type": "integer",
    "_name_": "primary_key",
    "title": "primary_key"
   },
   "user_update": {
    "type": "object",
    "properties": {
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "description": "If `uid` is not provided it is automatically filled with the next one available."
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "group": {
      "type": "integer",
      "_name_": "group",
      "title": "group",
      "description": "`group` is required if `group_create` is false."
     },
     "home": {
      "_name_": "home",
      "title": "home",
      "default": "/var/empty",
      "type": "string"
     },
     "home_mode": {
      "_name_": "home_mode",
      "title": "home_mode",
      "default": "700",
      "type": "string"
     },
     "home_create": {
      "type": "boolean",
      "_name_": "home_create",
      "title": "home_create",
      "default": false
     },
     "shell": {
      "_name_": "shell",
      "title": "shell",
      "default": "/usr/bin/zsh",
      "type": "string",
      "description": "Available choices for `shell` can be retrieved with `user.shell_choices`."
     },
     "full_name": {
      "_name_": "full_name",
      "title": "full_name",
      "type": "string"
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`password` is required if `password_disabled` is false."
     },
     "password_disabled": {
      "type": "boolean",
      "_name_": "password_disabled",
      "title": "password_disabled",
      "default": false,
      "description": "`password` is required if `password_disabled` is false."
     },
     "ssh_password_enabled": {
      "type": "boolean",
      "_name_": "ssh_password_enabled",
      "title": "ssh_password_enabled",
      "default": false
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked",
      "default": false
     },
     "smb": {
      "type": "boolean",
      "_name_": "smb",
      "title": "smb",
      "default": true
     },
     "sudo_commands": {
      "_name_": "sudo_commands",
      "title": "sudo_commands",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sudo_commands_nopasswd": {
      "_name_": "sudo_commands_nopasswd",
      "title": "sudo_commands_nopasswd",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sshpubkey": {
      "_name_": "sshpubkey",
      "title": "sshpubkey",
      "type": "string",
      "nullable": true
     },
     "groups": {
      "_name_": "groups",
      "title": "groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "group",
       "title": "group",
       "_required_": false
      }
     }
    },
    "additionalProperties": false,
    "_name_": "user_update",
    "title": "user_update",
    "default": {},
    "_attrs_order_": [
     "uid",
     "username",
     "group",
     "home",
     "home_mode",
     "home_create",
     "shell",
     "full_name",
     "email",
     "password",
     "password_disabled",
     "ssh_password_enabled",
     "locked",
     "smb",
     "sudo_commands",
     "sudo_commands_nopasswd",
     "sshpubkey",
     "groups"
    ]
   },
   "return_schema_of_user_update": {
    "type": "integer",
    "_name_": "primary_key",
    "title": "primary_key"
   },
   "user_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "user_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "user_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/user_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/user_get_instance_1"
     }
    }
   },
   "return_schema_of_user_get_instance": {
    "type": "object",
    "properties": {
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid"
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "home": {
      "_name_": "home",
      "title": "home",
      "default": "/var/empty",
      "type": "string"
     },
     "shell": {
      "_name_": "shell",
      "title": "shell",
      "default": "/usr/bin/zsh",
      "type": "string"
     },
     "full_name": {
      "_name_": "full_name",
      "title": "full_name",
      "type": "string"
     },
     "email": {
      "_name_": "email",
      "title": "email",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "password_disabled": {
      "type": "boolean",
      "_name_": "password_disabled",
      "title": "password_disabled",
      "default": false
     },
     "ssh_password_enabled": {
      "type": "boolean",
      "_name_": "ssh_password_enabled",
      "title": "ssh_password_enabled",
      "default": false
     },
     "locked": {
      "type": "boolean",
      "_name_": "locked",
      "title": "locked",
      "default": false
     },
     "smb": {
      "type": "boolean",
      "_name_": "smb",
      "title": "smb",
      "default": true
     },
     "sudo_commands": {
      "_name_": "sudo_commands",
      "title": "sudo_commands",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sudo_commands_nopasswd": {
      "_name_": "sudo_commands_nopasswd",
      "title": "sudo_commands_nopasswd",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "command",
       "title": "command",
       "_required_": false,
       "type": "string"
      }
     },
     "sshpubkey": {
      "_name_": "sshpubkey",
      "title": "sshpubkey",
      "type": "string",
      "nullable": true
     },
     "groups": {
      "_name_": "groups",
      "title": "groups",
      "default": [],
      "type": "array",
      "items": {
       "type": "integer",
       "_name_": "group",
       "title": "group",
       "_required_": false
      }
     },
     "group": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "group",
      "title": "group",
      "default": {},
      "_attrs_order_": []
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "builtin": {
      "type": "boolean",
      "_name_": "builtin",
      "title": "builtin"
     },
     "id_type_both": {
      "type": "boolean",
      "_name_": "id_type_both",
      "title": "id_type_both"
     },
     "local": {
      "type": "boolean",
      "_name_": "local",
      "title": "local"
     },
     "immutable": {
      "type": "boolean",
      "_name_": "immutable",
      "title": "immutable"
     },
     "twofactor_auth_configured": {
      "type": "boolean",
      "_name_": "twofactor_auth_configured",
      "title": "twofactor_auth_configured"
     },
     "unixhash": {
      "_name_": "unixhash",
      "title": "unixhash",
      "type": "string"
     },
     "smbhash": {
      "_name_": "smbhash",
      "title": "smbhash",
      "type": "string"
     },
     "nt_name": {
      "_name_": "nt_name",
      "title": "nt_name",
      "type": "string",
      "nullable": true
     },
     "sid": {
      "_name_": "sid",
      "title": "sid",
      "type": "string",
      "nullable": true
     },
     "roles": {
      "_name_": "roles",
      "title": "roles",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "role",
       "title": "role",
       "_required_": false,
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "_name_": "user_entry",
    "title": "user_entry",
    "default": {},
    "_attrs_order_": [
     "uid",
     "username",
     "home",
     "shell",
     "full_name",
     "email",
     "password_disabled",
     "ssh_password_enabled",
     "locked",
     "smb",
     "sudo_commands",
     "sudo_commands_nopasswd",
     "sshpubkey",
     "groups",
     "group",
     "id",
     "builtin",
     "id_type_both",
     "local",
     "immutable",
     "twofactor_auth_configured",
     "unixhash",
     "smbhash",
     "nt_name",
     "sid",
     "roles"
    ]
   },
   "return_schema_of_user_get_next_uid": {
    "type": "integer",
    "_name_": "next_available_uid",
    "title": "next_available_uid"
   },
   "user_get_user_obj": {
    "type": "object",
    "properties": {
     "username": {
      "_name_": "username",
      "title": "username",
      "default": null,
      "type": "string"
     },
     "uid": {
      "type": "integer",
      "_name_": "uid",
      "title": "uid",
      "default": null
     },
     "get_groups": {
      "type": "boolean",
      "_name_": "get_groups",
      "title": "get_groups",
      "default": false,
      "description": "`get_groups` - retrieve group list for the specified user."
     },
     "sid_info": {
      "type": "boolean",
      "_name_": "sid_info",
      "title": "sid_info",
      "default": false,
      "description": "`sid_info` - retrieve SID and domain information for the user"
     }
    },
    "additionalProperties": false,
    "_name_": "get_user_obj",
    "title": "get_user_obj",
    "default": {},
    "_attrs_order_": [
     "username",
     "uid",
     "get_groups",
     "sid_info"
    ]
   },
   "return_schema_of_user_get_user_obj": {
    "type": "object",
    "properties": {
     "pw_name": {
      "_name_": "pw_name",
      "title": "pw_name",
      "type": "string"
     },
     "pw_gecos": {
      "_name_": "pw_gecos",
      "title": "pw_gecos",
      "type": "string"
     },
     "pw_dir": {
      "_name_": "pw_dir",
      "title": "pw_dir",
      "type": "string"
     },
     "pw_shell": {
      "_name_": "pw_shell",
      "title": "pw_shell",
      "type": "string"
     },
     "pw_uid": {
      "type": "integer",
      "_name_": "pw_uid",
      "title": "pw_uid"
     },
     "pw_gid": {
      "type": "integer",
      "_name_": "pw_gid",
      "title": "pw_gid"
     },
     "grouplist": {
      "_name_": "grouplist",
      "title": "grouplist",
      "default": [],
      "type": "array",
      "items": {}
     },
     "sid_info": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "_name_": "sid_info",
      "title": "sid_info",
      "default": {},
      "_attrs_order_": [],
      "description": "`sid_info` - retrieve SID and domain information for the user"
     }
    },
    "additionalProperties": false,
    "_name_": "user_information",
    "title": "user_information",
    "default": {},
    "_attrs_order_": [
     "pw_name",
     "pw_gecos",
     "pw_dir",
     "pw_shell",
     "pw_uid",
     "pw_gid",
     "grouplist",
     "sid_info"
    ]
   },
   "return_schema_of_user_has_local_administrator_set_up": {
    "type": "boolean",
    "_name_": "has_local_administrator_set_up",
    "title": "has_local_administrator_set_up"
   },
   "return_schema_of_user_has_root_password": {
    "type": "boolean",
    "_name_": "has_root_password",
    "title": "has_root_password"
   },
   "user_provisioning_uri": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "return_schema_of_user_provisioning_uri": {
    "_name_": "provisioning_uri",
    "title": "Provisioning URI",
    "type": "string"
   },
   "user_shell_choices": {
    "_name_": "group_ids",
    "title": "group_ids",
    "default": [],
    "type": "array",
    "items": {
     "type": "integer",
     "_name_": "group_id",
     "title": "group_id",
     "_required_": false
    }
   },
   "return_schema_of_user_shell_choices": {
    "type": "object",
    "properties": {
     "shell_path": {
      "_name_": "shell_path",
      "title": "shell_path",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "shell_info",
    "title": "shell_info",
    "description": "\n\nExample(s):\n```\n{\n    \"/usr/bin/bash\": \"bash\",\n    \"/usr/bin/rbash\": \"rbash\",\n    \"/usr/bin/dash\": \"dash\",\n    \"/usr/bin/sh\": \"sh\",\n    \"/usr/bin/zsh\": \"zsh\",\n    \"/usr/bin/tmux\": \"tmux\",\n    \"/usr/sbin/nologin\": \"nologin\"\n}\n```\n",
    "default": {},
    "_attrs_order_": [
     "shell_path"
    ]
   },
   "user_twofactor_config": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "return_schema_of_user_twofactor_config": {
    "type": "object",
    "properties": {
     "provisioning_uri": {
      "_name_": "provisioning_uri",
      "title": "provisioning_uri",
      "type": "string",
      "nullable": true
     },
     "secret_configured": {
      "type": "boolean",
      "_name_": "secret_configured",
      "title": "secret_configured"
     },
     "interval": {
      "type": "integer",
      "_name_": "interval",
      "title": "interval"
     },
     "otp_digits": {
      "type": "integer",
      "_name_": "otp_digits",
      "title": "otp_digits"
     }
    },
    "additionalProperties": false,
    "_name_": "user_twofactor_config",
    "title": "user_twofactor_config",
    "default": {},
    "_attrs_order_": [
     "provisioning_uri",
     "secret_configured",
     "interval",
     "otp_digits"
    ]
   },
   "user_unset_2fa_secret": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "user_verify_twofactor_token_0": {
    "_name_": "username",
    "title": "username",
    "type": "string"
   },
   "user_verify_twofactor_token_1": {
    "_name_": "token",
    "title": "token",
    "type": "string",
    "nullable": true
   },
   "user_verify_twofactor_token": {
    "type": "object",
    "properties": {
     "username": {
      "$ref": "#/components/schemas/user_verify_twofactor_token_0"
     },
     "token": {
      "$ref": "#/components/schemas/user_verify_twofactor_token_1"
     }
    }
   },
   "return_schema_of_user_verify_twofactor_token": {
    "type": "boolean",
    "_name_": "token_verified",
    "title": "token_verified"
   },
   "return_schema_of_vm_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "command_line_args": {
          "_name_": "command_line_args",
          "title": "command_line_args",
          "default": "",
          "_required_": false,
          "type": "string"
         },
         "cpu_mode": {
          "_name_": "cpu_mode",
          "title": "cpu_mode",
          "default": "CUSTOM",
          "_required_": false,
          "type": "string",
          "enum": [
           "CUSTOM",
           "HOST-MODEL",
           "HOST-PASSTHROUGH"
          ]
         },
         "cpu_model": {
          "_name_": "cpu_model",
          "title": "cpu_model",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "name": {
          "_name_": "name",
          "title": "name",
          "_required_": true,
          "type": "string"
         },
         "description": {
          "_name_": "description",
          "title": "description",
          "_required_": false,
          "type": "string"
         },
         "vcpus": {
          "type": "integer",
          "_name_": "vcpus",
          "title": "vcpus",
          "default": 1,
          "_required_": false
         },
         "cores": {
          "type": "integer",
          "_name_": "cores",
          "title": "cores",
          "default": 1,
          "_required_": false
         },
         "threads": {
          "type": "integer",
          "_name_": "threads",
          "title": "threads",
          "default": 1,
          "_required_": false
         },
         "cpuset": {
          "_name_": "cpuset",
          "title": "cpuset",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "nodeset": {
          "_name_": "nodeset",
          "title": "nodeset",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "pin_vcpus": {
          "type": "boolean",
          "_name_": "pin_vcpus",
          "title": "pin_vcpus",
          "default": false,
          "_required_": false
         },
         "suspend_on_snapshot": {
          "type": "boolean",
          "_name_": "suspend_on_snapshot",
          "title": "suspend_on_snapshot",
          "default": false,
          "_required_": false
         },
         "trusted_platform_module": {
          "type": "boolean",
          "_name_": "trusted_platform_module",
          "title": "trusted_platform_module",
          "default": false,
          "_required_": false
         },
         "memory": {
          "type": "integer",
          "_name_": "memory",
          "title": "memory",
          "_required_": true
         },
         "min_memory": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "min_memory",
          "title": "min_memory",
          "default": null,
          "_required_": false
         },
         "hyperv_enlightenments": {
          "type": "boolean",
          "_name_": "hyperv_enlightenments",
          "title": "hyperv_enlightenments",
          "default": false,
          "_required_": false
         },
         "bootloader": {
          "_name_": "bootloader",
          "title": "bootloader",
          "default": "UEFI",
          "_required_": false,
          "type": "string",
          "enum": [
           "UEFI",
           "UEFI_CSM"
          ]
         },
         "bootloader_ovmf": {
          "_name_": "bootloader_ovmf",
          "title": "bootloader_ovmf",
          "default": "OVMF_CODE.fd",
          "_required_": false,
          "type": "string"
         },
         "autostart": {
          "type": "boolean",
          "_name_": "autostart",
          "title": "autostart",
          "default": true,
          "_required_": false
         },
         "hide_from_msr": {
          "type": "boolean",
          "_name_": "hide_from_msr",
          "title": "hide_from_msr",
          "default": false,
          "_required_": false
         },
         "ensure_display_device": {
          "type": "boolean",
          "_name_": "ensure_display_device",
          "title": "ensure_display_device",
          "default": true,
          "_required_": false
         },
         "time": {
          "_name_": "time",
          "title": "time",
          "default": "LOCAL",
          "_required_": false,
          "type": "string",
          "enum": [
           "LOCAL",
           "UTC"
          ]
         },
         "shutdown_timeout": {
          "type": "integer",
          "_name_": "shutdown_timeout",
          "title": "shutdown_timeout",
          "default": 90,
          "_required_": false
         },
         "arch_type": {
          "_name_": "arch_type",
          "title": "arch_type",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "machine_type": {
          "_name_": "machine_type",
          "title": "machine_type",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "uuid": {
          "_name_": "uuid",
          "title": "uuid",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "devices": {
          "_name_": "devices",
          "title": "devices",
          "default": [],
          "_required_": false,
          "type": "array",
          "items": []
         },
         "status": {
          "type": "object",
          "properties": {
           "state": {
            "_name_": "state",
            "title": "state",
            "_required_": true,
            "type": "string"
           },
           "pid": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "pid",
            "title": "pid",
            "_required_": true
           },
           "domain_state": {
            "_name_": "domain_state",
            "title": "domain_state",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "status",
          "title": "status",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "state",
           "pid",
           "domain_state"
          ]
         },
         "display_available": {
          "type": "boolean",
          "_name_": "display_available",
          "title": "display_available",
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "vm_entry",
        "title": "vm_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "command_line_args",
         "cpu_mode",
         "cpu_model",
         "name",
         "description",
         "vcpus",
         "cores",
         "threads",
         "cpuset",
         "nodeset",
         "pin_vcpus",
         "suspend_on_snapshot",
         "trusted_platform_module",
         "memory",
         "min_memory",
         "hyperv_enlightenments",
         "bootloader",
         "bootloader_ovmf",
         "autostart",
         "hide_from_msr",
         "ensure_display_device",
         "time",
         "shutdown_timeout",
         "arch_type",
         "machine_type",
         "uuid",
         "devices",
         "status",
         "display_available",
         "id"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "command_line_args": {
        "_name_": "command_line_args",
        "title": "command_line_args",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "cpu_mode": {
        "_name_": "cpu_mode",
        "title": "cpu_mode",
        "default": "CUSTOM",
        "_required_": false,
        "type": "string",
        "enum": [
         "CUSTOM",
         "HOST-MODEL",
         "HOST-PASSTHROUGH"
        ]
       },
       "cpu_model": {
        "_name_": "cpu_model",
        "title": "cpu_model",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": "string"
       },
       "vcpus": {
        "type": "integer",
        "_name_": "vcpus",
        "title": "vcpus",
        "default": 1,
        "_required_": false
       },
       "cores": {
        "type": "integer",
        "_name_": "cores",
        "title": "cores",
        "default": 1,
        "_required_": false
       },
       "threads": {
        "type": "integer",
        "_name_": "threads",
        "title": "threads",
        "default": 1,
        "_required_": false
       },
       "cpuset": {
        "_name_": "cpuset",
        "title": "cpuset",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "nodeset": {
        "_name_": "nodeset",
        "title": "nodeset",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "pin_vcpus": {
        "type": "boolean",
        "_name_": "pin_vcpus",
        "title": "pin_vcpus",
        "default": false,
        "_required_": false
       },
       "suspend_on_snapshot": {
        "type": "boolean",
        "_name_": "suspend_on_snapshot",
        "title": "suspend_on_snapshot",
        "default": false,
        "_required_": false
       },
       "trusted_platform_module": {
        "type": "boolean",
        "_name_": "trusted_platform_module",
        "title": "trusted_platform_module",
        "default": false,
        "_required_": false
       },
       "memory": {
        "type": "integer",
        "_name_": "memory",
        "title": "memory",
        "_required_": true
       },
       "min_memory": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "min_memory",
        "title": "min_memory",
        "default": null,
        "_required_": false
       },
       "hyperv_enlightenments": {
        "type": "boolean",
        "_name_": "hyperv_enlightenments",
        "title": "hyperv_enlightenments",
        "default": false,
        "_required_": false
       },
       "bootloader": {
        "_name_": "bootloader",
        "title": "bootloader",
        "default": "UEFI",
        "_required_": false,
        "type": "string",
        "enum": [
         "UEFI",
         "UEFI_CSM"
        ]
       },
       "bootloader_ovmf": {
        "_name_": "bootloader_ovmf",
        "title": "bootloader_ovmf",
        "default": "OVMF_CODE.fd",
        "_required_": false,
        "type": "string"
       },
       "autostart": {
        "type": "boolean",
        "_name_": "autostart",
        "title": "autostart",
        "default": true,
        "_required_": false
       },
       "hide_from_msr": {
        "type": "boolean",
        "_name_": "hide_from_msr",
        "title": "hide_from_msr",
        "default": false,
        "_required_": false
       },
       "ensure_display_device": {
        "type": "boolean",
        "_name_": "ensure_display_device",
        "title": "ensure_display_device",
        "default": true,
        "_required_": false
       },
       "time": {
        "_name_": "time",
        "title": "time",
        "default": "LOCAL",
        "_required_": false,
        "type": "string",
        "enum": [
         "LOCAL",
         "UTC"
        ]
       },
       "shutdown_timeout": {
        "type": "integer",
        "_name_": "shutdown_timeout",
        "title": "shutdown_timeout",
        "default": 90,
        "_required_": false
       },
       "arch_type": {
        "_name_": "arch_type",
        "title": "arch_type",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "machine_type": {
        "_name_": "machine_type",
        "title": "machine_type",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "uuid": {
        "_name_": "uuid",
        "title": "uuid",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "devices": {
        "_name_": "devices",
        "title": "devices",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "status": {
        "type": "object",
        "properties": {
         "state": {
          "_name_": "state",
          "title": "state",
          "_required_": true,
          "type": "string"
         },
         "pid": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "pid",
          "title": "pid",
          "_required_": true
         },
         "domain_state": {
          "_name_": "domain_state",
          "title": "domain_state",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "status",
        "title": "status",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "state",
         "pid",
         "domain_state"
        ]
       },
       "display_available": {
        "type": "boolean",
        "_name_": "display_available",
        "title": "display_available",
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "vm_entry",
      "title": "vm_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "command_line_args",
       "cpu_mode",
       "cpu_model",
       "name",
       "description",
       "vcpus",
       "cores",
       "threads",
       "cpuset",
       "nodeset",
       "pin_vcpus",
       "suspend_on_snapshot",
       "trusted_platform_module",
       "memory",
       "min_memory",
       "hyperv_enlightenments",
       "bootloader",
       "bootloader_ovmf",
       "autostart",
       "hide_from_msr",
       "ensure_display_device",
       "time",
       "shutdown_timeout",
       "arch_type",
       "machine_type",
       "uuid",
       "devices",
       "status",
       "display_available",
       "id"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "command_line_args": {
        "_name_": "command_line_args",
        "title": "command_line_args",
        "default": "",
        "_required_": false,
        "type": "string"
       },
       "cpu_mode": {
        "_name_": "cpu_mode",
        "title": "cpu_mode",
        "default": "CUSTOM",
        "_required_": false,
        "type": "string",
        "enum": [
         "CUSTOM",
         "HOST-MODEL",
         "HOST-PASSTHROUGH"
        ]
       },
       "cpu_model": {
        "_name_": "cpu_model",
        "title": "cpu_model",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "name": {
        "_name_": "name",
        "title": "name",
        "_required_": true,
        "type": "string"
       },
       "description": {
        "_name_": "description",
        "title": "description",
        "_required_": false,
        "type": "string"
       },
       "vcpus": {
        "type": "integer",
        "_name_": "vcpus",
        "title": "vcpus",
        "default": 1,
        "_required_": false
       },
       "cores": {
        "type": "integer",
        "_name_": "cores",
        "title": "cores",
        "default": 1,
        "_required_": false
       },
       "threads": {
        "type": "integer",
        "_name_": "threads",
        "title": "threads",
        "default": 1,
        "_required_": false
       },
       "cpuset": {
        "_name_": "cpuset",
        "title": "cpuset",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "nodeset": {
        "_name_": "nodeset",
        "title": "nodeset",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "pin_vcpus": {
        "type": "boolean",
        "_name_": "pin_vcpus",
        "title": "pin_vcpus",
        "default": false,
        "_required_": false
       },
       "suspend_on_snapshot": {
        "type": "boolean",
        "_name_": "suspend_on_snapshot",
        "title": "suspend_on_snapshot",
        "default": false,
        "_required_": false
       },
       "trusted_platform_module": {
        "type": "boolean",
        "_name_": "trusted_platform_module",
        "title": "trusted_platform_module",
        "default": false,
        "_required_": false
       },
       "memory": {
        "type": "integer",
        "_name_": "memory",
        "title": "memory",
        "_required_": true
       },
       "min_memory": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "min_memory",
        "title": "min_memory",
        "default": null,
        "_required_": false
       },
       "hyperv_enlightenments": {
        "type": "boolean",
        "_name_": "hyperv_enlightenments",
        "title": "hyperv_enlightenments",
        "default": false,
        "_required_": false
       },
       "bootloader": {
        "_name_": "bootloader",
        "title": "bootloader",
        "default": "UEFI",
        "_required_": false,
        "type": "string",
        "enum": [
         "UEFI",
         "UEFI_CSM"
        ]
       },
       "bootloader_ovmf": {
        "_name_": "bootloader_ovmf",
        "title": "bootloader_ovmf",
        "default": "OVMF_CODE.fd",
        "_required_": false,
        "type": "string"
       },
       "autostart": {
        "type": "boolean",
        "_name_": "autostart",
        "title": "autostart",
        "default": true,
        "_required_": false
       },
       "hide_from_msr": {
        "type": "boolean",
        "_name_": "hide_from_msr",
        "title": "hide_from_msr",
        "default": false,
        "_required_": false
       },
       "ensure_display_device": {
        "type": "boolean",
        "_name_": "ensure_display_device",
        "title": "ensure_display_device",
        "default": true,
        "_required_": false
       },
       "time": {
        "_name_": "time",
        "title": "time",
        "default": "LOCAL",
        "_required_": false,
        "type": "string",
        "enum": [
         "LOCAL",
         "UTC"
        ]
       },
       "shutdown_timeout": {
        "type": "integer",
        "_name_": "shutdown_timeout",
        "title": "shutdown_timeout",
        "default": 90,
        "_required_": false
       },
       "arch_type": {
        "_name_": "arch_type",
        "title": "arch_type",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "machine_type": {
        "_name_": "machine_type",
        "title": "machine_type",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "uuid": {
        "_name_": "uuid",
        "title": "uuid",
        "default": null,
        "_required_": false,
        "type": [
         "string",
         "null"
        ]
       },
       "devices": {
        "_name_": "devices",
        "title": "devices",
        "default": [],
        "_required_": false,
        "type": "array",
        "items": []
       },
       "status": {
        "type": "object",
        "properties": {
         "state": {
          "_name_": "state",
          "title": "state",
          "_required_": true,
          "type": "string"
         },
         "pid": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "pid",
          "title": "pid",
          "_required_": true
         },
         "domain_state": {
          "_name_": "domain_state",
          "title": "domain_state",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "status",
        "title": "status",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "state",
         "pid",
         "domain_state"
        ]
       },
       "display_available": {
        "type": "boolean",
        "_name_": "display_available",
        "title": "display_available",
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "vm_entry",
      "title": "vm_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "command_line_args",
       "cpu_mode",
       "cpu_model",
       "name",
       "description",
       "vcpus",
       "cores",
       "threads",
       "cpuset",
       "nodeset",
       "pin_vcpus",
       "suspend_on_snapshot",
       "trusted_platform_module",
       "memory",
       "min_memory",
       "hyperv_enlightenments",
       "bootloader",
       "bootloader_ovmf",
       "autostart",
       "hide_from_msr",
       "ensure_display_device",
       "time",
       "shutdown_timeout",
       "arch_type",
       "machine_type",
       "uuid",
       "devices",
       "status",
       "display_available",
       "id"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "vm_create": {
    "type": "object",
    "properties": {
     "command_line_args": {
      "_name_": "command_line_args",
      "title": "command_line_args",
      "default": "",
      "type": "string"
     },
     "cpu_mode": {
      "_name_": "cpu_mode",
      "title": "cpu_mode",
      "default": "CUSTOM",
      "type": "string",
      "enum": [
       "CUSTOM",
       "HOST-MODEL",
       "HOST-PASSTHROUGH"
      ]
     },
     "cpu_model": {
      "_name_": "cpu_model",
      "title": "cpu_model",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "vcpus": {
      "type": "integer",
      "_name_": "vcpus",
      "title": "vcpus",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cores": {
      "type": "integer",
      "_name_": "cores",
      "title": "cores",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "threads": {
      "type": "integer",
      "_name_": "threads",
      "title": "threads",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cpuset": {
      "_name_": "cpuset",
      "title": "cpuset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "nodeset": {
      "_name_": "nodeset",
      "title": "nodeset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "pin_vcpus": {
      "type": "boolean",
      "_name_": "pin_vcpus",
      "title": "pin_vcpus",
      "default": false
     },
     "suspend_on_snapshot": {
      "type": "boolean",
      "_name_": "suspend_on_snapshot",
      "title": "suspend_on_snapshot",
      "default": false
     },
     "trusted_platform_module": {
      "type": "boolean",
      "_name_": "trusted_platform_module",
      "title": "trusted_platform_module",
      "default": false
     },
     "memory": {
      "type": "integer",
      "_name_": "memory",
      "title": "memory"
     },
     "min_memory": {
      "type": "integer",
      "_name_": "min_memory",
      "title": "min_memory",
      "default": null,
      "nullable": true
     },
     "hyperv_enlightenments": {
      "type": "boolean",
      "_name_": "hyperv_enlightenments",
      "title": "hyperv_enlightenments",
      "default": false,
      "description": "`hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.\nThese enlightenments improve performance and enable otherwise missing features."
     },
     "bootloader": {
      "_name_": "bootloader",
      "title": "bootloader",
      "default": "UEFI",
      "type": "string",
      "enum": [
       "UEFI",
       "UEFI_CSM"
      ]
     },
     "bootloader_ovmf": {
      "_name_": "bootloader_ovmf",
      "title": "bootloader_ovmf",
      "default": "OVMF_CODE.fd",
      "type": "string"
     },
     "autostart": {
      "type": "boolean",
      "_name_": "autostart",
      "title": "autostart",
      "default": true
     },
     "hide_from_msr": {
      "type": "boolean",
      "_name_": "hide_from_msr",
      "title": "hide_from_msr",
      "default": false,
      "description": "`hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and\nis useful to enable when doing GPU passthrough."
     },
     "ensure_display_device": {
      "type": "boolean",
      "_name_": "ensure_display_device",
      "title": "ensure_display_device",
      "default": true,
      "description": "`ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.\nFor headless installations like ubuntu server this is required for the guest to operate properly. However\nfor cases where consumer would like to use GPU passthrough and does not want a display device added should set\nthis to `false`."
     },
     "time": {
      "_name_": "time",
      "title": "time",
      "default": "LOCAL",
      "type": "string",
      "enum": [
       "LOCAL",
       "UTC"
      ]
     },
     "shutdown_timeout": {
      "type": "integer",
      "_name_": "shutdown_timeout",
      "title": "shutdown_timeout",
      "default": 90,
      "description": "`shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system\nshutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within\n`shutdown_timeout` seconds, system initiates poweroff for the VM to stop it."
     },
     "arch_type": {
      "_name_": "arch_type",
      "title": "arch_type",
      "default": null,
      "type": "string",
      "description": "`arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and\nsystem in this case will choose a reasonable default based on host.\n`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "machine_type": {
      "_name_": "machine_type",
      "title": "machine_type",
      "default": null,
      "type": "string",
      "description": "`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "default": null,
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "vm_create",
    "title": "vm_create",
    "default": {},
    "_attrs_order_": [
     "command_line_args",
     "cpu_mode",
     "cpu_model",
     "name",
     "description",
     "vcpus",
     "cores",
     "threads",
     "cpuset",
     "nodeset",
     "pin_vcpus",
     "suspend_on_snapshot",
     "trusted_platform_module",
     "memory",
     "min_memory",
     "hyperv_enlightenments",
     "bootloader",
     "bootloader_ovmf",
     "autostart",
     "hide_from_msr",
     "ensure_display_device",
     "time",
     "shutdown_timeout",
     "arch_type",
     "machine_type",
     "uuid"
    ]
   },
   "return_schema_of_vm_create": {
    "type": "object",
    "properties": {
     "command_line_args": {
      "_name_": "command_line_args",
      "title": "command_line_args",
      "default": "",
      "type": "string"
     },
     "cpu_mode": {
      "_name_": "cpu_mode",
      "title": "cpu_mode",
      "default": "CUSTOM",
      "type": "string",
      "enum": [
       "CUSTOM",
       "HOST-MODEL",
       "HOST-PASSTHROUGH"
      ]
     },
     "cpu_model": {
      "_name_": "cpu_model",
      "title": "cpu_model",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "vcpus": {
      "type": "integer",
      "_name_": "vcpus",
      "title": "vcpus",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cores": {
      "type": "integer",
      "_name_": "cores",
      "title": "cores",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "threads": {
      "type": "integer",
      "_name_": "threads",
      "title": "threads",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cpuset": {
      "_name_": "cpuset",
      "title": "cpuset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "nodeset": {
      "_name_": "nodeset",
      "title": "nodeset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "pin_vcpus": {
      "type": "boolean",
      "_name_": "pin_vcpus",
      "title": "pin_vcpus",
      "default": false
     },
     "suspend_on_snapshot": {
      "type": "boolean",
      "_name_": "suspend_on_snapshot",
      "title": "suspend_on_snapshot",
      "default": false
     },
     "trusted_platform_module": {
      "type": "boolean",
      "_name_": "trusted_platform_module",
      "title": "trusted_platform_module",
      "default": false
     },
     "memory": {
      "type": "integer",
      "_name_": "memory",
      "title": "memory"
     },
     "min_memory": {
      "type": "integer",
      "_name_": "min_memory",
      "title": "min_memory",
      "default": null,
      "nullable": true
     },
     "hyperv_enlightenments": {
      "type": "boolean",
      "_name_": "hyperv_enlightenments",
      "title": "hyperv_enlightenments",
      "default": false,
      "description": "`hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.\nThese enlightenments improve performance and enable otherwise missing features."
     },
     "bootloader": {
      "_name_": "bootloader",
      "title": "bootloader",
      "default": "UEFI",
      "type": "string",
      "enum": [
       "UEFI",
       "UEFI_CSM"
      ]
     },
     "bootloader_ovmf": {
      "_name_": "bootloader_ovmf",
      "title": "bootloader_ovmf",
      "default": "OVMF_CODE.fd",
      "type": "string"
     },
     "autostart": {
      "type": "boolean",
      "_name_": "autostart",
      "title": "autostart",
      "default": true
     },
     "hide_from_msr": {
      "type": "boolean",
      "_name_": "hide_from_msr",
      "title": "hide_from_msr",
      "default": false,
      "description": "`hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and\nis useful to enable when doing GPU passthrough."
     },
     "ensure_display_device": {
      "type": "boolean",
      "_name_": "ensure_display_device",
      "title": "ensure_display_device",
      "default": true,
      "description": "`ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.\nFor headless installations like ubuntu server this is required for the guest to operate properly. However\nfor cases where consumer would like to use GPU passthrough and does not want a display device added should set\nthis to `false`."
     },
     "time": {
      "_name_": "time",
      "title": "time",
      "default": "LOCAL",
      "type": "string",
      "enum": [
       "LOCAL",
       "UTC"
      ]
     },
     "shutdown_timeout": {
      "type": "integer",
      "_name_": "shutdown_timeout",
      "title": "shutdown_timeout",
      "default": 90,
      "description": "`shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system\nshutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within\n`shutdown_timeout` seconds, system initiates poweroff for the VM to stop it."
     },
     "arch_type": {
      "_name_": "arch_type",
      "title": "arch_type",
      "default": null,
      "type": "string",
      "description": "`arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and\nsystem in this case will choose a reasonable default based on host.\n`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "machine_type": {
      "_name_": "machine_type",
      "title": "machine_type",
      "default": null,
      "type": "string",
      "description": "`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "devices": {
      "_name_": "devices",
      "title": "devices",
      "default": [],
      "type": "array",
      "items": {}
     },
     "status": {
      "type": "object",
      "properties": {
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string"
       },
       "pid": {
        "type": "integer",
        "_name_": "pid",
        "title": "pid",
        "nullable": true
       },
       "domain_state": {
        "_name_": "domain_state",
        "title": "domain_state",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "status",
      "title": "status",
      "default": {},
      "_attrs_order_": [
       "state",
       "pid",
       "domain_state"
      ]
     },
     "display_available": {
      "type": "boolean",
      "_name_": "display_available",
      "title": "display_available"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     }
    },
    "additionalProperties": false,
    "_name_": "vm_create_returns",
    "title": "vm_create_returns",
    "default": {},
    "_attrs_order_": [
     "command_line_args",
     "cpu_mode",
     "cpu_model",
     "name",
     "description",
     "vcpus",
     "cores",
     "threads",
     "cpuset",
     "nodeset",
     "pin_vcpus",
     "suspend_on_snapshot",
     "trusted_platform_module",
     "memory",
     "min_memory",
     "hyperv_enlightenments",
     "bootloader",
     "bootloader_ovmf",
     "autostart",
     "hide_from_msr",
     "ensure_display_device",
     "time",
     "shutdown_timeout",
     "arch_type",
     "machine_type",
     "uuid",
     "devices",
     "status",
     "display_available",
     "id"
    ]
   },
   "vm_delete": {
    "type": "object",
    "properties": {
     "zvols": {
      "type": "boolean",
      "_name_": "zvols",
      "title": "zvols",
      "default": false
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "vm_delete",
    "title": "vm_delete",
    "default": {},
    "_attrs_order_": [
     "zvols",
     "force"
    ]
   },
   "return_schema_of_vm_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "vm_update": {
    "type": "object",
    "properties": {
     "command_line_args": {
      "_name_": "command_line_args",
      "title": "command_line_args",
      "default": "",
      "type": "string"
     },
     "cpu_mode": {
      "_name_": "cpu_mode",
      "title": "cpu_mode",
      "default": "CUSTOM",
      "type": "string",
      "enum": [
       "CUSTOM",
       "HOST-MODEL",
       "HOST-PASSTHROUGH"
      ]
     },
     "cpu_model": {
      "_name_": "cpu_model",
      "title": "cpu_model",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "vcpus": {
      "type": "integer",
      "_name_": "vcpus",
      "title": "vcpus",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cores": {
      "type": "integer",
      "_name_": "cores",
      "title": "cores",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "threads": {
      "type": "integer",
      "_name_": "threads",
      "title": "threads",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cpuset": {
      "_name_": "cpuset",
      "title": "cpuset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "nodeset": {
      "_name_": "nodeset",
      "title": "nodeset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "pin_vcpus": {
      "type": "boolean",
      "_name_": "pin_vcpus",
      "title": "pin_vcpus",
      "default": false
     },
     "suspend_on_snapshot": {
      "type": "boolean",
      "_name_": "suspend_on_snapshot",
      "title": "suspend_on_snapshot",
      "default": false
     },
     "trusted_platform_module": {
      "type": "boolean",
      "_name_": "trusted_platform_module",
      "title": "trusted_platform_module",
      "default": false
     },
     "memory": {
      "type": "integer",
      "_name_": "memory",
      "title": "memory"
     },
     "min_memory": {
      "type": "integer",
      "_name_": "min_memory",
      "title": "min_memory",
      "default": null,
      "nullable": true
     },
     "hyperv_enlightenments": {
      "type": "boolean",
      "_name_": "hyperv_enlightenments",
      "title": "hyperv_enlightenments",
      "default": false,
      "description": "`hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.\nThese enlightenments improve performance and enable otherwise missing features."
     },
     "bootloader": {
      "_name_": "bootloader",
      "title": "bootloader",
      "default": "UEFI",
      "type": "string",
      "enum": [
       "UEFI",
       "UEFI_CSM"
      ]
     },
     "bootloader_ovmf": {
      "_name_": "bootloader_ovmf",
      "title": "bootloader_ovmf",
      "default": "OVMF_CODE.fd",
      "type": "string"
     },
     "autostart": {
      "type": "boolean",
      "_name_": "autostart",
      "title": "autostart",
      "default": true
     },
     "hide_from_msr": {
      "type": "boolean",
      "_name_": "hide_from_msr",
      "title": "hide_from_msr",
      "default": false,
      "description": "`hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and\nis useful to enable when doing GPU passthrough."
     },
     "ensure_display_device": {
      "type": "boolean",
      "_name_": "ensure_display_device",
      "title": "ensure_display_device",
      "default": true,
      "description": "`ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.\nFor headless installations like ubuntu server this is required for the guest to operate properly. However\nfor cases where consumer would like to use GPU passthrough and does not want a display device added should set\nthis to `false`."
     },
     "time": {
      "_name_": "time",
      "title": "time",
      "default": "LOCAL",
      "type": "string",
      "enum": [
       "LOCAL",
       "UTC"
      ]
     },
     "shutdown_timeout": {
      "type": "integer",
      "_name_": "shutdown_timeout",
      "title": "shutdown_timeout",
      "default": 90,
      "description": "`shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system\nshutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within\n`shutdown_timeout` seconds, system initiates poweroff for the VM to stop it."
     },
     "arch_type": {
      "_name_": "arch_type",
      "title": "arch_type",
      "default": null,
      "type": "string",
      "description": "`arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and\nsystem in this case will choose a reasonable default based on host.\n`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "machine_type": {
      "_name_": "machine_type",
      "title": "machine_type",
      "default": null,
      "type": "string",
      "description": "`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "1) If there is no device in the `devices` list which was previously attached to the VM, that device is\n   removed from the virtual machine.\n2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to\n   an existing device.\n3) Devices that do not have an `id` attribute are created and attached to `id` VM.\nCreate a Virtual Machine (VM)."
     }
    },
    "additionalProperties": false,
    "_name_": "vm_update",
    "title": "vm_update",
    "default": {},
    "_attrs_order_": [
     "command_line_args",
     "cpu_mode",
     "cpu_model",
     "name",
     "description",
     "vcpus",
     "cores",
     "threads",
     "cpuset",
     "nodeset",
     "pin_vcpus",
     "suspend_on_snapshot",
     "trusted_platform_module",
     "memory",
     "min_memory",
     "hyperv_enlightenments",
     "bootloader",
     "bootloader_ovmf",
     "autostart",
     "hide_from_msr",
     "ensure_display_device",
     "time",
     "shutdown_timeout",
     "arch_type",
     "machine_type",
     "uuid",
     "id"
    ]
   },
   "return_schema_of_vm_update": {
    "type": "object",
    "properties": {
     "command_line_args": {
      "_name_": "command_line_args",
      "title": "command_line_args",
      "default": "",
      "type": "string"
     },
     "cpu_mode": {
      "_name_": "cpu_mode",
      "title": "cpu_mode",
      "default": "CUSTOM",
      "type": "string",
      "enum": [
       "CUSTOM",
       "HOST-MODEL",
       "HOST-PASSTHROUGH"
      ]
     },
     "cpu_model": {
      "_name_": "cpu_model",
      "title": "cpu_model",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "vcpus": {
      "type": "integer",
      "_name_": "vcpus",
      "title": "vcpus",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cores": {
      "type": "integer",
      "_name_": "cores",
      "title": "cores",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "threads": {
      "type": "integer",
      "_name_": "threads",
      "title": "threads",
      "default": 1,
      "description": "Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a\nseparate package. Multiple cores can be configured per CPU by specifying `cores` attributes.\n`vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`\nspecifies number of threads per core."
     },
     "cpuset": {
      "_name_": "cpuset",
      "title": "cpuset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "nodeset": {
      "_name_": "nodeset",
      "title": "nodeset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "pin_vcpus": {
      "type": "boolean",
      "_name_": "pin_vcpus",
      "title": "pin_vcpus",
      "default": false
     },
     "suspend_on_snapshot": {
      "type": "boolean",
      "_name_": "suspend_on_snapshot",
      "title": "suspend_on_snapshot",
      "default": false
     },
     "trusted_platform_module": {
      "type": "boolean",
      "_name_": "trusted_platform_module",
      "title": "trusted_platform_module",
      "default": false
     },
     "memory": {
      "type": "integer",
      "_name_": "memory",
      "title": "memory"
     },
     "min_memory": {
      "type": "integer",
      "_name_": "min_memory",
      "title": "min_memory",
      "default": null,
      "nullable": true
     },
     "hyperv_enlightenments": {
      "type": "boolean",
      "_name_": "hyperv_enlightenments",
      "title": "hyperv_enlightenments",
      "default": false,
      "description": "`hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.\nThese enlightenments improve performance and enable otherwise missing features."
     },
     "bootloader": {
      "_name_": "bootloader",
      "title": "bootloader",
      "default": "UEFI",
      "type": "string",
      "enum": [
       "UEFI",
       "UEFI_CSM"
      ]
     },
     "bootloader_ovmf": {
      "_name_": "bootloader_ovmf",
      "title": "bootloader_ovmf",
      "default": "OVMF_CODE.fd",
      "type": "string"
     },
     "autostart": {
      "type": "boolean",
      "_name_": "autostart",
      "title": "autostart",
      "default": true
     },
     "hide_from_msr": {
      "type": "boolean",
      "_name_": "hide_from_msr",
      "title": "hide_from_msr",
      "default": false,
      "description": "`hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and\nis useful to enable when doing GPU passthrough."
     },
     "ensure_display_device": {
      "type": "boolean",
      "_name_": "ensure_display_device",
      "title": "ensure_display_device",
      "default": true,
      "description": "`ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.\nFor headless installations like ubuntu server this is required for the guest to operate properly. However\nfor cases where consumer would like to use GPU passthrough and does not want a display device added should set\nthis to `false`."
     },
     "time": {
      "_name_": "time",
      "title": "time",
      "default": "LOCAL",
      "type": "string",
      "enum": [
       "LOCAL",
       "UTC"
      ]
     },
     "shutdown_timeout": {
      "type": "integer",
      "_name_": "shutdown_timeout",
      "title": "shutdown_timeout",
      "default": 90,
      "description": "`shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system\nshutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within\n`shutdown_timeout` seconds, system initiates poweroff for the VM to stop it."
     },
     "arch_type": {
      "_name_": "arch_type",
      "title": "arch_type",
      "default": null,
      "type": "string",
      "description": "`arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and\nsystem in this case will choose a reasonable default based on host.\n`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "machine_type": {
      "_name_": "machine_type",
      "title": "machine_type",
      "default": null,
      "type": "string",
      "description": "`machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.\nBy default the value is `null` and system in this case will choose a reasonable default based on `arch_type`\nconfiguration.",
      "nullable": true
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "devices": {
      "_name_": "devices",
      "title": "devices",
      "default": [],
      "type": "array",
      "items": {},
      "description": "`devices` is a list of virtualized hardware to attach to the virtual machine. If `devices` is not present,\nno change is made to devices. If either the device list order or data stored by the device changes when the\nattribute is passed, these actions are taken:\n1) If there is no device in the `devices` list which was previously attached to the VM, that device is\n   removed from the virtual machine.\n2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to\n   an existing device.\n3) Devices that do not have an `id` attribute are created and attached to `id` VM.\nCreate a Virtual Machine (VM)."
     },
     "status": {
      "type": "object",
      "properties": {
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string"
       },
       "pid": {
        "type": "integer",
        "_name_": "pid",
        "title": "pid",
        "nullable": true
       },
       "domain_state": {
        "_name_": "domain_state",
        "title": "domain_state",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "status",
      "title": "status",
      "default": {},
      "_attrs_order_": [
       "state",
       "pid",
       "domain_state"
      ]
     },
     "display_available": {
      "type": "boolean",
      "_name_": "display_available",
      "title": "display_available"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "1) If there is no device in the `devices` list which was previously attached to the VM, that device is\n   removed from the virtual machine.\n2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to\n   an existing device.\n3) Devices that do not have an `id` attribute are created and attached to `id` VM.\nCreate a Virtual Machine (VM)."
     }
    },
    "additionalProperties": false,
    "_name_": "vm_update_returns",
    "title": "vm_update_returns",
    "default": {},
    "_attrs_order_": [
     "command_line_args",
     "cpu_mode",
     "cpu_model",
     "name",
     "description",
     "vcpus",
     "cores",
     "threads",
     "cpuset",
     "nodeset",
     "pin_vcpus",
     "suspend_on_snapshot",
     "trusted_platform_module",
     "memory",
     "min_memory",
     "hyperv_enlightenments",
     "bootloader",
     "bootloader_ovmf",
     "autostart",
     "hide_from_msr",
     "ensure_display_device",
     "time",
     "shutdown_timeout",
     "arch_type",
     "machine_type",
     "uuid",
     "devices",
     "status",
     "display_available",
     "id"
    ]
   },
   "return_schema_of_vm_bootloader_options": {
    "type": "object",
    "properties": {
     "UEFI": {
      "_name_": "UEFI",
      "title": "UEFI",
      "type": "string",
      "enum": [
       "UEFI"
      ]
     },
     "UEFI_CSM": {
      "_name_": "UEFI_CSM",
      "title": "UEFI_CSM",
      "type": "string",
      "enum": [
       "Legacy BIOS"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "bootloader_options",
    "title": "bootloader_options",
    "default": {},
    "_attrs_order_": [
     "UEFI",
     "UEFI_CSM"
    ]
   },
   "return_schema_of_vm_bootloader_ovmf_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "bootloader_ovmf_choices",
    "title": "bootloader_ovmf_choices",
    "default": {},
    "_attrs_order_": []
   },
   "vm_clone": {
    "_name_": "name",
    "title": "name",
    "default": null,
    "type": "string"
   },
   "return_schema_of_vm_clone": {
    "type": "boolean",
    "_name_": "clone",
    "title": "clone"
   },
   "return_schema_of_vm_cpu_model_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "cpu_model_choices",
    "title": "cpu_model_choices",
    "description": "\n\nExample(s):\n```\n{\n    \"486\": \"486\",\n    \"pentium\": \"pentium\"\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_vm_flags": {
    "type": "object",
    "properties": {
     "intel_vmx": {
      "type": "boolean",
      "_name_": "intel_vmx",
      "title": "intel_vmx"
     },
     "unrestricted_guest": {
      "type": "boolean",
      "_name_": "unrestricted_guest",
      "title": "unrestricted_guest"
     },
     "amd_rvi": {
      "type": "boolean",
      "_name_": "amd_rvi",
      "title": "amd_rvi"
     },
     "amd_asids": {
      "type": "boolean",
      "_name_": "amd_asids",
      "title": "amd_asids"
     }
    },
    "additionalProperties": false,
    "_name_": "cpu_flags",
    "title": "cpu_flags",
    "default": {},
    "_attrs_order_": [
     "intel_vmx",
     "unrestricted_guest",
     "amd_rvi",
     "amd_asids"
    ]
   },
   "vm_get_available_memory": {
    "type": "boolean",
    "_name_": "overcommit",
    "title": "overcommit",
    "default": false,
    "description": "In case of `overcommit` being `true`, calculations are done in the following manner:\n1. If a VM has requested 10G but is only consuming 5G, only 5G will be counted\n2. System will consider shrinkable ZFS ARC as free memory ( shrinkable ZFS ARC is current ZFS ARC\n   minus ZFS ARC minimum )\nIn case of `overcommit` being `false`, calculations are done in the following manner:\n1. Complete VM requested memory will be taken into account regardless of how much actual physical\n   memory the VM is consuming\n2. System will not consider shrinkable ZFS ARC as free memory"
   },
   "return_schema_of_vm_get_available_memory": {
    "type": "integer",
    "_name_": "available_memory",
    "title": "available_memory"
   },
   "vm_get_console": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "return_schema_of_vm_get_console": {
    "_name_": "console_device",
    "title": "console_device",
    "type": "string"
   },
   "vm_get_display_devices": {
    "type": "integer",
    "_name_": "id",
    "title": "id"
   },
   "return_schema_of_vm_get_display_devices": {
    "_name_": "vmdevice",
    "title": "vmdevice",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "id": {
       "type": "integer",
       "_name_": "id",
       "title": "id",
       "_required_": false
      },
      "dtype": {
       "_name_": "dtype",
       "title": "dtype",
       "_required_": false,
       "type": "string"
      },
      "attributes": {
       "type": "object",
       "properties": {
        "resolution": {
         "_name_": "resolution",
         "title": "resolution",
         "default": "1024x768",
         "_required_": false,
         "type": "string",
         "enum": [
          "1920x1200",
          "1920x1080",
          "1600x1200",
          "1600x900",
          "1400x1050",
          "1280x1024",
          "1280x720",
          "1024x768",
          "800x600",
          "640x480"
         ]
        },
        "port": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "port",
         "title": "port",
         "default": null,
         "_required_": false
        },
        "web_port": {
         "type": [
          "integer",
          "null"
         ],
         "_name_": "web_port",
         "title": "web_port",
         "default": null,
         "_required_": false
        },
        "bind": {
         "_name_": "bind",
         "title": "bind",
         "default": "127.0.0.1",
         "_required_": false,
         "type": "string"
        },
        "wait": {
         "type": "boolean",
         "_name_": "wait",
         "title": "wait",
         "default": false,
         "_required_": false
        },
        "password": {
         "_name_": "password",
         "title": "password",
         "_required_": true,
         "type": "string"
        },
        "web": {
         "type": "boolean",
         "_name_": "web",
         "title": "web",
         "default": true,
         "_required_": false
        },
        "type": {
         "_name_": "type",
         "title": "type",
         "default": "SPICE",
         "_required_": false,
         "type": "string",
         "enum": [
          "SPICE"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "attributes",
       "title": "attributes",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "resolution",
        "port",
        "web_port",
        "bind",
        "wait",
        "password",
        "web",
        "type"
       ]
      },
      "order": {
       "type": "integer",
       "_name_": "order",
       "title": "order",
       "_required_": false
      },
      "vm": {
       "type": "integer",
       "_name_": "vm",
       "title": "vm",
       "_required_": false
      }
     },
     "additionalProperties": false,
     "_name_": "vmdevice",
     "title": "vmdevice",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "id",
      "dtype",
      "attributes",
      "order",
      "vm"
     ]
    }
   },
   "vm_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "vm_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "vm_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/vm_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/vm_get_instance_1"
     }
    }
   },
   "return_schema_of_vm_get_instance": {
    "type": "object",
    "properties": {
     "command_line_args": {
      "_name_": "command_line_args",
      "title": "command_line_args",
      "default": "",
      "type": "string"
     },
     "cpu_mode": {
      "_name_": "cpu_mode",
      "title": "cpu_mode",
      "default": "CUSTOM",
      "type": "string",
      "enum": [
       "CUSTOM",
       "HOST-MODEL",
       "HOST-PASSTHROUGH"
      ]
     },
     "cpu_model": {
      "_name_": "cpu_model",
      "title": "cpu_model",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     },
     "vcpus": {
      "type": "integer",
      "_name_": "vcpus",
      "title": "vcpus",
      "default": 1
     },
     "cores": {
      "type": "integer",
      "_name_": "cores",
      "title": "cores",
      "default": 1
     },
     "threads": {
      "type": "integer",
      "_name_": "threads",
      "title": "threads",
      "default": 1
     },
     "cpuset": {
      "_name_": "cpuset",
      "title": "cpuset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "nodeset": {
      "_name_": "nodeset",
      "title": "nodeset",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "pin_vcpus": {
      "type": "boolean",
      "_name_": "pin_vcpus",
      "title": "pin_vcpus",
      "default": false
     },
     "suspend_on_snapshot": {
      "type": "boolean",
      "_name_": "suspend_on_snapshot",
      "title": "suspend_on_snapshot",
      "default": false
     },
     "trusted_platform_module": {
      "type": "boolean",
      "_name_": "trusted_platform_module",
      "title": "trusted_platform_module",
      "default": false
     },
     "memory": {
      "type": "integer",
      "_name_": "memory",
      "title": "memory"
     },
     "min_memory": {
      "type": "integer",
      "_name_": "min_memory",
      "title": "min_memory",
      "default": null,
      "nullable": true
     },
     "hyperv_enlightenments": {
      "type": "boolean",
      "_name_": "hyperv_enlightenments",
      "title": "hyperv_enlightenments",
      "default": false
     },
     "bootloader": {
      "_name_": "bootloader",
      "title": "bootloader",
      "default": "UEFI",
      "type": "string",
      "enum": [
       "UEFI",
       "UEFI_CSM"
      ]
     },
     "bootloader_ovmf": {
      "_name_": "bootloader_ovmf",
      "title": "bootloader_ovmf",
      "default": "OVMF_CODE.fd",
      "type": "string"
     },
     "autostart": {
      "type": "boolean",
      "_name_": "autostart",
      "title": "autostart",
      "default": true
     },
     "hide_from_msr": {
      "type": "boolean",
      "_name_": "hide_from_msr",
      "title": "hide_from_msr",
      "default": false
     },
     "ensure_display_device": {
      "type": "boolean",
      "_name_": "ensure_display_device",
      "title": "ensure_display_device",
      "default": true
     },
     "time": {
      "_name_": "time",
      "title": "time",
      "default": "LOCAL",
      "type": "string",
      "enum": [
       "LOCAL",
       "UTC"
      ]
     },
     "shutdown_timeout": {
      "type": "integer",
      "_name_": "shutdown_timeout",
      "title": "shutdown_timeout",
      "default": 90
     },
     "arch_type": {
      "_name_": "arch_type",
      "title": "arch_type",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "machine_type": {
      "_name_": "machine_type",
      "title": "machine_type",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "uuid": {
      "_name_": "uuid",
      "title": "uuid",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "devices": {
      "_name_": "devices",
      "title": "devices",
      "default": [],
      "type": "array",
      "items": {}
     },
     "status": {
      "type": "object",
      "properties": {
       "state": {
        "_name_": "state",
        "title": "state",
        "type": "string"
       },
       "pid": {
        "type": "integer",
        "_name_": "pid",
        "title": "pid",
        "nullable": true
       },
       "domain_state": {
        "_name_": "domain_state",
        "title": "domain_state",
        "type": "string"
       }
      },
      "additionalProperties": false,
      "_name_": "status",
      "title": "status",
      "default": {},
      "_attrs_order_": [
       "state",
       "pid",
       "domain_state"
      ]
     },
     "display_available": {
      "type": "boolean",
      "_name_": "display_available",
      "title": "display_available"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     }
    },
    "additionalProperties": false,
    "_name_": "vm_entry",
    "title": "vm_entry",
    "default": {},
    "_attrs_order_": [
     "command_line_args",
     "cpu_mode",
     "cpu_model",
     "name",
     "description",
     "vcpus",
     "cores",
     "threads",
     "cpuset",
     "nodeset",
     "pin_vcpus",
     "suspend_on_snapshot",
     "trusted_platform_module",
     "memory",
     "min_memory",
     "hyperv_enlightenments",
     "bootloader",
     "bootloader_ovmf",
     "autostart",
     "hide_from_msr",
     "ensure_display_device",
     "time",
     "shutdown_timeout",
     "arch_type",
     "machine_type",
     "uuid",
     "devices",
     "status",
     "display_available",
     "id"
    ]
   },
   "vm_get_memory_usage": {
    "type": "integer",
    "_name_": "vm_id",
    "title": "vm_id"
   },
   "return_schema_of_vm_get_memory_usage": {
    "type": "integer",
    "_name_": "memory_usage",
    "title": "memory_usage",
    "description": "Memory usage of a VM in bytes"
   },
   "vm_get_vm_memory_info": {
    "type": "integer",
    "_name_": "vm_id",
    "title": "vm_id",
    "description": "Returns memory information for `vm_id` VM if it is going to be started."
   },
   "return_schema_of_vm_get_vm_memory_info": {
    "type": "object",
    "properties": {
     "minimum_memory_requested": {
      "type": "integer",
      "_name_": "minimum_memory_requested",
      "title": "minimum_memory_requested",
      "description": "Minimum memory requested by the VM"
     },
     "total_memory_requested": {
      "type": "integer",
      "_name_": "total_memory_requested",
      "title": "total_memory_requested",
      "description": "Maximum / total memory requested by the VM"
     },
     "overcommit_required": {
      "type": "boolean",
      "_name_": "overcommit_required",
      "title": "overcommit_required",
      "description": "Overcommit of memory is required to start VM"
     },
     "memory_req_fulfilled_after_overcommit": {
      "type": "boolean",
      "_name_": "memory_req_fulfilled_after_overcommit",
      "title": "memory_req_fulfilled_after_overcommit",
      "description": "Memory requirements of VM are fulfilled if over-committing memory is specified"
     },
     "arc_to_shrink": {
      "type": "integer",
      "_name_": "arc_to_shrink",
      "title": "arc_to_shrink",
      "description": "Size of ARC to shrink in bytes",
      "nullable": true
     },
     "current_arc_max": {
      "type": "integer",
      "_name_": "current_arc_max",
      "title": "current_arc_max",
      "description": "Current size of max ARC in bytes"
     },
     "arc_min": {
      "type": "integer",
      "_name_": "arc_min",
      "title": "arc_min",
      "description": "Minimum size of ARC in bytes"
     },
     "arc_max_after_shrink": {
      "type": "integer",
      "_name_": "arc_max_after_shrink",
      "title": "arc_max_after_shrink",
      "description": "Size of max ARC in bytes after shrinking"
     },
     "actual_vm_requested_memory": {
      "type": "integer",
      "_name_": "actual_vm_requested_memory",
      "title": "actual_vm_requested_memory",
      "description": "VM memory in bytes to consider when making calculations for available/required memory. If VM ballooning is specified for the VM, the minimum VM memory specified by user will be taken into account otherwise total VM memory requested will be taken into account."
     }
    },
    "additionalProperties": false,
    "_name_": "get_vm_memory_info",
    "title": "get_vm_memory_info",
    "default": {},
    "_attrs_order_": [
     "minimum_memory_requested",
     "total_memory_requested",
     "overcommit_required",
     "memory_req_fulfilled_after_overcommit",
     "arc_to_shrink",
     "current_arc_max",
     "arc_min",
     "arc_max_after_shrink",
     "actual_vm_requested_memory"
    ]
   },
   "return_schema_of_vm_get_vmemory_in_use": {
    "type": "object",
    "properties": {
     "RNP": {
      "type": "integer",
      "_name_": "RNP",
      "title": "RNP",
      "description": "Running but not provisioned"
     },
     "PRD": {
      "type": "integer",
      "_name_": "PRD",
      "title": "PRD",
      "description": "Provisioned but not running"
     },
     "RPRD": {
      "type": "integer",
      "_name_": "RPRD",
      "title": "RPRD",
      "description": "Running and provisioned"
     }
    },
    "additionalProperties": false,
    "_name_": "vmemory_in_use",
    "title": "vmemory_in_use",
    "default": {},
    "_attrs_order_": [
     "RNP",
     "PRD",
     "RPRD"
    ]
   },
   "return_schema_of_vm_guest_architecture_and_machine_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "guest_architecture_and_machine_choices",
    "title": "guest_architecture_and_machine_choices",
    "description": "\n\nExample(s):\n```\n{\n    \"x86_64\": [\n        \"pc-i440fx-5.2\",\n        \"pc-q35-5.2\",\n        \"pc-i440fx-2.7\"\n    ],\n    \"i686\": [\n        \"pc-i440fx-3.0\",\n        \"xenfv\"\n    ]\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "vm_log_file_download": {
    "type": "integer",
    "_name_": "id",
    "title": "id",
    "description": "Retrieve log file contents of `id` VM."
   },
   "vm_log_file_path": {
    "type": "integer",
    "_name_": "id",
    "title": "id",
    "description": "Retrieve log file path of `id` VM."
   },
   "return_schema_of_vm_log_file_path": {
    "_name_": "log_file_path",
    "title": "log_file_path",
    "type": "string",
    "nullable": true
   },
   "return_schema_of_vm_maximum_supported_vcpus": {
    "type": "integer",
    "_name_": "maximum_supported_vcpus",
    "title": "maximum_supported_vcpus"
   },
   "return_schema_of_vm_port_wizard": {
    "type": "object",
    "properties": {
     "port": {
      "type": "integer",
      "_name_": "port",
      "title": "port",
      "description": "Available server port"
     },
     "web": {
      "type": "integer",
      "_name_": "web",
      "title": "web",
      "description": "Web port to be used based on available `port`"
     }
    },
    "additionalProperties": false,
    "_name_": "available_display_port",
    "title": "available_display_port",
    "default": {},
    "_attrs_order_": [
     "port",
     "web"
    ]
   },
   "vm_poweroff": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_vm_profiles": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "profiles",
    "title": "profiles",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_vm_random_mac": {
    "_name_": "mac",
    "title": "mac",
    "type": "string"
   },
   "return_schema_of_vm_resolution_choices": {
    "type": "object",
    "properties": {
     "1920x1200": {
      "_name_": "1920x1200",
      "title": "1920x1200",
      "type": "string",
      "enum": [
       "1920x1200"
      ]
     },
     "1920x1080": {
      "_name_": "1920x1080",
      "title": "1920x1080",
      "type": "string",
      "enum": [
       "1920x1080"
      ]
     },
     "1600x1200": {
      "_name_": "1600x1200",
      "title": "1600x1200",
      "type": "string",
      "enum": [
       "1600x1200"
      ]
     },
     "1600x900": {
      "_name_": "1600x900",
      "title": "1600x900",
      "type": "string",
      "enum": [
       "1600x900"
      ]
     },
     "1400x1050": {
      "_name_": "1400x1050",
      "title": "1400x1050",
      "type": "string",
      "enum": [
       "1400x1050"
      ]
     },
     "1280x1024": {
      "_name_": "1280x1024",
      "title": "1280x1024",
      "type": "string",
      "enum": [
       "1280x1024"
      ]
     },
     "1280x720": {
      "_name_": "1280x720",
      "title": "1280x720",
      "type": "string",
      "enum": [
       "1280x720"
      ]
     },
     "1024x768": {
      "_name_": "1024x768",
      "title": "1024x768",
      "type": "string",
      "enum": [
       "1024x768"
      ]
     },
     "800x600": {
      "_name_": "800x600",
      "title": "800x600",
      "type": "string",
      "enum": [
       "800x600"
      ]
     },
     "640x480": {
      "_name_": "640x480",
      "title": "640x480",
      "type": "string",
      "enum": [
       "640x480"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "resolution_choices",
    "title": "resolution_choices",
    "default": {},
    "_attrs_order_": [
     "1920x1200",
     "1920x1080",
     "1600x1200",
     "1600x900",
     "1400x1050",
     "1280x1024",
     "1280x720",
     "1024x768",
     "800x600",
     "640x480"
    ]
   },
   "vm_restart": {
    "type": "object",
    "properties": {}
   },
   "vm_resume": {
    "type": "object",
    "properties": {}
   },
   "vm_start": {
    "type": "object",
    "properties": {
     "overcommit": {
      "type": "boolean",
      "_name_": "overcommit",
      "title": "overcommit",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "overcommit"
    ]
   },
   "vm_status": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_vm_status": {
    "type": "object",
    "properties": {
     "state": {
      "_name_": "state",
      "title": "state",
      "type": "string"
     },
     "pid": {
      "type": "integer",
      "_name_": "pid",
      "title": "pid",
      "nullable": true
     },
     "domain_state": {
      "_name_": "domain_state",
      "title": "domain_state",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "vm_status",
    "title": "vm_status",
    "default": {},
    "_attrs_order_": [
     "state",
     "pid",
     "domain_state"
    ]
   },
   "vm_stop": {
    "type": "object",
    "properties": {
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     },
     "force_after_timeout": {
      "type": "boolean",
      "_name_": "force_after_timeout",
      "title": "force_after_timeout",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "force",
     "force_after_timeout"
    ]
   },
   "return_schema_of_vm_supports_virtualization": {
    "type": "boolean",
    "_name_": "supports_virtualization",
    "title": "supports_virtualization"
   },
   "vm_suspend": {
    "type": "object",
    "properties": {}
   },
   "return_schema_of_vm_virtualization_details": {
    "type": "object",
    "properties": {
     "supported": {
      "type": "boolean",
      "_name_": "supported",
      "title": "supported"
     },
     "error": {
      "_name_": "error",
      "title": "error",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "virtualization_details",
    "title": "virtualization_details",
    "default": {},
    "_attrs_order_": [
     "supported",
     "error"
    ]
   },
   "return_schema_of_vm_device_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "dtype": {
          "_name_": "dtype",
          "title": "dtype",
          "_required_": true,
          "type": "string",
          "enum": [
           "NIC",
           "DISK",
           "CDROM",
           "PCI",
           "DISPLAY",
           "RAW",
           "USB"
          ]
         },
         "vm": {
          "type": "integer",
          "_name_": "vm",
          "title": "vm",
          "_required_": true
         },
         "order": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "order",
          "title": "order",
          "default": null,
          "_required_": false
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "attributes": {
          "anyOf": [
           {
            "type": "object",
            "properties": {
             "path": {
              "_name_": "path",
              "title": "path",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "path"
            ]
           },
           {
            "type": "object",
            "properties": {
             "path": {
              "_name_": "path",
              "title": "path",
              "_required_": false,
              "type": "string"
             },
             "type": {
              "_name_": "type",
              "title": "type",
              "default": "AHCI",
              "_required_": false,
              "type": "string",
              "enum": [
               "AHCI",
               "VIRTIO"
              ]
             },
             "create_zvol": {
              "type": "boolean",
              "_name_": "create_zvol",
              "title": "create_zvol",
              "_required_": false
             },
             "zvol_name": {
              "_name_": "zvol_name",
              "title": "zvol_name",
              "_required_": false,
              "type": "string"
             },
             "zvol_volsize": {
              "type": "integer",
              "_name_": "zvol_volsize",
              "title": "zvol_volsize",
              "_required_": false
             },
             "logical_sectorsize": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "logical_sectorsize",
              "title": "logical_sectorsize",
              "default": null,
              "_required_": false
             },
             "physical_sectorsize": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "physical_sectorsize",
              "title": "physical_sectorsize",
              "default": null,
              "_required_": false
             },
             "iotype": {
              "_name_": "iotype",
              "title": "iotype",
              "default": "THREADS",
              "_required_": false,
              "type": "string",
              "enum": [
               "NATIVE",
               "THREADS",
               "IO_URING"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "path",
             "type",
             "create_zvol",
             "zvol_name",
             "zvol_volsize",
             "logical_sectorsize",
             "physical_sectorsize",
             "iotype"
            ]
           },
           {
            "type": "object",
            "properties": {
             "trust_guest_rx_filters": {
              "type": "boolean",
              "_name_": "trust_guest_rx_filters",
              "title": "trust_guest_rx_filters",
              "default": false,
              "_required_": false
             },
             "type": {
              "_name_": "type",
              "title": "type",
              "default": "E1000",
              "_required_": false,
              "type": "string",
              "enum": [
               "E1000",
               "VIRTIO"
              ]
             },
             "nic_attach": {
              "_name_": "nic_attach",
              "title": "nic_attach",
              "default": null,
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             },
             "mac": {
              "_name_": "mac",
              "title": "mac",
              "default": null,
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "trust_guest_rx_filters",
             "type",
             "nic_attach",
             "mac"
            ]
           },
           {
            "type": "object",
            "properties": {
             "pptdev": {
              "_name_": "pptdev",
              "title": "pptdev",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "pptdev"
            ]
           },
           {
            "type": "object",
            "properties": {
             "path": {
              "_name_": "path",
              "title": "path",
              "_required_": true,
              "type": "string"
             },
             "type": {
              "_name_": "type",
              "title": "type",
              "default": "AHCI",
              "_required_": false,
              "type": "string",
              "enum": [
               "AHCI",
               "VIRTIO"
              ]
             },
             "exists": {
              "type": "boolean",
              "_name_": "exists",
              "title": "exists",
              "_required_": false
             },
             "boot": {
              "type": "boolean",
              "_name_": "boot",
              "title": "boot",
              "default": false,
              "_required_": false
             },
             "size": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "size",
              "title": "size",
              "default": null,
              "_required_": false
             },
             "logical_sectorsize": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "logical_sectorsize",
              "title": "logical_sectorsize",
              "default": null,
              "_required_": false
             },
             "physical_sectorsize": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "physical_sectorsize",
              "title": "physical_sectorsize",
              "default": null,
              "_required_": false
             },
             "iotype": {
              "_name_": "iotype",
              "title": "iotype",
              "default": "THREADS",
              "_required_": false,
              "type": "string",
              "enum": [
               "NATIVE",
               "THREADS",
               "IO_URING"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "path",
             "type",
             "exists",
             "boot",
             "size",
             "logical_sectorsize",
             "physical_sectorsize",
             "iotype"
            ]
           },
           {
            "type": "object",
            "properties": {
             "resolution": {
              "_name_": "resolution",
              "title": "resolution",
              "default": "1024x768",
              "_required_": false,
              "type": "string",
              "enum": [
               "1920x1200",
               "1920x1080",
               "1600x1200",
               "1600x900",
               "1400x1050",
               "1280x1024",
               "1280x720",
               "1024x768",
               "800x600",
               "640x480"
              ]
             },
             "port": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "port",
              "title": "port",
              "default": null,
              "_required_": false
             },
             "web_port": {
              "type": [
               "integer",
               "null"
              ],
              "_name_": "web_port",
              "title": "web_port",
              "default": null,
              "_required_": false
             },
             "bind": {
              "_name_": "bind",
              "title": "bind",
              "default": "127.0.0.1",
              "_required_": false,
              "type": "string"
             },
             "wait": {
              "type": "boolean",
              "_name_": "wait",
              "title": "wait",
              "default": false,
              "_required_": false
             },
             "password": {
              "_name_": "password",
              "title": "password",
              "_required_": true,
              "type": "string"
             },
             "web": {
              "type": "boolean",
              "_name_": "web",
              "title": "web",
              "default": true,
              "_required_": false
             },
             "type": {
              "_name_": "type",
              "title": "type",
              "default": "SPICE",
              "_required_": false,
              "type": "string",
              "enum": [
               "SPICE"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "resolution",
             "port",
             "web_port",
             "bind",
             "wait",
             "password",
             "web",
             "type"
            ]
           },
           {
            "type": "object",
            "properties": {
             "usb": {
              "type": "object",
              "properties": {
               "vendor_id": {
                "_name_": "vendor_id",
                "title": "vendor_id",
                "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
                "_required_": true,
                "type": "string"
               },
               "product_id": {
                "_name_": "product_id",
                "title": "product_id",
                "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
                "_required_": true,
                "type": "string"
               }
              },
              "additionalProperties": false,
              "_name_": "usb",
              "title": "usb",
              "default": null,
              "_required_": false,
              "_attrs_order_": [
               "vendor_id",
               "product_id"
              ]
             },
             "controller_type": {
              "_name_": "controller_type",
              "title": "controller_type",
              "default": "nec-xhci",
              "_required_": false,
              "type": "string",
              "enum": [
               "piix3-uhci",
               "piix4-uhci",
               "ehci",
               "ich9-ehci1",
               "vt82c686b-uhci",
               "pci-ohci",
               "nec-xhci",
               "qemu-xhci"
              ]
             },
             "device": {
              "_name_": "device",
              "title": "device",
              "default": null,
              "_required_": false,
              "type": [
               "string",
               "null"
              ]
             }
            },
            "additionalProperties": false,
            "_name_": "attributes",
            "title": "attributes",
            "default": {},
            "_required_": false,
            "_attrs_order_": [
             "usb",
             "controller_type",
             "device"
            ]
           }
          ],
          "nullable": false,
          "_name_": "attributes",
          "description": null,
          "_required_": false
         }
        },
        "additionalProperties": false,
        "_name_": "vm_device_entry",
        "title": "vm_device_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "dtype",
         "vm",
         "order",
         "id",
         "attributes"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "dtype": {
        "_name_": "dtype",
        "title": "dtype",
        "_required_": true,
        "type": "string",
        "enum": [
         "NIC",
         "DISK",
         "CDROM",
         "PCI",
         "DISPLAY",
         "RAW",
         "USB"
        ]
       },
       "vm": {
        "type": "integer",
        "_name_": "vm",
        "title": "vm",
        "_required_": true
       },
       "order": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "order",
        "title": "order",
        "default": null,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "attributes": {
        "anyOf": [
         {
          "type": "object",
          "properties": {
           "path": {
            "_name_": "path",
            "title": "path",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "path"
          ]
         },
         {
          "type": "object",
          "properties": {
           "path": {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "AHCI",
            "_required_": false,
            "type": "string",
            "enum": [
             "AHCI",
             "VIRTIO"
            ]
           },
           "create_zvol": {
            "type": "boolean",
            "_name_": "create_zvol",
            "title": "create_zvol",
            "_required_": false
           },
           "zvol_name": {
            "_name_": "zvol_name",
            "title": "zvol_name",
            "_required_": false,
            "type": "string"
           },
           "zvol_volsize": {
            "type": "integer",
            "_name_": "zvol_volsize",
            "title": "zvol_volsize",
            "_required_": false
           },
           "logical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "logical_sectorsize",
            "title": "logical_sectorsize",
            "default": null,
            "_required_": false
           },
           "physical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "physical_sectorsize",
            "title": "physical_sectorsize",
            "default": null,
            "_required_": false
           },
           "iotype": {
            "_name_": "iotype",
            "title": "iotype",
            "default": "THREADS",
            "_required_": false,
            "type": "string",
            "enum": [
             "NATIVE",
             "THREADS",
             "IO_URING"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "path",
           "type",
           "create_zvol",
           "zvol_name",
           "zvol_volsize",
           "logical_sectorsize",
           "physical_sectorsize",
           "iotype"
          ]
         },
         {
          "type": "object",
          "properties": {
           "trust_guest_rx_filters": {
            "type": "boolean",
            "_name_": "trust_guest_rx_filters",
            "title": "trust_guest_rx_filters",
            "default": false,
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "E1000",
            "_required_": false,
            "type": "string",
            "enum": [
             "E1000",
             "VIRTIO"
            ]
           },
           "nic_attach": {
            "_name_": "nic_attach",
            "title": "nic_attach",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "mac": {
            "_name_": "mac",
            "title": "mac",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "trust_guest_rx_filters",
           "type",
           "nic_attach",
           "mac"
          ]
         },
         {
          "type": "object",
          "properties": {
           "pptdev": {
            "_name_": "pptdev",
            "title": "pptdev",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "pptdev"
          ]
         },
         {
          "type": "object",
          "properties": {
           "path": {
            "_name_": "path",
            "title": "path",
            "_required_": true,
            "type": "string"
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "AHCI",
            "_required_": false,
            "type": "string",
            "enum": [
             "AHCI",
             "VIRTIO"
            ]
           },
           "exists": {
            "type": "boolean",
            "_name_": "exists",
            "title": "exists",
            "_required_": false
           },
           "boot": {
            "type": "boolean",
            "_name_": "boot",
            "title": "boot",
            "default": false,
            "_required_": false
           },
           "size": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "size",
            "title": "size",
            "default": null,
            "_required_": false
           },
           "logical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "logical_sectorsize",
            "title": "logical_sectorsize",
            "default": null,
            "_required_": false
           },
           "physical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "physical_sectorsize",
            "title": "physical_sectorsize",
            "default": null,
            "_required_": false
           },
           "iotype": {
            "_name_": "iotype",
            "title": "iotype",
            "default": "THREADS",
            "_required_": false,
            "type": "string",
            "enum": [
             "NATIVE",
             "THREADS",
             "IO_URING"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "path",
           "type",
           "exists",
           "boot",
           "size",
           "logical_sectorsize",
           "physical_sectorsize",
           "iotype"
          ]
         },
         {
          "type": "object",
          "properties": {
           "resolution": {
            "_name_": "resolution",
            "title": "resolution",
            "default": "1024x768",
            "_required_": false,
            "type": "string",
            "enum": [
             "1920x1200",
             "1920x1080",
             "1600x1200",
             "1600x900",
             "1400x1050",
             "1280x1024",
             "1280x720",
             "1024x768",
             "800x600",
             "640x480"
            ]
           },
           "port": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "port",
            "title": "port",
            "default": null,
            "_required_": false
           },
           "web_port": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "web_port",
            "title": "web_port",
            "default": null,
            "_required_": false
           },
           "bind": {
            "_name_": "bind",
            "title": "bind",
            "default": "127.0.0.1",
            "_required_": false,
            "type": "string"
           },
           "wait": {
            "type": "boolean",
            "_name_": "wait",
            "title": "wait",
            "default": false,
            "_required_": false
           },
           "password": {
            "_name_": "password",
            "title": "password",
            "_required_": true,
            "type": "string"
           },
           "web": {
            "type": "boolean",
            "_name_": "web",
            "title": "web",
            "default": true,
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "SPICE",
            "_required_": false,
            "type": "string",
            "enum": [
             "SPICE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "resolution",
           "port",
           "web_port",
           "bind",
           "wait",
           "password",
           "web",
           "type"
          ]
         },
         {
          "type": "object",
          "properties": {
           "usb": {
            "type": "object",
            "properties": {
             "vendor_id": {
              "_name_": "vendor_id",
              "title": "vendor_id",
              "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
              "_required_": true,
              "type": "string"
             },
             "product_id": {
              "_name_": "product_id",
              "title": "product_id",
              "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "usb",
            "title": "usb",
            "default": null,
            "_required_": false,
            "_attrs_order_": [
             "vendor_id",
             "product_id"
            ]
           },
           "controller_type": {
            "_name_": "controller_type",
            "title": "controller_type",
            "default": "nec-xhci",
            "_required_": false,
            "type": "string",
            "enum": [
             "piix3-uhci",
             "piix4-uhci",
             "ehci",
             "ich9-ehci1",
             "vt82c686b-uhci",
             "pci-ohci",
             "nec-xhci",
             "qemu-xhci"
            ]
           },
           "device": {
            "_name_": "device",
            "title": "device",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "usb",
           "controller_type",
           "device"
          ]
         }
        ],
        "nullable": false,
        "_name_": "attributes",
        "description": null,
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "vm_device_entry",
      "title": "vm_device_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "dtype",
       "vm",
       "order",
       "id",
       "attributes"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "dtype": {
        "_name_": "dtype",
        "title": "dtype",
        "_required_": true,
        "type": "string",
        "enum": [
         "NIC",
         "DISK",
         "CDROM",
         "PCI",
         "DISPLAY",
         "RAW",
         "USB"
        ]
       },
       "vm": {
        "type": "integer",
        "_name_": "vm",
        "title": "vm",
        "_required_": true
       },
       "order": {
        "type": [
         "integer",
         "null"
        ],
        "_name_": "order",
        "title": "order",
        "default": null,
        "_required_": false
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "attributes": {
        "anyOf": [
         {
          "type": "object",
          "properties": {
           "path": {
            "_name_": "path",
            "title": "path",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "path"
          ]
         },
         {
          "type": "object",
          "properties": {
           "path": {
            "_name_": "path",
            "title": "path",
            "_required_": false,
            "type": "string"
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "AHCI",
            "_required_": false,
            "type": "string",
            "enum": [
             "AHCI",
             "VIRTIO"
            ]
           },
           "create_zvol": {
            "type": "boolean",
            "_name_": "create_zvol",
            "title": "create_zvol",
            "_required_": false
           },
           "zvol_name": {
            "_name_": "zvol_name",
            "title": "zvol_name",
            "_required_": false,
            "type": "string"
           },
           "zvol_volsize": {
            "type": "integer",
            "_name_": "zvol_volsize",
            "title": "zvol_volsize",
            "_required_": false
           },
           "logical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "logical_sectorsize",
            "title": "logical_sectorsize",
            "default": null,
            "_required_": false
           },
           "physical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "physical_sectorsize",
            "title": "physical_sectorsize",
            "default": null,
            "_required_": false
           },
           "iotype": {
            "_name_": "iotype",
            "title": "iotype",
            "default": "THREADS",
            "_required_": false,
            "type": "string",
            "enum": [
             "NATIVE",
             "THREADS",
             "IO_URING"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "path",
           "type",
           "create_zvol",
           "zvol_name",
           "zvol_volsize",
           "logical_sectorsize",
           "physical_sectorsize",
           "iotype"
          ]
         },
         {
          "type": "object",
          "properties": {
           "trust_guest_rx_filters": {
            "type": "boolean",
            "_name_": "trust_guest_rx_filters",
            "title": "trust_guest_rx_filters",
            "default": false,
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "E1000",
            "_required_": false,
            "type": "string",
            "enum": [
             "E1000",
             "VIRTIO"
            ]
           },
           "nic_attach": {
            "_name_": "nic_attach",
            "title": "nic_attach",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           },
           "mac": {
            "_name_": "mac",
            "title": "mac",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "trust_guest_rx_filters",
           "type",
           "nic_attach",
           "mac"
          ]
         },
         {
          "type": "object",
          "properties": {
           "pptdev": {
            "_name_": "pptdev",
            "title": "pptdev",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "pptdev"
          ]
         },
         {
          "type": "object",
          "properties": {
           "path": {
            "_name_": "path",
            "title": "path",
            "_required_": true,
            "type": "string"
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "AHCI",
            "_required_": false,
            "type": "string",
            "enum": [
             "AHCI",
             "VIRTIO"
            ]
           },
           "exists": {
            "type": "boolean",
            "_name_": "exists",
            "title": "exists",
            "_required_": false
           },
           "boot": {
            "type": "boolean",
            "_name_": "boot",
            "title": "boot",
            "default": false,
            "_required_": false
           },
           "size": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "size",
            "title": "size",
            "default": null,
            "_required_": false
           },
           "logical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "logical_sectorsize",
            "title": "logical_sectorsize",
            "default": null,
            "_required_": false
           },
           "physical_sectorsize": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "physical_sectorsize",
            "title": "physical_sectorsize",
            "default": null,
            "_required_": false
           },
           "iotype": {
            "_name_": "iotype",
            "title": "iotype",
            "default": "THREADS",
            "_required_": false,
            "type": "string",
            "enum": [
             "NATIVE",
             "THREADS",
             "IO_URING"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "path",
           "type",
           "exists",
           "boot",
           "size",
           "logical_sectorsize",
           "physical_sectorsize",
           "iotype"
          ]
         },
         {
          "type": "object",
          "properties": {
           "resolution": {
            "_name_": "resolution",
            "title": "resolution",
            "default": "1024x768",
            "_required_": false,
            "type": "string",
            "enum": [
             "1920x1200",
             "1920x1080",
             "1600x1200",
             "1600x900",
             "1400x1050",
             "1280x1024",
             "1280x720",
             "1024x768",
             "800x600",
             "640x480"
            ]
           },
           "port": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "port",
            "title": "port",
            "default": null,
            "_required_": false
           },
           "web_port": {
            "type": [
             "integer",
             "null"
            ],
            "_name_": "web_port",
            "title": "web_port",
            "default": null,
            "_required_": false
           },
           "bind": {
            "_name_": "bind",
            "title": "bind",
            "default": "127.0.0.1",
            "_required_": false,
            "type": "string"
           },
           "wait": {
            "type": "boolean",
            "_name_": "wait",
            "title": "wait",
            "default": false,
            "_required_": false
           },
           "password": {
            "_name_": "password",
            "title": "password",
            "_required_": true,
            "type": "string"
           },
           "web": {
            "type": "boolean",
            "_name_": "web",
            "title": "web",
            "default": true,
            "_required_": false
           },
           "type": {
            "_name_": "type",
            "title": "type",
            "default": "SPICE",
            "_required_": false,
            "type": "string",
            "enum": [
             "SPICE"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "resolution",
           "port",
           "web_port",
           "bind",
           "wait",
           "password",
           "web",
           "type"
          ]
         },
         {
          "type": "object",
          "properties": {
           "usb": {
            "type": "object",
            "properties": {
             "vendor_id": {
              "_name_": "vendor_id",
              "title": "vendor_id",
              "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
              "_required_": true,
              "type": "string"
             },
             "product_id": {
              "_name_": "product_id",
              "title": "product_id",
              "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
              "_required_": true,
              "type": "string"
             }
            },
            "additionalProperties": false,
            "_name_": "usb",
            "title": "usb",
            "default": null,
            "_required_": false,
            "_attrs_order_": [
             "vendor_id",
             "product_id"
            ]
           },
           "controller_type": {
            "_name_": "controller_type",
            "title": "controller_type",
            "default": "nec-xhci",
            "_required_": false,
            "type": "string",
            "enum": [
             "piix3-uhci",
             "piix4-uhci",
             "ehci",
             "ich9-ehci1",
             "vt82c686b-uhci",
             "pci-ohci",
             "nec-xhci",
             "qemu-xhci"
            ]
           },
           "device": {
            "_name_": "device",
            "title": "device",
            "default": null,
            "_required_": false,
            "type": [
             "string",
             "null"
            ]
           }
          },
          "additionalProperties": false,
          "_name_": "attributes",
          "title": "attributes",
          "default": {},
          "_required_": false,
          "_attrs_order_": [
           "usb",
           "controller_type",
           "device"
          ]
         }
        ],
        "nullable": false,
        "_name_": "attributes",
        "description": null,
        "_required_": false
       }
      },
      "additionalProperties": false,
      "_name_": "vm_device_entry",
      "title": "vm_device_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "dtype",
       "vm",
       "order",
       "id",
       "attributes"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "vm_device_create": {
    "type": "object",
    "properties": {
     "dtype": {
      "_name_": "dtype",
      "title": "dtype",
      "type": "string",
      "enum": [
       "NIC",
       "DISK",
       "CDROM",
       "PCI",
       "DISPLAY",
       "RAW",
       "USB"
      ],
      "description": "If `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.\nThis means the API handles creating the raw file and raises the appropriate exception if file creation fails."
     },
     "vm": {
      "type": "integer",
      "_name_": "vm",
      "title": "vm",
      "description": "Create a new device for the VM of id `vm`."
     },
     "attributes": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "attributes",
      "title": "attributes",
      "default": null,
      "_attrs_order_": []
     },
     "order": {
      "type": "integer",
      "_name_": "order",
      "title": "order",
      "default": null,
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "vmdevice_create",
    "title": "vmdevice_create",
    "default": {},
    "_attrs_order_": [
     "dtype",
     "vm",
     "attributes",
     "order"
    ]
   },
   "return_schema_of_vm_device_create": {
    "type": "object",
    "properties": {
     "dtype": {
      "_name_": "dtype",
      "title": "dtype",
      "type": "string",
      "enum": [
       "NIC",
       "DISK",
       "CDROM",
       "PCI",
       "DISPLAY",
       "RAW",
       "USB"
      ],
      "description": "If `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.\nThis means the API handles creating the raw file and raises the appropriate exception if file creation fails."
     },
     "vm": {
      "type": "integer",
      "_name_": "vm",
      "title": "vm",
      "description": "Create a new device for the VM of id `vm`."
     },
     "order": {
      "type": "integer",
      "_name_": "order",
      "title": "order",
      "default": null,
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "attributes": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "create_zvol": {
          "type": "boolean",
          "_name_": "create_zvol",
          "title": "create_zvol",
          "_required_": false
         },
         "zvol_name": {
          "_name_": "zvol_name",
          "title": "zvol_name",
          "_required_": false,
          "type": "string"
         },
         "zvol_volsize": {
          "type": "integer",
          "_name_": "zvol_volsize",
          "title": "zvol_volsize",
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "create_zvol",
         "zvol_name",
         "zvol_volsize",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "trust_guest_rx_filters": {
          "type": "boolean",
          "_name_": "trust_guest_rx_filters",
          "title": "trust_guest_rx_filters",
          "default": false,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "E1000",
          "_required_": false,
          "type": "string",
          "enum": [
           "E1000",
           "VIRTIO"
          ]
         },
         "nic_attach": {
          "_name_": "nic_attach",
          "title": "nic_attach",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "mac": {
          "_name_": "mac",
          "title": "mac",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "trust_guest_rx_filters",
         "type",
         "nic_attach",
         "mac"
        ]
       },
       {
        "type": "object",
        "properties": {
         "pptdev": {
          "_name_": "pptdev",
          "title": "pptdev",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pptdev"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "exists": {
          "type": "boolean",
          "_name_": "exists",
          "title": "exists",
          "_required_": false
         },
         "boot": {
          "type": "boolean",
          "_name_": "boot",
          "title": "boot",
          "default": false,
          "_required_": false
         },
         "size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "size",
          "title": "size",
          "default": null,
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "exists",
         "boot",
         "size",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "resolution": {
          "_name_": "resolution",
          "title": "resolution",
          "default": "1024x768",
          "_required_": false,
          "type": "string",
          "enum": [
           "1920x1200",
           "1920x1080",
           "1600x1200",
           "1600x900",
           "1400x1050",
           "1280x1024",
           "1280x720",
           "1024x768",
           "800x600",
           "640x480"
          ]
         },
         "port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "port",
          "title": "port",
          "default": null,
          "_required_": false
         },
         "web_port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "web_port",
          "title": "web_port",
          "default": null,
          "_required_": false
         },
         "bind": {
          "_name_": "bind",
          "title": "bind",
          "default": "127.0.0.1",
          "_required_": false,
          "type": "string"
         },
         "wait": {
          "type": "boolean",
          "_name_": "wait",
          "title": "wait",
          "default": false,
          "_required_": false
         },
         "password": {
          "_name_": "password",
          "title": "password",
          "_required_": true,
          "type": "string"
         },
         "web": {
          "type": "boolean",
          "_name_": "web",
          "title": "web",
          "default": true,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "SPICE",
          "_required_": false,
          "type": "string",
          "enum": [
           "SPICE"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "resolution",
         "port",
         "web_port",
         "bind",
         "wait",
         "password",
         "web",
         "type"
        ]
       },
       {
        "type": "object",
        "properties": {
         "usb": {
          "type": "object",
          "properties": {
           "vendor_id": {
            "_name_": "vendor_id",
            "title": "vendor_id",
            "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
            "_required_": true,
            "type": "string"
           },
           "product_id": {
            "_name_": "product_id",
            "title": "product_id",
            "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "usb",
          "title": "usb",
          "default": null,
          "_required_": false,
          "_attrs_order_": [
           "vendor_id",
           "product_id"
          ]
         },
         "controller_type": {
          "_name_": "controller_type",
          "title": "controller_type",
          "default": "nec-xhci",
          "_required_": false,
          "type": "string",
          "enum": [
           "piix3-uhci",
           "piix4-uhci",
           "ehci",
           "ich9-ehci1",
           "vt82c686b-uhci",
           "pci-ohci",
           "nec-xhci",
           "qemu-xhci"
          ]
         },
         "device": {
          "_name_": "device",
          "title": "device",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "usb",
         "controller_type",
         "device"
        ]
       }
      ],
      "nullable": false,
      "_name_": "attributes",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "vm_device_create_returns",
    "title": "vm_device_create_returns",
    "default": {},
    "_attrs_order_": [
     "dtype",
     "vm",
     "order",
     "id",
     "attributes"
    ]
   },
   "vm_device_delete": {
    "type": "object",
    "properties": {
     "zvol": {
      "type": "boolean",
      "_name_": "zvol",
      "title": "zvol",
      "default": false
     },
     "raw_file": {
      "type": "boolean",
      "_name_": "raw_file",
      "title": "raw_file",
      "default": false
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "vm_device_delete",
    "title": "vm_device_delete",
    "default": {},
    "_attrs_order_": [
     "zvol",
     "raw_file",
     "force"
    ]
   },
   "return_schema_of_vm_device_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "vm_device_update": {
    "type": "object",
    "properties": {
     "dtype": {
      "_name_": "dtype",
      "title": "dtype",
      "type": "string",
      "enum": [
       "NIC",
       "DISK",
       "CDROM",
       "PCI",
       "DISPLAY",
       "RAW",
       "USB"
      ],
      "description": "Pass `attributes.size` to resize a `dtype` `RAW` device. The raw file will be resized.\nIf `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.\nThis means the API handles creating the raw file and raises the appropriate exception if file creation fails."
     },
     "vm": {
      "type": "integer",
      "_name_": "vm",
      "title": "vm",
      "description": "Create a new device for the VM of id `vm`."
     },
     "order": {
      "type": "integer",
      "_name_": "order",
      "title": "order",
      "default": null,
      "nullable": true
     },
     "attributes": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "create_zvol": {
          "type": "boolean",
          "_name_": "create_zvol",
          "title": "create_zvol",
          "_required_": false
         },
         "zvol_name": {
          "_name_": "zvol_name",
          "title": "zvol_name",
          "_required_": false,
          "type": "string"
         },
         "zvol_volsize": {
          "type": "integer",
          "_name_": "zvol_volsize",
          "title": "zvol_volsize",
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "create_zvol",
         "zvol_name",
         "zvol_volsize",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "trust_guest_rx_filters": {
          "type": "boolean",
          "_name_": "trust_guest_rx_filters",
          "title": "trust_guest_rx_filters",
          "default": false,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "E1000",
          "_required_": false,
          "type": "string",
          "enum": [
           "E1000",
           "VIRTIO"
          ]
         },
         "nic_attach": {
          "_name_": "nic_attach",
          "title": "nic_attach",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "mac": {
          "_name_": "mac",
          "title": "mac",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "trust_guest_rx_filters",
         "type",
         "nic_attach",
         "mac"
        ]
       },
       {
        "type": "object",
        "properties": {
         "pptdev": {
          "_name_": "pptdev",
          "title": "pptdev",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pptdev"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "exists": {
          "type": "boolean",
          "_name_": "exists",
          "title": "exists",
          "_required_": false
         },
         "boot": {
          "type": "boolean",
          "_name_": "boot",
          "title": "boot",
          "default": false,
          "_required_": false
         },
         "size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "size",
          "title": "size",
          "default": null,
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "exists",
         "boot",
         "size",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "resolution": {
          "_name_": "resolution",
          "title": "resolution",
          "default": "1024x768",
          "_required_": false,
          "type": "string",
          "enum": [
           "1920x1200",
           "1920x1080",
           "1600x1200",
           "1600x900",
           "1400x1050",
           "1280x1024",
           "1280x720",
           "1024x768",
           "800x600",
           "640x480"
          ]
         },
         "port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "port",
          "title": "port",
          "default": null,
          "_required_": false
         },
         "web_port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "web_port",
          "title": "web_port",
          "default": null,
          "_required_": false
         },
         "bind": {
          "_name_": "bind",
          "title": "bind",
          "default": "127.0.0.1",
          "_required_": false,
          "type": "string"
         },
         "wait": {
          "type": "boolean",
          "_name_": "wait",
          "title": "wait",
          "default": false,
          "_required_": false
         },
         "password": {
          "_name_": "password",
          "title": "password",
          "_required_": true,
          "type": "string"
         },
         "web": {
          "type": "boolean",
          "_name_": "web",
          "title": "web",
          "default": true,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "SPICE",
          "_required_": false,
          "type": "string",
          "enum": [
           "SPICE"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "resolution",
         "port",
         "web_port",
         "bind",
         "wait",
         "password",
         "web",
         "type"
        ]
       },
       {
        "type": "object",
        "properties": {
         "usb": {
          "type": "object",
          "properties": {
           "vendor_id": {
            "_name_": "vendor_id",
            "title": "vendor_id",
            "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
            "_required_": true,
            "type": "string"
           },
           "product_id": {
            "_name_": "product_id",
            "title": "product_id",
            "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "usb",
          "title": "usb",
          "default": null,
          "_required_": false,
          "_attrs_order_": [
           "vendor_id",
           "product_id"
          ]
         },
         "controller_type": {
          "_name_": "controller_type",
          "title": "controller_type",
          "default": "nec-xhci",
          "_required_": false,
          "type": "string",
          "enum": [
           "piix3-uhci",
           "piix4-uhci",
           "ehci",
           "ich9-ehci1",
           "vt82c686b-uhci",
           "pci-ohci",
           "nec-xhci",
           "qemu-xhci"
          ]
         },
         "device": {
          "_name_": "device",
          "title": "device",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "usb",
         "controller_type",
         "device"
        ]
       }
      ],
      "nullable": false,
      "_name_": "attributes",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "vm_device_update",
    "title": "vm_device_update",
    "default": {},
    "_attrs_order_": [
     "dtype",
     "vm",
     "order",
     "attributes"
    ]
   },
   "return_schema_of_vm_device_update": {
    "type": "object",
    "properties": {
     "dtype": {
      "_name_": "dtype",
      "title": "dtype",
      "type": "string",
      "enum": [
       "NIC",
       "DISK",
       "CDROM",
       "PCI",
       "DISPLAY",
       "RAW",
       "USB"
      ],
      "description": "Pass `attributes.size` to resize a `dtype` `RAW` device. The raw file will be resized.\nIf `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.\nThis means the API handles creating the raw file and raises the appropriate exception if file creation fails."
     },
     "vm": {
      "type": "integer",
      "_name_": "vm",
      "title": "vm",
      "description": "Create a new device for the VM of id `vm`."
     },
     "order": {
      "type": "integer",
      "_name_": "order",
      "title": "order",
      "default": null,
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update a VM device of `id`."
     },
     "attributes": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "create_zvol": {
          "type": "boolean",
          "_name_": "create_zvol",
          "title": "create_zvol",
          "_required_": false
         },
         "zvol_name": {
          "_name_": "zvol_name",
          "title": "zvol_name",
          "_required_": false,
          "type": "string"
         },
         "zvol_volsize": {
          "type": "integer",
          "_name_": "zvol_volsize",
          "title": "zvol_volsize",
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "create_zvol",
         "zvol_name",
         "zvol_volsize",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "trust_guest_rx_filters": {
          "type": "boolean",
          "_name_": "trust_guest_rx_filters",
          "title": "trust_guest_rx_filters",
          "default": false,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "E1000",
          "_required_": false,
          "type": "string",
          "enum": [
           "E1000",
           "VIRTIO"
          ]
         },
         "nic_attach": {
          "_name_": "nic_attach",
          "title": "nic_attach",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "mac": {
          "_name_": "mac",
          "title": "mac",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "trust_guest_rx_filters",
         "type",
         "nic_attach",
         "mac"
        ]
       },
       {
        "type": "object",
        "properties": {
         "pptdev": {
          "_name_": "pptdev",
          "title": "pptdev",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pptdev"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "exists": {
          "type": "boolean",
          "_name_": "exists",
          "title": "exists",
          "_required_": false
         },
         "boot": {
          "type": "boolean",
          "_name_": "boot",
          "title": "boot",
          "default": false,
          "_required_": false
         },
         "size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "size",
          "title": "size",
          "default": null,
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "exists",
         "boot",
         "size",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "resolution": {
          "_name_": "resolution",
          "title": "resolution",
          "default": "1024x768",
          "_required_": false,
          "type": "string",
          "enum": [
           "1920x1200",
           "1920x1080",
           "1600x1200",
           "1600x900",
           "1400x1050",
           "1280x1024",
           "1280x720",
           "1024x768",
           "800x600",
           "640x480"
          ]
         },
         "port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "port",
          "title": "port",
          "default": null,
          "_required_": false
         },
         "web_port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "web_port",
          "title": "web_port",
          "default": null,
          "_required_": false
         },
         "bind": {
          "_name_": "bind",
          "title": "bind",
          "default": "127.0.0.1",
          "_required_": false,
          "type": "string"
         },
         "wait": {
          "type": "boolean",
          "_name_": "wait",
          "title": "wait",
          "default": false,
          "_required_": false
         },
         "password": {
          "_name_": "password",
          "title": "password",
          "_required_": true,
          "type": "string"
         },
         "web": {
          "type": "boolean",
          "_name_": "web",
          "title": "web",
          "default": true,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "SPICE",
          "_required_": false,
          "type": "string",
          "enum": [
           "SPICE"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "resolution",
         "port",
         "web_port",
         "bind",
         "wait",
         "password",
         "web",
         "type"
        ]
       },
       {
        "type": "object",
        "properties": {
         "usb": {
          "type": "object",
          "properties": {
           "vendor_id": {
            "_name_": "vendor_id",
            "title": "vendor_id",
            "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
            "_required_": true,
            "type": "string"
           },
           "product_id": {
            "_name_": "product_id",
            "title": "product_id",
            "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "usb",
          "title": "usb",
          "default": null,
          "_required_": false,
          "_attrs_order_": [
           "vendor_id",
           "product_id"
          ]
         },
         "controller_type": {
          "_name_": "controller_type",
          "title": "controller_type",
          "default": "nec-xhci",
          "_required_": false,
          "type": "string",
          "enum": [
           "piix3-uhci",
           "piix4-uhci",
           "ehci",
           "ich9-ehci1",
           "vt82c686b-uhci",
           "pci-ohci",
           "nec-xhci",
           "qemu-xhci"
          ]
         },
         "device": {
          "_name_": "device",
          "title": "device",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "usb",
         "controller_type",
         "device"
        ]
       }
      ],
      "nullable": false,
      "_name_": "attributes",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "vm_device_update_returns",
    "title": "vm_device_update_returns",
    "default": {},
    "_attrs_order_": [
     "dtype",
     "vm",
     "order",
     "id",
     "attributes"
    ]
   },
   "return_schema_of_vm_device_bind_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "bind_choices",
    "title": "bind_choices",
    "default": {},
    "_attrs_order_": []
   },
   "return_schema_of_vm_device_disk_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "disk_choices",
    "title": "disk_choices",
    "description": "\n\nExample(s):\n```\n{\n    \"vms/test 1\": \"/dev/zvol/vms/test+1\"\n}\n```\n",
    "default": {},
    "_attrs_order_": []
   },
   "vm_device_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "vm_device_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "vm_device_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/vm_device_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/vm_device_get_instance_1"
     }
    }
   },
   "return_schema_of_vm_device_get_instance": {
    "type": "object",
    "properties": {
     "dtype": {
      "_name_": "dtype",
      "title": "dtype",
      "type": "string",
      "enum": [
       "NIC",
       "DISK",
       "CDROM",
       "PCI",
       "DISPLAY",
       "RAW",
       "USB"
      ]
     },
     "vm": {
      "type": "integer",
      "_name_": "vm",
      "title": "vm"
     },
     "order": {
      "type": "integer",
      "_name_": "order",
      "title": "order",
      "default": null,
      "nullable": true
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "attributes": {
      "anyOf": [
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": false,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "create_zvol": {
          "type": "boolean",
          "_name_": "create_zvol",
          "title": "create_zvol",
          "_required_": false
         },
         "zvol_name": {
          "_name_": "zvol_name",
          "title": "zvol_name",
          "_required_": false,
          "type": "string"
         },
         "zvol_volsize": {
          "type": "integer",
          "_name_": "zvol_volsize",
          "title": "zvol_volsize",
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "create_zvol",
         "zvol_name",
         "zvol_volsize",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "trust_guest_rx_filters": {
          "type": "boolean",
          "_name_": "trust_guest_rx_filters",
          "title": "trust_guest_rx_filters",
          "default": false,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "E1000",
          "_required_": false,
          "type": "string",
          "enum": [
           "E1000",
           "VIRTIO"
          ]
         },
         "nic_attach": {
          "_name_": "nic_attach",
          "title": "nic_attach",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         },
         "mac": {
          "_name_": "mac",
          "title": "mac",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "trust_guest_rx_filters",
         "type",
         "nic_attach",
         "mac"
        ]
       },
       {
        "type": "object",
        "properties": {
         "pptdev": {
          "_name_": "pptdev",
          "title": "pptdev",
          "_required_": true,
          "type": "string"
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "pptdev"
        ]
       },
       {
        "type": "object",
        "properties": {
         "path": {
          "_name_": "path",
          "title": "path",
          "_required_": true,
          "type": "string"
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "AHCI",
          "_required_": false,
          "type": "string",
          "enum": [
           "AHCI",
           "VIRTIO"
          ]
         },
         "exists": {
          "type": "boolean",
          "_name_": "exists",
          "title": "exists",
          "_required_": false
         },
         "boot": {
          "type": "boolean",
          "_name_": "boot",
          "title": "boot",
          "default": false,
          "_required_": false
         },
         "size": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "size",
          "title": "size",
          "default": null,
          "_required_": false
         },
         "logical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "logical_sectorsize",
          "title": "logical_sectorsize",
          "default": null,
          "_required_": false
         },
         "physical_sectorsize": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "physical_sectorsize",
          "title": "physical_sectorsize",
          "default": null,
          "_required_": false
         },
         "iotype": {
          "_name_": "iotype",
          "title": "iotype",
          "default": "THREADS",
          "_required_": false,
          "type": "string",
          "enum": [
           "NATIVE",
           "THREADS",
           "IO_URING"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "path",
         "type",
         "exists",
         "boot",
         "size",
         "logical_sectorsize",
         "physical_sectorsize",
         "iotype"
        ]
       },
       {
        "type": "object",
        "properties": {
         "resolution": {
          "_name_": "resolution",
          "title": "resolution",
          "default": "1024x768",
          "_required_": false,
          "type": "string",
          "enum": [
           "1920x1200",
           "1920x1080",
           "1600x1200",
           "1600x900",
           "1400x1050",
           "1280x1024",
           "1280x720",
           "1024x768",
           "800x600",
           "640x480"
          ]
         },
         "port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "port",
          "title": "port",
          "default": null,
          "_required_": false
         },
         "web_port": {
          "type": [
           "integer",
           "null"
          ],
          "_name_": "web_port",
          "title": "web_port",
          "default": null,
          "_required_": false
         },
         "bind": {
          "_name_": "bind",
          "title": "bind",
          "default": "127.0.0.1",
          "_required_": false,
          "type": "string"
         },
         "wait": {
          "type": "boolean",
          "_name_": "wait",
          "title": "wait",
          "default": false,
          "_required_": false
         },
         "password": {
          "_name_": "password",
          "title": "password",
          "_required_": true,
          "type": "string"
         },
         "web": {
          "type": "boolean",
          "_name_": "web",
          "title": "web",
          "default": true,
          "_required_": false
         },
         "type": {
          "_name_": "type",
          "title": "type",
          "default": "SPICE",
          "_required_": false,
          "type": "string",
          "enum": [
           "SPICE"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "resolution",
         "port",
         "web_port",
         "bind",
         "wait",
         "password",
         "web",
         "type"
        ]
       },
       {
        "type": "object",
        "properties": {
         "usb": {
          "type": "object",
          "properties": {
           "vendor_id": {
            "_name_": "vendor_id",
            "title": "vendor_id",
            "description": "Vendor id must start with \"0x\" prefix e.g 0x0451",
            "_required_": true,
            "type": "string"
           },
           "product_id": {
            "_name_": "product_id",
            "title": "product_id",
            "description": "Product id must start with \"0x\" prefix e.g 0x16a8",
            "_required_": true,
            "type": "string"
           }
          },
          "additionalProperties": false,
          "_name_": "usb",
          "title": "usb",
          "default": null,
          "_required_": false,
          "_attrs_order_": [
           "vendor_id",
           "product_id"
          ]
         },
         "controller_type": {
          "_name_": "controller_type",
          "title": "controller_type",
          "default": "nec-xhci",
          "_required_": false,
          "type": "string",
          "enum": [
           "piix3-uhci",
           "piix4-uhci",
           "ehci",
           "ich9-ehci1",
           "vt82c686b-uhci",
           "pci-ohci",
           "nec-xhci",
           "qemu-xhci"
          ]
         },
         "device": {
          "_name_": "device",
          "title": "device",
          "default": null,
          "_required_": false,
          "type": [
           "string",
           "null"
          ]
         }
        },
        "additionalProperties": false,
        "_name_": "attributes",
        "title": "attributes",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "usb",
         "controller_type",
         "device"
        ]
       }
      ],
      "nullable": false,
      "_name_": "attributes",
      "description": null
     }
    },
    "additionalProperties": false,
    "_name_": "vm_device_entry",
    "title": "vm_device_entry",
    "default": {},
    "_attrs_order_": [
     "dtype",
     "vm",
     "order",
     "id",
     "attributes"
    ]
   },
   "vm_device_get_pci_ids_for_gpu_isolation": {
    "_name_": "gpu_pci_id",
    "title": "gpu_pci_id",
    "type": "string",
    "description": "Get PCI IDs of devices which are required to be isolated for `gpu_pci_id` GPU isolation."
   },
   "return_schema_of_vm_device_get_pci_ids_for_gpu_isolation": {
    "_name_": "get_pci_ids_for_gpu_isolation",
    "title": "get_pci_ids_for_gpu_isolation",
    "default": [],
    "type": "array",
    "items": {
     "_name_": "pci_ids",
     "title": "pci_ids",
     "_required_": false,
     "type": "string"
    }
   },
   "return_schema_of_vm_device_iommu_enabled": {
    "type": "boolean",
    "_name_": "iommu_enabled",
    "title": "iommu_enabled"
   },
   "return_schema_of_vm_device_iotype_choices": {
    "type": "object",
    "properties": {
     "NATIVE": {
      "_name_": "NATIVE",
      "title": "NATIVE",
      "type": "string",
      "enum": [
       "NATIVE"
      ]
     },
     "THREADS": {
      "_name_": "THREADS",
      "title": "THREADS",
      "type": "string",
      "enum": [
       "THREADS"
      ]
     },
     "IO_URING": {
      "_name_": "IO_URING",
      "title": "IO_URING",
      "type": "string",
      "enum": [
       "IO_URING"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "iotype_choices",
    "title": "iotype_choices",
    "default": {},
    "_attrs_order_": [
     "NATIVE",
     "THREADS",
     "IO_URING"
    ]
   },
   "return_schema_of_vm_device_nic_attach_choices": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "nic_attach_choices",
    "title": "nic_attach_choices",
    "default": {},
    "_attrs_order_": []
   },
   "vm_device_passthrough_device": {
    "_name_": "device",
    "title": "device",
    "type": "string"
   },
   "return_schema_of_vm_device_passthrough_device": {
    "type": "object",
    "properties": {
     "capability": {
      "type": "object",
      "properties": {
       "class": {
        "_name_": "class",
        "title": "class",
        "type": "string",
        "nullable": true
       },
       "domain": {
        "_name_": "domain",
        "title": "domain",
        "type": "string",
        "nullable": true
       },
       "bus": {
        "_name_": "bus",
        "title": "bus",
        "type": "string",
        "nullable": true
       },
       "slot": {
        "_name_": "slot",
        "title": "slot",
        "type": "string",
        "nullable": true
       },
       "function": {
        "_name_": "function",
        "title": "function",
        "type": "string",
        "nullable": true
       },
       "product": {
        "_name_": "product",
        "title": "product",
        "type": "string",
        "nullable": true
       },
       "vendor": {
        "_name_": "vendor",
        "title": "vendor",
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "capability",
      "title": "capability",
      "default": {},
      "_attrs_order_": [
       "class",
       "domain",
       "bus",
       "slot",
       "function",
       "product",
       "vendor"
      ]
     },
     "controller_type": {
      "_name_": "controller_type",
      "title": "controller_type",
      "type": "string",
      "nullable": true
     },
     "iommu_group": {
      "type": "object",
      "properties": {
       "number": {
        "type": "integer",
        "_name_": "number",
        "title": "number"
       },
       "addresses": {
        "_name_": "addresses",
        "title": "addresses",
        "default": [],
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "domain": {
           "_name_": "domain",
           "title": "domain",
           "_required_": true,
           "type": "string"
          },
          "bus": {
           "_name_": "bus",
           "title": "bus",
           "_required_": true,
           "type": "string"
          },
          "slot": {
           "_name_": "slot",
           "title": "slot",
           "_required_": true,
           "type": "string"
          },
          "function": {
           "_name_": "function",
           "title": "function",
           "_required_": true,
           "type": "string"
          }
         },
         "additionalProperties": false,
         "_name_": "address",
         "title": "address",
         "default": {},
         "_required_": false,
         "_attrs_order_": [
          "domain",
          "bus",
          "slot",
          "function"
         ]
        }
       }
      },
      "additionalProperties": false,
      "_name_": "iommu_group",
      "title": "iommu_group",
      "default": {},
      "_attrs_order_": [
       "number",
       "addresses"
      ]
     },
     "available": {
      "type": "boolean",
      "_name_": "available",
      "title": "available"
     },
     "drivers": {
      "_name_": "drivers",
      "title": "drivers",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "driver",
       "title": "driver",
       "_required_": false,
       "type": "string"
      }
     },
     "error": {
      "_name_": "error",
      "title": "error",
      "type": "string",
      "nullable": true
     },
     "device_path": {
      "_name_": "device_path",
      "title": "device_path",
      "type": "string",
      "nullable": true
     },
     "reset_mechanism_defined": {
      "type": "boolean",
      "_name_": "reset_mechanism_defined",
      "title": "reset_mechanism_defined"
     },
     "description": {
      "_name_": "description",
      "title": "description",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "passthrough_device",
    "title": "passthrough_device",
    "default": {},
    "_attrs_order_": [
     "capability",
     "controller_type",
     "iommu_group",
     "available",
     "drivers",
     "error",
     "device_path",
     "reset_mechanism_defined",
     "description"
    ]
   },
   "return_schema_of_vm_device_passthrough_device_choices": {
    "_name_": "passthrough_device_choices",
    "title": "passthrough_device_choices",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "capability": {
       "type": "object",
       "properties": {
        "class": {
         "_name_": "class",
         "title": "class",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "domain": {
         "_name_": "domain",
         "title": "domain",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "bus": {
         "_name_": "bus",
         "title": "bus",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "slot": {
         "_name_": "slot",
         "title": "slot",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "function": {
         "_name_": "function",
         "title": "function",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "product": {
         "_name_": "product",
         "title": "product",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "vendor": {
         "_name_": "vendor",
         "title": "vendor",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "capability",
       "title": "capability",
       "default": {},
       "_required_": true,
       "_attrs_order_": [
        "class",
        "domain",
        "bus",
        "slot",
        "function",
        "product",
        "vendor"
       ]
      },
      "controller_type": {
       "_name_": "controller_type",
       "title": "controller_type",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "iommu_group": {
       "type": "object",
       "properties": {
        "number": {
         "type": "integer",
         "_name_": "number",
         "title": "number",
         "_required_": true
        },
        "addresses": {
         "_name_": "addresses",
         "title": "addresses",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "domain": {
             "_name_": "domain",
             "title": "domain",
             "_required_": true,
             "type": "string"
            },
            "bus": {
             "_name_": "bus",
             "title": "bus",
             "_required_": true,
             "type": "string"
            },
            "slot": {
             "_name_": "slot",
             "title": "slot",
             "_required_": true,
             "type": "string"
            },
            "function": {
             "_name_": "function",
             "title": "function",
             "_required_": true,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "address",
           "title": "address",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "domain",
            "bus",
            "slot",
            "function"
           ]
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "iommu_group",
       "title": "iommu_group",
       "default": {},
       "_required_": true,
       "_attrs_order_": [
        "number",
        "addresses"
       ]
      },
      "available": {
       "type": "boolean",
       "_name_": "available",
       "title": "available",
       "_required_": true
      },
      "drivers": {
       "_name_": "drivers",
       "title": "drivers",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": [
        {
         "_name_": "driver",
         "title": "driver",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "error": {
       "_name_": "error",
       "title": "error",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "device_path": {
       "_name_": "device_path",
       "title": "device_path",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "reset_mechanism_defined": {
       "type": "boolean",
       "_name_": "reset_mechanism_defined",
       "title": "reset_mechanism_defined",
       "_required_": true
      },
      "description": {
       "_name_": "description",
       "title": "description",
       "_required_": true,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "passthrough_device",
     "title": "passthrough_device",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "capability",
      "controller_type",
      "iommu_group",
      "available",
      "drivers",
      "error",
      "device_path",
      "reset_mechanism_defined",
      "description"
     ]
    }
   },
   "return_schema_of_vm_device_pptdev_choices": {
    "_name_": "passthrough_device_choices",
    "title": "passthrough_device_choices",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "capability": {
       "type": "object",
       "properties": {
        "class": {
         "_name_": "class",
         "title": "class",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "domain": {
         "_name_": "domain",
         "title": "domain",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "bus": {
         "_name_": "bus",
         "title": "bus",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "slot": {
         "_name_": "slot",
         "title": "slot",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "function": {
         "_name_": "function",
         "title": "function",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "product": {
         "_name_": "product",
         "title": "product",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "vendor": {
         "_name_": "vendor",
         "title": "vendor",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "capability",
       "title": "capability",
       "default": {},
       "_required_": true,
       "_attrs_order_": [
        "class",
        "domain",
        "bus",
        "slot",
        "function",
        "product",
        "vendor"
       ]
      },
      "controller_type": {
       "_name_": "controller_type",
       "title": "controller_type",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "iommu_group": {
       "type": "object",
       "properties": {
        "number": {
         "type": "integer",
         "_name_": "number",
         "title": "number",
         "_required_": true
        },
        "addresses": {
         "_name_": "addresses",
         "title": "addresses",
         "default": [],
         "_required_": false,
         "type": "array",
         "items": [
          {
           "type": "object",
           "properties": {
            "domain": {
             "_name_": "domain",
             "title": "domain",
             "_required_": true,
             "type": "string"
            },
            "bus": {
             "_name_": "bus",
             "title": "bus",
             "_required_": true,
             "type": "string"
            },
            "slot": {
             "_name_": "slot",
             "title": "slot",
             "_required_": true,
             "type": "string"
            },
            "function": {
             "_name_": "function",
             "title": "function",
             "_required_": true,
             "type": "string"
            }
           },
           "additionalProperties": false,
           "_name_": "address",
           "title": "address",
           "default": {},
           "_required_": false,
           "_attrs_order_": [
            "domain",
            "bus",
            "slot",
            "function"
           ]
          }
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "iommu_group",
       "title": "iommu_group",
       "default": {},
       "_required_": true,
       "_attrs_order_": [
        "number",
        "addresses"
       ]
      },
      "available": {
       "type": "boolean",
       "_name_": "available",
       "title": "available",
       "_required_": true
      },
      "drivers": {
       "_name_": "drivers",
       "title": "drivers",
       "default": [],
       "_required_": true,
       "type": "array",
       "items": [
        {
         "_name_": "driver",
         "title": "driver",
         "_required_": false,
         "type": "string"
        }
       ]
      },
      "error": {
       "_name_": "error",
       "title": "error",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "device_path": {
       "_name_": "device_path",
       "title": "device_path",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      },
      "reset_mechanism_defined": {
       "type": "boolean",
       "_name_": "reset_mechanism_defined",
       "title": "reset_mechanism_defined",
       "_required_": true
      },
      "description": {
       "_name_": "description",
       "title": "description",
       "_required_": true,
       "type": "string"
      }
     },
     "additionalProperties": false,
     "_name_": "passthrough_device",
     "title": "passthrough_device",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "capability",
      "controller_type",
      "iommu_group",
      "available",
      "drivers",
      "error",
      "device_path",
      "reset_mechanism_defined",
      "description"
     ]
    }
   },
   "return_schema_of_vm_device_usb_controller_choices": {
    "type": "object",
    "properties": {
     "piix3-uhci": {
      "_name_": "piix3-uhci",
      "title": "piix3-uhci",
      "type": "string",
      "enum": [
       "piix3-uhci"
      ]
     },
     "piix4-uhci": {
      "_name_": "piix4-uhci",
      "title": "piix4-uhci",
      "type": "string",
      "enum": [
       "piix4-uhci"
      ]
     },
     "ehci": {
      "_name_": "ehci",
      "title": "ehci",
      "type": "string",
      "enum": [
       "ehci"
      ]
     },
     "ich9-ehci1": {
      "_name_": "ich9-ehci1",
      "title": "ich9-ehci1",
      "type": "string",
      "enum": [
       "ich9-ehci1"
      ]
     },
     "vt82c686b-uhci": {
      "_name_": "vt82c686b-uhci",
      "title": "vt82c686b-uhci",
      "type": "string",
      "enum": [
       "vt82c686b-uhci"
      ]
     },
     "pci-ohci": {
      "_name_": "pci-ohci",
      "title": "pci-ohci",
      "type": "string",
      "enum": [
       "pci-ohci"
      ]
     },
     "nec-xhci": {
      "_name_": "nec-xhci",
      "title": "nec-xhci",
      "type": "string",
      "enum": [
       "nec-xhci"
      ]
     },
     "qemu-xhci": {
      "_name_": "qemu-xhci",
      "title": "qemu-xhci",
      "type": "string",
      "enum": [
       "qemu-xhci"
      ]
     }
    },
    "additionalProperties": false,
    "_name_": "usb_controller_choices",
    "title": "usb_controller_choices",
    "default": {},
    "_attrs_order_": [
     "piix3-uhci",
     "piix4-uhci",
     "ehci",
     "ich9-ehci1",
     "vt82c686b-uhci",
     "pci-ohci",
     "nec-xhci",
     "qemu-xhci"
    ]
   },
   "return_schema_of_vm_device_usb_passthrough_choices": {
    "_name_": "usb_passthrough_choices",
    "title": "usb_passthrough_choices",
    "default": [],
    "type": "array",
    "items": {
     "type": "object",
     "properties": {
      "capability": {
       "type": "object",
       "properties": {
        "product": {
         "_name_": "product",
         "title": "product",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "product_id": {
         "_name_": "product_id",
         "title": "product_id",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "vendor": {
         "_name_": "vendor",
         "title": "vendor",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "vendor_id": {
         "_name_": "vendor_id",
         "title": "vendor_id",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "bus": {
         "_name_": "bus",
         "title": "bus",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        },
        "device": {
         "_name_": "device",
         "title": "device",
         "_required_": true,
         "type": [
          "string",
          "null"
         ]
        }
       },
       "additionalProperties": false,
       "_name_": "capability",
       "title": "capability",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "product",
        "product_id",
        "vendor",
        "vendor_id",
        "bus",
        "device"
       ]
      },
      "available": {
       "type": "boolean",
       "_name_": "available",
       "title": "available",
       "_required_": true
      },
      "error": {
       "_name_": "error",
       "title": "error",
       "_required_": true,
       "type": [
        "string",
        "null"
       ]
      }
     },
     "additionalProperties": false,
     "_name_": "usb_passthrough_device",
     "title": "usb_passthrough_device",
     "default": {},
     "_required_": false,
     "_attrs_order_": [
      "capability",
      "available",
      "error"
     ]
    }
   },
   "vm_device_usb_passthrough_device": {
    "_name_": "device",
    "title": "device",
    "type": "string"
   },
   "return_schema_of_vm_device_usb_passthrough_device": {
    "type": "object",
    "properties": {
     "capability": {
      "type": "object",
      "properties": {
       "product": {
        "_name_": "product",
        "title": "product",
        "type": "string",
        "nullable": true
       },
       "product_id": {
        "_name_": "product_id",
        "title": "product_id",
        "type": "string",
        "nullable": true
       },
       "vendor": {
        "_name_": "vendor",
        "title": "vendor",
        "type": "string",
        "nullable": true
       },
       "vendor_id": {
        "_name_": "vendor_id",
        "title": "vendor_id",
        "type": "string",
        "nullable": true
       },
       "bus": {
        "_name_": "bus",
        "title": "bus",
        "type": "string",
        "nullable": true
       },
       "device": {
        "_name_": "device",
        "title": "device",
        "type": "string",
        "nullable": true
       }
      },
      "additionalProperties": false,
      "_name_": "capability",
      "title": "capability",
      "default": {},
      "_attrs_order_": [
       "product",
       "product_id",
       "vendor",
       "vendor_id",
       "bus",
       "device"
      ]
     },
     "available": {
      "type": "boolean",
      "_name_": "available",
      "title": "available"
     },
     "error": {
      "_name_": "error",
      "title": "error",
      "type": "string",
      "nullable": true
     }
    },
    "additionalProperties": false,
    "_name_": "usb_passthrough_device",
    "title": "usb_passthrough_device",
    "default": {},
    "_attrs_order_": [
     "capability",
     "available",
     "error"
    ]
   },
   "return_schema_of_vmware_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {
         "datastore": {
          "_name_": "datastore",
          "title": "datastore",
          "_required_": true,
          "type": "string"
         },
         "filesystem": {
          "_name_": "filesystem",
          "title": "filesystem",
          "_required_": true,
          "type": "string"
         },
         "hostname": {
          "_name_": "hostname",
          "title": "hostname",
          "_required_": true,
          "type": "string"
         },
         "password": {
          "_name_": "password",
          "title": "password",
          "_required_": true,
          "type": "string"
         },
         "username": {
          "_name_": "username",
          "title": "username",
          "_required_": true,
          "type": "string"
         },
         "id": {
          "type": "integer",
          "_name_": "id",
          "title": "id",
          "_required_": false
         },
         "state": {
          "type": "object",
          "properties": {},
          "additionalProperties": true,
          "_name_": "state",
          "title": "state",
          "default": {},
          "_required_": false,
          "_attrs_order_": []
         }
        },
        "additionalProperties": false,
        "_name_": "vmware_entry",
        "title": "vmware_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": [
         "datastore",
         "filesystem",
         "hostname",
         "password",
         "username",
         "id",
         "state"
        ]
       }
      ]
     },
     {
      "type": "object",
      "properties": {
       "datastore": {
        "_name_": "datastore",
        "title": "datastore",
        "_required_": true,
        "type": "string"
       },
       "filesystem": {
        "_name_": "filesystem",
        "title": "filesystem",
        "_required_": true,
        "type": "string"
       },
       "hostname": {
        "_name_": "hostname",
        "title": "hostname",
        "_required_": true,
        "type": "string"
       },
       "password": {
        "_name_": "password",
        "title": "password",
        "_required_": true,
        "type": "string"
       },
       "username": {
        "_name_": "username",
        "title": "username",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "state": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "state",
        "title": "state",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "vmware_entry",
      "title": "vmware_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "datastore",
       "filesystem",
       "hostname",
       "password",
       "username",
       "id",
       "state"
      ]
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {
       "datastore": {
        "_name_": "datastore",
        "title": "datastore",
        "_required_": true,
        "type": "string"
       },
       "filesystem": {
        "_name_": "filesystem",
        "title": "filesystem",
        "_required_": true,
        "type": "string"
       },
       "hostname": {
        "_name_": "hostname",
        "title": "hostname",
        "_required_": true,
        "type": "string"
       },
       "password": {
        "_name_": "password",
        "title": "password",
        "_required_": true,
        "type": "string"
       },
       "username": {
        "_name_": "username",
        "title": "username",
        "_required_": true,
        "type": "string"
       },
       "id": {
        "type": "integer",
        "_name_": "id",
        "title": "id",
        "_required_": false
       },
       "state": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "state",
        "title": "state",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      },
      "additionalProperties": false,
      "_name_": "vmware_entry",
      "title": "vmware_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": [
       "datastore",
       "filesystem",
       "hostname",
       "password",
       "username",
       "id",
       "state"
      ]
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "vmware_create": {
    "type": "object",
    "properties": {
     "datastore": {
      "_name_": "datastore",
      "title": "datastore",
      "type": "string"
     },
     "filesystem": {
      "_name_": "filesystem",
      "title": "filesystem",
      "type": "string"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string",
      "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     }
    },
    "additionalProperties": false,
    "_name_": "vmware_create",
    "title": "vmware_create",
    "default": {},
    "_attrs_order_": [
     "datastore",
     "filesystem",
     "hostname",
     "password",
     "username"
    ]
   },
   "return_schema_of_vmware_create": {
    "type": "object",
    "properties": {
     "datastore": {
      "_name_": "datastore",
      "title": "datastore",
      "type": "string"
     },
     "filesystem": {
      "_name_": "filesystem",
      "title": "filesystem",
      "type": "string"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string",
      "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id"
     },
     "state": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "vmware_create_returns",
    "title": "vmware_create_returns",
    "default": {},
    "_attrs_order_": [
     "datastore",
     "filesystem",
     "hostname",
     "password",
     "username",
     "id",
     "state"
    ]
   },
   "return_schema_of_vmware_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "vmware_update": {
    "type": "object",
    "properties": {
     "datastore": {
      "_name_": "datastore",
      "title": "datastore",
      "type": "string"
     },
     "filesystem": {
      "_name_": "filesystem",
      "title": "filesystem",
      "type": "string"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string",
      "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     }
    },
    "additionalProperties": false,
    "_name_": "vmware_update",
    "title": "vmware_update",
    "default": {},
    "_attrs_order_": [
     "datastore",
     "filesystem",
     "hostname",
     "password",
     "username"
    ]
   },
   "return_schema_of_vmware_update": {
    "type": "object",
    "properties": {
     "datastore": {
      "_name_": "datastore",
      "title": "datastore",
      "type": "string"
     },
     "filesystem": {
      "_name_": "filesystem",
      "title": "filesystem",
      "type": "string"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string",
      "description": "`hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for\nthe cluster."
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string",
      "description": "`username` and `password` are the credentials used to authorize access to the VMWare host."
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Update VMWare snapshot of `id`.\nCreate VMWare snapshot."
     },
     "state": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "vmware_update_returns",
    "title": "vmware_update_returns",
    "default": {},
    "_attrs_order_": [
     "datastore",
     "filesystem",
     "hostname",
     "password",
     "username",
     "id",
     "state"
    ]
   },
   "vmware_dataset_has_vms_0": {
    "_name_": "dataset",
    "title": "dataset",
    "type": "string"
   },
   "vmware_dataset_has_vms_1": {
    "type": "boolean",
    "_name_": "recursive",
    "title": "recursive"
   },
   "vmware_dataset_has_vms": {
    "type": "object",
    "properties": {
     "dataset": {
      "$ref": "#/components/schemas/vmware_dataset_has_vms_0"
     },
     "recursive": {
      "$ref": "#/components/schemas/vmware_dataset_has_vms_1"
     }
    }
   },
   "vmware_get_datastores": {
    "type": "object",
    "properties": {
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "vmware-creds",
    "title": "vmware-creds",
    "default": {},
    "_attrs_order_": [
     "hostname",
     "username",
     "password"
    ]
   },
   "vmware_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "vmware_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "vmware_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/vmware_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/vmware_get_instance_1"
     }
    }
   },
   "return_schema_of_vmware_get_instance": {
    "type": "object",
    "properties": {
     "datastore": {
      "_name_": "datastore",
      "title": "datastore",
      "type": "string"
     },
     "filesystem": {
      "_name_": "filesystem",
      "title": "filesystem",
      "type": "string"
     },
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "id": {
      "type": "integer",
      "_name_": "id",
      "title": "id",
      "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
     },
     "state": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "state",
      "title": "state",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "vmware_entry",
    "title": "vmware_entry",
    "default": {},
    "_attrs_order_": [
     "datastore",
     "filesystem",
     "hostname",
     "password",
     "username",
     "id",
     "state"
    ]
   },
   "vmware_get_virtual_machines": {
    "type": "integer",
    "_name_": "pk",
    "title": "pk"
   },
   "vmware_match_datastores_with_datasets": {
    "type": "object",
    "properties": {
     "hostname": {
      "_name_": "hostname",
      "title": "hostname",
      "type": "string"
     },
     "username": {
      "_name_": "username",
      "title": "username",
      "type": "string"
     },
     "password": {
      "_name_": "password",
      "title": "password",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "_name_": "vmware-creds",
    "title": "vmware-creds",
    "default": {},
    "_attrs_order_": [
     "hostname",
     "username",
     "password"
    ]
   },
   "return_schema_of_zfs_snapshot_query": {
    "anyOf": [
     {
      "_name_": "query_result",
      "title": "query_result",
      "default": [],
      "_required_": false,
      "type": "array",
      "items": [
       {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "_name_": "zfs_snapshot_entry",
        "title": "zfs_snapshot_entry",
        "default": {},
        "_required_": false,
        "_attrs_order_": []
       }
      ]
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "zfs_snapshot_entry",
      "title": "zfs_snapshot_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     },
     {
      "type": "integer",
      "_name_": "count",
      "title": "count",
      "_required_": false
     },
     {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "zfs_snapshot_entry",
      "title": "zfs_snapshot_entry",
      "default": {},
      "_required_": false,
      "_attrs_order_": []
     }
    ],
    "nullable": false,
    "_name_": "query_result",
    "description": null
   },
   "zfs_snapshot_create": {
    "type": "object",
    "properties": {
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "naming_schema": {
      "_name_": "naming_schema",
      "title": "naming_schema",
      "type": "string"
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false
     },
     "exclude": {
      "_name_": "exclude",
      "title": "exclude",
      "default": [],
      "type": "array",
      "items": {
       "_name_": "dataset",
       "title": "dataset",
       "_required_": false,
       "type": "string"
      }
     },
     "suspend_vms": {
      "type": "boolean",
      "_name_": "suspend_vms",
      "title": "suspend_vms",
      "default": false
     },
     "vmware_sync": {
      "type": "boolean",
      "_name_": "vmware_sync",
      "title": "vmware_sync",
      "default": false
     },
     "properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "properties",
      "title": "properties",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "snapshot_create",
    "title": "snapshot_create",
    "default": {},
    "_attrs_order_": [
     "dataset",
     "name",
     "naming_schema",
     "recursive",
     "exclude",
     "suspend_vms",
     "vmware_sync",
     "properties"
    ]
   },
   "return_schema_of_zfs_snapshot_create": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "zfs_snapshot_create_returns",
    "title": "zfs_snapshot_create_returns",
    "default": {},
    "_attrs_order_": []
   },
   "zfs_snapshot_delete": {
    "type": "object",
    "properties": {
     "defer": {
      "type": "boolean",
      "_name_": "defer",
      "title": "defer",
      "default": false
     },
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "defer",
     "recursive"
    ]
   },
   "return_schema_of_zfs_snapshot_delete": {
    "type": "boolean",
    "_name_": "deleted",
    "title": "deleted",
    "description": "Will return `true` if `id` is deleted successfully"
   },
   "zfs_snapshot_update": {
    "type": "object",
    "properties": {
     "user_properties_update": {
      "_name_": "user_properties_update",
      "title": "user_properties_update",
      "default": [],
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "key": {
         "_name_": "key",
         "title": "key",
         "_required_": true,
         "type": "string"
        },
        "value": {
         "_name_": "value",
         "title": "value",
         "_required_": false,
         "type": "string"
        },
        "remove": {
         "type": "boolean",
         "_name_": "remove",
         "title": "remove",
         "_required_": false
        }
       },
       "additionalProperties": false,
       "_name_": "user_property",
       "title": "user_property",
       "default": {},
       "_required_": false,
       "_attrs_order_": [
        "key",
        "value",
        "remove"
       ]
      }
     }
    },
    "additionalProperties": false,
    "_name_": "snapshot_update",
    "title": "snapshot_update",
    "default": {},
    "_attrs_order_": [
     "user_properties_update"
    ]
   },
   "return_schema_of_zfs_snapshot_update": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "zfs_snapshot_update_returns",
    "title": "zfs_snapshot_update_returns",
    "default": {},
    "_attrs_order_": []
   },
   "zfs_snapshot_clone": {
    "type": "object",
    "properties": {
     "snapshot": {
      "_name_": "snapshot",
      "title": "snapshot",
      "type": "string"
     },
     "dataset_dst": {
      "_name_": "dataset_dst",
      "title": "dataset_dst",
      "type": "string"
     },
     "dataset_properties": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "dataset_properties",
      "title": "dataset_properties",
      "default": {},
      "_attrs_order_": []
     }
    },
    "additionalProperties": false,
    "_name_": "snapshot_clone",
    "title": "snapshot_clone",
    "default": {},
    "_attrs_order_": [
     "snapshot",
     "dataset_dst",
     "dataset_properties"
    ]
   },
   "zfs_snapshot_get_instance_0": {
    "anyOf": [
     {
      "type": "string"
     },
     {
      "type": "integer"
     },
     {
      "type": "boolean"
     },
     {
      "type": "object"
     },
     {
      "type": "array"
     }
    ],
    "nullable": false,
    "_name_": "id",
    "title": "id",
    "description": "Returns instance matching `id`. If `id` is not found, Validation error is raised."
   },
   "zfs_snapshot_get_instance_1": {
    "type": "object",
    "properties": {
     "relationships": {
      "type": "boolean",
      "_name_": "relationships",
      "title": "relationships",
      "default": true
     },
     "extend": {
      "_name_": "extend",
      "title": "extend",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extend_context": {
      "_name_": "extend_context",
      "title": "extend_context",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "prefix": {
      "_name_": "prefix",
      "title": "prefix",
      "default": null,
      "type": "string",
      "nullable": true
     },
     "extra": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "_name_": "extra",
      "title": "extra",
      "default": {},
      "_attrs_order_": []
     },
     "order_by": {
      "_name_": "order_by",
      "title": "order_by",
      "default": [],
      "type": "array",
      "items": {}
     },
     "select": {
      "_name_": "select",
      "title": "select",
      "default": [],
      "type": "array",
      "items": {}
     },
     "count": {
      "type": "boolean",
      "_name_": "count",
      "title": "count",
      "default": false
     },
     "get": {
      "type": "boolean",
      "_name_": "get",
      "title": "get",
      "default": false
     },
     "offset": {
      "type": "integer",
      "_name_": "offset",
      "title": "offset",
      "default": 0
     },
     "limit": {
      "type": "integer",
      "_name_": "limit",
      "title": "limit",
      "default": 0
     },
     "force_sql_filters": {
      "type": "boolean",
      "_name_": "force_sql_filters",
      "title": "force_sql_filters",
      "default": true
     }
    },
    "additionalProperties": false,
    "_name_": "query-options-get_instance",
    "title": "query-options-get_instance",
    "default": {},
    "_attrs_order_": [
     "relationships",
     "extend",
     "extend_context",
     "prefix",
     "extra",
     "order_by",
     "select",
     "count",
     "get",
     "offset",
     "limit",
     "force_sql_filters"
    ]
   },
   "zfs_snapshot_get_instance": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/zfs_snapshot_get_instance_0"
     },
     "query-options-get_instance": {
      "$ref": "#/components/schemas/zfs_snapshot_get_instance_1"
     }
    }
   },
   "return_schema_of_zfs_snapshot_get_instance": {
    "type": "object",
    "properties": {},
    "additionalProperties": true,
    "_name_": "zfs_snapshot_entry",
    "title": "zfs_snapshot_entry",
    "default": {},
    "_attrs_order_": []
   },
   "zfs_snapshot_hold_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Holds snapshot `id`."
   },
   "zfs_snapshot_hold_1": {
    "type": "object",
    "properties": {
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "recursive"
    ]
   },
   "zfs_snapshot_hold": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/zfs_snapshot_hold_0"
     },
     "options": {
      "$ref": "#/components/schemas/zfs_snapshot_hold_1"
     }
    }
   },
   "zfs_snapshot_release_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Release held snapshot `id`."
   },
   "zfs_snapshot_release_1": {
    "type": "object",
    "properties": {
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "recursive"
    ]
   },
   "zfs_snapshot_release": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/zfs_snapshot_release_0"
     },
     "options": {
      "$ref": "#/components/schemas/zfs_snapshot_release_1"
     }
    }
   },
   "zfs_snapshot_remove": {
    "type": "object",
    "properties": {
     "dataset": {
      "_name_": "dataset",
      "title": "dataset",
      "type": "string"
     },
     "name": {
      "_name_": "name",
      "title": "name",
      "type": "string"
     },
     "defer_delete": {
      "type": "boolean",
      "_name_": "defer_delete",
      "title": "defer_delete"
     }
    },
    "additionalProperties": false,
    "_name_": "snapshot_remove",
    "title": "snapshot_remove",
    "default": {},
    "_attrs_order_": [
     "dataset",
     "name",
     "defer_delete"
    ]
   },
   "zfs_snapshot_rollback_0": {
    "_name_": "id",
    "title": "id",
    "type": "string",
    "description": "Rollback to a given snapshot `id`."
   },
   "zfs_snapshot_rollback_1": {
    "type": "object",
    "properties": {
     "recursive": {
      "type": "boolean",
      "_name_": "recursive",
      "title": "recursive",
      "default": false,
      "description": "`options.recursive_clones` is just like `recursive` but will also destroy any clones."
     },
     "recursive_clones": {
      "type": "boolean",
      "_name_": "recursive_clones",
      "title": "recursive_clones",
      "default": false
     },
     "force": {
      "type": "boolean",
      "_name_": "force",
      "title": "force",
      "default": false
     },
     "recursive_rollback": {
      "type": "boolean",
      "_name_": "recursive_rollback",
      "title": "recursive_rollback",
      "default": false
     }
    },
    "additionalProperties": false,
    "_name_": "options",
    "title": "options",
    "default": {},
    "_attrs_order_": [
     "recursive",
     "recursive_clones",
     "force",
     "recursive_rollback"
    ]
   },
   "zfs_snapshot_rollback": {
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/zfs_snapshot_rollback_0"
     },
     "options": {
      "$ref": "#/components/schemas/zfs_snapshot_rollback_1"
     }
    }
   }
  },
  "responses": {
   "NotFound": {
    "description": "Endpoint not found"
   },
   "Unauthorized": {
    "description": "No authorization for this endpoint"
   },
   "Success": {
    "description": "Operation succeeded"
   }
  },
  "securitySchemes": {
   "basic": {
    "type": "http",
    "scheme": "basic"
   }
  }
 },
 "security": [
  {
   "basic": []
  }
 ]
}